["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/eiffel.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$eiffel=function(global,require,module,exports){function eiffel(Prism){Prism.languages.eiffel={comment:/--.*/,string:[{pattern:/\"([^[]*)\\[[\\s\\S]*?\\]\\1\"/,greedy:!0},{pattern:/\"([^{]*)\\{[\\s\\S]*?\\}\\1\"/,greedy:!0},{pattern:/\"(?:%(?:(?!\\n)\\s)*\\n\\s*%|%\\S|[^%\"\\r\\n])*\"/,greedy:!0}],char:/'(?:%.|[^%'\\r\\n])+'/,keyword:/\\b(?:across|agent|alias|all|and|as|assign|attached|attribute|check|class|convert|create|Current|debug|deferred|detachable|do|else|elseif|end|ensure|expanded|export|external|feature|from|frozen|if|implies|inherit|inspect|invariant|like|local|loop|not|note|obsolete|old|once|or|Precursor|redefine|rename|require|rescue|Result|retry|select|separate|some|then|undefine|until|variant|Void|when|xor)\\b/i,\nboolean:/\\b(?:False|True)\\b/i,\"class-name\":/\\b[A-Z][\\dA-Z_]*\\b/,number:[/\\b0[xcb][\\da-f](?:_*[\\da-f])*\\b/i,/(?:\\b\\d(?:_*\\d)*)?\\.(?:(?:\\d(?:_*\\d)*)?e[+-]?)?\\d(?:_*\\d)*\\b|\\b\\d(?:_*\\d)*\\b\\.?/i],punctuation:/:=|<<|>>|\\(\\||\\|\\)|->|\\.(?=\\w)|[{}[\\];(),:?]/,operator:/\\\\\\\\|\\|\\.\\.\\||\\.\\.|\\/[~\\/=]?|[><]=?|[-+*^=~]/}}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=eiffel;eiffel.displayName=\"eiffel\";eiffel.aliases=[]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$eiffel\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = eiffel;\n// @ts-nocheck\neiffel.displayName = 'eiffel';\neiffel.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nfunction eiffel(Prism) {\n  Prism.languages.eiffel = {\n    comment: /--.*/,\n    string: [// Aligned-verbatim-strings\n    {\n      pattern: /\"([^[]*)\\[[\\s\\S]*?\\]\\1\"/,\n      greedy: true\n    }, // Non-aligned-verbatim-strings\n    {\n      pattern: /\"([^{]*)\\{[\\s\\S]*?\\}\\1\"/,\n      greedy: true\n    }, // Single-line string\n    {\n      pattern: /\"(?:%(?:(?!\\n)\\s)*\\n\\s*%|%\\S|[^%\"\\r\\n])*\"/,\n      greedy: true\n    }],\n    // normal char | special char | char code\n    char: /'(?:%.|[^%'\\r\\n])+'/,\n    keyword: /\\b(?:across|agent|alias|all|and|as|assign|attached|attribute|check|class|convert|create|Current|debug|deferred|detachable|do|else|elseif|end|ensure|expanded|export|external|feature|from|frozen|if|implies|inherit|inspect|invariant|like|local|loop|not|note|obsolete|old|once|or|Precursor|redefine|rename|require|rescue|Result|retry|select|separate|some|then|undefine|until|variant|Void|when|xor)\\b/i,\n    boolean: /\\b(?:False|True)\\b/i,\n    // Convention: class-names are always all upper-case characters\n    'class-name': /\\b[A-Z][\\dA-Z_]*\\b/,\n    number: [// hexa | octal | bin\n    /\\b0[xcb][\\da-f](?:_*[\\da-f])*\\b/i, // Decimal\n    /(?:\\b\\d(?:_*\\d)*)?\\.(?:(?:\\d(?:_*\\d)*)?e[+-]?)?\\d(?:_*\\d)*\\b|\\b\\d(?:_*\\d)*\\b\\.?/i],\n    punctuation: /:=|<<|>>|\\(\\||\\|\\)|->|\\.(?=\\w)|[{}[\\];(),:?]/,\n    operator: /\\\\\\\\|\\|\\.\\.\\||\\.\\.|\\/[~\\/=]?|[><]=?|[-+*^=~]/\n  };\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["boolean","punctuation","string","aliases","operator","eiffel","displayName","__esModule","value","char","keyword","number","greedy","pattern","comment","default"]],"~:compiled-at",1676841365407,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$eiffel.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,yCAAA,CAA8D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAYtGC,QAASA,OAAM,CAACC,KAAD,CAAQ,CACrBA,KAAMC,CAAAA,SAAUF,CAAAA,MAAhB,CAAyB,CACvBG,QAAS,MADc,CAEvBC,OAAQ,CACR,CACEC,QAAS,yBADX,CAEEC,OAAQ,CAAA,CAFV,CADQ,CAKR,CACED,QAAS,yBADX,CAEEC,OAAQ,CAAA,CAFV,CALQ,CASR,CACED,QAAS,2CADX,CAEEC,OAAQ,CAAA,CAFV,CATQ,CAFe,CAgBvBC,KAAM,qBAhBiB,CAiBvBC,QAAS,8YAjBc;AAkBvBC,QAAS,qBAlBc,CAoBvB,aAAc,oBApBS,CAqBvBC,OAAQ,CACR,kCADQ,CAER,kFAFQ,CArBe,CAwBvBC,YAAa,8CAxBU,CAyBvBC,SAAU,8CAzBa,CADJ,CATvBC,MAAOC,CAAAA,cAAP,CAAsBf,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CgB,MAAO,CAAA,CADoC,CAA7C,CAGAhB,QAAQiB,CAAAA,OAAR,CAAkBhB,MAElBA,OAAOiB,CAAAA,WAAP,CAAqB,QACrBjB,OAAOkB,CAAAA,OAAP,CAAiB,EATqF;\",\n\"sources\":[\"node_modules/refractor/lang/eiffel.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$eiffel\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = eiffel;\\n// @ts-nocheck\\neiffel.displayName = 'eiffel';\\neiffel.aliases = [];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction eiffel(Prism) {\\n  Prism.languages.eiffel = {\\n    comment: /--.*/,\\n    string: [// Aligned-verbatim-strings\\n    {\\n      pattern: /\\\"([^[]*)\\\\[[\\\\s\\\\S]*?\\\\]\\\\1\\\"/,\\n      greedy: true\\n    }, // Non-aligned-verbatim-strings\\n    {\\n      pattern: /\\\"([^{]*)\\\\{[\\\\s\\\\S]*?\\\\}\\\\1\\\"/,\\n      greedy: true\\n    }, // Single-line string\\n    {\\n      pattern: /\\\"(?:%(?:(?!\\\\n)\\\\s)*\\\\n\\\\s*%|%\\\\S|[^%\\\"\\\\r\\\\n])*\\\"/,\\n      greedy: true\\n    }],\\n    // normal char | special char | char code\\n    char: /'(?:%.|[^%'\\\\r\\\\n])+'/,\\n    keyword: /\\\\b(?:across|agent|alias|all|and|as|assign|attached|attribute|check|class|convert|create|Current|debug|deferred|detachable|do|else|elseif|end|ensure|expanded|export|external|feature|from|frozen|if|implies|inherit|inspect|invariant|like|local|loop|not|note|obsolete|old|once|or|Precursor|redefine|rename|require|rescue|Result|retry|select|separate|some|then|undefine|until|variant|Void|when|xor)\\\\b/i,\\n    boolean: /\\\\b(?:False|True)\\\\b/i,\\n    // Convention: class-names are always all upper-case characters\\n    'class-name': /\\\\b[A-Z][\\\\dA-Z_]*\\\\b/,\\n    number: [// hexa | octal | bin\\n    /\\\\b0[xcb][\\\\da-f](?:_*[\\\\da-f])*\\\\b/i, // Decimal\\n    /(?:\\\\b\\\\d(?:_*\\\\d)*)?\\\\.(?:(?:\\\\d(?:_*\\\\d)*)?e[+-]?)?\\\\d(?:_*\\\\d)*\\\\b|\\\\b\\\\d(?:_*\\\\d)*\\\\b\\\\.?/i],\\n    punctuation: /:=|<<|>>|\\\\(\\\\||\\\\|\\\\)|->|\\\\.(?=\\\\w)|[{}[\\\\];(),:?]/,\\n    operator: /\\\\\\\\\\\\\\\\|\\\\|\\\\.\\\\.\\\\||\\\\.\\\\.|\\\\/[~\\\\/=]?|[><]=?|[-+*^=~]/\\n  };\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"eiffel\",\"Prism\",\"languages\",\"comment\",\"string\",\"pattern\",\"greedy\",\"char\",\"keyword\",\"boolean\",\"number\",\"punctuation\",\"operator\",\"Object\",\"defineProperty\",\"value\",\"default\",\"displayName\",\"aliases\"]\n}\n"]