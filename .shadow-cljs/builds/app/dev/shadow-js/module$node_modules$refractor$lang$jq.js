["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/jq.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$jq=function(global,require,module,exports){function jq(Prism$jscomp$0){(function(Prism){var interpolation=/\\\\\\((?:[^()]|\\([^()]*\\))*\\)/.source,string=RegExp(/(^|[^\\\\])\"(?:[^\"\\r\\n\\\\]|\\\\[^\\r\\n(]|__)*\"/.source.replace(/__/g,function(){return interpolation})),stringInterpolation={interpolation:{pattern:RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source+interpolation),lookbehind:!0,inside:{content:{pattern:/^(\\\\\\()[\\s\\S]+(?=\\)$)/,lookbehind:!0,inside:null},punctuation:/^\\\\\\(|\\)$/}}};\nPrism=Prism.languages.jq={comment:/#.*/,property:{pattern:RegExp(string.source+/(?=\\s*:(?!:))/.source),lookbehind:!0,greedy:!0,inside:stringInterpolation},string:{pattern:string,lookbehind:!0,greedy:!0,inside:stringInterpolation},function:{pattern:/(\\bdef\\s+)[a-z_]\\w+/i,lookbehind:!0},variable:/\\B\\$\\w+/,\"property-literal\":{pattern:/\\b[a-z_]\\w*(?=\\s*:(?!:))/i,alias:\"property\"},keyword:/\\b(?:as|break|catch|def|elif|else|end|foreach|if|import|include|label|module|modulemeta|null|reduce|then|try|while)\\b/,\nboolean:/\\b(?:false|true)\\b/,number:/(?:\\b\\d+\\.|\\B\\.)?\\b\\d+(?:[eE][+-]?\\d+)?\\b/,operator:[{pattern:/\\|=?/,alias:\"pipe\"},/\\.\\.|[!=<>]?=|\\?\\/\\/|\\/\\/=?|[-+*/%]=?|[<>?]|\\b(?:and|not|or)\\b/],\"c-style-function\":{pattern:/\\b[a-z_]\\w*(?=\\s*\\()/i,alias:\"function\"},punctuation:/::|[()\\[\\]{},:;]|\\.(?=\\s*[\\[\\w$])/,dot:{pattern:/\\./,alias:\"important\"}};stringInterpolation.interpolation.inside.content.inside=Prism})(Prism$jscomp$0)}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=jq;jq.displayName=\n\"jq\";jq.aliases=[]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$jq\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = jq;\n// @ts-nocheck\njq.displayName = 'jq';\njq.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nfunction jq(Prism) {\n  ;\n\n  (function (Prism) {\n    var interpolation = /\\\\\\((?:[^()]|\\([^()]*\\))*\\)/.source;\n    var string = RegExp(/(^|[^\\\\])\"(?:[^\"\\r\\n\\\\]|\\\\[^\\r\\n(]|__)*\"/.source.replace(/__/g, function () {\n      return interpolation;\n    }));\n    var stringInterpolation = {\n      interpolation: {\n        pattern: RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + interpolation),\n        lookbehind: true,\n        inside: {\n          content: {\n            pattern: /^(\\\\\\()[\\s\\S]+(?=\\)$)/,\n            lookbehind: true,\n            inside: null // see below\n\n          },\n          punctuation: /^\\\\\\(|\\)$/\n        }\n      }\n    };\n    var jq = Prism.languages.jq = {\n      comment: /#.*/,\n      property: {\n        pattern: RegExp(string.source + /(?=\\s*:(?!:))/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: stringInterpolation\n      },\n      string: {\n        pattern: string,\n        lookbehind: true,\n        greedy: true,\n        inside: stringInterpolation\n      },\n      function: {\n        pattern: /(\\bdef\\s+)[a-z_]\\w+/i,\n        lookbehind: true\n      },\n      variable: /\\B\\$\\w+/,\n      'property-literal': {\n        pattern: /\\b[a-z_]\\w*(?=\\s*:(?!:))/i,\n        alias: 'property'\n      },\n      keyword: /\\b(?:as|break|catch|def|elif|else|end|foreach|if|import|include|label|module|modulemeta|null|reduce|then|try|while)\\b/,\n      boolean: /\\b(?:false|true)\\b/,\n      number: /(?:\\b\\d+\\.|\\B\\.)?\\b\\d+(?:[eE][+-]?\\d+)?\\b/,\n      operator: [{\n        pattern: /\\|=?/,\n        alias: 'pipe'\n      }, /\\.\\.|[!=<>]?=|\\?\\/\\/|\\/\\/=?|[-+*/%]=?|[<>?]|\\b(?:and|not|or)\\b/],\n      'c-style-function': {\n        pattern: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n        alias: 'function'\n      },\n      punctuation: /::|[()\\[\\]{},:;]|\\.(?=\\s*[\\[\\w$])/,\n      dot: {\n        pattern: /\\./,\n        alias: 'important'\n      }\n    };\n    stringInterpolation.interpolation.inside.content.inside = jq;\n  })(Prism);\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["boolean","punctuation","string","aliases","operator","dot","displayName","__esModule","lookbehind","value","variable","keyword","number","content","greedy","property","function","pattern","inside","alias","comment","jq","interpolation","default"]],"~:compiled-at",1676841365426,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$jq.js\",\n\"lineCount\":4,\n\"mappings\":\"AAAAA,cAAA,CAAA,qCAAA,CAA0D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAYlGC,QAASA,GAAE,CAACC,cAAD,CAAQ,CAGhB,SAAS,CAACA,KAAD,CAAQ,CAChB,IAAIC,cAAgB,6BAA8BC,CAAAA,MAAlD,CACIC,OAASC,MAAA,CAAO,0CAA2CF,CAAAA,MAAOG,CAAAA,OAAlD,CAA0D,KAA1D,CAAiE,QAAS,EAAG,CAC/F,MAAOJ,cADwF,CAA7E,CAAP,CADb,CAIIK,oBAAsB,CACxBL,cAAe,CACbM,QAASH,MAAA,CAAO,yBAA0BF,CAAAA,MAAjC,CAA0CD,aAA1C,CADI,CAEbO,WAAY,CAAA,CAFC,CAGbC,OAAQ,CACNC,QAAS,CACPH,QAAS,uBADF,CAEPC,WAAY,CAAA,CAFL,CAGPC,OAAQ,IAHD,CADH,CAONE,YAAa,WAPP,CAHK,CADS,CAetBZ;KAAAA,CAAKC,KAAMY,CAAAA,SAAUb,CAAAA,EAArBA,CAA0B,CAC5Bc,QAAS,KADmB,CAE5BC,SAAU,CACRP,QAASH,MAAA,CAAOD,MAAOD,CAAAA,MAAd,CAAuB,eAAgBA,CAAAA,MAAvC,CADD,CAERM,WAAY,CAAA,CAFJ,CAGRO,OAAQ,CAAA,CAHA,CAIRN,OAAQH,mBAJA,CAFkB,CAQ5BH,OAAQ,CACNI,QAASJ,MADH,CAENK,WAAY,CAAA,CAFN,CAGNO,OAAQ,CAAA,CAHF,CAINN,OAAQH,mBAJF,CARoB,CAc5BU,SAAU,CACRT,QAAS,sBADD,CAERC,WAAY,CAAA,CAFJ,CAdkB,CAkB5BS,SAAU,SAlBkB,CAmB5B,mBAAoB,CAClBV,QAAS,2BADS,CAElBW,MAAO,UAFW,CAnBQ,CAuB5BC,QAAS,uHAvBmB;AAwB5BC,QAAS,oBAxBmB,CAyB5BC,OAAQ,2CAzBoB,CA0B5BC,SAAU,CAAC,CACTf,QAAS,MADA,CAETW,MAAO,MAFE,CAAD,CAGP,gEAHO,CA1BkB,CA8B5B,mBAAoB,CAClBX,QAAS,uBADS,CAElBW,MAAO,UAFW,CA9BQ,CAkC5BP,YAAa,mCAlCe,CAmC5BY,IAAK,CACHhB,QAAS,IADN,CAEHW,MAAO,WAFJ,CAnCuB,CAwC9BZ,oBAAoBL,CAAAA,aAAcQ,CAAAA,MAAOC,CAAAA,OAAQD,CAAAA,MAAjD,CAA0DV,KA5D1C,CAAjB,CAAD,CA6DGC,cA7DH,CAHiB,CATnBwB,MAAOC,CAAAA,cAAP,CAAsB3B,OAAtB,CAA+B,YAA/B,CAA6C,CAC3C4B,MAAO,CAAA,CADoC,CAA7C,CAGA5B,QAAQ6B,CAAAA,OAAR,CAAkB5B,EAElBA,GAAG6B,CAAAA,WAAH;AAAiB,IACjB7B,GAAG8B,CAAAA,OAAH,CAAa,EATqF;\",\n\"sources\":[\"node_modules/refractor/lang/jq.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$jq\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = jq;\\n// @ts-nocheck\\njq.displayName = 'jq';\\njq.aliases = [];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction jq(Prism) {\\n  ;\\n\\n  (function (Prism) {\\n    var interpolation = /\\\\\\\\\\\\((?:[^()]|\\\\([^()]*\\\\))*\\\\)/.source;\\n    var string = RegExp(/(^|[^\\\\\\\\])\\\"(?:[^\\\"\\\\r\\\\n\\\\\\\\]|\\\\\\\\[^\\\\r\\\\n(]|__)*\\\"/.source.replace(/__/g, function () {\\n      return interpolation;\\n    }));\\n    var stringInterpolation = {\\n      interpolation: {\\n        pattern: RegExp(/((?:^|[^\\\\\\\\])(?:\\\\\\\\{2})*)/.source + interpolation),\\n        lookbehind: true,\\n        inside: {\\n          content: {\\n            pattern: /^(\\\\\\\\\\\\()[\\\\s\\\\S]+(?=\\\\)$)/,\\n            lookbehind: true,\\n            inside: null // see below\\n\\n          },\\n          punctuation: /^\\\\\\\\\\\\(|\\\\)$/\\n        }\\n      }\\n    };\\n    var jq = Prism.languages.jq = {\\n      comment: /#.*/,\\n      property: {\\n        pattern: RegExp(string.source + /(?=\\\\s*:(?!:))/.source),\\n        lookbehind: true,\\n        greedy: true,\\n        inside: stringInterpolation\\n      },\\n      string: {\\n        pattern: string,\\n        lookbehind: true,\\n        greedy: true,\\n        inside: stringInterpolation\\n      },\\n      function: {\\n        pattern: /(\\\\bdef\\\\s+)[a-z_]\\\\w+/i,\\n        lookbehind: true\\n      },\\n      variable: /\\\\B\\\\$\\\\w+/,\\n      'property-literal': {\\n        pattern: /\\\\b[a-z_]\\\\w*(?=\\\\s*:(?!:))/i,\\n        alias: 'property'\\n      },\\n      keyword: /\\\\b(?:as|break|catch|def|elif|else|end|foreach|if|import|include|label|module|modulemeta|null|reduce|then|try|while)\\\\b/,\\n      boolean: /\\\\b(?:false|true)\\\\b/,\\n      number: /(?:\\\\b\\\\d+\\\\.|\\\\B\\\\.)?\\\\b\\\\d+(?:[eE][+-]?\\\\d+)?\\\\b/,\\n      operator: [{\\n        pattern: /\\\\|=?/,\\n        alias: 'pipe'\\n      }, /\\\\.\\\\.|[!=<>]?=|\\\\?\\\\/\\\\/|\\\\/\\\\/=?|[-+*/%]=?|[<>?]|\\\\b(?:and|not|or)\\\\b/],\\n      'c-style-function': {\\n        pattern: /\\\\b[a-z_]\\\\w*(?=\\\\s*\\\\()/i,\\n        alias: 'function'\\n      },\\n      punctuation: /::|[()\\\\[\\\\]{},:;]|\\\\.(?=\\\\s*[\\\\[\\\\w$])/,\\n      dot: {\\n        pattern: /\\\\./,\\n        alias: 'important'\\n      }\\n    };\\n    stringInterpolation.interpolation.inside.content.inside = jq;\\n  })(Prism);\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"jq\",\"Prism\",\"interpolation\",\"source\",\"string\",\"RegExp\",\"replace\",\"stringInterpolation\",\"pattern\",\"lookbehind\",\"inside\",\"content\",\"punctuation\",\"languages\",\"comment\",\"property\",\"greedy\",\"function\",\"variable\",\"alias\",\"keyword\",\"boolean\",\"number\",\"operator\",\"dot\",\"Object\",\"defineProperty\",\"value\",\"default\",\"displayName\",\"aliases\"]\n}\n"]