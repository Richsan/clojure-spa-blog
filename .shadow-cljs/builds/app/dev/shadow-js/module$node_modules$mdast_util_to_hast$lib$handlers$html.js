["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mdast-util-to-hast/lib/handlers/html.js"],"~:js","shadow$provide.module$node_modules$mdast_util_to_hast$lib$handlers$html=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.html=function(state,node){if(state.dangerous){const result={type:\"raw\",value:node.value};state.patch(node,result);return state.applyData(node,result)}return null}}","~:source","shadow$provide[\"module$node_modules$mdast_util_to_hast$lib$handlers$html\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.html = html;\n\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').HTML} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Raw | Element | null}\n *   hast node.\n */\nfunction html(state, node) {\n  if (state.dangerous) {\n    /** @type {Raw} */\n    const result = {\n      type: 'raw',\n      value: node.value\n    };\n    state.patch(node, result);\n    return state.applyData(node, result);\n  } // To do: next major: return `undefined`.\n\n\n  return null;\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["__esModule","value","type","html"]],"~:compiled-at",1676665867312,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mdast_util_to_hast$lib$handlers$html.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAA,wDAAA,CAA6E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGrHC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,IAAR,CAoBAA,QAAa,CAACC,KAAD,CAAQC,IAAR,CAAc,CACzB,GAAID,KAAME,CAAAA,SAAV,CAAqB,CAEnB,MAAMC,OAAS,CACbC,KAAM,KADO,CAEbN,MAAOG,IAAKH,CAAAA,KAFC,CAIfE,MAAMK,CAAAA,KAAN,CAAYJ,IAAZ,CAAkBE,MAAlB,CACA,OAAOH,MAAMM,CAAAA,SAAN,CAAgBL,IAAhB,CAAsBE,MAAtB,CAPY,CAWrB,MAAO,KAZkB,CA1B0F;\",\n\"sources\":[\"node_modules/mdast-util-to-hast/lib/handlers/html.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$mdast_util_to_hast$lib$handlers$html\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.html = html;\\n\\n/**\\n * @typedef {import('hast').Element} Element\\n * @typedef {import('mdast').HTML} Html\\n * @typedef {import('../state.js').State} State\\n * @typedef {import('../../index.js').Raw} Raw\\n */\\n\\n/**\\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\\n * nothing).\\n *\\n * @param {State} state\\n *   Info passed around.\\n * @param {Html} node\\n *   mdast node.\\n * @returns {Raw | Element | null}\\n *   hast node.\\n */\\nfunction html(state, node) {\\n  if (state.dangerous) {\\n    /** @type {Raw} */\\n    const result = {\\n      type: 'raw',\\n      value: node.value\\n    };\\n    state.patch(node, result);\\n    return state.applyData(node, result);\\n  } // To do: next major: return `undefined`.\\n\\n\\n  return null;\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"html\",\"state\",\"node\",\"dangerous\",\"result\",\"type\",\"patch\",\"applyData\"]\n}\n"]