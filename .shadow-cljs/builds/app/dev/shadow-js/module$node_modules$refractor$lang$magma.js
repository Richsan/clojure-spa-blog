["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/magma.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$magma=function(global,require,module,exports){function magma(Prism){Prism.languages.magma={output:{pattern:/^(>.*(?:\\r(?:\\n|(?!\\n))|\\n))(?!>)(?:.+|(?:\\r(?:\\n|(?!\\n))|\\n)(?!>).*)(?:(?:\\r(?:\\n|(?!\\n))|\\n)(?!>).*)*/m,lookbehind:!0,greedy:!0},comment:{pattern:/\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,greedy:!0},string:{pattern:/(^|[^\\\\\"])\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"/,lookbehind:!0,greedy:!0},keyword:/\\b(?:_|adj|and|assert|assert2|assert3|assigned|break|by|case|cat|catch|clear|cmpeq|cmpne|continue|declare|default|delete|diff|div|do|elif|else|end|eq|error|eval|exists|exit|for|forall|forward|fprintf|freeze|function|ge|gt|if|iload|import|in|intrinsic|is|join|le|load|local|lt|meet|mod|ne|not|notadj|notin|notsubset|or|print|printf|procedure|quit|random|read|readi|repeat|require|requirege|requirerange|restore|return|save|sdiff|select|subset|then|time|to|try|until|vprint|vprintf|vtime|when|where|while|xor)\\b/,\nboolean:/\\b(?:false|true)\\b/,generator:{pattern:/\\b[a-z_]\\w*(?=\\s*<)/i,alias:\"class-name\"},function:/\\b[a-z_]\\w*(?=\\s*\\()/i,number:{pattern:/(^|[^\\w.]|\\.\\.)(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+)?(?:_[a-z]?)?(?=$|[^\\w.]|\\.\\.)/,lookbehind:!0},operator:/->|[-+*/^~!|#=]|:=|\\.\\./,punctuation:/[()[\\]{}<>,;.:]/}}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=magma;magma.displayName=\"magma\";magma.aliases=[]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$magma\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = magma;\n// @ts-nocheck\nmagma.displayName = 'magma';\nmagma.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nfunction magma(Prism) {\n  Prism.languages.magma = {\n    output: {\n      pattern: /^(>.*(?:\\r(?:\\n|(?!\\n))|\\n))(?!>)(?:.+|(?:\\r(?:\\n|(?!\\n))|\\n)(?!>).*)(?:(?:\\r(?:\\n|(?!\\n))|\\n)(?!>).*)*/m,\n      lookbehind: true,\n      greedy: true\n    },\n    comment: {\n      pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n      greedy: true\n    },\n    string: {\n      pattern: /(^|[^\\\\\"])\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"/,\n      lookbehind: true,\n      greedy: true\n    },\n    // http://magma.maths.usyd.edu.au/magma/handbook/text/82\n    keyword: /\\b(?:_|adj|and|assert|assert2|assert3|assigned|break|by|case|cat|catch|clear|cmpeq|cmpne|continue|declare|default|delete|diff|div|do|elif|else|end|eq|error|eval|exists|exit|for|forall|forward|fprintf|freeze|function|ge|gt|if|iload|import|in|intrinsic|is|join|le|load|local|lt|meet|mod|ne|not|notadj|notin|notsubset|or|print|printf|procedure|quit|random|read|readi|repeat|require|requirege|requirerange|restore|return|save|sdiff|select|subset|then|time|to|try|until|vprint|vprintf|vtime|when|where|while|xor)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    generator: {\n      pattern: /\\b[a-z_]\\w*(?=\\s*<)/i,\n      alias: 'class-name'\n    },\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    number: {\n      pattern: /(^|[^\\w.]|\\.\\.)(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+)?(?:_[a-z]?)?(?=$|[^\\w.]|\\.\\.)/,\n      lookbehind: true\n    },\n    operator: /->|[-+*/^~!|#=]|:=|\\.\\./,\n    punctuation: /[()[\\]{}<>,;.:]/\n  };\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["boolean","punctuation","string","output","aliases","operator","displayName","__esModule","magma","lookbehind","value","keyword","number","greedy","function","pattern","alias","generator","comment","default"]],"~:compiled-at",1676841365435,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$magma.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,wCAAA,CAA6D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAYrGC,QAASA,MAAK,CAACC,KAAD,CAAQ,CACpBA,KAAMC,CAAAA,SAAUF,CAAAA,KAAhB,CAAwB,CACtBG,OAAQ,CACNC,QAAS,0GADH,CAENC,WAAY,CAAA,CAFN,CAGNC,OAAQ,CAAA,CAHF,CADc,CAMtBC,QAAS,CACPH,QAAS,yBADF,CAEPE,OAAQ,CAAA,CAFD,CANa,CAUtBE,OAAQ,CACNJ,QAAS,iCADH,CAENC,WAAY,CAAA,CAFN,CAGNC,OAAQ,CAAA,CAHF,CAVc,CAgBtBG,QAAS,+fAhBa;AAiBtBC,QAAS,oBAjBa,CAkBtBC,UAAW,CACTP,QAAS,sBADA,CAETQ,MAAO,YAFE,CAlBW,CAsBtBC,SAAU,uBAtBY,CAuBtBC,OAAQ,CACNV,QAAS,sFADH,CAENC,WAAY,CAAA,CAFN,CAvBc,CA2BtBU,SAAU,yBA3BY,CA4BtBC,YAAa,iBA5BS,CADJ,CATtBC,MAAOC,CAAAA,cAAP,CAAsBnB,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CoB,MAAO,CAAA,CADoC,CAA7C,CAGApB,QAAQqB,CAAAA,OAAR,CAAkBpB,KAElBA,MAAMqB,CAAAA,WAAN,CAAoB,OACpBrB,MAAMsB,CAAAA,OAAN,CAAgB,EATqF;\",\n\"sources\":[\"node_modules/refractor/lang/magma.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$magma\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = magma;\\n// @ts-nocheck\\nmagma.displayName = 'magma';\\nmagma.aliases = [];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction magma(Prism) {\\n  Prism.languages.magma = {\\n    output: {\\n      pattern: /^(>.*(?:\\\\r(?:\\\\n|(?!\\\\n))|\\\\n))(?!>)(?:.+|(?:\\\\r(?:\\\\n|(?!\\\\n))|\\\\n)(?!>).*)(?:(?:\\\\r(?:\\\\n|(?!\\\\n))|\\\\n)(?!>).*)*/m,\\n      lookbehind: true,\\n      greedy: true\\n    },\\n    comment: {\\n      pattern: /\\\\/\\\\/.*|\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\//,\\n      greedy: true\\n    },\\n    string: {\\n      pattern: /(^|[^\\\\\\\\\\\"])\\\"(?:[^\\\\r\\\\n\\\\\\\\\\\"]|\\\\\\\\.)*\\\"/,\\n      lookbehind: true,\\n      greedy: true\\n    },\\n    // http://magma.maths.usyd.edu.au/magma/handbook/text/82\\n    keyword: /\\\\b(?:_|adj|and|assert|assert2|assert3|assigned|break|by|case|cat|catch|clear|cmpeq|cmpne|continue|declare|default|delete|diff|div|do|elif|else|end|eq|error|eval|exists|exit|for|forall|forward|fprintf|freeze|function|ge|gt|if|iload|import|in|intrinsic|is|join|le|load|local|lt|meet|mod|ne|not|notadj|notin|notsubset|or|print|printf|procedure|quit|random|read|readi|repeat|require|requirege|requirerange|restore|return|save|sdiff|select|subset|then|time|to|try|until|vprint|vprintf|vtime|when|where|while|xor)\\\\b/,\\n    boolean: /\\\\b(?:false|true)\\\\b/,\\n    generator: {\\n      pattern: /\\\\b[a-z_]\\\\w*(?=\\\\s*<)/i,\\n      alias: 'class-name'\\n    },\\n    function: /\\\\b[a-z_]\\\\w*(?=\\\\s*\\\\()/i,\\n    number: {\\n      pattern: /(^|[^\\\\w.]|\\\\.\\\\.)(?:\\\\d+(?:\\\\.\\\\d*)?|\\\\.\\\\d+)(?:[eE][+-]?\\\\d+)?(?:_[a-z]?)?(?=$|[^\\\\w.]|\\\\.\\\\.)/,\\n      lookbehind: true\\n    },\\n    operator: /->|[-+*/^~!|#=]|:=|\\\\.\\\\./,\\n    punctuation: /[()[\\\\]{}<>,;.:]/\\n  };\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"magma\",\"Prism\",\"languages\",\"output\",\"pattern\",\"lookbehind\",\"greedy\",\"comment\",\"string\",\"keyword\",\"boolean\",\"generator\",\"alias\",\"function\",\"number\",\"operator\",\"punctuation\",\"Object\",\"defineProperty\",\"value\",\"default\",\"displayName\",\"aliases\"]\n}\n"]