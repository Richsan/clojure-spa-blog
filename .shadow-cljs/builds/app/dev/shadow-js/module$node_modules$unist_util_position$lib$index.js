["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/unist-util-position/lib/index.js"],"~:js","shadow$provide.module$node_modules$unist_util_position$lib$index=function(global,require,module,exports){function point(type){return function(node){node=node&&node.position&&node.position[type]||{};return{line:node.line||null,column:node.column||null,offset:-1<node.offset?node.offset:null}}}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.position=function(node){return{start:pointStart(node),end:pointEnd(node)}};exports.pointEnd=exports.pointStart=void 0;const pointStart=point(\"start\");\nexports.pointStart=pointStart;const pointEnd=point(\"end\");exports.pointEnd=pointEnd}","~:source","shadow$provide[\"module$node_modules$unist_util_position$lib$index\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.position = position;\nexports.pointEnd = exports.pointStart = void 0;\n\n/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nconst pointStart = point('start');\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\n\nexports.pointStart = pointStart;\nconst pointEnd = point('end');\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike | Node | null | undefined} [node]\n *   Node.\n * @returns {Position}\n *   Position.\n */\n\nexports.pointEnd = pointEnd;\n\nfunction position(node) {\n  return {\n    start: pointStart(node),\n    end: pointEnd(node)\n  };\n}\n/**\n * Get the positional info of `node`.\n *\n * @param {'start' | 'end'} type\n *   Side.\n * @returns\n *   Getter.\n */\n\n\nfunction point(type) {\n  return point;\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {NodeLike | Node | null | undefined} [node]\n   * @returns {Point}\n   */\n\n  function point(node) {\n    const point = node && node.position && node.position[type] || {}; // To do: next major: donâ€™t return points when invalid.\n\n    return {\n      // @ts-expect-error: in practice, null is allowed.\n      line: point.line || null,\n      // @ts-expect-error: in practice, null is allowed.\n      column: point.column || null,\n      // @ts-expect-error: in practice, null is allowed.\n      offset: point.offset > -1 ? point.offset : null\n    };\n  }\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["pointEnd","offset","__esModule","position","value","start","line","column","pointStart","end"]],"~:compiled-at",1676665867315,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$unist_util_position$lib$index.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,iDAAA,CAAsE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CA6E9GC,QAASA,MAAK,CAACC,IAAD,CAAO,CACnB,MAQAD,SAAc,CAACE,IAAD,CAAO,CACbF,IAAAA,CAAQE,IAARF,EAAgBE,IAAKC,CAAAA,QAArBH,EAAiCE,IAAKC,CAAAA,QAAL,CAAcF,IAAd,CAAjCD,EAAwD,EAE9D,OAAO,CAELI,KAAMJ,IAAMI,CAAAA,IAAZA,EAAoB,IAFf,CAILC,OAAQL,IAAMK,CAAAA,MAAdA,EAAwB,IAJnB,CAMLC,OAAuB,CAAC,CAAhB,CAAAN,IAAMM,CAAAA,MAAN,CAAoBN,IAAMM,CAAAA,MAA1B,CAAmC,IANtC,CAHY,CATF,CA1ErBC,MAAOC,CAAAA,cAAP,CAAsBT,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CU,MAAO,CAAA,CADoC,CAA7C,CAGAV,QAAQI,CAAAA,QAAR,CAuDAA,QAAiB,CAACD,IAAD,CAAO,CACtB,MAAO,CACLQ,MAAOC,UAAA,CAAWT,IAAX,CADF,CAELU,IAAKC,QAAA,CAASX,IAAT,CAFA,CADe,CAtDxBH,QAAQc,CAAAA,QAAR,CAAmBd,OAAQY,CAAAA,UAA3B,CAAwC,IAAK,EA+B7C,OAAMA,WAAaX,KAAA,CAAM,OAAN,CAUnBD;OAAQY,CAAAA,UAAR,CAAqBA,UACrB,OAAME,SAAWb,KAAA,CAAM,KAAN,CAUjBD,QAAQc,CAAAA,QAAR,CAAmBA,QA3D2F;\",\n\"sources\":[\"node_modules/unist-util-position/lib/index.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$unist_util_position$lib$index\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.position = position;\\nexports.pointEnd = exports.pointStart = void 0;\\n\\n/**\\n * @typedef {import('unist').Position} Position\\n * @typedef {import('unist').Node} Node\\n * @typedef {import('unist').Point} Point\\n */\\n\\n/**\\n * @typedef NodeLike\\n * @property {string} type\\n * @property {PositionLike | null | undefined} [position]\\n *\\n * @typedef PositionLike\\n * @property {PointLike | null | undefined} [start]\\n * @property {PointLike | null | undefined} [end]\\n *\\n * @typedef PointLike\\n * @property {number | null | undefined} [line]\\n * @property {number | null | undefined} [column]\\n * @property {number | null | undefined} [offset]\\n */\\n\\n/**\\n * Get the starting point of `node`.\\n *\\n * @param node\\n *   Node.\\n * @returns\\n *   Point.\\n */\\nconst pointStart = point('start');\\n/**\\n * Get the ending point of `node`.\\n *\\n * @param node\\n *   Node.\\n * @returns\\n *   Point.\\n */\\n\\nexports.pointStart = pointStart;\\nconst pointEnd = point('end');\\n/**\\n * Get the positional info of `node`.\\n *\\n * @param {NodeLike | Node | null | undefined} [node]\\n *   Node.\\n * @returns {Position}\\n *   Position.\\n */\\n\\nexports.pointEnd = pointEnd;\\n\\nfunction position(node) {\\n  return {\\n    start: pointStart(node),\\n    end: pointEnd(node)\\n  };\\n}\\n/**\\n * Get the positional info of `node`.\\n *\\n * @param {'start' | 'end'} type\\n *   Side.\\n * @returns\\n *   Getter.\\n */\\n\\n\\nfunction point(type) {\\n  return point;\\n  /**\\n   * Get the point info of `node` at a bound side.\\n   *\\n   * @param {NodeLike | Node | null | undefined} [node]\\n   * @returns {Point}\\n   */\\n\\n  function point(node) {\\n    const point = node && node.position && node.position[type] || {}; // To do: next major: don\\u2019t return points when invalid.\\n\\n    return {\\n      // @ts-expect-error: in practice, null is allowed.\\n      line: point.line || null,\\n      // @ts-expect-error: in practice, null is allowed.\\n      column: point.column || null,\\n      // @ts-expect-error: in practice, null is allowed.\\n      offset: point.offset > -1 ? point.offset : null\\n    };\\n  }\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"point\",\"type\",\"node\",\"position\",\"line\",\"column\",\"offset\",\"Object\",\"defineProperty\",\"value\",\"start\",\"pointStart\",\"end\",\"pointEnd\"]\n}\n"]