["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/parse5/lib/common/unicode.js"],"~:js","shadow$provide.module$node_modules$parse5$lib$common$unicode=function(global,require,module,exports){const UNDEFINED_CODE_POINTS=[65534,65535,131070,131071,196606,196607,262142,262143,327678,327679,393214,393215,458750,458751,524286,524287,589822,589823,655358,655359,720894,720895,786430,786431,851966,851967,917502,917503,983038,983039,1048574,1048575,1114110,1114111];exports.REPLACEMENT_CHARACTER=\"ï¿½\";exports.CODE_POINTS={EOF:-1,NULL:0,TABULATION:9,CARRIAGE_RETURN:13,LINE_FEED:10,FORM_FEED:12,SPACE:32,\nEXCLAMATION_MARK:33,QUOTATION_MARK:34,NUMBER_SIGN:35,AMPERSAND:38,APOSTROPHE:39,HYPHEN_MINUS:45,SOLIDUS:47,DIGIT_0:48,DIGIT_9:57,SEMICOLON:59,LESS_THAN_SIGN:60,EQUALS_SIGN:61,GREATER_THAN_SIGN:62,QUESTION_MARK:63,LATIN_CAPITAL_A:65,LATIN_CAPITAL_F:70,LATIN_CAPITAL_X:88,LATIN_CAPITAL_Z:90,RIGHT_SQUARE_BRACKET:93,GRAVE_ACCENT:96,LATIN_SMALL_A:97,LATIN_SMALL_F:102,LATIN_SMALL_X:120,LATIN_SMALL_Z:122,REPLACEMENT_CHARACTER:65533};exports.CODE_POINT_SEQUENCES={DASH_DASH_STRING:[45,45],DOCTYPE_STRING:[68,\n79,67,84,89,80,69],CDATA_START_STRING:[91,67,68,65,84,65,91],SCRIPT_STRING:[115,99,114,105,112,116],PUBLIC_STRING:[80,85,66,76,73,67],SYSTEM_STRING:[83,89,83,84,69,77]};exports.isSurrogate=function(cp){return 55296<=cp&&57343>=cp};exports.isSurrogatePair=function(cp){return 56320<=cp&&57343>=cp};exports.getSurrogatePairCodePoint=function(cp1,cp2){return 1024*(cp1-55296)+9216+cp2};exports.isControlCodePoint=function(cp){return 32!==cp&&10!==cp&&13!==cp&&9!==cp&&12!==cp&&1<=cp&&31>=cp||127<=cp&&159>=\ncp};exports.isUndefinedCodePoint=function(cp){return 64976<=cp&&65007>=cp||-1<UNDEFINED_CODE_POINTS.indexOf(cp)}}","~:source","shadow$provide[\"module$node_modules$parse5$lib$common$unicode\"] = function(global,require,module,exports) {\n'use strict';\n\nconst UNDEFINED_CODE_POINTS = [\n    0xfffe,\n    0xffff,\n    0x1fffe,\n    0x1ffff,\n    0x2fffe,\n    0x2ffff,\n    0x3fffe,\n    0x3ffff,\n    0x4fffe,\n    0x4ffff,\n    0x5fffe,\n    0x5ffff,\n    0x6fffe,\n    0x6ffff,\n    0x7fffe,\n    0x7ffff,\n    0x8fffe,\n    0x8ffff,\n    0x9fffe,\n    0x9ffff,\n    0xafffe,\n    0xaffff,\n    0xbfffe,\n    0xbffff,\n    0xcfffe,\n    0xcffff,\n    0xdfffe,\n    0xdffff,\n    0xefffe,\n    0xeffff,\n    0xffffe,\n    0xfffff,\n    0x10fffe,\n    0x10ffff\n];\n\nexports.REPLACEMENT_CHARACTER = '\\uFFFD';\n\nexports.CODE_POINTS = {\n    EOF: -1,\n    NULL: 0x00,\n    TABULATION: 0x09,\n    CARRIAGE_RETURN: 0x0d,\n    LINE_FEED: 0x0a,\n    FORM_FEED: 0x0c,\n    SPACE: 0x20,\n    EXCLAMATION_MARK: 0x21,\n    QUOTATION_MARK: 0x22,\n    NUMBER_SIGN: 0x23,\n    AMPERSAND: 0x26,\n    APOSTROPHE: 0x27,\n    HYPHEN_MINUS: 0x2d,\n    SOLIDUS: 0x2f,\n    DIGIT_0: 0x30,\n    DIGIT_9: 0x39,\n    SEMICOLON: 0x3b,\n    LESS_THAN_SIGN: 0x3c,\n    EQUALS_SIGN: 0x3d,\n    GREATER_THAN_SIGN: 0x3e,\n    QUESTION_MARK: 0x3f,\n    LATIN_CAPITAL_A: 0x41,\n    LATIN_CAPITAL_F: 0x46,\n    LATIN_CAPITAL_X: 0x58,\n    LATIN_CAPITAL_Z: 0x5a,\n    RIGHT_SQUARE_BRACKET: 0x5d,\n    GRAVE_ACCENT: 0x60,\n    LATIN_SMALL_A: 0x61,\n    LATIN_SMALL_F: 0x66,\n    LATIN_SMALL_X: 0x78,\n    LATIN_SMALL_Z: 0x7a,\n    REPLACEMENT_CHARACTER: 0xfffd\n};\n\nexports.CODE_POINT_SEQUENCES = {\n    DASH_DASH_STRING: [0x2d, 0x2d], //--\n    DOCTYPE_STRING: [0x44, 0x4f, 0x43, 0x54, 0x59, 0x50, 0x45], //DOCTYPE\n    CDATA_START_STRING: [0x5b, 0x43, 0x44, 0x41, 0x54, 0x41, 0x5b], //[CDATA[\n    SCRIPT_STRING: [0x73, 0x63, 0x72, 0x69, 0x70, 0x74], //script\n    PUBLIC_STRING: [0x50, 0x55, 0x42, 0x4c, 0x49, 0x43], //PUBLIC\n    SYSTEM_STRING: [0x53, 0x59, 0x53, 0x54, 0x45, 0x4d] //SYSTEM\n};\n\n//Surrogates\nexports.isSurrogate = function(cp) {\n    return cp >= 0xd800 && cp <= 0xdfff;\n};\n\nexports.isSurrogatePair = function(cp) {\n    return cp >= 0xdc00 && cp <= 0xdfff;\n};\n\nexports.getSurrogatePairCodePoint = function(cp1, cp2) {\n    return (cp1 - 0xd800) * 0x400 + 0x2400 + cp2;\n};\n\n//NOTE: excluding NULL and ASCII whitespace\nexports.isControlCodePoint = function(cp) {\n    return (\n        (cp !== 0x20 && cp !== 0x0a && cp !== 0x0d && cp !== 0x09 && cp !== 0x0c && cp >= 0x01 && cp <= 0x1f) ||\n        (cp >= 0x7f && cp <= 0x9f)\n    );\n};\n\nexports.isUndefinedCodePoint = function(cp) {\n    return (cp >= 0xfdd0 && cp <= 0xfdef) || UNDEFINED_CODE_POINTS.indexOf(cp) > -1;\n};\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["NULL","DIGIT_0","NUMBER_SIGN","LATIN_CAPITAL_Z","QUESTION_MARK","SYSTEM_STRING","GREATER_THAN_SIGN","LATIN_CAPITAL_X","PUBLIC_STRING","isControlCodePoint","TABULATION","QUOTATION_MARK","APOSTROPHE","LATIN_SMALL_F","CARRIAGE_RETURN","HYPHEN_MINUS","LATIN_CAPITAL_F","EOF","LATIN_SMALL_Z","isUndefinedCodePoint","SOLIDUS","LATIN_SMALL_A","EXCLAMATION_MARK","isSurrogatePair","LINE_FEED","REPLACEMENT_CHARACTER","LATIN_CAPITAL_A","CDATA_START_STRING","SPACE","EQUALS_SIGN","isSurrogate","DOCTYPE_STRING","SEMICOLON","AMPERSAND","getSurrogatePairCodePoint","RIGHT_SQUARE_BRACKET","LATIN_SMALL_X","GRAVE_ACCENT","CODE_POINT_SEQUENCES","SCRIPT_STRING","FORM_FEED","CODE_POINTS","DIGIT_9","DASH_DASH_STRING","LESS_THAN_SIGN"]],"~:compiled-at",1676667638370,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$parse5$lib$common$unicode.js\",\n\"lineCount\":4,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/parse5/lib/common/unicode.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$parse5$lib$common$unicode\\\"] = function(global,require,module,exports) {\\n'use strict';\\n\\nconst UNDEFINED_CODE_POINTS = [\\n    0xfffe,\\n    0xffff,\\n    0x1fffe,\\n    0x1ffff,\\n    0x2fffe,\\n    0x2ffff,\\n    0x3fffe,\\n    0x3ffff,\\n    0x4fffe,\\n    0x4ffff,\\n    0x5fffe,\\n    0x5ffff,\\n    0x6fffe,\\n    0x6ffff,\\n    0x7fffe,\\n    0x7ffff,\\n    0x8fffe,\\n    0x8ffff,\\n    0x9fffe,\\n    0x9ffff,\\n    0xafffe,\\n    0xaffff,\\n    0xbfffe,\\n    0xbffff,\\n    0xcfffe,\\n    0xcffff,\\n    0xdfffe,\\n    0xdffff,\\n    0xefffe,\\n    0xeffff,\\n    0xffffe,\\n    0xfffff,\\n    0x10fffe,\\n    0x10ffff\\n];\\n\\nexports.REPLACEMENT_CHARACTER = '\\\\uFFFD';\\n\\nexports.CODE_POINTS = {\\n    EOF: -1,\\n    NULL: 0x00,\\n    TABULATION: 0x09,\\n    CARRIAGE_RETURN: 0x0d,\\n    LINE_FEED: 0x0a,\\n    FORM_FEED: 0x0c,\\n    SPACE: 0x20,\\n    EXCLAMATION_MARK: 0x21,\\n    QUOTATION_MARK: 0x22,\\n    NUMBER_SIGN: 0x23,\\n    AMPERSAND: 0x26,\\n    APOSTROPHE: 0x27,\\n    HYPHEN_MINUS: 0x2d,\\n    SOLIDUS: 0x2f,\\n    DIGIT_0: 0x30,\\n    DIGIT_9: 0x39,\\n    SEMICOLON: 0x3b,\\n    LESS_THAN_SIGN: 0x3c,\\n    EQUALS_SIGN: 0x3d,\\n    GREATER_THAN_SIGN: 0x3e,\\n    QUESTION_MARK: 0x3f,\\n    LATIN_CAPITAL_A: 0x41,\\n    LATIN_CAPITAL_F: 0x46,\\n    LATIN_CAPITAL_X: 0x58,\\n    LATIN_CAPITAL_Z: 0x5a,\\n    RIGHT_SQUARE_BRACKET: 0x5d,\\n    GRAVE_ACCENT: 0x60,\\n    LATIN_SMALL_A: 0x61,\\n    LATIN_SMALL_F: 0x66,\\n    LATIN_SMALL_X: 0x78,\\n    LATIN_SMALL_Z: 0x7a,\\n    REPLACEMENT_CHARACTER: 0xfffd\\n};\\n\\nexports.CODE_POINT_SEQUENCES = {\\n    DASH_DASH_STRING: [0x2d, 0x2d], //--\\n    DOCTYPE_STRING: [0x44, 0x4f, 0x43, 0x54, 0x59, 0x50, 0x45], //DOCTYPE\\n    CDATA_START_STRING: [0x5b, 0x43, 0x44, 0x41, 0x54, 0x41, 0x5b], //[CDATA[\\n    SCRIPT_STRING: [0x73, 0x63, 0x72, 0x69, 0x70, 0x74], //script\\n    PUBLIC_STRING: [0x50, 0x55, 0x42, 0x4c, 0x49, 0x43], //PUBLIC\\n    SYSTEM_STRING: [0x53, 0x59, 0x53, 0x54, 0x45, 0x4d] //SYSTEM\\n};\\n\\n//Surrogates\\nexports.isSurrogate = function(cp) {\\n    return cp >= 0xd800 && cp <= 0xdfff;\\n};\\n\\nexports.isSurrogatePair = function(cp) {\\n    return cp >= 0xdc00 && cp <= 0xdfff;\\n};\\n\\nexports.getSurrogatePairCodePoint = function(cp1, cp2) {\\n    return (cp1 - 0xd800) * 0x400 + 0x2400 + cp2;\\n};\\n\\n//NOTE: excluding NULL and ASCII whitespace\\nexports.isControlCodePoint = function(cp) {\\n    return (\\n        (cp !== 0x20 && cp !== 0x0a && cp !== 0x0d && cp !== 0x09 && cp !== 0x0c && cp >= 0x01 && cp <= 0x1f) ||\\n        (cp >= 0x7f && cp <= 0x9f)\\n    );\\n};\\n\\nexports.isUndefinedCodePoint = function(cp) {\\n    return (cp >= 0xfdd0 && cp <= 0xfdef) || UNDEFINED_CODE_POINTS.indexOf(cp) > -1;\\n};\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"UNDEFINED_CODE_POINTS\",\"REPLACEMENT_CHARACTER\",\"CODE_POINTS\",\"EOF\",\"NULL\",\"TABULATION\",\"CARRIAGE_RETURN\",\"LINE_FEED\",\"FORM_FEED\",\"SPACE\",\"EXCLAMATION_MARK\",\"QUOTATION_MARK\",\"NUMBER_SIGN\",\"AMPERSAND\",\"APOSTROPHE\",\"HYPHEN_MINUS\",\"SOLIDUS\",\"DIGIT_0\",\"DIGIT_9\",\"SEMICOLON\",\"LESS_THAN_SIGN\",\"EQUALS_SIGN\",\"GREATER_THAN_SIGN\",\"QUESTION_MARK\",\"LATIN_CAPITAL_A\",\"LATIN_CAPITAL_F\",\"LATIN_CAPITAL_X\",\"LATIN_CAPITAL_Z\",\"RIGHT_SQUARE_BRACKET\",\"GRAVE_ACCENT\",\"LATIN_SMALL_A\",\"LATIN_SMALL_F\",\"LATIN_SMALL_X\",\"LATIN_SMALL_Z\",\"CODE_POINT_SEQUENCES\",\"DASH_DASH_STRING\",\"DOCTYPE_STRING\",\"CDATA_START_STRING\",\"SCRIPT_STRING\",\"PUBLIC_STRING\",\"SYSTEM_STRING\",\"isSurrogate\",\"exports.isSurrogate\",\"cp\",\"isSurrogatePair\",\"exports.isSurrogatePair\",\"getSurrogatePairCodePoint\",\"exports.getSurrogatePairCodePoint\",\"cp1\",\"cp2\",\"isControlCodePoint\",\"exports.isControlCodePoint\",\"isUndefinedCodePoint\",\"exports.isUndefinedCodePoint\",\"indexOf\"]\n}\n"]