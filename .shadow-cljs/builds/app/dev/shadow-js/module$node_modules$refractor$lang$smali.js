["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/smali.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$smali=function(global,require,module,exports){function smali(Prism){Prism.languages.smali={comment:/#.*/,string:{pattern:/\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"|'(?:[^\\r\\n\\\\']|\\\\(?:.|u[\\da-fA-F]{4}))'/,greedy:!0},\"class-name\":{pattern:/(^|[^L])L(?:(?:\\w+|`[^`\\r\\n]*`)\\/)*(?:[\\w$]+|`[^`\\r\\n]*`)(?=\\s*;)/,lookbehind:!0,inside:{\"class-name\":{pattern:/(^L|\\/)(?:[\\w$]+|`[^`\\r\\n]*`)$/,lookbehind:!0},namespace:{pattern:/^(L)(?:(?:\\w+|`[^`\\r\\n]*`)\\/)+/,lookbehind:!0,inside:{punctuation:/\\//}},\nbuiltin:/^L/}},builtin:[{pattern:/([();\\[])[BCDFIJSVZ]+/,lookbehind:!0},{pattern:/([\\w$>]:)[BCDFIJSVZ]/,lookbehind:!0}],keyword:[{pattern:/(\\.end\\s+)[\\w-]+/,lookbehind:!0},{pattern:/(^|[^\\w.-])\\.(?!\\d)[\\w-]+/,lookbehind:!0},{pattern:/(^|[^\\w.-])(?:abstract|annotation|bridge|constructor|enum|final|interface|private|protected|public|runtime|static|synthetic|system|transient)(?![\\w.-])/,lookbehind:!0}],function:{pattern:/(^|[^\\w.-])(?:\\w+|<[\\w$-]+>)(?=\\()/,lookbehind:!0},field:{pattern:/[\\w$]+(?=:)/,\nalias:\"variable\"},register:{pattern:/(^|[^\\w.-])[vp]\\d(?![\\w.-])/,lookbehind:!0,alias:\"variable\"},boolean:{pattern:/(^|[^\\w.-])(?:false|true)(?![\\w.-])/,lookbehind:!0},number:{pattern:/(^|[^/\\w.-])-?(?:NAN|INFINITY|0x(?:[\\dA-F]+(?:\\.[\\dA-F]*)?|\\.[\\dA-F]+)(?:p[+-]?[\\dA-F]+)?|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?)[dflst]?(?![\\w.-])/i,lookbehind:!0},label:{pattern:/(:)\\w+/,lookbehind:!0,alias:\"property\"},operator:/->|\\.\\.|[\\[=]/,punctuation:/[{}(),;:]/}}Object.defineProperty(exports,\"__esModule\",{value:!0});\nexports.default=smali;smali.displayName=\"smali\";smali.aliases=[]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$smali\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = smali;\n// @ts-nocheck\nsmali.displayName = 'smali';\nsmali.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nfunction smali(Prism) {\n  // Test files for the parser itself:\n  // https://github.com/JesusFreke/smali/tree/master/smali/src/test/resources/LexerTest\n  Prism.languages.smali = {\n    comment: /#.*/,\n    string: {\n      pattern: /\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"|'(?:[^\\r\\n\\\\']|\\\\(?:.|u[\\da-fA-F]{4}))'/,\n      greedy: true\n    },\n    'class-name': {\n      pattern: /(^|[^L])L(?:(?:\\w+|`[^`\\r\\n]*`)\\/)*(?:[\\w$]+|`[^`\\r\\n]*`)(?=\\s*;)/,\n      lookbehind: true,\n      inside: {\n        'class-name': {\n          pattern: /(^L|\\/)(?:[\\w$]+|`[^`\\r\\n]*`)$/,\n          lookbehind: true\n        },\n        namespace: {\n          pattern: /^(L)(?:(?:\\w+|`[^`\\r\\n]*`)\\/)+/,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\//\n          }\n        },\n        builtin: /^L/\n      }\n    },\n    builtin: [{\n      // Reference: https://github.com/JesusFreke/smali/wiki/TypesMethodsAndFields#types\n      pattern: /([();\\[])[BCDFIJSVZ]+/,\n      lookbehind: true\n    }, {\n      // e.g. .field mWifiOnUid:I\n      pattern: /([\\w$>]:)[BCDFIJSVZ]/,\n      lookbehind: true\n    }],\n    keyword: [{\n      pattern: /(\\.end\\s+)[\\w-]+/,\n      lookbehind: true\n    }, {\n      pattern: /(^|[^\\w.-])\\.(?!\\d)[\\w-]+/,\n      lookbehind: true\n    }, {\n      pattern: /(^|[^\\w.-])(?:abstract|annotation|bridge|constructor|enum|final|interface|private|protected|public|runtime|static|synthetic|system|transient)(?![\\w.-])/,\n      lookbehind: true\n    }],\n    function: {\n      pattern: /(^|[^\\w.-])(?:\\w+|<[\\w$-]+>)(?=\\()/,\n      lookbehind: true\n    },\n    field: {\n      pattern: /[\\w$]+(?=:)/,\n      alias: 'variable'\n    },\n    register: {\n      pattern: /(^|[^\\w.-])[vp]\\d(?![\\w.-])/,\n      lookbehind: true,\n      alias: 'variable'\n    },\n    boolean: {\n      pattern: /(^|[^\\w.-])(?:false|true)(?![\\w.-])/,\n      lookbehind: true\n    },\n    number: {\n      pattern: /(^|[^/\\w.-])-?(?:NAN|INFINITY|0x(?:[\\dA-F]+(?:\\.[\\dA-F]*)?|\\.[\\dA-F]+)(?:p[+-]?[\\dA-F]+)?|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?)[dflst]?(?![\\w.-])/i,\n      lookbehind: true\n    },\n    label: {\n      pattern: /(:)\\w+/,\n      lookbehind: true,\n      alias: 'property'\n    },\n    operator: /->|\\.\\.|[\\[=]/,\n    punctuation: /[{}(),;:]/\n  };\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["boolean","punctuation","string","aliases","operator","displayName","label","__esModule","lookbehind","value","field","keyword","number","greedy","register","function","smali","pattern","inside","alias","namespace","comment","builtin","default"]],"~:compiled-at",1676841365460,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$smali.js\",\n\"lineCount\":4,\n\"mappings\":\"AAAAA,cAAA,CAAA,wCAAA,CAA6D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAYrGC,QAASA,MAAK,CAACC,KAAD,CAAQ,CAGpBA,KAAMC,CAAAA,SAAUF,CAAAA,KAAhB,CAAwB,CACtBG,QAAS,KADa,CAEtBC,OAAQ,CACNC,QAAS,+DADH,CAENC,OAAQ,CAAA,CAFF,CAFc,CAMtB,aAAc,CACZD,QAAS,mEADG,CAEZE,WAAY,CAAA,CAFA,CAGZC,OAAQ,CACN,aAAc,CACZH,QAAS,gCADG,CAEZE,WAAY,CAAA,CAFA,CADR,CAKNE,UAAW,CACTJ,QAAS,gCADA,CAETE,WAAY,CAAA,CAFH,CAGTC,OAAQ,CACNE,YAAa,IADP,CAHC,CALL;AAYNC,QAAS,IAZH,CAHI,CANQ,CAwBtBA,QAAS,CAAC,CAERN,QAAS,uBAFD,CAGRE,WAAY,CAAA,CAHJ,CAAD,CAIN,CAEDF,QAAS,sBAFR,CAGDE,WAAY,CAAA,CAHX,CAJM,CAxBa,CAiCtBK,QAAS,CAAC,CACRP,QAAS,kBADD,CAERE,WAAY,CAAA,CAFJ,CAAD,CAGN,CACDF,QAAS,2BADR,CAEDE,WAAY,CAAA,CAFX,CAHM,CAMN,CACDF,QAAS,yJADR,CAEDE,WAAY,CAAA,CAFX,CANM,CAjCa,CA2CtBM,SAAU,CACRR,QAAS,oCADD,CAERE,WAAY,CAAA,CAFJ,CA3CY,CA+CtBO,MAAO,CACLT,QAAS,aADJ;AAELU,MAAO,UAFF,CA/Ce,CAmDtBC,SAAU,CACRX,QAAS,6BADD,CAERE,WAAY,CAAA,CAFJ,CAGRQ,MAAO,UAHC,CAnDY,CAwDtBE,QAAS,CACPZ,QAAS,qCADF,CAEPE,WAAY,CAAA,CAFL,CAxDa,CA4DtBW,OAAQ,CACNb,QAAS,qJADH,CAENE,WAAY,CAAA,CAFN,CA5Dc,CAgEtBY,MAAO,CACLd,QAAS,QADJ,CAELE,WAAY,CAAA,CAFP,CAGLQ,MAAO,UAHF,CAhEe,CAqEtBK,SAAU,eArEY,CAsEtBV,YAAa,WAtES,CAHJ,CATtBW,MAAOC,CAAAA,cAAP,CAAsBvB,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CwB,MAAO,CAAA,CADoC,CAA7C,CAGAxB;OAAQyB,CAAAA,OAAR,CAAkBxB,KAElBA,MAAMyB,CAAAA,WAAN,CAAoB,OACpBzB,MAAM0B,CAAAA,OAAN,CAAgB,EATqF;\",\n\"sources\":[\"node_modules/refractor/lang/smali.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$smali\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = smali;\\n// @ts-nocheck\\nsmali.displayName = 'smali';\\nsmali.aliases = [];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction smali(Prism) {\\n  // Test files for the parser itself:\\n  // https://github.com/JesusFreke/smali/tree/master/smali/src/test/resources/LexerTest\\n  Prism.languages.smali = {\\n    comment: /#.*/,\\n    string: {\\n      pattern: /\\\"(?:[^\\\\r\\\\n\\\\\\\\\\\"]|\\\\\\\\.)*\\\"|'(?:[^\\\\r\\\\n\\\\\\\\']|\\\\\\\\(?:.|u[\\\\da-fA-F]{4}))'/,\\n      greedy: true\\n    },\\n    'class-name': {\\n      pattern: /(^|[^L])L(?:(?:\\\\w+|`[^`\\\\r\\\\n]*`)\\\\/)*(?:[\\\\w$]+|`[^`\\\\r\\\\n]*`)(?=\\\\s*;)/,\\n      lookbehind: true,\\n      inside: {\\n        'class-name': {\\n          pattern: /(^L|\\\\/)(?:[\\\\w$]+|`[^`\\\\r\\\\n]*`)$/,\\n          lookbehind: true\\n        },\\n        namespace: {\\n          pattern: /^(L)(?:(?:\\\\w+|`[^`\\\\r\\\\n]*`)\\\\/)+/,\\n          lookbehind: true,\\n          inside: {\\n            punctuation: /\\\\//\\n          }\\n        },\\n        builtin: /^L/\\n      }\\n    },\\n    builtin: [{\\n      // Reference: https://github.com/JesusFreke/smali/wiki/TypesMethodsAndFields#types\\n      pattern: /([();\\\\[])[BCDFIJSVZ]+/,\\n      lookbehind: true\\n    }, {\\n      // e.g. .field mWifiOnUid:I\\n      pattern: /([\\\\w$>]:)[BCDFIJSVZ]/,\\n      lookbehind: true\\n    }],\\n    keyword: [{\\n      pattern: /(\\\\.end\\\\s+)[\\\\w-]+/,\\n      lookbehind: true\\n    }, {\\n      pattern: /(^|[^\\\\w.-])\\\\.(?!\\\\d)[\\\\w-]+/,\\n      lookbehind: true\\n    }, {\\n      pattern: /(^|[^\\\\w.-])(?:abstract|annotation|bridge|constructor|enum|final|interface|private|protected|public|runtime|static|synthetic|system|transient)(?![\\\\w.-])/,\\n      lookbehind: true\\n    }],\\n    function: {\\n      pattern: /(^|[^\\\\w.-])(?:\\\\w+|<[\\\\w$-]+>)(?=\\\\()/,\\n      lookbehind: true\\n    },\\n    field: {\\n      pattern: /[\\\\w$]+(?=:)/,\\n      alias: 'variable'\\n    },\\n    register: {\\n      pattern: /(^|[^\\\\w.-])[vp]\\\\d(?![\\\\w.-])/,\\n      lookbehind: true,\\n      alias: 'variable'\\n    },\\n    boolean: {\\n      pattern: /(^|[^\\\\w.-])(?:false|true)(?![\\\\w.-])/,\\n      lookbehind: true\\n    },\\n    number: {\\n      pattern: /(^|[^/\\\\w.-])-?(?:NAN|INFINITY|0x(?:[\\\\dA-F]+(?:\\\\.[\\\\dA-F]*)?|\\\\.[\\\\dA-F]+)(?:p[+-]?[\\\\dA-F]+)?|(?:\\\\d+(?:\\\\.\\\\d*)?|\\\\.\\\\d+)(?:e[+-]?\\\\d+)?)[dflst]?(?![\\\\w.-])/i,\\n      lookbehind: true\\n    },\\n    label: {\\n      pattern: /(:)\\\\w+/,\\n      lookbehind: true,\\n      alias: 'property'\\n    },\\n    operator: /->|\\\\.\\\\.|[\\\\[=]/,\\n    punctuation: /[{}(),;:]/\\n  };\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"smali\",\"Prism\",\"languages\",\"comment\",\"string\",\"pattern\",\"greedy\",\"lookbehind\",\"inside\",\"namespace\",\"punctuation\",\"builtin\",\"keyword\",\"function\",\"field\",\"alias\",\"register\",\"boolean\",\"number\",\"label\",\"operator\",\"Object\",\"defineProperty\",\"value\",\"default\",\"displayName\",\"aliases\"]\n}\n"]