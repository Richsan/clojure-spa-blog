["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/micromark/lib/parse.js"],"~:js","shadow$provide.module$node_modules$micromark$lib$parse=function(global,require,module,exports){function _getRequireWildcardCache(nodeInterop){if(\"function\"!==typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.parse=function(options={}){function create(initial){return function(from){return(0,_createTokenizer.createTokenizer)(parser,\ninitial,from)}}const parser={defined:[],lazy:{},constructs:(0,_micromarkUtilCombineExtensions.combineExtensions)([defaultConstructs].concat(options.extensions||[])),content:create(_content.content),document:create(_document.document),flow:create(_flow.flow),string:create(_text.string),text:create(_text.text)};return parser};var _micromarkUtilCombineExtensions=require(\"module$node_modules$micromark_util_combine_extensions$index\"),_content=require(\"module$node_modules$micromark$lib$initialize$content\"),\n_document=require(\"module$node_modules$micromark$lib$initialize$document\"),_flow=require(\"module$node_modules$micromark$lib$initialize$flow\"),_text=require(\"module$node_modules$micromark$lib$initialize$text\"),_createTokenizer=require(\"module$node_modules$micromark$lib$create_tokenizer\"),defaultConstructs=function(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||\"object\"!==typeof obj&&\"function\"!==typeof obj)return{default:obj};if((nodeInterop=_getRequireWildcardCache(nodeInterop))&&\nnodeInterop.has(obj))return nodeInterop.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor,key;for(key in obj)if(\"default\"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj;nodeInterop&&nodeInterop.set(obj,newObj);return newObj}(require(\"module$node_modules$micromark$lib$constructs\"))}","~:source","shadow$provide[\"module$node_modules$micromark$lib$parse\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parse = parse;\n\nvar _micromarkUtilCombineExtensions = require(\"micromark-util-combine-extensions\");\n\nvar _content = require(\"./initialize/content.js\");\n\nvar _document = require(\"./initialize/document.js\");\n\nvar _flow = require(\"./initialize/flow.js\");\n\nvar _text = require(\"./initialize/text.js\");\n\nvar _createTokenizer = require(\"./create-tokenizer.js\");\n\nvar defaultConstructs = _interopRequireWildcard(require(\"./constructs.js\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Create} Create\n */\n\n/**\n * @param {ParseOptions} [options]\n * @returns {ParseContext}\n */\nfunction parse(options = {}) {\n  /** @type {FullNormalizedExtension} */\n  // @ts-expect-error `defaultConstructs` is full, so the result will be too.\n  const constructs = (0, _micromarkUtilCombineExtensions.combineExtensions)( // @ts-expect-error Same as above.\n  [defaultConstructs].concat(options.extensions || []));\n  /** @type {ParseContext} */\n\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(_content.content),\n    document: create(_document.document),\n    flow: create(_flow.flow),\n    string: create(_text.string),\n    text: create(_text.text)\n  };\n  return parser;\n  /**\n   * @param {InitialConstruct} initial\n   */\n\n  function create(initial) {\n    return creator;\n    /** @type {Create} */\n\n    function creator(from) {\n      return (0, _createTokenizer.createTokenizer)(parser, initial, from);\n    }\n  }\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$micromark$lib$constructs","~$module$node_modules$micromark$lib$create_tokenizer","~$module$node_modules$micromark$lib$initialize$document","~$module$node_modules$micromark$lib$initialize$flow","~$shadow.js","~$module$node_modules$micromark$lib$initialize$content","~$module$node_modules$micromark_util_combine_extensions$index","~$module$node_modules$micromark$lib$initialize$text"]],"~:properties",["^5",["string","__esModule","defined","document","value","text","content","parse","lazy","constructs","flow","default"]],"~:compiled-at",1676665867302,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$micromark$lib$parse.js\",\n\"lineCount\":4,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/micromark/lib/parse.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$micromark$lib$parse\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.parse = parse;\\n\\nvar _micromarkUtilCombineExtensions = require(\\\"micromark-util-combine-extensions\\\");\\n\\nvar _content = require(\\\"./initialize/content.js\\\");\\n\\nvar _document = require(\\\"./initialize/document.js\\\");\\n\\nvar _flow = require(\\\"./initialize/flow.js\\\");\\n\\nvar _text = require(\\\"./initialize/text.js\\\");\\n\\nvar _createTokenizer = require(\\\"./create-tokenizer.js\\\");\\n\\nvar defaultConstructs = _interopRequireWildcard(require(\\\"./constructs.js\\\"));\\n\\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \\\"function\\\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\\n\\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \\\"object\\\" && typeof obj !== \\\"function\\\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \\\"default\\\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\\n\\n/**\\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\\n * @typedef {import('micromark-util-types').Create} Create\\n */\\n\\n/**\\n * @param {ParseOptions} [options]\\n * @returns {ParseContext}\\n */\\nfunction parse(options = {}) {\\n  /** @type {FullNormalizedExtension} */\\n  // @ts-expect-error `defaultConstructs` is full, so the result will be too.\\n  const constructs = (0, _micromarkUtilCombineExtensions.combineExtensions)( // @ts-expect-error Same as above.\\n  [defaultConstructs].concat(options.extensions || []));\\n  /** @type {ParseContext} */\\n\\n  const parser = {\\n    defined: [],\\n    lazy: {},\\n    constructs,\\n    content: create(_content.content),\\n    document: create(_document.document),\\n    flow: create(_flow.flow),\\n    string: create(_text.string),\\n    text: create(_text.text)\\n  };\\n  return parser;\\n  /**\\n   * @param {InitialConstruct} initial\\n   */\\n\\n  function create(initial) {\\n    return creator;\\n    /** @type {Create} */\\n\\n    function creator(from) {\\n      return (0, _createTokenizer.createTokenizer)(parser, initial, from);\\n    }\\n  }\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_getRequireWildcardCache\",\"nodeInterop\",\"WeakMap\",\"cacheBabelInterop\",\"cacheNodeInterop\",\"Object\",\"defineProperty\",\"value\",\"parse\",\"options\",\"create\",\"initial\",\"creator\",\"from\",\"_createTokenizer\",\"createTokenizer\",\"parser\",\"defined\",\"lazy\",\"constructs\",\"_micromarkUtilCombineExtensions\",\"combineExtensions\",\"defaultConstructs\",\"concat\",\"extensions\",\"content\",\"_content\",\"document\",\"_document\",\"flow\",\"_flow\",\"string\",\"_text\",\"text\",\"_interopRequireWildcard\",\"obj\",\"__esModule\",\"default\",\"cache\",\"has\",\"get\",\"newObj\",\"hasPropertyDescriptor\",\"getOwnPropertyDescriptor\",\"key\",\"prototype\",\"hasOwnProperty\",\"call\",\"desc\",\"set\"]\n}\n"]