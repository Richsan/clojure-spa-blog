["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/vhdl.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$vhdl=function(global,require,module,exports){function vhdl(Prism){Prism.languages.vhdl={comment:/--.+/,\"vhdl-vectors\":{pattern:/\\b[oxb]\"[\\da-f_]+\"|\"[01uxzwlh-]+\"/i,alias:\"number\"},\"quoted-function\":{pattern:/\"\\S+?\"(?=\\()/,alias:\"function\"},string:/\"(?:[^\\\\\"\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"/,attribute:{pattern:/\\b'\\w+/,alias:\"attr-name\"},keyword:/\\b(?:access|after|alias|all|architecture|array|assert|attribute|begin|block|body|buffer|bus|case|component|configuration|constant|disconnect|downto|else|elsif|end|entity|exit|file|for|function|generate|generic|group|guarded|if|impure|in|inertial|inout|is|label|library|linkage|literal|loop|map|new|next|null|of|on|open|others|out|package|port|postponed|private|procedure|process|pure|range|record|register|reject|report|return|select|severity|shared|signal|subtype|then|to|transport|type|unaffected|units|until|use|variable|view|wait|when|while|with)\\b/i,\nboolean:/\\b(?:false|true)\\b/i,function:/\\w+(?=\\()/,number:/'[01uxzwlh-]'|\\b(?:\\d+#[\\da-f_.]+#|\\d[\\d_.]*)(?:e[-+]?\\d+)?/i,operator:/[<>]=?|:=|[-+*/&=]|\\b(?:abs|and|mod|nand|nor|not|or|rem|rol|ror|sla|sll|sra|srl|xnor|xor)\\b/i,punctuation:/[{}[\\];(),.:]/}}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=vhdl;vhdl.displayName=\"vhdl\";vhdl.aliases=[]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$vhdl\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = vhdl;\n// @ts-nocheck\nvhdl.displayName = 'vhdl';\nvhdl.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nfunction vhdl(Prism) {\n  Prism.languages.vhdl = {\n    comment: /--.+/,\n    // support for all logic vectors\n    'vhdl-vectors': {\n      pattern: /\\b[oxb]\"[\\da-f_]+\"|\"[01uxzwlh-]+\"/i,\n      alias: 'number'\n    },\n    // support for operator overloading included\n    'quoted-function': {\n      pattern: /\"\\S+?\"(?=\\()/,\n      alias: 'function'\n    },\n    string: /\"(?:[^\\\\\"\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"/,\n    attribute: {\n      pattern: /\\b'\\w+/,\n      alias: 'attr-name'\n    },\n    // support for predefined attributes included\n    keyword: /\\b(?:access|after|alias|all|architecture|array|assert|attribute|begin|block|body|buffer|bus|case|component|configuration|constant|disconnect|downto|else|elsif|end|entity|exit|file|for|function|generate|generic|group|guarded|if|impure|in|inertial|inout|is|label|library|linkage|literal|loop|map|new|next|null|of|on|open|others|out|package|port|postponed|private|procedure|process|pure|range|record|register|reject|report|return|select|severity|shared|signal|subtype|then|to|transport|type|unaffected|units|until|use|variable|view|wait|when|while|with)\\b/i,\n    boolean: /\\b(?:false|true)\\b/i,\n    function: /\\w+(?=\\()/,\n    // decimal, based, physical, and exponential numbers supported\n    number: /'[01uxzwlh-]'|\\b(?:\\d+#[\\da-f_.]+#|\\d[\\d_.]*)(?:e[-+]?\\d+)?/i,\n    operator: /[<>]=?|:=|[-+*/&=]|\\b(?:abs|and|mod|nand|nor|not|or|rem|rol|ror|sla|sll|sra|srl|xnor|xor)\\b/i,\n    punctuation: /[{}[\\];(),.:]/\n  };\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["boolean","punctuation","string","aliases","operator","displayName","__esModule","vhdl","attribute","value","keyword","number","function","pattern","alias","comment","default"]],"~:compiled-at",1676841365472,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$vhdl.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,uCAAA,CAA4D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAYpGC,QAASA,KAAI,CAACC,KAAD,CAAQ,CACnBA,KAAMC,CAAAA,SAAUF,CAAAA,IAAhB,CAAuB,CACrBG,QAAS,MADY,CAGrB,eAAgB,CACdC,QAAS,oCADK,CAEdC,MAAO,QAFO,CAHK,CAQrB,kBAAmB,CACjBD,QAAS,cADQ,CAEjBC,MAAO,UAFU,CARE,CAYrBC,OAAQ,qCAZa,CAarBC,UAAW,CACTH,QAAS,QADA,CAETC,MAAO,WAFE,CAbU,CAkBrBG,QAAS,2iBAlBY;AAmBrBC,QAAS,qBAnBY,CAoBrBC,SAAU,WApBW,CAsBrBC,OAAQ,8DAtBa,CAuBrBC,SAAU,8FAvBW,CAwBrBC,YAAa,eAxBQ,CADJ,CATrBC,MAAOC,CAAAA,cAAP,CAAsBhB,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CiB,MAAO,CAAA,CADoC,CAA7C,CAGAjB,QAAQkB,CAAAA,OAAR,CAAkBjB,IAElBA,KAAKkB,CAAAA,WAAL,CAAmB,MACnBlB,KAAKmB,CAAAA,OAAL,CAAe,EATqF;\",\n\"sources\":[\"node_modules/refractor/lang/vhdl.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$vhdl\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = vhdl;\\n// @ts-nocheck\\nvhdl.displayName = 'vhdl';\\nvhdl.aliases = [];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction vhdl(Prism) {\\n  Prism.languages.vhdl = {\\n    comment: /--.+/,\\n    // support for all logic vectors\\n    'vhdl-vectors': {\\n      pattern: /\\\\b[oxb]\\\"[\\\\da-f_]+\\\"|\\\"[01uxzwlh-]+\\\"/i,\\n      alias: 'number'\\n    },\\n    // support for operator overloading included\\n    'quoted-function': {\\n      pattern: /\\\"\\\\S+?\\\"(?=\\\\()/,\\n      alias: 'function'\\n    },\\n    string: /\\\"(?:[^\\\\\\\\\\\"\\\\r\\\\n]|\\\\\\\\(?:\\\\r\\\\n|[\\\\s\\\\S]))*\\\"/,\\n    attribute: {\\n      pattern: /\\\\b'\\\\w+/,\\n      alias: 'attr-name'\\n    },\\n    // support for predefined attributes included\\n    keyword: /\\\\b(?:access|after|alias|all|architecture|array|assert|attribute|begin|block|body|buffer|bus|case|component|configuration|constant|disconnect|downto|else|elsif|end|entity|exit|file|for|function|generate|generic|group|guarded|if|impure|in|inertial|inout|is|label|library|linkage|literal|loop|map|new|next|null|of|on|open|others|out|package|port|postponed|private|procedure|process|pure|range|record|register|reject|report|return|select|severity|shared|signal|subtype|then|to|transport|type|unaffected|units|until|use|variable|view|wait|when|while|with)\\\\b/i,\\n    boolean: /\\\\b(?:false|true)\\\\b/i,\\n    function: /\\\\w+(?=\\\\()/,\\n    // decimal, based, physical, and exponential numbers supported\\n    number: /'[01uxzwlh-]'|\\\\b(?:\\\\d+#[\\\\da-f_.]+#|\\\\d[\\\\d_.]*)(?:e[-+]?\\\\d+)?/i,\\n    operator: /[<>]=?|:=|[-+*/&=]|\\\\b(?:abs|and|mod|nand|nor|not|or|rem|rol|ror|sla|sll|sra|srl|xnor|xor)\\\\b/i,\\n    punctuation: /[{}[\\\\];(),.:]/\\n  };\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"vhdl\",\"Prism\",\"languages\",\"comment\",\"pattern\",\"alias\",\"string\",\"attribute\",\"keyword\",\"boolean\",\"function\",\"number\",\"operator\",\"punctuation\",\"Object\",\"defineProperty\",\"value\",\"default\",\"displayName\",\"aliases\"]\n}\n"]