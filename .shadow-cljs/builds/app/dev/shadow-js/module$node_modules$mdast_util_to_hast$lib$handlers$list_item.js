["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mdast-util-to-hast/lib/handlers/list-item.js"],"~:js","shadow$provide.module$node_modules$mdast_util_to_hast$lib$handlers$list_item=function(global,require,module,exports){function listItemLoose(node){const spread=node.spread;return void 0===spread||null===spread?1<node.children.length:spread}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.listItem=function(state,node,parent){var results=state.all(node);if(parent){var JSCompiler_temp=!1;if(\"list\"===parent.type){JSCompiler_temp=parent.spread||!1;parent=parent.children;for(var index=-1;!JSCompiler_temp&&\n++index<parent.length;)JSCompiler_temp=listItemLoose(parent[index])}}else JSCompiler_temp=listItemLoose(node);parent={};index=[];if(\"boolean\"===typeof node.checked){var head=results[0];head&&\"element\"===head.type&&\"p\"===head.tagName||(head={type:\"element\",tagName:\"p\",properties:{},children:[]},results.unshift(head));0<head.children.length&&head.children.unshift({type:\"text\",value:\" \"});head.children.unshift({type:\"element\",tagName:\"input\",properties:{type:\"checkbox\",checked:node.checked,disabled:!0},\nchildren:[]});parent.className=[\"task-list-item\"]}for(head=-1;++head<results.length;){const child=results[head];(JSCompiler_temp||0!==head||\"element\"!==child.type||\"p\"!==child.tagName)&&index.push({type:\"text\",value:\"\\n\"});\"element\"!==child.type||\"p\"!==child.tagName||JSCompiler_temp?index.push(child):index.push(...child.children)}(results=results[results.length-1])&&(JSCompiler_temp||\"element\"!==results.type||\"p\"!==results.tagName)&&index.push({type:\"text\",value:\"\\n\"});results={type:\"element\",tagName:\"li\",\nproperties:parent,children:index};state.patch(node,results);return state.applyData(node,results)}}","~:source","shadow$provide[\"module$node_modules$mdast_util_to_hast$lib$handlers$list_item\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.listItem = listItem;\n\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Parent>} Parents\n */\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | null | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nfunction listItem(state, node, parent) {\n  const results = state.all(node);\n  const loose = parent ? listLoose(parent) : listItemLoose(node);\n  /** @type {Properties} */\n\n  const properties = {};\n  /** @type {Array<ElementContent>} */\n\n  const children = [];\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0];\n    /** @type {Element} */\n\n    let paragraph;\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head;\n    } else {\n      paragraph = {\n        type: 'element',\n        tagName: 'p',\n        properties: {},\n        children: []\n      };\n      results.unshift(paragraph);\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({\n        type: 'text',\n        value: ' '\n      });\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {\n        type: 'checkbox',\n        checked: node.checked,\n        disabled: true\n      },\n      children: []\n    }); // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n\n    properties.className = ['task-list-item'];\n  }\n\n  let index = -1;\n\n  while (++index < results.length) {\n    const child = results[index]; // Add eols before nodes, except if this is a loose, first paragraph.\n\n    if (loose || index !== 0 || child.type !== 'element' || child.tagName !== 'p') {\n      children.push({\n        type: 'text',\n        value: '\\n'\n      });\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children);\n    } else {\n      children.push(child);\n    }\n  }\n\n  const tail = results[results.length - 1]; // Add a final eol.\n\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({\n      type: 'text',\n      value: '\\n'\n    });\n  }\n  /** @type {Element} */\n\n\n  const result = {\n    type: 'element',\n    tagName: 'li',\n    properties,\n    children\n  };\n  state.patch(node, result);\n  return state.applyData(node, result);\n}\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\n\n\nfunction listLoose(node) {\n  let loose = false;\n\n  if (node.type === 'list') {\n    loose = node.spread || false;\n    const children = node.children;\n    let index = -1;\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index]);\n    }\n  }\n\n  return loose;\n}\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\n\n\nfunction listItemLoose(node) {\n  const spread = node.spread;\n  return spread === undefined || spread === null ? node.children.length > 1 : spread;\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["properties","className","children","__esModule","value","listItem","type","tagName","disabled","checked"]],"~:compiled-at",1676665867314,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mdast_util_to_hast$lib$handlers$list_item.js\",\n\"lineCount\":4,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/mdast-util-to-hast/lib/handlers/list-item.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$mdast_util_to_hast$lib$handlers$list_item\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.listItem = listItem;\\n\\n/**\\n * @typedef {import('hast').Element} Element\\n * @typedef {import('hast').ElementContent} ElementContent\\n * @typedef {import('hast').Properties} Properties\\n * @typedef {import('mdast').Content} Content\\n * @typedef {import('mdast').ListItem} ListItem\\n * @typedef {import('mdast').Parent} Parent\\n * @typedef {import('mdast').Root} Root\\n * @typedef {import('../state.js').State} State\\n */\\n\\n/**\\n * @typedef {Root | Content} Nodes\\n * @typedef {Extract<Nodes, Parent>} Parents\\n */\\n\\n/**\\n * Turn an mdast `listItem` node into hast.\\n *\\n * @param {State} state\\n *   Info passed around.\\n * @param {ListItem} node\\n *   mdast node.\\n * @param {Parents | null | undefined} parent\\n *   Parent of `node`.\\n * @returns {Element}\\n *   hast node.\\n */\\nfunction listItem(state, node, parent) {\\n  const results = state.all(node);\\n  const loose = parent ? listLoose(parent) : listItemLoose(node);\\n  /** @type {Properties} */\\n\\n  const properties = {};\\n  /** @type {Array<ElementContent>} */\\n\\n  const children = [];\\n\\n  if (typeof node.checked === 'boolean') {\\n    const head = results[0];\\n    /** @type {Element} */\\n\\n    let paragraph;\\n\\n    if (head && head.type === 'element' && head.tagName === 'p') {\\n      paragraph = head;\\n    } else {\\n      paragraph = {\\n        type: 'element',\\n        tagName: 'p',\\n        properties: {},\\n        children: []\\n      };\\n      results.unshift(paragraph);\\n    }\\n\\n    if (paragraph.children.length > 0) {\\n      paragraph.children.unshift({\\n        type: 'text',\\n        value: ' '\\n      });\\n    }\\n\\n    paragraph.children.unshift({\\n      type: 'element',\\n      tagName: 'input',\\n      properties: {\\n        type: 'checkbox',\\n        checked: node.checked,\\n        disabled: true\\n      },\\n      children: []\\n    }); // According to github-markdown-css, this class hides bullet.\\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\\n\\n    properties.className = ['task-list-item'];\\n  }\\n\\n  let index = -1;\\n\\n  while (++index < results.length) {\\n    const child = results[index]; // Add eols before nodes, except if this is a loose, first paragraph.\\n\\n    if (loose || index !== 0 || child.type !== 'element' || child.tagName !== 'p') {\\n      children.push({\\n        type: 'text',\\n        value: '\\\\n'\\n      });\\n    }\\n\\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\\n      children.push(...child.children);\\n    } else {\\n      children.push(child);\\n    }\\n  }\\n\\n  const tail = results[results.length - 1]; // Add a final eol.\\n\\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\\n    children.push({\\n      type: 'text',\\n      value: '\\\\n'\\n    });\\n  }\\n  /** @type {Element} */\\n\\n\\n  const result = {\\n    type: 'element',\\n    tagName: 'li',\\n    properties,\\n    children\\n  };\\n  state.patch(node, result);\\n  return state.applyData(node, result);\\n}\\n/**\\n * @param {Parents} node\\n * @return {Boolean}\\n */\\n\\n\\nfunction listLoose(node) {\\n  let loose = false;\\n\\n  if (node.type === 'list') {\\n    loose = node.spread || false;\\n    const children = node.children;\\n    let index = -1;\\n\\n    while (!loose && ++index < children.length) {\\n      loose = listItemLoose(children[index]);\\n    }\\n  }\\n\\n  return loose;\\n}\\n/**\\n * @param {ListItem} node\\n * @return {Boolean}\\n */\\n\\n\\nfunction listItemLoose(node) {\\n  const spread = node.spread;\\n  return spread === undefined || spread === null ? node.children.length > 1 : spread;\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"listItemLoose\",\"node\",\"spread\",\"undefined\",\"children\",\"length\",\"Object\",\"defineProperty\",\"value\",\"listItem\",\"state\",\"parent\",\"results\",\"all\",\"loose\",\"type\",\"index\",\"properties\",\"checked\",\"head\",\"tagName\",\"paragraph\",\"unshift\",\"disabled\",\"className\",\"child\",\"push\",\"tail\",\"result\",\"patch\",\"applyData\"]\n}\n"]