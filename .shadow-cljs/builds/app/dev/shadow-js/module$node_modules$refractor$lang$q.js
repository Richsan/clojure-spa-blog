["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/q.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$q=function(global,require,module,exports){function q(Prism){Prism.languages.q={string:/\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,comment:[{pattern:/([\\t )\\]}])\\/.*/,lookbehind:!0,greedy:!0},{pattern:/(^|\\r?\\n|\\r)\\/[\\t ]*(?:(?:\\r?\\n|\\r)(?:.*(?:\\r?\\n|\\r(?!\\n)))*?(?:\\\\(?=[\\t ]*(?:\\r?\\n|\\r))|$)|\\S.*)/,lookbehind:!0,greedy:!0},{pattern:/^\\\\[\\t ]*(?:\\r?\\n|\\r)[\\s\\S]+/m,greedy:!0},{pattern:/^#!.+/m,greedy:!0}],symbol:/`(?::\\S+|[\\w.]*)/,datetime:{pattern:/0N[mdzuvt]|0W[dtz]|\\d{4}\\.\\d\\d(?:m|\\.\\d\\d(?:T(?:\\d\\d(?::\\d\\d(?::\\d\\d(?:[.:]\\d\\d\\d)?)?)?)?)?[dz]?)|\\d\\d:\\d\\d(?::\\d\\d(?:[.:]\\d\\d\\d)?)?[uvt]?/,\nalias:\"number\"},number:/\\b(?![01]:)(?:0N[hje]?|0W[hj]?|0[wn]|0x[\\da-fA-F]+|\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?[hjfeb]?)/,keyword:/\\\\\\w+\\b|\\b(?:abs|acos|aj0?|all|and|any|asc|asin|asof|atan|attr|avgs?|binr?|by|ceiling|cols|cor|cos|count|cov|cross|csv|cut|delete|deltas|desc|dev|differ|distinct|div|do|dsave|ej|enlist|eval|except|exec|exit|exp|fby|fills|first|fkeys|flip|floor|from|get|getenv|group|gtime|hclose|hcount|hdel|hopen|hsym|iasc|identity|idesc|if|ij|in|insert|inter|inv|keys?|last|like|list|ljf?|load|log|lower|lsq|ltime|ltrim|mavg|maxs?|mcount|md5|mdev|med|meta|mins?|mmax|mmin|mmu|mod|msum|neg|next|not|null|or|over|parse|peach|pj|plist|prds?|prev|prior|rand|rank|ratios|raze|read0|read1|reciprocal|reval|reverse|rload|rotate|rsave|rtrim|save|scan|scov|sdev|select|set|setenv|show|signum|sin|sqrt|ssr?|string|sublist|sums?|sv|svar|system|tables|tan|til|trim|txf|type|uj|ungroup|union|update|upper|upsert|value|var|views?|vs|wavg|where|while|within|wj1?|wsum|ww|xasc|xbar|xcols?|xdesc|xexp|xgroup|xkey|xlog|xprev|xrank)\\b/,\nadverb:{pattern:/['\\/\\\\]:?|\\beach\\b/,alias:\"function\"},verb:{pattern:/(?:\\B\\.\\B|\\b[01]:|<[=>]?|>=?|[:+\\-*%,!?~=|$&#@^]):?|\\b_\\b:?/,alias:\"operator\"},punctuation:/[(){}\\[\\];.]/}}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=q;q.displayName=\"q\";q.aliases=[]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$q\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = q;\n// @ts-nocheck\nq.displayName = 'q';\nq.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nfunction q(Prism) {\n  Prism.languages.q = {\n    string: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n    comment: [// From http://code.kx.com/wiki/Reference/Slash:\n    // When / is following a space (or a right parenthesis, bracket, or brace), it is ignored with the rest of the line.\n    {\n      pattern: /([\\t )\\]}])\\/.*/,\n      lookbehind: true,\n      greedy: true\n    }, // From http://code.kx.com/wiki/Reference/Slash:\n    // A line which has / as its first character and contains at least one other non-whitespace character is a whole-line comment and is ignored entirely.\n    // A / on a line by itself begins a multiline comment which is terminated by the next \\ on a line by itself.\n    // If a / is not matched by a \\, the multiline comment is unterminated and continues to end of file.\n    // The / and \\ must be the first char on the line, but may be followed by any amount of whitespace.\n    {\n      pattern: /(^|\\r?\\n|\\r)\\/[\\t ]*(?:(?:\\r?\\n|\\r)(?:.*(?:\\r?\\n|\\r(?!\\n)))*?(?:\\\\(?=[\\t ]*(?:\\r?\\n|\\r))|$)|\\S.*)/,\n      lookbehind: true,\n      greedy: true\n    }, // From http://code.kx.com/wiki/Reference/Slash:\n    // A \\ on a line by itself with no preceding matching / will comment to end of file.\n    {\n      pattern: /^\\\\[\\t ]*(?:\\r?\\n|\\r)[\\s\\S]+/m,\n      greedy: true\n    }, {\n      pattern: /^#!.+/m,\n      greedy: true\n    }],\n    symbol: /`(?::\\S+|[\\w.]*)/,\n    datetime: {\n      pattern: /0N[mdzuvt]|0W[dtz]|\\d{4}\\.\\d\\d(?:m|\\.\\d\\d(?:T(?:\\d\\d(?::\\d\\d(?::\\d\\d(?:[.:]\\d\\d\\d)?)?)?)?)?[dz]?)|\\d\\d:\\d\\d(?::\\d\\d(?:[.:]\\d\\d\\d)?)?[uvt]?/,\n      alias: 'number'\n    },\n    // The negative look-ahead prevents bad highlighting\n    // of verbs 0: and 1:\n    number: /\\b(?![01]:)(?:0N[hje]?|0W[hj]?|0[wn]|0x[\\da-fA-F]+|\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?[hjfeb]?)/,\n    keyword: /\\\\\\w+\\b|\\b(?:abs|acos|aj0?|all|and|any|asc|asin|asof|atan|attr|avgs?|binr?|by|ceiling|cols|cor|cos|count|cov|cross|csv|cut|delete|deltas|desc|dev|differ|distinct|div|do|dsave|ej|enlist|eval|except|exec|exit|exp|fby|fills|first|fkeys|flip|floor|from|get|getenv|group|gtime|hclose|hcount|hdel|hopen|hsym|iasc|identity|idesc|if|ij|in|insert|inter|inv|keys?|last|like|list|ljf?|load|log|lower|lsq|ltime|ltrim|mavg|maxs?|mcount|md5|mdev|med|meta|mins?|mmax|mmin|mmu|mod|msum|neg|next|not|null|or|over|parse|peach|pj|plist|prds?|prev|prior|rand|rank|ratios|raze|read0|read1|reciprocal|reval|reverse|rload|rotate|rsave|rtrim|save|scan|scov|sdev|select|set|setenv|show|signum|sin|sqrt|ssr?|string|sublist|sums?|sv|svar|system|tables|tan|til|trim|txf|type|uj|ungroup|union|update|upper|upsert|value|var|views?|vs|wavg|where|while|within|wj1?|wsum|ww|xasc|xbar|xcols?|xdesc|xexp|xgroup|xkey|xlog|xprev|xrank)\\b/,\n    adverb: {\n      pattern: /['\\/\\\\]:?|\\beach\\b/,\n      alias: 'function'\n    },\n    verb: {\n      pattern: /(?:\\B\\.\\B|\\b[01]:|<[=>]?|>=?|[:+\\-*%,!?~=|$&#@^]):?|\\b_\\b:?/,\n      alias: 'operator'\n    },\n    punctuation: /[(){}\\[\\];.]/\n  };\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["punctuation","string","aliases","q","displayName","adverb","__esModule","verb","lookbehind","value","keyword","number","greedy","symbol","datetime","pattern","alias","comment","default"]],"~:compiled-at",1676841365452,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$q.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,CAAA,oCAAA,CAAyD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAYjGC,QAASA,EAAC,CAACC,KAAD,CAAQ,CAChBA,KAAMC,CAAAA,SAAUF,CAAAA,CAAhB,CAAoB,CAClBG,OAAQ,uBADU,CAElBC,QAAS,CAET,CACEC,QAAS,iBADX,CAEEC,WAAY,CAAA,CAFd,CAGEC,OAAQ,CAAA,CAHV,CAFS,CAWT,CACEF,QAAS,mGADX,CAEEC,WAAY,CAAA,CAFd,CAGEC,OAAQ,CAAA,CAHV,CAXS,CAiBT,CACEF,QAAS,+BADX,CAEEE,OAAQ,CAAA,CAFV,CAjBS,CAoBN,CACDF,QAAS,QADR,CAEDE,OAAQ,CAAA,CAFP,CApBM,CAFS,CA0BlBC,OAAQ,kBA1BU,CA2BlBC,SAAU,CACRJ,QAAS,4IADD;AAERK,MAAO,QAFC,CA3BQ,CAiClBC,OAAQ,yFAjCU,CAkClBC,QAAS,s4BAlCS;AAmClBC,OAAQ,CACNR,QAAS,oBADH,CAENK,MAAO,UAFD,CAnCU,CAuClBI,KAAM,CACJT,QAAS,6DADL,CAEJK,MAAO,UAFH,CAvCY,CA2ClBK,YAAa,cA3CK,CADJ,CATlBC,MAAOC,CAAAA,cAAP,CAAsBlB,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CmB,MAAO,CAAA,CADoC,CAA7C,CAGAnB,QAAQoB,CAAAA,OAAR,CAAkBnB,CAElBA,EAAEoB,CAAAA,WAAF,CAAgB,GAChBpB,EAAEqB,CAAAA,OAAF,CAAY,EATqF;\",\n\"sources\":[\"node_modules/refractor/lang/q.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$q\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = q;\\n// @ts-nocheck\\nq.displayName = 'q';\\nq.aliases = [];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction q(Prism) {\\n  Prism.languages.q = {\\n    string: /\\\"(?:\\\\\\\\.|[^\\\"\\\\\\\\\\\\r\\\\n])*\\\"/,\\n    comment: [// From http://code.kx.com/wiki/Reference/Slash:\\n    // When / is following a space (or a right parenthesis, bracket, or brace), it is ignored with the rest of the line.\\n    {\\n      pattern: /([\\\\t )\\\\]}])\\\\/.*/,\\n      lookbehind: true,\\n      greedy: true\\n    }, // From http://code.kx.com/wiki/Reference/Slash:\\n    // A line which has / as its first character and contains at least one other non-whitespace character is a whole-line comment and is ignored entirely.\\n    // A / on a line by itself begins a multiline comment which is terminated by the next \\\\ on a line by itself.\\n    // If a / is not matched by a \\\\, the multiline comment is unterminated and continues to end of file.\\n    // The / and \\\\ must be the first char on the line, but may be followed by any amount of whitespace.\\n    {\\n      pattern: /(^|\\\\r?\\\\n|\\\\r)\\\\/[\\\\t ]*(?:(?:\\\\r?\\\\n|\\\\r)(?:.*(?:\\\\r?\\\\n|\\\\r(?!\\\\n)))*?(?:\\\\\\\\(?=[\\\\t ]*(?:\\\\r?\\\\n|\\\\r))|$)|\\\\S.*)/,\\n      lookbehind: true,\\n      greedy: true\\n    }, // From http://code.kx.com/wiki/Reference/Slash:\\n    // A \\\\ on a line by itself with no preceding matching / will comment to end of file.\\n    {\\n      pattern: /^\\\\\\\\[\\\\t ]*(?:\\\\r?\\\\n|\\\\r)[\\\\s\\\\S]+/m,\\n      greedy: true\\n    }, {\\n      pattern: /^#!.+/m,\\n      greedy: true\\n    }],\\n    symbol: /`(?::\\\\S+|[\\\\w.]*)/,\\n    datetime: {\\n      pattern: /0N[mdzuvt]|0W[dtz]|\\\\d{4}\\\\.\\\\d\\\\d(?:m|\\\\.\\\\d\\\\d(?:T(?:\\\\d\\\\d(?::\\\\d\\\\d(?::\\\\d\\\\d(?:[.:]\\\\d\\\\d\\\\d)?)?)?)?)?[dz]?)|\\\\d\\\\d:\\\\d\\\\d(?::\\\\d\\\\d(?:[.:]\\\\d\\\\d\\\\d)?)?[uvt]?/,\\n      alias: 'number'\\n    },\\n    // The negative look-ahead prevents bad highlighting\\n    // of verbs 0: and 1:\\n    number: /\\\\b(?![01]:)(?:0N[hje]?|0W[hj]?|0[wn]|0x[\\\\da-fA-F]+|\\\\d+(?:\\\\.\\\\d*)?(?:e[+-]?\\\\d+)?[hjfeb]?)/,\\n    keyword: /\\\\\\\\\\\\w+\\\\b|\\\\b(?:abs|acos|aj0?|all|and|any|asc|asin|asof|atan|attr|avgs?|binr?|by|ceiling|cols|cor|cos|count|cov|cross|csv|cut|delete|deltas|desc|dev|differ|distinct|div|do|dsave|ej|enlist|eval|except|exec|exit|exp|fby|fills|first|fkeys|flip|floor|from|get|getenv|group|gtime|hclose|hcount|hdel|hopen|hsym|iasc|identity|idesc|if|ij|in|insert|inter|inv|keys?|last|like|list|ljf?|load|log|lower|lsq|ltime|ltrim|mavg|maxs?|mcount|md5|mdev|med|meta|mins?|mmax|mmin|mmu|mod|msum|neg|next|not|null|or|over|parse|peach|pj|plist|prds?|prev|prior|rand|rank|ratios|raze|read0|read1|reciprocal|reval|reverse|rload|rotate|rsave|rtrim|save|scan|scov|sdev|select|set|setenv|show|signum|sin|sqrt|ssr?|string|sublist|sums?|sv|svar|system|tables|tan|til|trim|txf|type|uj|ungroup|union|update|upper|upsert|value|var|views?|vs|wavg|where|while|within|wj1?|wsum|ww|xasc|xbar|xcols?|xdesc|xexp|xgroup|xkey|xlog|xprev|xrank)\\\\b/,\\n    adverb: {\\n      pattern: /['\\\\/\\\\\\\\]:?|\\\\beach\\\\b/,\\n      alias: 'function'\\n    },\\n    verb: {\\n      pattern: /(?:\\\\B\\\\.\\\\B|\\\\b[01]:|<[=>]?|>=?|[:+\\\\-*%,!?~=|$&#@^]):?|\\\\b_\\\\b:?/,\\n      alias: 'operator'\\n    },\\n    punctuation: /[(){}\\\\[\\\\];.]/\\n  };\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"q\",\"Prism\",\"languages\",\"string\",\"comment\",\"pattern\",\"lookbehind\",\"greedy\",\"symbol\",\"datetime\",\"alias\",\"number\",\"keyword\",\"adverb\",\"verb\",\"punctuation\",\"Object\",\"defineProperty\",\"value\",\"default\",\"displayName\",\"aliases\"]\n}\n"]