["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/tremor.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$tremor=function(global,require,module,exports){function tremor(Prism){Prism.languages.tremor={comment:{pattern:/(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,lookbehind:!0},\"interpolated-string\":null,extractor:{pattern:/\\b[a-z_]\\w*\\|(?:[^\\r\\n\\\\|]|\\\\(?:\\r\\n|[\\s\\S]))*\\|/i,greedy:!0,inside:{regex:{pattern:/(^re)\\|[\\s\\S]+/,lookbehind:!0},function:/^\\w+/,value:/\\|[\\s\\S]+/}},identifier:{pattern:/`[^`]*`/,greedy:!0},function:/\\b[a-z_]\\w*(?=\\s*(?:::\\s*<|\\())\\b/,\nkeyword:/\\b(?:args|as|by|case|config|connect|connector|const|copy|create|default|define|deploy|drop|each|emit|end|erase|event|flow|fn|for|from|group|having|insert|into|intrinsic|let|links|match|merge|mod|move|of|operator|patch|pipeline|recur|script|select|set|sliding|state|stream|to|tumbling|update|use|when|where|window|with)\\b/,boolean:/\\b(?:false|null|true)\\b/i,number:/\\b(?:0b[01_]*|0x[0-9a-fA-F_]*|\\d[\\d_]*(?:\\.\\d[\\d_]*)?(?:[Ee][+-]?[\\d_]+)?)\\b/,\"pattern-punctuation\":{pattern:/%(?=[({[])/,alias:\"punctuation\"},\noperator:/[-+*\\/%~!^]=?|=[=>]?|&[&=]?|\\|[|=]?|<<?=?|>>?>?=?|(?:absent|and|not|or|present|xor)\\b/,punctuation:/::|[;\\[\\]()\\{\\},.:]/};var interpolationPattern=/#\\{(?:[^\"{}]|\\{[^{}]*\\}|\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\")*\\}/.source;Prism.languages.tremor[\"interpolated-string\"]={pattern:RegExp(/(^|[^\\\\])/.source+'(?:\"\"\"(?:'+/[^\"\\\\#]|\\\\[\\s\\S]|\"(?!\"\")|#(?!\\{)/.source+\"|\"+interpolationPattern+')*\"\"\"|\"(?:'+/[^\"\\\\\\r\\n#]|\\\\(?:\\r\\n|[\\s\\S])|#(?!\\{)/.source+\"|\"+interpolationPattern+')*\")'),lookbehind:!0,greedy:!0,\ninside:{interpolation:{pattern:RegExp(interpolationPattern),inside:{punctuation:/^#\\{|\\}$/,expression:{pattern:/[\\s\\S]+/,inside:Prism.languages.tremor}}},string:/[\\s\\S]+/}};Prism.languages.troy=Prism.languages.tremor;Prism.languages.trickle=Prism.languages.tremor}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=tremor;tremor.displayName=\"tremor\";tremor.aliases=[\"trickle\",\"troy\"]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$tremor\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = tremor;\n// @ts-nocheck\ntremor.displayName = 'tremor';\ntremor.aliases = ['trickle', 'troy'];\n/** @type {import('../core.js').Syntax} */\n\nfunction tremor(Prism) {\n  ;\n\n  (function (Prism) {\n    Prism.languages.tremor = {\n      comment: {\n        pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n        lookbehind: true\n      },\n      'interpolated-string': null,\n      // see below\n      extractor: {\n        pattern: /\\b[a-z_]\\w*\\|(?:[^\\r\\n\\\\|]|\\\\(?:\\r\\n|[\\s\\S]))*\\|/i,\n        greedy: true,\n        inside: {\n          regex: {\n            pattern: /(^re)\\|[\\s\\S]+/,\n            lookbehind: true\n          },\n          function: /^\\w+/,\n          value: /\\|[\\s\\S]+/\n        }\n      },\n      identifier: {\n        pattern: /`[^`]*`/,\n        greedy: true\n      },\n      function: /\\b[a-z_]\\w*(?=\\s*(?:::\\s*<|\\())\\b/,\n      keyword: /\\b(?:args|as|by|case|config|connect|connector|const|copy|create|default|define|deploy|drop|each|emit|end|erase|event|flow|fn|for|from|group|having|insert|into|intrinsic|let|links|match|merge|mod|move|of|operator|patch|pipeline|recur|script|select|set|sliding|state|stream|to|tumbling|update|use|when|where|window|with)\\b/,\n      boolean: /\\b(?:false|null|true)\\b/i,\n      number: /\\b(?:0b[01_]*|0x[0-9a-fA-F_]*|\\d[\\d_]*(?:\\.\\d[\\d_]*)?(?:[Ee][+-]?[\\d_]+)?)\\b/,\n      'pattern-punctuation': {\n        pattern: /%(?=[({[])/,\n        alias: 'punctuation'\n      },\n      operator: /[-+*\\/%~!^]=?|=[=>]?|&[&=]?|\\|[|=]?|<<?=?|>>?>?=?|(?:absent|and|not|or|present|xor)\\b/,\n      punctuation: /::|[;\\[\\]()\\{\\},.:]/\n    };\n    var interpolationPattern = /#\\{(?:[^\"{}]|\\{[^{}]*\\}|\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\")*\\}/.source;\n    Prism.languages.tremor['interpolated-string'] = {\n      pattern: RegExp(/(^|[^\\\\])/.source + '(?:' + '\"\"\"(?:' + /[^\"\\\\#]|\\\\[\\s\\S]|\"(?!\"\")|#(?!\\{)/.source + '|' + interpolationPattern + ')*\"\"\"' + '|' + '\"(?:' + /[^\"\\\\\\r\\n#]|\\\\(?:\\r\\n|[\\s\\S])|#(?!\\{)/.source + '|' + interpolationPattern + ')*\"' + ')'),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: RegExp(interpolationPattern),\n          inside: {\n            punctuation: /^#\\{|\\}$/,\n            expression: {\n              pattern: /[\\s\\S]+/,\n              inside: Prism.languages.tremor\n            }\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    };\n    Prism.languages.troy = Prism.languages['tremor'];\n    Prism.languages.trickle = Prism.languages['tremor'];\n  })(Prism);\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["boolean","punctuation","string","aliases","operator","displayName","__esModule","regex","expression","lookbehind","value","identifier","keyword","number","greedy","extractor","function","pattern","troy","inside","trickle","alias","comment","interpolation","default","tremor"]],"~:compiled-at",1676841365470,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$tremor.js\",\n\"lineCount\":4,\n\"mappings\":\"AAAAA,cAAA,CAAA,yCAAA,CAA8D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAYtGC,QAASA,OAAM,CAACC,KAAD,CAAQ,CA2DlBA,KAvDKC,CAAAA,SAAUF,CAAAA,MAAhB,CAAyB,CACvBG,QAAS,CACPC,QAAS,+CADF,CAEPC,WAAY,CAAA,CAFL,CADc,CAKvB,sBAAuB,IALA,CAOvBC,UAAW,CACTF,QAAS,mDADA,CAETG,OAAQ,CAAA,CAFC,CAGTC,OAAQ,CACNC,MAAO,CACLL,QAAS,gBADJ,CAELC,WAAY,CAAA,CAFP,CADD,CAKNK,SAAU,MALJ,CAMNC,MAAO,WAND,CAHC,CAPY,CAmBvBC,WAAY,CACVR,QAAS,SADC,CAEVG,OAAQ,CAAA,CAFE,CAnBW,CAuBvBG,SAAU,mCAvBa;AAwBvBG,QAAS,kUAxBc,CAyBvBC,QAAS,0BAzBc,CA0BvBC,OAAQ,8EA1Be,CA2BvB,sBAAuB,CACrBX,QAAS,YADY,CAErBY,MAAO,aAFc,CA3BA;AA+BvBC,SAAU,uFA/Ba,CAgCvBC,YAAa,qBAhCU,CAkCzB,KAAIC,qBAAuB,iEAAkEC,CAAAA,MAqB5FnB,MApBKC,CAAAA,SAAUF,CAAAA,MAAhB,CAAuB,qBAAvB,CAAA,CAAgD,CAC9CI,QAASiB,MAAA,CAAO,WAAYD,CAAAA,MAAnB,CAA4B,WAA5B,CAA+C,kCAAmCA,CAAAA,MAAlF,CAA2F,GAA3F,CAAiGD,oBAAjG,CAAwH,YAAxH,CAAiJ,uCAAwCC,CAAAA,MAAzL,CAAkM,GAAlM,CAAwMD,oBAAxM,CAA+N,MAA/N,CADqC,CAE9Cd,WAAY,CAAA,CAFkC,CAG9CE,OAAQ,CAAA,CAHsC;AAI9CC,OAAQ,CACNc,cAAe,CACblB,QAASiB,MAAA,CAAOF,oBAAP,CADI,CAEbX,OAAQ,CACNU,YAAa,UADP,CAENK,WAAY,CACVnB,QAAS,SADC,CAEVI,OASTP,KATuBC,CAAAA,SAAUF,CAAAA,MAFd,CAFN,CAFK,CADT,CAWNwB,OAAQ,SAXF,CAJsC,CAoB/CvB,MAFKC,CAAAA,SAAUuB,CAAAA,IAAhB,CAECxB,KAF4BC,CAAAA,SAAN,CAAA,MAEtBD,MADKC,CAAAA,SAAUwB,CAAAA,OAAhB,CACCzB,KAD+BC,CAAAA,SAAN,CAAA,MA1DP,CATvByB,MAAOC,CAAAA,cAAP,CAAsB7B,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CY,MAAO,CAAA,CADoC,CAA7C,CAGAZ,QAAQ8B,CAAAA,OAAR,CAAkB7B,MAElBA,OAAO8B,CAAAA,WAAP,CAAqB,QACrB9B,OAAO+B,CAAAA,OAAP,CAAiB,CAAC,SAAD,CAAY,MAAZ,CATqF;\",\n\"sources\":[\"node_modules/refractor/lang/tremor.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$tremor\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = tremor;\\n// @ts-nocheck\\ntremor.displayName = 'tremor';\\ntremor.aliases = ['trickle', 'troy'];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction tremor(Prism) {\\n  ;\\n\\n  (function (Prism) {\\n    Prism.languages.tremor = {\\n      comment: {\\n        pattern: /(^|[^\\\\\\\\])(?:\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/|(?:--|\\\\/\\\\/|#).*)/,\\n        lookbehind: true\\n      },\\n      'interpolated-string': null,\\n      // see below\\n      extractor: {\\n        pattern: /\\\\b[a-z_]\\\\w*\\\\|(?:[^\\\\r\\\\n\\\\\\\\|]|\\\\\\\\(?:\\\\r\\\\n|[\\\\s\\\\S]))*\\\\|/i,\\n        greedy: true,\\n        inside: {\\n          regex: {\\n            pattern: /(^re)\\\\|[\\\\s\\\\S]+/,\\n            lookbehind: true\\n          },\\n          function: /^\\\\w+/,\\n          value: /\\\\|[\\\\s\\\\S]+/\\n        }\\n      },\\n      identifier: {\\n        pattern: /`[^`]*`/,\\n        greedy: true\\n      },\\n      function: /\\\\b[a-z_]\\\\w*(?=\\\\s*(?:::\\\\s*<|\\\\())\\\\b/,\\n      keyword: /\\\\b(?:args|as|by|case|config|connect|connector|const|copy|create|default|define|deploy|drop|each|emit|end|erase|event|flow|fn|for|from|group|having|insert|into|intrinsic|let|links|match|merge|mod|move|of|operator|patch|pipeline|recur|script|select|set|sliding|state|stream|to|tumbling|update|use|when|where|window|with)\\\\b/,\\n      boolean: /\\\\b(?:false|null|true)\\\\b/i,\\n      number: /\\\\b(?:0b[01_]*|0x[0-9a-fA-F_]*|\\\\d[\\\\d_]*(?:\\\\.\\\\d[\\\\d_]*)?(?:[Ee][+-]?[\\\\d_]+)?)\\\\b/,\\n      'pattern-punctuation': {\\n        pattern: /%(?=[({[])/,\\n        alias: 'punctuation'\\n      },\\n      operator: /[-+*\\\\/%~!^]=?|=[=>]?|&[&=]?|\\\\|[|=]?|<<?=?|>>?>?=?|(?:absent|and|not|or|present|xor)\\\\b/,\\n      punctuation: /::|[;\\\\[\\\\]()\\\\{\\\\},.:]/\\n    };\\n    var interpolationPattern = /#\\\\{(?:[^\\\"{}]|\\\\{[^{}]*\\\\}|\\\"(?:[^\\\"\\\\\\\\\\\\r\\\\n]|\\\\\\\\(?:\\\\r\\\\n|[\\\\s\\\\S]))*\\\")*\\\\}/.source;\\n    Prism.languages.tremor['interpolated-string'] = {\\n      pattern: RegExp(/(^|[^\\\\\\\\])/.source + '(?:' + '\\\"\\\"\\\"(?:' + /[^\\\"\\\\\\\\#]|\\\\\\\\[\\\\s\\\\S]|\\\"(?!\\\"\\\")|#(?!\\\\{)/.source + '|' + interpolationPattern + ')*\\\"\\\"\\\"' + '|' + '\\\"(?:' + /[^\\\"\\\\\\\\\\\\r\\\\n#]|\\\\\\\\(?:\\\\r\\\\n|[\\\\s\\\\S])|#(?!\\\\{)/.source + '|' + interpolationPattern + ')*\\\"' + ')'),\\n      lookbehind: true,\\n      greedy: true,\\n      inside: {\\n        interpolation: {\\n          pattern: RegExp(interpolationPattern),\\n          inside: {\\n            punctuation: /^#\\\\{|\\\\}$/,\\n            expression: {\\n              pattern: /[\\\\s\\\\S]+/,\\n              inside: Prism.languages.tremor\\n            }\\n          }\\n        },\\n        string: /[\\\\s\\\\S]+/\\n      }\\n    };\\n    Prism.languages.troy = Prism.languages['tremor'];\\n    Prism.languages.trickle = Prism.languages['tremor'];\\n  })(Prism);\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"tremor\",\"Prism\",\"languages\",\"comment\",\"pattern\",\"lookbehind\",\"extractor\",\"greedy\",\"inside\",\"regex\",\"function\",\"value\",\"identifier\",\"keyword\",\"boolean\",\"number\",\"alias\",\"operator\",\"punctuation\",\"interpolationPattern\",\"source\",\"RegExp\",\"interpolation\",\"expression\",\"string\",\"troy\",\"trickle\",\"Object\",\"defineProperty\",\"default\",\"displayName\",\"aliases\"]\n}\n"]