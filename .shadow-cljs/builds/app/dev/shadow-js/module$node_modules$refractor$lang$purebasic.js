["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/purebasic.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$purebasic=function(global,require,module,exports){function purebasic(Prism){Prism.register(_clike.default);Prism.languages.purebasic=Prism.languages.extend(\"clike\",{comment:/;.*/,keyword:/\\b(?:align|and|as|break|calldebugger|case|compilercase|compilerdefault|compilerelse|compilerelseif|compilerendif|compilerendselect|compilererror|compilerif|compilerselect|continue|data|datasection|debug|debuglevel|declare|declarec|declarecdll|declaredll|declaremodule|default|define|dim|disableasm|disabledebugger|disableexplicit|else|elseif|enableasm|enabledebugger|enableexplicit|end|enddatasection|enddeclaremodule|endenumeration|endif|endimport|endinterface|endmacro|endmodule|endprocedure|endselect|endstructure|endstructureunion|endwith|enumeration|extends|fakereturn|for|foreach|forever|global|gosub|goto|if|import|importc|includebinary|includefile|includepath|interface|macro|module|newlist|newmap|next|not|or|procedure|procedurec|procedurecdll|proceduredll|procedurereturn|protected|prototype|prototypec|read|redim|repeat|restore|return|runtime|select|shared|static|step|structure|structureunion|swap|threaded|to|until|wend|while|with|xincludefile|xor)\\b/i,\nfunction:/\\b\\w+(?:\\.\\w+)?\\s*(?=\\()/,number:/(?:\\$[\\da-f]+|\\b-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:e[+-]?\\d+)?)\\b/i,operator:/(?:@\\*?|\\?|\\*)\\w+\\$?|-[>-]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|?\\||[~^%?*/@]/});Prism.languages.insertBefore(\"purebasic\",\"keyword\",{tag:/#\\w+\\$?/,asm:{pattern:/(^[\\t ]*)!.*/m,lookbehind:!0,alias:\"tag\",inside:{comment:/;.*/,string:{pattern:/([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,greedy:!0},\"label-reference-anonymous\":{pattern:/(!\\s*j[a-z]+\\s+)@[fb]/i,lookbehind:!0,alias:\"fasm-label\"},\"label-reference-addressed\":{pattern:/(!\\s*j[a-z]+\\s+)[A-Z._?$@][\\w.?$@~#]*/i,\nlookbehind:!0,alias:\"fasm-label\"},keyword:[/\\b(?:extern|global)\\b[^;\\r\\n]*/i,/\\b(?:CPU|DEFAULT|FLOAT)\\b.*/],function:{pattern:/^([\\t ]*!\\s*)[\\da-z]+(?=\\s|$)/im,lookbehind:!0},\"function-inline\":{pattern:/(:\\s*)[\\da-z]+(?=\\s)/i,lookbehind:!0,alias:\"function\"},label:{pattern:/^([\\t ]*!\\s*)[A-Za-z._?$@][\\w.?$@~#]*(?=:)/m,lookbehind:!0,alias:\"fasm-label\"},register:/\\b(?:st\\d|[xyz]mm\\d\\d?|[cdt]r\\d|r\\d\\d?[bwd]?|[er]?[abcd]x|[abcd][hl]|[er]?(?:bp|di|si|sp)|[cdefgs]s|mm\\d+)\\b/i,number:/(?:\\b|-|(?=\\$))(?:0[hx](?:[\\da-f]*\\.)?[\\da-f]+(?:p[+-]?\\d+)?|\\d[\\da-f]+[hx]|\\$\\d[\\da-f]*|0[oq][0-7]+|[0-7]+[oq]|0[by][01]+|[01]+[by]|0[dt]\\d+|(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:\\.?e[+-]?\\d+)?[dt]?)\\b/i,\noperator:/[\\[\\]*+\\-/%<>=&|$!,.:]/}}});delete Prism.languages.purebasic[\"class-name\"];delete Prism.languages.purebasic[\"boolean\"];Prism.languages.pbfasm=Prism.languages.purebasic}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=purebasic;var _clike=function(obj){return obj&&obj.__esModule?obj:{default:obj}}(require(\"module$node_modules$refractor$lang$clike\"));purebasic.displayName=\"purebasic\";purebasic.aliases=[\"pbfasm\"]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$purebasic\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = purebasic;\n\nvar _clike = _interopRequireDefault(require(\"./clike.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// @ts-nocheck\npurebasic.displayName = 'purebasic';\npurebasic.aliases = ['pbfasm'];\n/** @type {import('../core.js').Syntax} */\n\nfunction purebasic(Prism) {\n  Prism.register(_clike.default);\n  /*\n  Original Code by Bas Groothedde\n  !!MANY THANKS!! I never would have made this, regex and me will never be best friends ;)\n  ==> https://codepen.io/ImagineProgramming/details/JYydBy/\n  slightly changed to pass all tests\n  */\n  // PureBasic support, steal stuff from ansi-c\n\n  Prism.languages.purebasic = Prism.languages.extend('clike', {\n    comment: /;.*/,\n    keyword: /\\b(?:align|and|as|break|calldebugger|case|compilercase|compilerdefault|compilerelse|compilerelseif|compilerendif|compilerendselect|compilererror|compilerif|compilerselect|continue|data|datasection|debug|debuglevel|declare|declarec|declarecdll|declaredll|declaremodule|default|define|dim|disableasm|disabledebugger|disableexplicit|else|elseif|enableasm|enabledebugger|enableexplicit|end|enddatasection|enddeclaremodule|endenumeration|endif|endimport|endinterface|endmacro|endmodule|endprocedure|endselect|endstructure|endstructureunion|endwith|enumeration|extends|fakereturn|for|foreach|forever|global|gosub|goto|if|import|importc|includebinary|includefile|includepath|interface|macro|module|newlist|newmap|next|not|or|procedure|procedurec|procedurecdll|proceduredll|procedurereturn|protected|prototype|prototypec|read|redim|repeat|restore|return|runtime|select|shared|static|step|structure|structureunion|swap|threaded|to|until|wend|while|with|xincludefile|xor)\\b/i,\n    function: /\\b\\w+(?:\\.\\w+)?\\s*(?=\\()/,\n    number: /(?:\\$[\\da-f]+|\\b-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:e[+-]?\\d+)?)\\b/i,\n    operator: /(?:@\\*?|\\?|\\*)\\w+\\$?|-[>-]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|?\\||[~^%?*/@]/\n  });\n  Prism.languages.insertBefore('purebasic', 'keyword', {\n    tag: /#\\w+\\$?/,\n    asm: {\n      pattern: /(^[\\t ]*)!.*/m,\n      lookbehind: true,\n      alias: 'tag',\n      inside: {\n        comment: /;.*/,\n        string: {\n          pattern: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n          greedy: true\n        },\n        // Anonymous label references, i.e.: jmp @b\n        'label-reference-anonymous': {\n          pattern: /(!\\s*j[a-z]+\\s+)@[fb]/i,\n          lookbehind: true,\n          alias: 'fasm-label'\n        },\n        // Named label reference, i.e.: jne label1\n        'label-reference-addressed': {\n          pattern: /(!\\s*j[a-z]+\\s+)[A-Z._?$@][\\w.?$@~#]*/i,\n          lookbehind: true,\n          alias: 'fasm-label'\n        },\n        keyword: [/\\b(?:extern|global)\\b[^;\\r\\n]*/i, /\\b(?:CPU|DEFAULT|FLOAT)\\b.*/],\n        function: {\n          pattern: /^([\\t ]*!\\s*)[\\da-z]+(?=\\s|$)/im,\n          lookbehind: true\n        },\n        'function-inline': {\n          pattern: /(:\\s*)[\\da-z]+(?=\\s)/i,\n          lookbehind: true,\n          alias: 'function'\n        },\n        label: {\n          pattern: /^([\\t ]*!\\s*)[A-Za-z._?$@][\\w.?$@~#]*(?=:)/m,\n          lookbehind: true,\n          alias: 'fasm-label'\n        },\n        register: /\\b(?:st\\d|[xyz]mm\\d\\d?|[cdt]r\\d|r\\d\\d?[bwd]?|[er]?[abcd]x|[abcd][hl]|[er]?(?:bp|di|si|sp)|[cdefgs]s|mm\\d+)\\b/i,\n        number: /(?:\\b|-|(?=\\$))(?:0[hx](?:[\\da-f]*\\.)?[\\da-f]+(?:p[+-]?\\d+)?|\\d[\\da-f]+[hx]|\\$\\d[\\da-f]*|0[oq][0-7]+|[0-7]+[oq]|0[by][01]+|[01]+[by]|0[dt]\\d+|(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:\\.?e[+-]?\\d+)?[dt]?)\\b/i,\n        operator: /[\\[\\]*+\\-/%<>=&|$!,.:]/\n      }\n    }\n  });\n  delete Prism.languages.purebasic['class-name'];\n  delete Prism.languages.purebasic['boolean'];\n  Prism.languages.pbfasm = Prism.languages['purebasic'];\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$refractor$lang$clike"]],"~:properties",["^5",["string","aliases","operator","displayName","label","asm","__esModule","pbfasm","lookbehind","purebasic","tag","value","keyword","number","greedy","register","function","pattern","inside","alias","comment","default"]],"~:compiled-at",1676841365451,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$purebasic.js\",\n\"lineCount\":4,\n\"mappings\":\"AAAAA,cAAA,CAAA,4CAAA,CAAiE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAiBzGC,QAASA,UAAS,CAACC,KAAD,CAAQ,CACxBA,KAAMC,CAAAA,QAAN,CAAeC,MAAOC,CAAAA,OAAtB,CASAH,MAAMI,CAAAA,SAAUL,CAAAA,SAAhB,CAA4BC,KAAMI,CAAAA,SAAUC,CAAAA,MAAhB,CAAuB,OAAvB,CAAgC,CAC1DC,QAAS,KADiD,CAE1DC,QAAS,s8BAFiD;AAG1DC,SAAU,0BAHgD,CAI1DC,OAAQ,6DAJkD,CAK1DC,SAAU,2EALgD,CAAhC,CAO5BV,MAAMI,CAAAA,SAAUO,CAAAA,YAAhB,CAA6B,WAA7B,CAA0C,SAA1C,CAAqD,CACnDC,IAAK,SAD8C,CAEnDC,IAAK,CACHC,QAAS,eADN,CAEHC,WAAY,CAAA,CAFT,CAGHC,MAAO,KAHJ,CAIHC,OAAQ,CACNX,QAAS,KADH,CAENY,OAAQ,CACNJ,QAAS,mCADH,CAENK,OAAQ,CAAA,CAFF,CAFF,CAON,4BAA6B,CAC3BL,QAAS,wBADkB,CAE3BC,WAAY,CAAA,CAFe,CAG3BC,MAAO,YAHoB,CAPvB,CAaN,4BAA6B,CAC3BF,QAAS,wCADkB;AAE3BC,WAAY,CAAA,CAFe,CAG3BC,MAAO,YAHoB,CAbvB,CAkBNT,QAAS,CAAC,iCAAD,CAAoC,6BAApC,CAlBH,CAmBNC,SAAU,CACRM,QAAS,iCADD,CAERC,WAAY,CAAA,CAFJ,CAnBJ,CAuBN,kBAAmB,CACjBD,QAAS,uBADQ,CAEjBC,WAAY,CAAA,CAFK,CAGjBC,MAAO,UAHU,CAvBb,CA4BNI,MAAO,CACLN,QAAS,6CADJ,CAELC,WAAY,CAAA,CAFP,CAGLC,MAAO,YAHF,CA5BD,CAiCNf,SAAU,+GAjCJ,CAkCNQ,OAAQ,iMAlCF;AAmCNC,SAAU,wBAnCJ,CAJL,CAF8C,CAArD,CA6CA,QAAOV,KAAMI,CAAAA,SAAUL,CAAAA,SAAhB,CAA0B,YAA1B,CACP,QAAOC,KAAMI,CAAAA,SAAUL,CAAAA,SAAhB,CAA0B,SAA1B,CACPC,MAAMI,CAAAA,SAAUiB,CAAAA,MAAhB,CAAyBrB,KAAMI,CAAAA,SAAN,CAAA,SAhED,CAd1BkB,MAAOC,CAAAA,cAAP,CAAsBzB,OAAtB,CAA+B,YAA/B,CAA6C,CAC3C0B,MAAO,CAAA,CADoC,CAA7C,CAGA1B,QAAQK,CAAAA,OAAR,CAAkBJ,SAElB,KAAIG,OAEJuB,QAA+B,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAIC,CAAAA,UAAX,CAAwBD,GAAxB,CAA8B,CAAEvB,QAASuB,GAAX,CAAvC,CAFxB,CAAuB9B,OAAA,CAAQ,0CAAR,CAAvB,CAKbG,UAAU6B,CAAAA,WAAV,CAAwB,WACxB7B,UAAU8B,CAAAA,OAAV,CAAoB,CAAC,QAAD,CAdqF;\",\n\"sources\":[\"node_modules/refractor/lang/purebasic.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$purebasic\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = purebasic;\\n\\nvar _clike = _interopRequireDefault(require(\\\"./clike.js\\\"));\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\n// @ts-nocheck\\npurebasic.displayName = 'purebasic';\\npurebasic.aliases = ['pbfasm'];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction purebasic(Prism) {\\n  Prism.register(_clike.default);\\n  /*\\n  Original Code by Bas Groothedde\\n  !!MANY THANKS!! I never would have made this, regex and me will never be best friends ;)\\n  ==> https://codepen.io/ImagineProgramming/details/JYydBy/\\n  slightly changed to pass all tests\\n  */\\n  // PureBasic support, steal stuff from ansi-c\\n\\n  Prism.languages.purebasic = Prism.languages.extend('clike', {\\n    comment: /;.*/,\\n    keyword: /\\\\b(?:align|and|as|break|calldebugger|case|compilercase|compilerdefault|compilerelse|compilerelseif|compilerendif|compilerendselect|compilererror|compilerif|compilerselect|continue|data|datasection|debug|debuglevel|declare|declarec|declarecdll|declaredll|declaremodule|default|define|dim|disableasm|disabledebugger|disableexplicit|else|elseif|enableasm|enabledebugger|enableexplicit|end|enddatasection|enddeclaremodule|endenumeration|endif|endimport|endinterface|endmacro|endmodule|endprocedure|endselect|endstructure|endstructureunion|endwith|enumeration|extends|fakereturn|for|foreach|forever|global|gosub|goto|if|import|importc|includebinary|includefile|includepath|interface|macro|module|newlist|newmap|next|not|or|procedure|procedurec|procedurecdll|proceduredll|procedurereturn|protected|prototype|prototypec|read|redim|repeat|restore|return|runtime|select|shared|static|step|structure|structureunion|swap|threaded|to|until|wend|while|with|xincludefile|xor)\\\\b/i,\\n    function: /\\\\b\\\\w+(?:\\\\.\\\\w+)?\\\\s*(?=\\\\()/,\\n    number: /(?:\\\\$[\\\\da-f]+|\\\\b-?(?:\\\\d+(?:\\\\.\\\\d+)?|\\\\.\\\\d+)(?:e[+-]?\\\\d+)?)\\\\b/i,\\n    operator: /(?:@\\\\*?|\\\\?|\\\\*)\\\\w+\\\\$?|-[>-]?|\\\\+\\\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\\\|?\\\\||[~^%?*/@]/\\n  });\\n  Prism.languages.insertBefore('purebasic', 'keyword', {\\n    tag: /#\\\\w+\\\\$?/,\\n    asm: {\\n      pattern: /(^[\\\\t ]*)!.*/m,\\n      lookbehind: true,\\n      alias: 'tag',\\n      inside: {\\n        comment: /;.*/,\\n        string: {\\n          pattern: /([\\\"'`])(?:\\\\\\\\.|(?!\\\\1)[^\\\\\\\\\\\\r\\\\n])*\\\\1/,\\n          greedy: true\\n        },\\n        // Anonymous label references, i.e.: jmp @b\\n        'label-reference-anonymous': {\\n          pattern: /(!\\\\s*j[a-z]+\\\\s+)@[fb]/i,\\n          lookbehind: true,\\n          alias: 'fasm-label'\\n        },\\n        // Named label reference, i.e.: jne label1\\n        'label-reference-addressed': {\\n          pattern: /(!\\\\s*j[a-z]+\\\\s+)[A-Z._?$@][\\\\w.?$@~#]*/i,\\n          lookbehind: true,\\n          alias: 'fasm-label'\\n        },\\n        keyword: [/\\\\b(?:extern|global)\\\\b[^;\\\\r\\\\n]*/i, /\\\\b(?:CPU|DEFAULT|FLOAT)\\\\b.*/],\\n        function: {\\n          pattern: /^([\\\\t ]*!\\\\s*)[\\\\da-z]+(?=\\\\s|$)/im,\\n          lookbehind: true\\n        },\\n        'function-inline': {\\n          pattern: /(:\\\\s*)[\\\\da-z]+(?=\\\\s)/i,\\n          lookbehind: true,\\n          alias: 'function'\\n        },\\n        label: {\\n          pattern: /^([\\\\t ]*!\\\\s*)[A-Za-z._?$@][\\\\w.?$@~#]*(?=:)/m,\\n          lookbehind: true,\\n          alias: 'fasm-label'\\n        },\\n        register: /\\\\b(?:st\\\\d|[xyz]mm\\\\d\\\\d?|[cdt]r\\\\d|r\\\\d\\\\d?[bwd]?|[er]?[abcd]x|[abcd][hl]|[er]?(?:bp|di|si|sp)|[cdefgs]s|mm\\\\d+)\\\\b/i,\\n        number: /(?:\\\\b|-|(?=\\\\$))(?:0[hx](?:[\\\\da-f]*\\\\.)?[\\\\da-f]+(?:p[+-]?\\\\d+)?|\\\\d[\\\\da-f]+[hx]|\\\\$\\\\d[\\\\da-f]*|0[oq][0-7]+|[0-7]+[oq]|0[by][01]+|[01]+[by]|0[dt]\\\\d+|(?:\\\\d+(?:\\\\.\\\\d+)?|\\\\.\\\\d+)(?:\\\\.?e[+-]?\\\\d+)?[dt]?)\\\\b/i,\\n        operator: /[\\\\[\\\\]*+\\\\-/%<>=&|$!,.:]/\\n      }\\n    }\\n  });\\n  delete Prism.languages.purebasic['class-name'];\\n  delete Prism.languages.purebasic['boolean'];\\n  Prism.languages.pbfasm = Prism.languages['purebasic'];\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"purebasic\",\"Prism\",\"register\",\"_clike\",\"default\",\"languages\",\"extend\",\"comment\",\"keyword\",\"function\",\"number\",\"operator\",\"insertBefore\",\"tag\",\"asm\",\"pattern\",\"lookbehind\",\"alias\",\"inside\",\"string\",\"greedy\",\"label\",\"pbfasm\",\"Object\",\"defineProperty\",\"value\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"displayName\",\"aliases\"]\n}\n"]