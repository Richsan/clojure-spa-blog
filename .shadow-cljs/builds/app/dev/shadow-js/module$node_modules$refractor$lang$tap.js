["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/tap.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$tap=function(global,require,module,exports){function tap(Prism){Prism.register(_yaml.default);Prism.languages.tap={fail:/not ok[^#{\\n\\r]*/,pass:/ok[^#{\\n\\r]*/,pragma:/pragma [+-][a-z]+/,bailout:/bail out!.*/i,version:/TAP version \\d+/i,plan:/\\b\\d+\\.\\.\\d+(?: +#.*)?/,subtest:{pattern:/# Subtest(?:: .*)?/,greedy:!0},punctuation:/[{}]/,directive:/#.*/,yamlish:{pattern:/(^[ \\t]*)---[\\s\\S]*?[\\r\\n][ \\t]*\\.\\.\\.$/m,lookbehind:!0,inside:Prism.languages.yaml,\nalias:\"language-yaml\"}}}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=tap;var _yaml=function(obj){return obj&&obj.__esModule?obj:{default:obj}}(require(\"module$node_modules$refractor$lang$yaml\"));tap.displayName=\"tap\";tap.aliases=[]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$tap\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = tap;\n\nvar _yaml = _interopRequireDefault(require(\"./yaml.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// @ts-nocheck\ntap.displayName = 'tap';\ntap.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nfunction tap(Prism) {\n  Prism.register(_yaml.default); // https://en.wikipedia.org/wiki/Test_Anything_Protocol\n\n  Prism.languages.tap = {\n    fail: /not ok[^#{\\n\\r]*/,\n    pass: /ok[^#{\\n\\r]*/,\n    pragma: /pragma [+-][a-z]+/,\n    bailout: /bail out!.*/i,\n    version: /TAP version \\d+/i,\n    plan: /\\b\\d+\\.\\.\\d+(?: +#.*)?/,\n    subtest: {\n      pattern: /# Subtest(?:: .*)?/,\n      greedy: true\n    },\n    punctuation: /[{}]/,\n    directive: /#.*/,\n    yamlish: {\n      pattern: /(^[ \\t]*)---[\\s\\S]*?[\\r\\n][ \\t]*\\.\\.\\.$/m,\n      lookbehind: true,\n      inside: Prism.languages.yaml,\n      alias: 'language-yaml'\n    }\n  };\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$refractor$lang$yaml","~$shadow.js"]],"~:properties",["^5",["punctuation","aliases","pass","directive","displayName","__esModule","bailout","lookbehind","yamlish","pragma","value","greedy","pattern","version","inside","plan","alias","tap","default","subtest","fail"]],"~:compiled-at",1676841365469,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$tap.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,sCAAA,CAA2D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAiBnGC,QAASA,IAAG,CAACC,KAAD,CAAQ,CAClBA,KAAMC,CAAAA,QAAN,CAAeC,KAAMC,CAAAA,OAArB,CAEAH,MAAMI,CAAAA,SAAUL,CAAAA,GAAhB,CAAsB,CACpBM,KAAM,kBADc,CAEpBC,KAAM,cAFc,CAGpBC,OAAQ,mBAHY,CAIpBC,QAAS,cAJW,CAKpBC,QAAS,kBALW,CAMpBC,KAAM,wBANc,CAOpBC,QAAS,CACPC,QAAS,oBADF,CAEPC,OAAQ,CAAA,CAFD,CAPW,CAWpBC,YAAa,MAXO,CAYpBC,UAAW,KAZS,CAapBC,QAAS,CACPJ,QAAS,0CADF,CAEPK,WAAY,CAAA,CAFL,CAGPC,OAAQlB,KAAMI,CAAAA,SAAUe,CAAAA,IAHjB;AAIPC,MAAO,eAJA,CAbW,CAHJ,CAdpBC,MAAOC,CAAAA,cAAP,CAAsBxB,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CyB,MAAO,CAAA,CADoC,CAA7C,CAGAzB,QAAQK,CAAAA,OAAR,CAAkBJ,GAElB,KAAIG,MAEJsB,QAA+B,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAIC,CAAAA,UAAX,CAAwBD,GAAxB,CAA8B,CAAEtB,QAASsB,GAAX,CAAvC,CAFzB,CAAuB7B,OAAA,CAAQ,yCAAR,CAAvB,CAKZG,IAAI4B,CAAAA,WAAJ,CAAkB,KAClB5B,IAAI6B,CAAAA,OAAJ,CAAc,EAdqF;\",\n\"sources\":[\"node_modules/refractor/lang/tap.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$tap\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = tap;\\n\\nvar _yaml = _interopRequireDefault(require(\\\"./yaml.js\\\"));\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\n// @ts-nocheck\\ntap.displayName = 'tap';\\ntap.aliases = [];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction tap(Prism) {\\n  Prism.register(_yaml.default); // https://en.wikipedia.org/wiki/Test_Anything_Protocol\\n\\n  Prism.languages.tap = {\\n    fail: /not ok[^#{\\\\n\\\\r]*/,\\n    pass: /ok[^#{\\\\n\\\\r]*/,\\n    pragma: /pragma [+-][a-z]+/,\\n    bailout: /bail out!.*/i,\\n    version: /TAP version \\\\d+/i,\\n    plan: /\\\\b\\\\d+\\\\.\\\\.\\\\d+(?: +#.*)?/,\\n    subtest: {\\n      pattern: /# Subtest(?:: .*)?/,\\n      greedy: true\\n    },\\n    punctuation: /[{}]/,\\n    directive: /#.*/,\\n    yamlish: {\\n      pattern: /(^[ \\\\t]*)---[\\\\s\\\\S]*?[\\\\r\\\\n][ \\\\t]*\\\\.\\\\.\\\\.$/m,\\n      lookbehind: true,\\n      inside: Prism.languages.yaml,\\n      alias: 'language-yaml'\\n    }\\n  };\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"tap\",\"Prism\",\"register\",\"_yaml\",\"default\",\"languages\",\"fail\",\"pass\",\"pragma\",\"bailout\",\"version\",\"plan\",\"subtest\",\"pattern\",\"greedy\",\"punctuation\",\"directive\",\"yamlish\",\"lookbehind\",\"inside\",\"yaml\",\"alias\",\"Object\",\"defineProperty\",\"value\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"displayName\",\"aliases\"]\n}\n"]