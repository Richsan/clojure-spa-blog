["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/micromark-core-commonmark/lib/html-text.js"],"~:js","shadow$provide.module$node_modules$micromark_core_commonmark$lib$html_text=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.htmlText=void 0;var _micromarkFactorySpace=require(\"module$node_modules$micromark_factory_space$index\"),_micromarkUtilCharacter=require(\"module$node_modules$micromark_util_character$index\");exports.htmlText={name:\"htmlText\",tokenize:function(effects,ok,nok){function open(code){return 33===code?(effects.consume(code),declarationOpen):\n47===code?(effects.consume(code),tagCloseStart):63===code?(effects.consume(code),instruction):(0,_micromarkUtilCharacter.asciiAlpha)(code)?(effects.consume(code),tagOpen):nok(code)}function declarationOpen(code){return 45===code?(effects.consume(code),commentOpen):91===code?(effects.consume(code),buffer=\"CDATA[\",index=0,cdataOpen):(0,_micromarkUtilCharacter.asciiAlpha)(code)?(effects.consume(code),declaration):nok(code)}function commentOpen(code){return 45===code?(effects.consume(code),commentStart):\nnok(code)}function commentStart(code){return null===code||62===code?nok(code):45===code?(effects.consume(code),commentStartDash):comment(code)}function commentStartDash(code){return null===code||62===code?nok(code):comment(code)}function comment(code){if(null===code)return nok(code);if(45===code)return effects.consume(code),commentClose;if((0,_micromarkUtilCharacter.markdownLineEnding)(code))return returnState=comment,atLineEnding(code);effects.consume(code);return comment}function commentClose(code){return 45===\ncode?(effects.consume(code),end):comment(code)}function cdataOpen(code){return code===buffer.charCodeAt(index++)?(effects.consume(code),index===buffer.length?cdata:cdataOpen):nok(code)}function cdata(code){if(null===code)return nok(code);if(93===code)return effects.consume(code),cdataClose;if((0,_micromarkUtilCharacter.markdownLineEnding)(code))return returnState=cdata,atLineEnding(code);effects.consume(code);return cdata}function cdataClose(code){return 93===code?(effects.consume(code),cdataEnd):\ncdata(code)}function cdataEnd(code){return 62===code?end(code):93===code?(effects.consume(code),cdataEnd):cdata(code)}function declaration(code){if(null===code||62===code)return end(code);if((0,_micromarkUtilCharacter.markdownLineEnding)(code))return returnState=declaration,atLineEnding(code);effects.consume(code);return declaration}function instruction(code){if(null===code)return nok(code);if(63===code)return effects.consume(code),instructionClose;if((0,_micromarkUtilCharacter.markdownLineEnding)(code))return returnState=\ninstruction,atLineEnding(code);effects.consume(code);return instruction}function instructionClose(code){return 62===code?end(code):instruction(code)}function tagCloseStart(code){return(0,_micromarkUtilCharacter.asciiAlpha)(code)?(effects.consume(code),tagClose):nok(code)}function tagClose(code){return 45===code||(0,_micromarkUtilCharacter.asciiAlphanumeric)(code)?(effects.consume(code),tagClose):tagCloseBetween(code)}function tagCloseBetween(code){return(0,_micromarkUtilCharacter.markdownLineEnding)(code)?\n(returnState=tagCloseBetween,atLineEnding(code)):(0,_micromarkUtilCharacter.markdownSpace)(code)?(effects.consume(code),tagCloseBetween):end(code)}function tagOpen(code){return 45===code||(0,_micromarkUtilCharacter.asciiAlphanumeric)(code)?(effects.consume(code),tagOpen):47===code||62===code||(0,_micromarkUtilCharacter.markdownLineEndingOrSpace)(code)?tagOpenBetween(code):nok(code)}function tagOpenBetween(code){return 47===code?(effects.consume(code),end):58===code||95===code||(0,_micromarkUtilCharacter.asciiAlpha)(code)?\n(effects.consume(code),tagOpenAttributeName):(0,_micromarkUtilCharacter.markdownLineEnding)(code)?(returnState=tagOpenBetween,atLineEnding(code)):(0,_micromarkUtilCharacter.markdownSpace)(code)?(effects.consume(code),tagOpenBetween):end(code)}function tagOpenAttributeName(code){return 45===code||46===code||58===code||95===code||(0,_micromarkUtilCharacter.asciiAlphanumeric)(code)?(effects.consume(code),tagOpenAttributeName):tagOpenAttributeNameAfter(code)}function tagOpenAttributeNameAfter(code){return 61===\ncode?(effects.consume(code),tagOpenAttributeValueBefore):(0,_micromarkUtilCharacter.markdownLineEnding)(code)?(returnState=tagOpenAttributeNameAfter,atLineEnding(code)):(0,_micromarkUtilCharacter.markdownSpace)(code)?(effects.consume(code),tagOpenAttributeNameAfter):tagOpenBetween(code)}function tagOpenAttributeValueBefore(code){if(null===code||60===code||61===code||62===code||96===code)return nok(code);if(34===code||39===code)return effects.consume(code),marker=code,tagOpenAttributeValueQuoted;if((0,_micromarkUtilCharacter.markdownLineEnding)(code))return returnState=\ntagOpenAttributeValueBefore,atLineEnding(code);if((0,_micromarkUtilCharacter.markdownSpace)(code))return effects.consume(code),tagOpenAttributeValueBefore;effects.consume(code);marker=void 0;return tagOpenAttributeValueUnquoted}function tagOpenAttributeValueQuoted(code){if(code===marker)return effects.consume(code),tagOpenAttributeValueQuotedAfter;if(null===code)return nok(code);if((0,_micromarkUtilCharacter.markdownLineEnding)(code))return returnState=tagOpenAttributeValueQuoted,atLineEnding(code);\neffects.consume(code);return tagOpenAttributeValueQuoted}function tagOpenAttributeValueQuotedAfter(code){return 62===code||47===code||(0,_micromarkUtilCharacter.markdownLineEndingOrSpace)(code)?tagOpenBetween(code):nok(code)}function tagOpenAttributeValueUnquoted(code){if(null===code||34===code||39===code||60===code||61===code||96===code)return nok(code);if(62===code||(0,_micromarkUtilCharacter.markdownLineEndingOrSpace)(code))return tagOpenBetween(code);effects.consume(code);return tagOpenAttributeValueUnquoted}\nfunction atLineEnding(code){effects.exit(\"htmlTextData\");effects.enter(\"lineEnding\");effects.consume(code);effects.exit(\"lineEnding\");return(0,_micromarkFactorySpace.factorySpace)(effects,afterPrefix,\"linePrefix\",self.parser.constructs.disable.null.includes(\"codeIndented\")?void 0:4)}function afterPrefix(code){effects.enter(\"htmlTextData\");return returnState(code)}function end(code){return 62===code?(effects.consume(code),effects.exit(\"htmlTextData\"),effects.exit(\"htmlText\"),ok):nok(code)}const self=\nthis;let marker,buffer,index,returnState;return function(code){effects.enter(\"htmlText\");effects.enter(\"htmlTextData\");effects.consume(code);return open}}}}","~:source","shadow$provide[\"module$node_modules$micromark_core_commonmark$lib$html_text\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.htmlText = void 0;\n\nvar _micromarkFactorySpace = require(\"micromark-factory-space\");\n\nvar _micromarkUtilCharacter = require(\"micromark-util-character\");\n\n/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/** @type {Construct} */\nconst htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n};\n/** @type {Tokenizer} */\n\nexports.htmlText = htmlText;\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this;\n  /** @type {NonNullable<Code>|undefined} */\n\n  let marker;\n  /** @type {string} */\n\n  let buffer;\n  /** @type {number} */\n\n  let index;\n  /** @type {State} */\n\n  let returnState;\n  return start;\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlText');\n    effects.enter('htmlTextData');\n    effects.consume(code);\n    return open;\n  }\n  /** @type {State} */\n\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code);\n      return declarationOpen;\n    }\n\n    if (code === 47) {\n      effects.consume(code);\n      return tagCloseStart;\n    }\n\n    if (code === 63) {\n      effects.consume(code);\n      return instruction;\n    }\n\n    if ((0, _micromarkUtilCharacter.asciiAlpha)(code)) {\n      effects.consume(code);\n      return tagOpen;\n    }\n\n    return nok(code);\n  }\n  /** @type {State} */\n\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentOpen;\n    }\n\n    if (code === 91) {\n      effects.consume(code);\n      buffer = 'CDATA[';\n      index = 0;\n      return cdataOpen;\n    }\n\n    if ((0, _micromarkUtilCharacter.asciiAlpha)(code)) {\n      effects.consume(code);\n      return declaration;\n    }\n\n    return nok(code);\n  }\n  /** @type {State} */\n\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentStart;\n    }\n\n    return nok(code);\n  }\n  /** @type {State} */\n\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code);\n    }\n\n    if (code === 45) {\n      effects.consume(code);\n      return commentStartDash;\n    }\n\n    return comment(code);\n  }\n  /** @type {State} */\n\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code);\n    }\n\n    return comment(code);\n  }\n  /** @type {State} */\n\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code);\n    }\n\n    if (code === 45) {\n      effects.consume(code);\n      return commentClose;\n    }\n\n    if ((0, _micromarkUtilCharacter.markdownLineEnding)(code)) {\n      returnState = comment;\n      return atLineEnding(code);\n    }\n\n    effects.consume(code);\n    return comment;\n  }\n  /** @type {State} */\n\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return end;\n    }\n\n    return comment(code);\n  }\n  /** @type {State} */\n\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code);\n      return index === buffer.length ? cdata : cdataOpen;\n    }\n\n    return nok(code);\n  }\n  /** @type {State} */\n\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code);\n    }\n\n    if (code === 93) {\n      effects.consume(code);\n      return cdataClose;\n    }\n\n    if ((0, _micromarkUtilCharacter.markdownLineEnding)(code)) {\n      returnState = cdata;\n      return atLineEnding(code);\n    }\n\n    effects.consume(code);\n    return cdata;\n  }\n  /** @type {State} */\n\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code);\n      return cdataEnd;\n    }\n\n    return cdata(code);\n  }\n  /** @type {State} */\n\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code);\n    }\n\n    if (code === 93) {\n      effects.consume(code);\n      return cdataEnd;\n    }\n\n    return cdata(code);\n  }\n  /** @type {State} */\n\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code);\n    }\n\n    if ((0, _micromarkUtilCharacter.markdownLineEnding)(code)) {\n      returnState = declaration;\n      return atLineEnding(code);\n    }\n\n    effects.consume(code);\n    return declaration;\n  }\n  /** @type {State} */\n\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code);\n    }\n\n    if (code === 63) {\n      effects.consume(code);\n      return instructionClose;\n    }\n\n    if ((0, _micromarkUtilCharacter.markdownLineEnding)(code)) {\n      returnState = instruction;\n      return atLineEnding(code);\n    }\n\n    effects.consume(code);\n    return instruction;\n  }\n  /** @type {State} */\n\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code);\n  }\n  /** @type {State} */\n\n\n  function tagCloseStart(code) {\n    if ((0, _micromarkUtilCharacter.asciiAlpha)(code)) {\n      effects.consume(code);\n      return tagClose;\n    }\n\n    return nok(code);\n  }\n  /** @type {State} */\n\n\n  function tagClose(code) {\n    if (code === 45 || (0, _micromarkUtilCharacter.asciiAlphanumeric)(code)) {\n      effects.consume(code);\n      return tagClose;\n    }\n\n    return tagCloseBetween(code);\n  }\n  /** @type {State} */\n\n\n  function tagCloseBetween(code) {\n    if ((0, _micromarkUtilCharacter.markdownLineEnding)(code)) {\n      returnState = tagCloseBetween;\n      return atLineEnding(code);\n    }\n\n    if ((0, _micromarkUtilCharacter.markdownSpace)(code)) {\n      effects.consume(code);\n      return tagCloseBetween;\n    }\n\n    return end(code);\n  }\n  /** @type {State} */\n\n\n  function tagOpen(code) {\n    if (code === 45 || (0, _micromarkUtilCharacter.asciiAlphanumeric)(code)) {\n      effects.consume(code);\n      return tagOpen;\n    }\n\n    if (code === 47 || code === 62 || (0, _micromarkUtilCharacter.markdownLineEndingOrSpace)(code)) {\n      return tagOpenBetween(code);\n    }\n\n    return nok(code);\n  }\n  /** @type {State} */\n\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code);\n      return end;\n    }\n\n    if (code === 58 || code === 95 || (0, _micromarkUtilCharacter.asciiAlpha)(code)) {\n      effects.consume(code);\n      return tagOpenAttributeName;\n    }\n\n    if ((0, _micromarkUtilCharacter.markdownLineEnding)(code)) {\n      returnState = tagOpenBetween;\n      return atLineEnding(code);\n    }\n\n    if ((0, _micromarkUtilCharacter.markdownSpace)(code)) {\n      effects.consume(code);\n      return tagOpenBetween;\n    }\n\n    return end(code);\n  }\n  /** @type {State} */\n\n\n  function tagOpenAttributeName(code) {\n    if (code === 45 || code === 46 || code === 58 || code === 95 || (0, _micromarkUtilCharacter.asciiAlphanumeric)(code)) {\n      effects.consume(code);\n      return tagOpenAttributeName;\n    }\n\n    return tagOpenAttributeNameAfter(code);\n  }\n  /** @type {State} */\n\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code);\n      return tagOpenAttributeValueBefore;\n    }\n\n    if ((0, _micromarkUtilCharacter.markdownLineEnding)(code)) {\n      returnState = tagOpenAttributeNameAfter;\n      return atLineEnding(code);\n    }\n\n    if ((0, _micromarkUtilCharacter.markdownSpace)(code)) {\n      effects.consume(code);\n      return tagOpenAttributeNameAfter;\n    }\n\n    return tagOpenBetween(code);\n  }\n  /** @type {State} */\n\n\n  function tagOpenAttributeValueBefore(code) {\n    if (code === null || code === 60 || code === 61 || code === 62 || code === 96) {\n      return nok(code);\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code);\n      marker = code;\n      return tagOpenAttributeValueQuoted;\n    }\n\n    if ((0, _micromarkUtilCharacter.markdownLineEnding)(code)) {\n      returnState = tagOpenAttributeValueBefore;\n      return atLineEnding(code);\n    }\n\n    if ((0, _micromarkUtilCharacter.markdownSpace)(code)) {\n      effects.consume(code);\n      return tagOpenAttributeValueBefore;\n    }\n\n    effects.consume(code);\n    marker = undefined;\n    return tagOpenAttributeValueUnquoted;\n  }\n  /** @type {State} */\n\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code);\n      return tagOpenAttributeValueQuotedAfter;\n    }\n\n    if (code === null) {\n      return nok(code);\n    }\n\n    if ((0, _micromarkUtilCharacter.markdownLineEnding)(code)) {\n      returnState = tagOpenAttributeValueQuoted;\n      return atLineEnding(code);\n    }\n\n    effects.consume(code);\n    return tagOpenAttributeValueQuoted;\n  }\n  /** @type {State} */\n\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || (0, _micromarkUtilCharacter.markdownLineEndingOrSpace)(code)) {\n      return tagOpenBetween(code);\n    }\n\n    return nok(code);\n  }\n  /** @type {State} */\n\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (code === null || code === 34 || code === 39 || code === 60 || code === 61 || code === 96) {\n      return nok(code);\n    }\n\n    if (code === 62 || (0, _micromarkUtilCharacter.markdownLineEndingOrSpace)(code)) {\n      return tagOpenBetween(code);\n    }\n\n    effects.consume(code);\n    return tagOpenAttributeValueUnquoted;\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  /** @type {State} */\n\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData');\n    effects.enter('lineEnding');\n    effects.consume(code);\n    effects.exit('lineEnding');\n    return (0, _micromarkFactorySpace.factorySpace)(effects, afterPrefix, 'linePrefix', self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4);\n  }\n  /** @type {State} */\n\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData');\n    return returnState(code);\n  }\n  /** @type {State} */\n\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code);\n      effects.exit('htmlTextData');\n      effects.exit('htmlText');\n      return ok;\n    }\n\n    return nok(code);\n  }\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$micromark_util_character$index","~$shadow.js","~$module$node_modules$micromark_factory_space$index"]],"~:properties",["^5",["tokenize","__esModule","htmlText","name","value"]],"~:compiled-at",1676665867292,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$micromark_core_commonmark$lib$html_text.js\",\n\"lineCount\":13,\n\"mappings\":\"AAAAA,cAAA,CAAA,2DAAA,CAAgF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGxHC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,QAAR,CAAmB,IAAK,EAExB,KAAIC,uBAAyBP,OAAA,CAAQ,mDAAR,CAA7B,CAEIQ,wBAA0BR,OAAA,CAAQ,oDAAR,CAgB9BE,QAAQI,CAAAA,QAAR,CANiBA,CACfG,KAAM,UADSH,CAEfI,SAMFC,QAAyB,CAACC,OAAD,CAAUC,EAAV,CAAcC,GAAd,CAAmB,CA0B1CC,QAASA,KAAI,CAACC,IAAD,CAAO,CAClB,MAAa,GAAb,GAAIA,IAAJ,EACEJ,OAAQK,CAAAA,OAAR,CAAgBD,IAAhB,CACOE,CAAAA,eAFT;AAKa,EAAb,GAAIF,IAAJ,EACEJ,OAAQK,CAAAA,OAAR,CAAgBD,IAAhB,CACOG,CAAAA,aAFT,EAKa,EAAb,GAAIH,IAAJ,EACEJ,OAAQK,CAAAA,OAAR,CAAgBD,IAAhB,CACOI,CAAAA,WAFT,EAKI,GAAIZ,uBAAwBa,CAAAA,UAA5B,EAAwCL,IAAxC,CAAJ,EACEJ,OAAQK,CAAAA,OAAR,CAAgBD,IAAhB,CACOM,CAAAA,OAFT,EAKOR,GAAA,CAAIE,IAAJ,CArBW,CA0BpBE,QAASA,gBAAe,CAACF,IAAD,CAAO,CAC7B,MAAa,GAAb,GAAIA,IAAJ,EACEJ,OAAQK,CAAAA,OAAR,CAAgBD,IAAhB,CACOO,CAAAA,WAFT,EAKa,EAAb,GAAIP,IAAJ,EACEJ,OAAQK,CAAAA,OAAR,CAAgBD,IAAhB,CAGOQ,CAFPC,MAEOD,CAFE,QAEFA,CADPE,KACOF,CADC,CACDA,CAAAA,SAJT,EAOI,GAAIhB,uBAAwBa,CAAAA,UAA5B,EAAwCL,IAAxC,CAAJ,EACEJ,OAAQK,CAAAA,OAAR,CAAgBD,IAAhB,CACOW,CAAAA,WAFT,EAKOb,GAAA,CAAIE,IAAJ,CAlBsB,CAuB/BO,QAASA,YAAW,CAACP,IAAD,CAAO,CACzB,MAAa,GAAb,GAAIA,IAAJ,EACEJ,OAAQK,CAAAA,OAAR,CAAgBD,IAAhB,CACOY,CAAAA,YAFT;AAKOd,GAAA,CAAIE,IAAJ,CANkB,CAW3BY,QAASA,aAAY,CAACZ,IAAD,CAAO,CAC1B,MAAa,KAAb,GAAIA,IAAJ,EAA8B,EAA9B,GAAqBA,IAArB,CACSF,GAAA,CAAIE,IAAJ,CADT,CAIa,EAAb,GAAIA,IAAJ,EACEJ,OAAQK,CAAAA,OAAR,CAAgBD,IAAhB,CACOa,CAAAA,gBAFT,EAKOC,OAAA,CAAQd,IAAR,CAVmB,CAe5Ba,QAASA,iBAAgB,CAACb,IAAD,CAAO,CAC9B,MAAa,KAAb,GAAIA,IAAJ,EAA8B,EAA9B,GAAqBA,IAArB,CACSF,GAAA,CAAIE,IAAJ,CADT,CAIOc,OAAA,CAAQd,IAAR,CALuB,CAUhCc,QAASA,QAAO,CAACd,IAAD,CAAO,CACrB,GAAa,IAAb,GAAIA,IAAJ,CACE,MAAOF,IAAA,CAAIE,IAAJ,CAGT,IAAa,EAAb,GAAIA,IAAJ,CAEE,MADAJ,QAAQK,CAAAA,OAAR,CAAgBD,IAAhB,CACOe,CAAAA,YAGT,IAAI,GAAIvB,uBAAwBwB,CAAAA,kBAA5B,EAAgDhB,IAAhD,CAAJ,CAEE,MADAiB,YACO,CADOH,OACP,CAAAI,YAAA,CAAalB,IAAb,CAGTJ,QAAQK,CAAAA,OAAR,CAAgBD,IAAhB,CACA,OAAOc,QAhBc,CAqBvBC,QAASA,aAAY,CAACf,IAAD,CAAO,CAC1B,MAAa,GAAb;AAAIA,IAAJ,EACEJ,OAAQK,CAAAA,OAAR,CAAgBD,IAAhB,CACOmB,CAAAA,GAFT,EAKOL,OAAA,CAAQd,IAAR,CANmB,CAW5BQ,QAASA,UAAS,CAACR,IAAD,CAAO,CACvB,MAAIA,KAAJ,GAAaS,MAAOW,CAAAA,UAAP,CAAkBV,KAAA,EAAlB,CAAb,EACEd,OAAQK,CAAAA,OAAR,CAAgBD,IAAhB,CACO,CAAAU,KAAA,GAAUD,MAAOY,CAAAA,MAAjB,CAA0BC,KAA1B,CAAkCd,SAF3C,EAKOV,GAAA,CAAIE,IAAJ,CANgB,CAWzBsB,QAASA,MAAK,CAACtB,IAAD,CAAO,CACnB,GAAa,IAAb,GAAIA,IAAJ,CACE,MAAOF,IAAA,CAAIE,IAAJ,CAGT,IAAa,EAAb,GAAIA,IAAJ,CAEE,MADAJ,QAAQK,CAAAA,OAAR,CAAgBD,IAAhB,CACOuB,CAAAA,UAGT,IAAI,GAAI/B,uBAAwBwB,CAAAA,kBAA5B,EAAgDhB,IAAhD,CAAJ,CAEE,MADAiB,YACO,CADOK,KACP,CAAAJ,YAAA,CAAalB,IAAb,CAGTJ,QAAQK,CAAAA,OAAR,CAAgBD,IAAhB,CACA,OAAOsB,MAhBY,CAqBrBC,QAASA,WAAU,CAACvB,IAAD,CAAO,CACxB,MAAa,GAAb,GAAIA,IAAJ,EACEJ,OAAQK,CAAAA,OAAR,CAAgBD,IAAhB,CACOwB,CAAAA,QAFT;AAKOF,KAAA,CAAMtB,IAAN,CANiB,CAW1BwB,QAASA,SAAQ,CAACxB,IAAD,CAAO,CACtB,MAAa,GAAb,GAAIA,IAAJ,CACSmB,GAAA,CAAInB,IAAJ,CADT,CAIa,EAAb,GAAIA,IAAJ,EACEJ,OAAQK,CAAAA,OAAR,CAAgBD,IAAhB,CACOwB,CAAAA,QAFT,EAKOF,KAAA,CAAMtB,IAAN,CAVe,CAexBW,QAASA,YAAW,CAACX,IAAD,CAAO,CACzB,GAAa,IAAb,GAAIA,IAAJ,EAA8B,EAA9B,GAAqBA,IAArB,CACE,MAAOmB,IAAA,CAAInB,IAAJ,CAGT,IAAI,GAAIR,uBAAwBwB,CAAAA,kBAA5B,EAAgDhB,IAAhD,CAAJ,CAEE,MADAiB,YACO,CADON,WACP,CAAAO,YAAA,CAAalB,IAAb,CAGTJ,QAAQK,CAAAA,OAAR,CAAgBD,IAAhB,CACA,OAAOW,YAXkB,CAgB3BP,QAASA,YAAW,CAACJ,IAAD,CAAO,CACzB,GAAa,IAAb,GAAIA,IAAJ,CACE,MAAOF,IAAA,CAAIE,IAAJ,CAGT,IAAa,EAAb,GAAIA,IAAJ,CAEE,MADAJ,QAAQK,CAAAA,OAAR,CAAgBD,IAAhB,CACOyB,CAAAA,gBAGT,IAAI,GAAIjC,uBAAwBwB,CAAAA,kBAA5B,EAAgDhB,IAAhD,CAAJ,CAEE,MADAiB,YACO;AADOb,WACP,CAAAc,YAAA,CAAalB,IAAb,CAGTJ,QAAQK,CAAAA,OAAR,CAAgBD,IAAhB,CACA,OAAOI,YAhBkB,CAqB3BqB,QAASA,iBAAgB,CAACzB,IAAD,CAAO,CAC9B,MAAgB,GAAT,GAAAA,IAAA,CAAcmB,GAAA,CAAInB,IAAJ,CAAd,CAA0BI,WAAA,CAAYJ,IAAZ,CADH,CAMhCG,QAASA,cAAa,CAACH,IAAD,CAAO,CAC3B,MAAI,GAAIR,uBAAwBa,CAAAA,UAA5B,EAAwCL,IAAxC,CAAJ,EACEJ,OAAQK,CAAAA,OAAR,CAAgBD,IAAhB,CACO0B,CAAAA,QAFT,EAKO5B,GAAA,CAAIE,IAAJ,CANoB,CAW7B0B,QAASA,SAAQ,CAAC1B,IAAD,CAAO,CACtB,MAAa,GAAb,GAAIA,IAAJ,EAAmB,GAAIR,uBAAwBmC,CAAAA,iBAA5B,EAA+C3B,IAA/C,CAAnB,EACEJ,OAAQK,CAAAA,OAAR,CAAgBD,IAAhB,CACO0B,CAAAA,QAFT,EAKOE,eAAA,CAAgB5B,IAAhB,CANe,CAWxB4B,QAASA,gBAAe,CAAC5B,IAAD,CAAO,CAC7B,MAAI,GAAIR,uBAAwBwB,CAAAA,kBAA5B,EAAgDhB,IAAhD,CAAJ;CACEiB,WACO,CADOW,eACP,CAAAV,YAAA,CAAalB,IAAb,CAFT,EAKI,GAAIR,uBAAwBqC,CAAAA,aAA5B,EAA2C7B,IAA3C,CAAJ,EACEJ,OAAQK,CAAAA,OAAR,CAAgBD,IAAhB,CACO4B,CAAAA,eAFT,EAKOT,GAAA,CAAInB,IAAJ,CAXsB,CAgB/BM,QAASA,QAAO,CAACN,IAAD,CAAO,CACrB,MAAa,GAAb,GAAIA,IAAJ,EAAmB,GAAIR,uBAAwBmC,CAAAA,iBAA5B,EAA+C3B,IAA/C,CAAnB,EACEJ,OAAQK,CAAAA,OAAR,CAAgBD,IAAhB,CACOM,CAAAA,OAFT,EAKa,EAAb,GAAIN,IAAJ,EAA4B,EAA5B,GAAmBA,IAAnB,EAAkC,GAAIR,uBAAwBsC,CAAAA,yBAA5B,EAAuD9B,IAAvD,CAAlC,CACS+B,cAAA,CAAe/B,IAAf,CADT,CAIOF,GAAA,CAAIE,IAAJ,CAVc,CAevB+B,QAASA,eAAc,CAAC/B,IAAD,CAAO,CAC5B,MAAa,GAAb,GAAIA,IAAJ,EACEJ,OAAQK,CAAAA,OAAR,CAAgBD,IAAhB,CACOmB,CAAAA,GAFT,EAKa,EAAb,GAAInB,IAAJ,EAA4B,EAA5B,GAAmBA,IAAnB,EAAkC,GAAIR,uBAAwBa,CAAAA,UAA5B,EAAwCL,IAAxC,CAAlC;CACEJ,OAAQK,CAAAA,OAAR,CAAgBD,IAAhB,CACOgC,CAAAA,oBAFT,EAKI,GAAIxC,uBAAwBwB,CAAAA,kBAA5B,EAAgDhB,IAAhD,CAAJ,EACEiB,WACO,CADOc,cACP,CAAAb,YAAA,CAAalB,IAAb,CAFT,EAKI,GAAIR,uBAAwBqC,CAAAA,aAA5B,EAA2C7B,IAA3C,CAAJ,EACEJ,OAAQK,CAAAA,OAAR,CAAgBD,IAAhB,CACO+B,CAAAA,cAFT,EAKOZ,GAAA,CAAInB,IAAJ,CArBqB,CA0B9BgC,QAASA,qBAAoB,CAAChC,IAAD,CAAO,CAClC,MAAa,GAAb,GAAIA,IAAJ,EAA4B,EAA5B,GAAmBA,IAAnB,EAA2C,EAA3C,GAAkCA,IAAlC,EAA0D,EAA1D,GAAiDA,IAAjD,EAAgE,GAAIR,uBAAwBmC,CAAAA,iBAA5B,EAA+C3B,IAA/C,CAAhE,EACEJ,OAAQK,CAAAA,OAAR,CAAgBD,IAAhB,CACOgC,CAAAA,oBAFT,EAKOC,yBAAA,CAA0BjC,IAA1B,CAN2B,CAWpCiC,QAASA,0BAAyB,CAACjC,IAAD,CAAO,CACvC,MAAa,GAAb;AAAIA,IAAJ,EACEJ,OAAQK,CAAAA,OAAR,CAAgBD,IAAhB,CACOkC,CAAAA,2BAFT,EAKI,GAAI1C,uBAAwBwB,CAAAA,kBAA5B,EAAgDhB,IAAhD,CAAJ,EACEiB,WACO,CADOgB,yBACP,CAAAf,YAAA,CAAalB,IAAb,CAFT,EAKI,GAAIR,uBAAwBqC,CAAAA,aAA5B,EAA2C7B,IAA3C,CAAJ,EACEJ,OAAQK,CAAAA,OAAR,CAAgBD,IAAhB,CACOiC,CAAAA,yBAFT,EAKOF,cAAA,CAAe/B,IAAf,CAhBgC,CAqBzCkC,QAASA,4BAA2B,CAAClC,IAAD,CAAO,CACzC,GAAa,IAAb,GAAIA,IAAJ,EAA8B,EAA9B,GAAqBA,IAArB,EAA6C,EAA7C,GAAoCA,IAApC,EAA4D,EAA5D,GAAmDA,IAAnD,EAA2E,EAA3E,GAAkEA,IAAlE,CACE,MAAOF,IAAA,CAAIE,IAAJ,CAGT,IAAa,EAAb,GAAIA,IAAJ,EAA4B,EAA5B,GAAmBA,IAAnB,CAGE,MAFAJ,QAAQK,CAAAA,OAAR,CAAgBD,IAAhB,CAEOmC,CADPC,MACOD,CADEnC,IACFmC,CAAAA,2BAGT,IAAI,GAAI3C,uBAAwBwB,CAAAA,kBAA5B,EAAgDhB,IAAhD,CAAJ,CAEE,MADAiB,YACO;AADOiB,2BACP,CAAAhB,YAAA,CAAalB,IAAb,CAGT,IAAI,GAAIR,uBAAwBqC,CAAAA,aAA5B,EAA2C7B,IAA3C,CAAJ,CAEE,MADAJ,QAAQK,CAAAA,OAAR,CAAgBD,IAAhB,CACOkC,CAAAA,2BAGTtC,QAAQK,CAAAA,OAAR,CAAgBD,IAAhB,CACAoC,OAAA,CAASC,IAAAA,EACT,OAAOC,8BAvBkC,CA4B3CH,QAASA,4BAA2B,CAACnC,IAAD,CAAO,CACzC,GAAIA,IAAJ,GAAaoC,MAAb,CAEE,MADAxC,QAAQK,CAAAA,OAAR,CAAgBD,IAAhB,CACOuC,CAAAA,gCAGT,IAAa,IAAb,GAAIvC,IAAJ,CACE,MAAOF,IAAA,CAAIE,IAAJ,CAGT,IAAI,GAAIR,uBAAwBwB,CAAAA,kBAA5B,EAAgDhB,IAAhD,CAAJ,CAEE,MADAiB,YACO,CADOkB,2BACP,CAAAjB,YAAA,CAAalB,IAAb,CAGTJ;OAAQK,CAAAA,OAAR,CAAgBD,IAAhB,CACA,OAAOmC,4BAhBkC,CAqB3CI,QAASA,iCAAgC,CAACvC,IAAD,CAAO,CAC9C,MAAa,GAAb,GAAIA,IAAJ,EAA4B,EAA5B,GAAmBA,IAAnB,EAAkC,GAAIR,uBAAwBsC,CAAAA,yBAA5B,EAAuD9B,IAAvD,CAAlC,CACS+B,cAAA,CAAe/B,IAAf,CADT,CAIOF,GAAA,CAAIE,IAAJ,CALuC,CAUhDsC,QAASA,8BAA6B,CAACtC,IAAD,CAAO,CAC3C,GAAa,IAAb,GAAIA,IAAJ,EAA8B,EAA9B,GAAqBA,IAArB,EAA6C,EAA7C,GAAoCA,IAApC,EAA4D,EAA5D,GAAmDA,IAAnD,EAA2E,EAA3E,GAAkEA,IAAlE,EAA0F,EAA1F,GAAiFA,IAAjF,CACE,MAAOF,IAAA,CAAIE,IAAJ,CAGT,IAAa,EAAb,GAAIA,IAAJ,EAAmB,GAAIR,uBAAwBsC,CAAAA,yBAA5B,EAAuD9B,IAAvD,CAAnB,CACE,MAAO+B,eAAA,CAAe/B,IAAf,CAGTJ,QAAQK,CAAAA,OAAR,CAAgBD,IAAhB,CACA,OAAOsC,8BAVoC;AAiB7CpB,QAASA,aAAY,CAAClB,IAAD,CAAO,CAC1BJ,OAAQ4C,CAAAA,IAAR,CAAa,cAAb,CACA5C,QAAQ6C,CAAAA,KAAR,CAAc,YAAd,CACA7C,QAAQK,CAAAA,OAAR,CAAgBD,IAAhB,CACAJ,QAAQ4C,CAAAA,IAAR,CAAa,YAAb,CACA,OAAO,GAAIjD,sBAAuBmD,CAAAA,YAA3B,EAAyC9C,OAAzC,CAAkD+C,WAAlD,CAA+D,YAA/D,CAA6EC,IAAKC,CAAAA,MAAOC,CAAAA,UAAWC,CAAAA,OAAQC,CAAAA,IAAKC,CAAAA,QAApC,CAA6C,cAA7C,CAAA,CAA+DZ,IAAAA,EAA/D,CAA2E,CAAxJ,CALmB,CAU5BM,QAASA,YAAW,CAAC3C,IAAD,CAAO,CACzBJ,OAAQ6C,CAAAA,KAAR,CAAc,cAAd,CACA,OAAOxB,YAAA,CAAYjB,IAAZ,CAFkB,CAO3BmB,QAASA,IAAG,CAACnB,IAAD,CAAO,CACjB,MAAa,GAAb,GAAIA,IAAJ,EACEJ,OAAQK,CAAAA,OAAR,CAAgBD,IAAhB,CAGOH,CAFPD,OAAQ4C,CAAAA,IAAR,CAAa,cAAb,CAEO3C,CADPD,OAAQ4C,CAAAA,IAAR,CAAa,UAAb,CACO3C,CAAAA,EAJT,EAOOC,GAAA,CAAIE,IAAJ,CARU,CA/bnB,MAAM4C;AAAO,IAGb,KAAIR,MAAJ,CAGI3B,MAHJ,CAMIC,KANJ,CASIO,WACJ,OAGAiC,SAAc,CAAClD,IAAD,CAAO,CACnBJ,OAAQ6C,CAAAA,KAAR,CAAc,UAAd,CACA7C,QAAQ6C,CAAAA,KAAR,CAAc,cAAd,CACA7C,QAAQK,CAAAA,OAAR,CAAgBD,IAAhB,CACA,OAAOD,KAJY,CAjBqB,CAR3BT,CApBuG;\",\n\"sources\":[\"node_modules/micromark-core-commonmark/lib/html-text.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$micromark_core_commonmark$lib$html_text\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.htmlText = void 0;\\n\\nvar _micromarkFactorySpace = require(\\\"micromark-factory-space\\\");\\n\\nvar _micromarkUtilCharacter = require(\\\"micromark-util-character\\\");\\n\\n/**\\n * @typedef {import('micromark-util-types').Construct} Construct\\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\\n * @typedef {import('micromark-util-types').State} State\\n * @typedef {import('micromark-util-types').Code} Code\\n */\\n\\n/** @type {Construct} */\\nconst htmlText = {\\n  name: 'htmlText',\\n  tokenize: tokenizeHtmlText\\n};\\n/** @type {Tokenizer} */\\n\\nexports.htmlText = htmlText;\\n\\nfunction tokenizeHtmlText(effects, ok, nok) {\\n  const self = this;\\n  /** @type {NonNullable<Code>|undefined} */\\n\\n  let marker;\\n  /** @type {string} */\\n\\n  let buffer;\\n  /** @type {number} */\\n\\n  let index;\\n  /** @type {State} */\\n\\n  let returnState;\\n  return start;\\n  /** @type {State} */\\n\\n  function start(code) {\\n    effects.enter('htmlText');\\n    effects.enter('htmlTextData');\\n    effects.consume(code);\\n    return open;\\n  }\\n  /** @type {State} */\\n\\n\\n  function open(code) {\\n    if (code === 33) {\\n      effects.consume(code);\\n      return declarationOpen;\\n    }\\n\\n    if (code === 47) {\\n      effects.consume(code);\\n      return tagCloseStart;\\n    }\\n\\n    if (code === 63) {\\n      effects.consume(code);\\n      return instruction;\\n    }\\n\\n    if ((0, _micromarkUtilCharacter.asciiAlpha)(code)) {\\n      effects.consume(code);\\n      return tagOpen;\\n    }\\n\\n    return nok(code);\\n  }\\n  /** @type {State} */\\n\\n\\n  function declarationOpen(code) {\\n    if (code === 45) {\\n      effects.consume(code);\\n      return commentOpen;\\n    }\\n\\n    if (code === 91) {\\n      effects.consume(code);\\n      buffer = 'CDATA[';\\n      index = 0;\\n      return cdataOpen;\\n    }\\n\\n    if ((0, _micromarkUtilCharacter.asciiAlpha)(code)) {\\n      effects.consume(code);\\n      return declaration;\\n    }\\n\\n    return nok(code);\\n  }\\n  /** @type {State} */\\n\\n\\n  function commentOpen(code) {\\n    if (code === 45) {\\n      effects.consume(code);\\n      return commentStart;\\n    }\\n\\n    return nok(code);\\n  }\\n  /** @type {State} */\\n\\n\\n  function commentStart(code) {\\n    if (code === null || code === 62) {\\n      return nok(code);\\n    }\\n\\n    if (code === 45) {\\n      effects.consume(code);\\n      return commentStartDash;\\n    }\\n\\n    return comment(code);\\n  }\\n  /** @type {State} */\\n\\n\\n  function commentStartDash(code) {\\n    if (code === null || code === 62) {\\n      return nok(code);\\n    }\\n\\n    return comment(code);\\n  }\\n  /** @type {State} */\\n\\n\\n  function comment(code) {\\n    if (code === null) {\\n      return nok(code);\\n    }\\n\\n    if (code === 45) {\\n      effects.consume(code);\\n      return commentClose;\\n    }\\n\\n    if ((0, _micromarkUtilCharacter.markdownLineEnding)(code)) {\\n      returnState = comment;\\n      return atLineEnding(code);\\n    }\\n\\n    effects.consume(code);\\n    return comment;\\n  }\\n  /** @type {State} */\\n\\n\\n  function commentClose(code) {\\n    if (code === 45) {\\n      effects.consume(code);\\n      return end;\\n    }\\n\\n    return comment(code);\\n  }\\n  /** @type {State} */\\n\\n\\n  function cdataOpen(code) {\\n    if (code === buffer.charCodeAt(index++)) {\\n      effects.consume(code);\\n      return index === buffer.length ? cdata : cdataOpen;\\n    }\\n\\n    return nok(code);\\n  }\\n  /** @type {State} */\\n\\n\\n  function cdata(code) {\\n    if (code === null) {\\n      return nok(code);\\n    }\\n\\n    if (code === 93) {\\n      effects.consume(code);\\n      return cdataClose;\\n    }\\n\\n    if ((0, _micromarkUtilCharacter.markdownLineEnding)(code)) {\\n      returnState = cdata;\\n      return atLineEnding(code);\\n    }\\n\\n    effects.consume(code);\\n    return cdata;\\n  }\\n  /** @type {State} */\\n\\n\\n  function cdataClose(code) {\\n    if (code === 93) {\\n      effects.consume(code);\\n      return cdataEnd;\\n    }\\n\\n    return cdata(code);\\n  }\\n  /** @type {State} */\\n\\n\\n  function cdataEnd(code) {\\n    if (code === 62) {\\n      return end(code);\\n    }\\n\\n    if (code === 93) {\\n      effects.consume(code);\\n      return cdataEnd;\\n    }\\n\\n    return cdata(code);\\n  }\\n  /** @type {State} */\\n\\n\\n  function declaration(code) {\\n    if (code === null || code === 62) {\\n      return end(code);\\n    }\\n\\n    if ((0, _micromarkUtilCharacter.markdownLineEnding)(code)) {\\n      returnState = declaration;\\n      return atLineEnding(code);\\n    }\\n\\n    effects.consume(code);\\n    return declaration;\\n  }\\n  /** @type {State} */\\n\\n\\n  function instruction(code) {\\n    if (code === null) {\\n      return nok(code);\\n    }\\n\\n    if (code === 63) {\\n      effects.consume(code);\\n      return instructionClose;\\n    }\\n\\n    if ((0, _micromarkUtilCharacter.markdownLineEnding)(code)) {\\n      returnState = instruction;\\n      return atLineEnding(code);\\n    }\\n\\n    effects.consume(code);\\n    return instruction;\\n  }\\n  /** @type {State} */\\n\\n\\n  function instructionClose(code) {\\n    return code === 62 ? end(code) : instruction(code);\\n  }\\n  /** @type {State} */\\n\\n\\n  function tagCloseStart(code) {\\n    if ((0, _micromarkUtilCharacter.asciiAlpha)(code)) {\\n      effects.consume(code);\\n      return tagClose;\\n    }\\n\\n    return nok(code);\\n  }\\n  /** @type {State} */\\n\\n\\n  function tagClose(code) {\\n    if (code === 45 || (0, _micromarkUtilCharacter.asciiAlphanumeric)(code)) {\\n      effects.consume(code);\\n      return tagClose;\\n    }\\n\\n    return tagCloseBetween(code);\\n  }\\n  /** @type {State} */\\n\\n\\n  function tagCloseBetween(code) {\\n    if ((0, _micromarkUtilCharacter.markdownLineEnding)(code)) {\\n      returnState = tagCloseBetween;\\n      return atLineEnding(code);\\n    }\\n\\n    if ((0, _micromarkUtilCharacter.markdownSpace)(code)) {\\n      effects.consume(code);\\n      return tagCloseBetween;\\n    }\\n\\n    return end(code);\\n  }\\n  /** @type {State} */\\n\\n\\n  function tagOpen(code) {\\n    if (code === 45 || (0, _micromarkUtilCharacter.asciiAlphanumeric)(code)) {\\n      effects.consume(code);\\n      return tagOpen;\\n    }\\n\\n    if (code === 47 || code === 62 || (0, _micromarkUtilCharacter.markdownLineEndingOrSpace)(code)) {\\n      return tagOpenBetween(code);\\n    }\\n\\n    return nok(code);\\n  }\\n  /** @type {State} */\\n\\n\\n  function tagOpenBetween(code) {\\n    if (code === 47) {\\n      effects.consume(code);\\n      return end;\\n    }\\n\\n    if (code === 58 || code === 95 || (0, _micromarkUtilCharacter.asciiAlpha)(code)) {\\n      effects.consume(code);\\n      return tagOpenAttributeName;\\n    }\\n\\n    if ((0, _micromarkUtilCharacter.markdownLineEnding)(code)) {\\n      returnState = tagOpenBetween;\\n      return atLineEnding(code);\\n    }\\n\\n    if ((0, _micromarkUtilCharacter.markdownSpace)(code)) {\\n      effects.consume(code);\\n      return tagOpenBetween;\\n    }\\n\\n    return end(code);\\n  }\\n  /** @type {State} */\\n\\n\\n  function tagOpenAttributeName(code) {\\n    if (code === 45 || code === 46 || code === 58 || code === 95 || (0, _micromarkUtilCharacter.asciiAlphanumeric)(code)) {\\n      effects.consume(code);\\n      return tagOpenAttributeName;\\n    }\\n\\n    return tagOpenAttributeNameAfter(code);\\n  }\\n  /** @type {State} */\\n\\n\\n  function tagOpenAttributeNameAfter(code) {\\n    if (code === 61) {\\n      effects.consume(code);\\n      return tagOpenAttributeValueBefore;\\n    }\\n\\n    if ((0, _micromarkUtilCharacter.markdownLineEnding)(code)) {\\n      returnState = tagOpenAttributeNameAfter;\\n      return atLineEnding(code);\\n    }\\n\\n    if ((0, _micromarkUtilCharacter.markdownSpace)(code)) {\\n      effects.consume(code);\\n      return tagOpenAttributeNameAfter;\\n    }\\n\\n    return tagOpenBetween(code);\\n  }\\n  /** @type {State} */\\n\\n\\n  function tagOpenAttributeValueBefore(code) {\\n    if (code === null || code === 60 || code === 61 || code === 62 || code === 96) {\\n      return nok(code);\\n    }\\n\\n    if (code === 34 || code === 39) {\\n      effects.consume(code);\\n      marker = code;\\n      return tagOpenAttributeValueQuoted;\\n    }\\n\\n    if ((0, _micromarkUtilCharacter.markdownLineEnding)(code)) {\\n      returnState = tagOpenAttributeValueBefore;\\n      return atLineEnding(code);\\n    }\\n\\n    if ((0, _micromarkUtilCharacter.markdownSpace)(code)) {\\n      effects.consume(code);\\n      return tagOpenAttributeValueBefore;\\n    }\\n\\n    effects.consume(code);\\n    marker = undefined;\\n    return tagOpenAttributeValueUnquoted;\\n  }\\n  /** @type {State} */\\n\\n\\n  function tagOpenAttributeValueQuoted(code) {\\n    if (code === marker) {\\n      effects.consume(code);\\n      return tagOpenAttributeValueQuotedAfter;\\n    }\\n\\n    if (code === null) {\\n      return nok(code);\\n    }\\n\\n    if ((0, _micromarkUtilCharacter.markdownLineEnding)(code)) {\\n      returnState = tagOpenAttributeValueQuoted;\\n      return atLineEnding(code);\\n    }\\n\\n    effects.consume(code);\\n    return tagOpenAttributeValueQuoted;\\n  }\\n  /** @type {State} */\\n\\n\\n  function tagOpenAttributeValueQuotedAfter(code) {\\n    if (code === 62 || code === 47 || (0, _micromarkUtilCharacter.markdownLineEndingOrSpace)(code)) {\\n      return tagOpenBetween(code);\\n    }\\n\\n    return nok(code);\\n  }\\n  /** @type {State} */\\n\\n\\n  function tagOpenAttributeValueUnquoted(code) {\\n    if (code === null || code === 34 || code === 39 || code === 60 || code === 61 || code === 96) {\\n      return nok(code);\\n    }\\n\\n    if (code === 62 || (0, _micromarkUtilCharacter.markdownLineEndingOrSpace)(code)) {\\n      return tagOpenBetween(code);\\n    }\\n\\n    effects.consume(code);\\n    return tagOpenAttributeValueUnquoted;\\n  } // We can\\u2019t have blank lines in content, so no need to worry about empty\\n  // tokens.\\n\\n  /** @type {State} */\\n\\n\\n  function atLineEnding(code) {\\n    effects.exit('htmlTextData');\\n    effects.enter('lineEnding');\\n    effects.consume(code);\\n    effects.exit('lineEnding');\\n    return (0, _micromarkFactorySpace.factorySpace)(effects, afterPrefix, 'linePrefix', self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4);\\n  }\\n  /** @type {State} */\\n\\n\\n  function afterPrefix(code) {\\n    effects.enter('htmlTextData');\\n    return returnState(code);\\n  }\\n  /** @type {State} */\\n\\n\\n  function end(code) {\\n    if (code === 62) {\\n      effects.consume(code);\\n      effects.exit('htmlTextData');\\n      effects.exit('htmlText');\\n      return ok;\\n    }\\n\\n    return nok(code);\\n  }\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"htmlText\",\"_micromarkFactorySpace\",\"_micromarkUtilCharacter\",\"name\",\"tokenize\",\"tokenizeHtmlText\",\"effects\",\"ok\",\"nok\",\"open\",\"code\",\"consume\",\"declarationOpen\",\"tagCloseStart\",\"instruction\",\"asciiAlpha\",\"tagOpen\",\"commentOpen\",\"cdataOpen\",\"buffer\",\"index\",\"declaration\",\"commentStart\",\"commentStartDash\",\"comment\",\"commentClose\",\"markdownLineEnding\",\"returnState\",\"atLineEnding\",\"end\",\"charCodeAt\",\"length\",\"cdata\",\"cdataClose\",\"cdataEnd\",\"instructionClose\",\"tagClose\",\"asciiAlphanumeric\",\"tagCloseBetween\",\"markdownSpace\",\"markdownLineEndingOrSpace\",\"tagOpenBetween\",\"tagOpenAttributeName\",\"tagOpenAttributeNameAfter\",\"tagOpenAttributeValueBefore\",\"tagOpenAttributeValueQuoted\",\"marker\",\"undefined\",\"tagOpenAttributeValueUnquoted\",\"tagOpenAttributeValueQuotedAfter\",\"exit\",\"enter\",\"factorySpace\",\"afterPrefix\",\"self\",\"parser\",\"constructs\",\"disable\",\"null\",\"includes\",\"start\"]\n}\n"]