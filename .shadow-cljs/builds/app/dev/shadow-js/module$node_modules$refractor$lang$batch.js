["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/batch.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$batch=function(global,require,module,exports){function batch(Prism){var variable=/%%?[~:\\w]+%?|!\\S+!/,parameter={pattern:/\\/[a-z?]+(?=[ :]|$):?|-[a-z]\\b|--[a-z-]+\\b/im,alias:\"attr-name\",inside:{punctuation:/:/}},string=/\"(?:[\\\\\"]\"|[^\"])*\"(?!\")/,number=/(?:\\b|-)\\d+\\b/;Prism.languages.batch={comment:[/^::.*/m,{pattern:/((?:^|[&(])[ \\t]*)rem\\b(?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,lookbehind:!0}],label:{pattern:/^:.*/m,alias:\"property\"},command:[{pattern:/((?:^|[&(])[ \\t]*)for(?: \\/[a-z?](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* \\S+ in \\([^)]+\\) do/im,\nlookbehind:!0,inside:{keyword:/\\b(?:do|in)\\b|^for\\b/i,string,parameter,variable,number,punctuation:/[()',]/}},{pattern:/((?:^|[&(])[ \\t]*)if(?: \\/[a-z?](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* (?:not )?(?:cmdextversion \\d+|defined \\w+|errorlevel \\d+|exist \\S+|(?:\"[^\"]*\"|(?!\")(?:(?!==)\\S)+)?(?:==| (?:equ|geq|gtr|leq|lss|neq) )(?:\"[^\"]*\"|[^\\s\"]\\S*))/im,lookbehind:!0,inside:{keyword:/\\b(?:cmdextversion|defined|errorlevel|exist|not)\\b|^if\\b/i,string,parameter,variable,number,operator:/\\^|==|\\b(?:equ|geq|gtr|leq|lss|neq)\\b/i}},\n{pattern:/((?:^|[&()])[ \\t]*)else\\b/im,lookbehind:!0,inside:{keyword:/^else\\b/i}},{pattern:/((?:^|[&(])[ \\t]*)set(?: \\/[a-z](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* (?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,lookbehind:!0,inside:{keyword:/^set\\b/i,string,parameter,variable:[variable,/\\w+(?=(?:[*\\/%+\\-&^|]|<<|>>)?=)/],number,operator:/[*\\/%+\\-&^|]=?|<<=?|>>=?|[!~_=]/,punctuation:/[()',]/}},{pattern:/((?:^|[&(])[ \\t]*@?)\\w+\\b(?:\"(?:[\\\\\"]\"|[^\"])*\"(?!\")|[^\"^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/m,lookbehind:!0,inside:{keyword:/^\\w+\\b/,\nstring,parameter,label:{pattern:/(^\\s*):\\S+/m,lookbehind:!0,alias:\"property\"},variable,number,operator:/\\^/}}],operator:/[&@]/,punctuation:/[()']/}}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=batch;batch.displayName=\"batch\";batch.aliases=[]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$batch\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = batch;\n// @ts-nocheck\nbatch.displayName = 'batch';\nbatch.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nfunction batch(Prism) {\n  ;\n\n  (function (Prism) {\n    var variable = /%%?[~:\\w]+%?|!\\S+!/;\n    var parameter = {\n      pattern: /\\/[a-z?]+(?=[ :]|$):?|-[a-z]\\b|--[a-z-]+\\b/im,\n      alias: 'attr-name',\n      inside: {\n        punctuation: /:/\n      }\n    };\n    var string = /\"(?:[\\\\\"]\"|[^\"])*\"(?!\")/;\n    var number = /(?:\\b|-)\\d+\\b/;\n    Prism.languages.batch = {\n      comment: [/^::.*/m, {\n        pattern: /((?:^|[&(])[ \\t]*)rem\\b(?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n        lookbehind: true\n      }],\n      label: {\n        pattern: /^:.*/m,\n        alias: 'property'\n      },\n      command: [{\n        // FOR command\n        pattern: /((?:^|[&(])[ \\t]*)for(?: \\/[a-z?](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* \\S+ in \\([^)]+\\) do/im,\n        lookbehind: true,\n        inside: {\n          keyword: /\\b(?:do|in)\\b|^for\\b/i,\n          string: string,\n          parameter: parameter,\n          variable: variable,\n          number: number,\n          punctuation: /[()',]/\n        }\n      }, {\n        // IF command\n        pattern: /((?:^|[&(])[ \\t]*)if(?: \\/[a-z?](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* (?:not )?(?:cmdextversion \\d+|defined \\w+|errorlevel \\d+|exist \\S+|(?:\"[^\"]*\"|(?!\")(?:(?!==)\\S)+)?(?:==| (?:equ|geq|gtr|leq|lss|neq) )(?:\"[^\"]*\"|[^\\s\"]\\S*))/im,\n        lookbehind: true,\n        inside: {\n          keyword: /\\b(?:cmdextversion|defined|errorlevel|exist|not)\\b|^if\\b/i,\n          string: string,\n          parameter: parameter,\n          variable: variable,\n          number: number,\n          operator: /\\^|==|\\b(?:equ|geq|gtr|leq|lss|neq)\\b/i\n        }\n      }, {\n        // ELSE command\n        pattern: /((?:^|[&()])[ \\t]*)else\\b/im,\n        lookbehind: true,\n        inside: {\n          keyword: /^else\\b/i\n        }\n      }, {\n        // SET command\n        pattern: /((?:^|[&(])[ \\t]*)set(?: \\/[a-z](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* (?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n        lookbehind: true,\n        inside: {\n          keyword: /^set\\b/i,\n          string: string,\n          parameter: parameter,\n          variable: [variable, /\\w+(?=(?:[*\\/%+\\-&^|]|<<|>>)?=)/],\n          number: number,\n          operator: /[*\\/%+\\-&^|]=?|<<=?|>>=?|[!~_=]/,\n          punctuation: /[()',]/\n        }\n      }, {\n        // Other commands\n        pattern: /((?:^|[&(])[ \\t]*@?)\\w+\\b(?:\"(?:[\\\\\"]\"|[^\"])*\"(?!\")|[^\"^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/m,\n        lookbehind: true,\n        inside: {\n          keyword: /^\\w+\\b/,\n          string: string,\n          parameter: parameter,\n          label: {\n            pattern: /(^\\s*):\\S+/m,\n            lookbehind: true,\n            alias: 'property'\n          },\n          variable: variable,\n          number: number,\n          operator: /\\^/\n        }\n      }],\n      operator: /[&@]/,\n      punctuation: /[()']/\n    };\n  })(Prism);\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["punctuation","string","parameter","aliases","command","operator","displayName","label","__esModule","batch","lookbehind","value","variable","keyword","number","pattern","inside","alias","comment","default"]],"~:compiled-at",1676841365394,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$batch.js\",\n\"lineCount\":4,\n\"mappings\":\"AAAAA,cAAA,CAAA,wCAAA,CAA6D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAYrGC,QAASA,MAAK,CAACC,KAAD,CAAQ,CAIlB,IAAIC,SAAW,oBAAf,CACIC,UAAY,CACdC,QAAS,8CADK,CAEdC,MAAO,WAFO,CAGdC,OAAQ,CACNC,YAAa,GADP,CAHM,CADhB,CAQIC,OAAS,yBARb,CASIC,OAAS,eA2EZR,MA1EKS,CAAAA,SAAUV,CAAAA,KAAhB,CAAwB,CACtBW,QAAS,CAAC,QAAD,CAAW,CAClBP,QAAS,4DADS,CAElBQ,WAAY,CAAA,CAFM,CAAX,CADa,CAKtBC,MAAO,CACLT,QAAS,OADJ,CAELC,MAAO,UAFF,CALe,CAStBS,QAAS,CAAC,CAERV,QAAS,0FAFD;AAGRQ,WAAY,CAAA,CAHJ,CAIRN,OAAQ,CACNS,QAAS,uBADH,CAEEP,MAFF,CAGKL,SAHL,CAIID,QAJJ,CAKEO,MALF,CAMNF,YAAa,QANP,CAJA,CAAD,CAYN,CAEDH,QAAS,kOAFR,CAGDQ,WAAY,CAAA,CAHX,CAIDN,OAAQ,CACNS,QAAS,2DADH,CAEEP,MAFF,CAGKL,SAHL,CAIID,QAJJ,CAKEO,MALF,CAMNO,SAAU,wCANJ,CAJP,CAZM;AAwBN,CAEDZ,QAAS,6BAFR,CAGDQ,WAAY,CAAA,CAHX,CAIDN,OAAQ,CACNS,QAAS,UADH,CAJP,CAxBM,CA+BN,CAEDX,QAAS,uGAFR,CAGDQ,WAAY,CAAA,CAHX,CAIDN,OAAQ,CACNS,QAAS,SADH,CAEEP,MAFF,CAGKL,SAHL,CAIND,SAAU,CAACA,QAAD,CAAW,iCAAX,CAJJ,CAKEO,MALF,CAMNO,SAAU,iCANJ,CAONT,YAAa,QAPP,CAJP,CA/BM,CA4CN,CAEDH,QAAS,sFAFR,CAGDQ,WAAY,CAAA,CAHX,CAIDN,OAAQ,CACNS,QAAS,QADH;AAEEP,MAFF,CAGKL,SAHL,CAINU,MAAO,CACLT,QAAS,aADJ,CAELQ,WAAY,CAAA,CAFP,CAGLP,MAAO,UAHF,CAJD,CASIH,QATJ,CAUEO,MAVF,CAWNO,SAAU,IAXJ,CAJP,CA5CM,CATa,CAuEtBA,SAAU,MAvEY,CAwEtBT,YAAa,OAxES,CAdN,CATtBU,MAAOC,CAAAA,cAAP,CAAsBnB,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CoB,MAAO,CAAA,CADoC,CAA7C,CAGApB,QAAQqB,CAAAA,OAAR,CAAkBpB,KAElBA,MAAMqB,CAAAA,WAAN,CAAoB,OACpBrB,MAAMsB,CAAAA,OAAN,CAAgB,EATqF;\",\n\"sources\":[\"node_modules/refractor/lang/batch.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$batch\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = batch;\\n// @ts-nocheck\\nbatch.displayName = 'batch';\\nbatch.aliases = [];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction batch(Prism) {\\n  ;\\n\\n  (function (Prism) {\\n    var variable = /%%?[~:\\\\w]+%?|!\\\\S+!/;\\n    var parameter = {\\n      pattern: /\\\\/[a-z?]+(?=[ :]|$):?|-[a-z]\\\\b|--[a-z-]+\\\\b/im,\\n      alias: 'attr-name',\\n      inside: {\\n        punctuation: /:/\\n      }\\n    };\\n    var string = /\\\"(?:[\\\\\\\\\\\"]\\\"|[^\\\"])*\\\"(?!\\\")/;\\n    var number = /(?:\\\\b|-)\\\\d+\\\\b/;\\n    Prism.languages.batch = {\\n      comment: [/^::.*/m, {\\n        pattern: /((?:^|[&(])[ \\\\t]*)rem\\\\b(?:[^^&)\\\\r\\\\n]|\\\\^(?:\\\\r\\\\n|[\\\\s\\\\S]))*/im,\\n        lookbehind: true\\n      }],\\n      label: {\\n        pattern: /^:.*/m,\\n        alias: 'property'\\n      },\\n      command: [{\\n        // FOR command\\n        pattern: /((?:^|[&(])[ \\\\t]*)for(?: \\\\/[a-z?](?:[ :](?:\\\"[^\\\"]*\\\"|[^\\\\s\\\"/]\\\\S*))?)* \\\\S+ in \\\\([^)]+\\\\) do/im,\\n        lookbehind: true,\\n        inside: {\\n          keyword: /\\\\b(?:do|in)\\\\b|^for\\\\b/i,\\n          string: string,\\n          parameter: parameter,\\n          variable: variable,\\n          number: number,\\n          punctuation: /[()',]/\\n        }\\n      }, {\\n        // IF command\\n        pattern: /((?:^|[&(])[ \\\\t]*)if(?: \\\\/[a-z?](?:[ :](?:\\\"[^\\\"]*\\\"|[^\\\\s\\\"/]\\\\S*))?)* (?:not )?(?:cmdextversion \\\\d+|defined \\\\w+|errorlevel \\\\d+|exist \\\\S+|(?:\\\"[^\\\"]*\\\"|(?!\\\")(?:(?!==)\\\\S)+)?(?:==| (?:equ|geq|gtr|leq|lss|neq) )(?:\\\"[^\\\"]*\\\"|[^\\\\s\\\"]\\\\S*))/im,\\n        lookbehind: true,\\n        inside: {\\n          keyword: /\\\\b(?:cmdextversion|defined|errorlevel|exist|not)\\\\b|^if\\\\b/i,\\n          string: string,\\n          parameter: parameter,\\n          variable: variable,\\n          number: number,\\n          operator: /\\\\^|==|\\\\b(?:equ|geq|gtr|leq|lss|neq)\\\\b/i\\n        }\\n      }, {\\n        // ELSE command\\n        pattern: /((?:^|[&()])[ \\\\t]*)else\\\\b/im,\\n        lookbehind: true,\\n        inside: {\\n          keyword: /^else\\\\b/i\\n        }\\n      }, {\\n        // SET command\\n        pattern: /((?:^|[&(])[ \\\\t]*)set(?: \\\\/[a-z](?:[ :](?:\\\"[^\\\"]*\\\"|[^\\\\s\\\"/]\\\\S*))?)* (?:[^^&)\\\\r\\\\n]|\\\\^(?:\\\\r\\\\n|[\\\\s\\\\S]))*/im,\\n        lookbehind: true,\\n        inside: {\\n          keyword: /^set\\\\b/i,\\n          string: string,\\n          parameter: parameter,\\n          variable: [variable, /\\\\w+(?=(?:[*\\\\/%+\\\\-&^|]|<<|>>)?=)/],\\n          number: number,\\n          operator: /[*\\\\/%+\\\\-&^|]=?|<<=?|>>=?|[!~_=]/,\\n          punctuation: /[()',]/\\n        }\\n      }, {\\n        // Other commands\\n        pattern: /((?:^|[&(])[ \\\\t]*@?)\\\\w+\\\\b(?:\\\"(?:[\\\\\\\\\\\"]\\\"|[^\\\"])*\\\"(?!\\\")|[^\\\"^&)\\\\r\\\\n]|\\\\^(?:\\\\r\\\\n|[\\\\s\\\\S]))*/m,\\n        lookbehind: true,\\n        inside: {\\n          keyword: /^\\\\w+\\\\b/,\\n          string: string,\\n          parameter: parameter,\\n          label: {\\n            pattern: /(^\\\\s*):\\\\S+/m,\\n            lookbehind: true,\\n            alias: 'property'\\n          },\\n          variable: variable,\\n          number: number,\\n          operator: /\\\\^/\\n        }\\n      }],\\n      operator: /[&@]/,\\n      punctuation: /[()']/\\n    };\\n  })(Prism);\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"batch\",\"Prism\",\"variable\",\"parameter\",\"pattern\",\"alias\",\"inside\",\"punctuation\",\"string\",\"number\",\"languages\",\"comment\",\"lookbehind\",\"label\",\"command\",\"keyword\",\"operator\",\"Object\",\"defineProperty\",\"value\",\"default\",\"displayName\",\"aliases\"]\n}\n"]