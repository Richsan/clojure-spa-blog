["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/maxscript.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$maxscript=function(global,require,module,exports){function maxscript(Prism){var keywords=/\\b(?:about|and|animate|as|at|attributes|by|case|catch|collect|continue|coordsys|do|else|exit|fn|for|from|function|global|if|in|local|macroscript|mapped|max|not|of|off|on|or|parameters|persistent|plugin|rcmenu|return|rollout|set|struct|then|throw|to|tool|try|undo|utility|when|where|while|with)\\b/i;Prism.languages.maxscript={comment:{pattern:/\\/\\*[\\s\\S]*?(?:\\*\\/|$)|--.*/,\ngreedy:!0},string:{pattern:/(^|[^\"\\\\@])(?:\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"|@\"[^\"]*\")/,lookbehind:!0,greedy:!0},path:{pattern:/\\$(?:[\\w/\\\\.*?]|'[^']*')*/,greedy:!0,alias:\"string\"},\"function-call\":{pattern:RegExp(\"((?:\"+(/^/.source+\"|\"+/[;=<>+\\-*/^({\\[]/.source+\"|\"+/\\b(?:and|by|case|catch|collect|do|else|if|in|not|or|return|then|to|try|where|while|with)\\b/.source)+\")[ \\t]*)(?!\"+keywords.source+\")\"+/[a-z_]\\w*\\b/.source+\"(?\\x3d[ \\t]*(?:(?!\"+(keywords.source+\")\"+/[a-z_]/.source+\"|\"+/\\d|-\\.?\\d/.source+\"|\"+/[({'\"$@#?]/.source)+\n\"))\",\"im\"),lookbehind:!0,greedy:!0,alias:\"function\"},\"function-definition\":{pattern:/(\\b(?:fn|function)\\s+)\\w+\\b/i,lookbehind:!0,alias:\"function\"},argument:{pattern:/\\b[a-z_]\\w*(?=:)/i,alias:\"attr-name\"},keyword:keywords,boolean:/\\b(?:false|true)\\b/,time:{pattern:/(^|[^\\w.])(?:(?:(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eEdD][+-]\\d+|[LP])?[msft])+|\\d+:\\d+(?:\\.\\d*)?)(?![\\w.:])/,lookbehind:!0,alias:\"number\"},number:[{pattern:/(^|[^\\w.])(?:(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eEdD][+-]\\d+|[LP])?|0x[a-fA-F0-9]+)(?![\\w.:])/,\nlookbehind:!0},/\\b(?:e|pi)\\b/],constant:/\\b(?:dontcollect|ok|silentValue|undefined|unsupplied)\\b/,color:{pattern:/\\b(?:black|blue|brown|gray|green|orange|red|white|yellow)\\b/i,alias:\"constant\"},operator:/[-+*/<>=!]=?|[&^?]|#(?!\\()/,punctuation:/[()\\[\\]{}.:,;]|#(?=\\()|\\\\$/m}}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=maxscript;maxscript.displayName=\"maxscript\";maxscript.aliases=[]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$maxscript\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = maxscript;\n// @ts-nocheck\nmaxscript.displayName = 'maxscript';\nmaxscript.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nfunction maxscript(Prism) {\n  ;\n\n  (function (Prism) {\n    var keywords = /\\b(?:about|and|animate|as|at|attributes|by|case|catch|collect|continue|coordsys|do|else|exit|fn|for|from|function|global|if|in|local|macroscript|mapped|max|not|of|off|on|or|parameters|persistent|plugin|rcmenu|return|rollout|set|struct|then|throw|to|tool|try|undo|utility|when|where|while|with)\\b/i;\n    Prism.languages.maxscript = {\n      comment: {\n        pattern: /\\/\\*[\\s\\S]*?(?:\\*\\/|$)|--.*/,\n        greedy: true\n      },\n      string: {\n        pattern: /(^|[^\"\\\\@])(?:\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"|@\"[^\"]*\")/,\n        lookbehind: true,\n        greedy: true\n      },\n      path: {\n        pattern: /\\$(?:[\\w/\\\\.*?]|'[^']*')*/,\n        greedy: true,\n        alias: 'string'\n      },\n      'function-call': {\n        pattern: RegExp('((?:' + (/^/.source + '|' + // operators and other language constructs\n        /[;=<>+\\-*/^({\\[]/.source + '|' + // keywords as part of statements\n        /\\b(?:and|by|case|catch|collect|do|else|if|in|not|or|return|then|to|try|where|while|with)\\b/.source) + ')[ \\t]*)' + '(?!' + keywords.source + ')' + /[a-z_]\\w*\\b/.source + '(?=[ \\t]*(?:' + ('(?!' + keywords.source + ')' + /[a-z_]/.source + '|' + // number\n        /\\d|-\\.?\\d/.source + '|' + // other expressions or literals\n        /[({'\"$@#?]/.source) + '))', 'im'),\n        lookbehind: true,\n        greedy: true,\n        alias: 'function'\n      },\n      'function-definition': {\n        pattern: /(\\b(?:fn|function)\\s+)\\w+\\b/i,\n        lookbehind: true,\n        alias: 'function'\n      },\n      argument: {\n        pattern: /\\b[a-z_]\\w*(?=:)/i,\n        alias: 'attr-name'\n      },\n      keyword: keywords,\n      boolean: /\\b(?:false|true)\\b/,\n      time: {\n        pattern: /(^|[^\\w.])(?:(?:(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eEdD][+-]\\d+|[LP])?[msft])+|\\d+:\\d+(?:\\.\\d*)?)(?![\\w.:])/,\n        lookbehind: true,\n        alias: 'number'\n      },\n      number: [{\n        pattern: /(^|[^\\w.])(?:(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eEdD][+-]\\d+|[LP])?|0x[a-fA-F0-9]+)(?![\\w.:])/,\n        lookbehind: true\n      }, /\\b(?:e|pi)\\b/],\n      constant: /\\b(?:dontcollect|ok|silentValue|undefined|unsupplied)\\b/,\n      color: {\n        pattern: /\\b(?:black|blue|brown|gray|green|orange|red|white|yellow)\\b/i,\n        alias: 'constant'\n      },\n      operator: /[-+*/<>=!]=?|[&^?]|#(?!\\()/,\n      punctuation: /[()\\[\\]{}.:,;]|#(?=\\()|\\\\$/m\n    };\n  })(Prism);\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["boolean","maxscript","punctuation","string","aliases","constant","operator","displayName","__esModule","path","lookbehind","value","keyword","number","greedy","time","pattern","argument","alias","comment","color","default"]],"~:compiled-at",1676841365436,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$maxscript.js\",\n\"lineCount\":4,\n\"mappings\":\"AAAAA,cAAA,CAAA,4CAAA,CAAiE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAYzGC,QAASA,UAAS,CAACC,KAAD,CAAQ,CAItB,IAAIC,SAAW,0SAsDdD,MArDKE,CAAAA,SAAUH,CAAAA,SAAhB,CAA4B,CAC1BI,QAAS,CACPC,QAAS,6BADF;AAEPC,OAAQ,CAAA,CAFD,CADiB,CAK1BC,OAAQ,CACNF,QAAS,gDADH,CAENG,WAAY,CAAA,CAFN,CAGNF,OAAQ,CAAA,CAHF,CALkB,CAU1BG,KAAM,CACJJ,QAAS,2BADL,CAEJC,OAAQ,CAAA,CAFJ,CAGJI,MAAO,QAHH,CAVoB,CAe1B,gBAAiB,CACfL,QAASM,MAAA,CAAO,MAAP,EAAiB,GAAIC,CAAAA,MAArB,CAA8B,GAA9B,CACT,kBAAmBA,CAAAA,MADV,CACmB,GADnB,CAET,4FAA6FA,CAAAA,MAFpF,EAE8F,aAF9F,CAEmHV,QAASU,CAAAA,MAF5H,CAEqI,GAFrI,CAE2I,aAAcA,CAAAA,MAFzJ,CAEkK,oBAFlK,EAE4LV,QAASU,CAAAA,MAFrM,CAE8M,GAF9M,CAEoN,QAASA,CAAAA,MAF7N,CAEsO,GAFtO,CAGT,WAAYA,CAAAA,MAHH,CAGY,GAHZ,CAIT,YAAaA,CAAAA,MAJJ;AAIc,IAJd,CAIoB,IAJpB,CADM,CAMfJ,WAAY,CAAA,CANG,CAOfF,OAAQ,CAAA,CAPO,CAQfI,MAAO,UARQ,CAfS,CAyB1B,sBAAuB,CACrBL,QAAS,8BADY,CAErBG,WAAY,CAAA,CAFS,CAGrBE,MAAO,UAHc,CAzBG,CA8B1BG,SAAU,CACRR,QAAS,mBADD,CAERK,MAAO,WAFC,CA9BgB,CAkC1BI,QAASZ,QAlCiB,CAmC1Ba,QAAS,oBAnCiB,CAoC1BC,KAAM,CACJX,QAAS,qGADL,CAEJG,WAAY,CAAA,CAFR,CAGJE,MAAO,QAHH,CApCoB,CAyC1BO,OAAQ,CAAC,CACPZ,QAAS,uFADF;AAEPG,WAAY,CAAA,CAFL,CAAD,CAGL,cAHK,CAzCkB,CA6C1BU,SAAU,yDA7CgB,CA8C1BC,MAAO,CACLd,QAAS,8DADJ,CAELK,MAAO,UAFF,CA9CmB,CAkD1BU,SAAU,4BAlDgB,CAmD1BC,YAAa,6BAnDa,CALN,CAT1BC,MAAOC,CAAAA,cAAP,CAAsBxB,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CyB,MAAO,CAAA,CADoC,CAA7C,CAGAzB,QAAQ0B,CAAAA,OAAR,CAAkBzB,SAElBA,UAAU0B,CAAAA,WAAV,CAAwB,WACxB1B,UAAU2B,CAAAA,OAAV,CAAoB,EATqF;\",\n\"sources\":[\"node_modules/refractor/lang/maxscript.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$maxscript\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = maxscript;\\n// @ts-nocheck\\nmaxscript.displayName = 'maxscript';\\nmaxscript.aliases = [];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction maxscript(Prism) {\\n  ;\\n\\n  (function (Prism) {\\n    var keywords = /\\\\b(?:about|and|animate|as|at|attributes|by|case|catch|collect|continue|coordsys|do|else|exit|fn|for|from|function|global|if|in|local|macroscript|mapped|max|not|of|off|on|or|parameters|persistent|plugin|rcmenu|return|rollout|set|struct|then|throw|to|tool|try|undo|utility|when|where|while|with)\\\\b/i;\\n    Prism.languages.maxscript = {\\n      comment: {\\n        pattern: /\\\\/\\\\*[\\\\s\\\\S]*?(?:\\\\*\\\\/|$)|--.*/,\\n        greedy: true\\n      },\\n      string: {\\n        pattern: /(^|[^\\\"\\\\\\\\@])(?:\\\"(?:[^\\\"\\\\\\\\]|\\\\\\\\[\\\\s\\\\S])*\\\"|@\\\"[^\\\"]*\\\")/,\\n        lookbehind: true,\\n        greedy: true\\n      },\\n      path: {\\n        pattern: /\\\\$(?:[\\\\w/\\\\\\\\.*?]|'[^']*')*/,\\n        greedy: true,\\n        alias: 'string'\\n      },\\n      'function-call': {\\n        pattern: RegExp('((?:' + (/^/.source + '|' + // operators and other language constructs\\n        /[;=<>+\\\\-*/^({\\\\[]/.source + '|' + // keywords as part of statements\\n        /\\\\b(?:and|by|case|catch|collect|do|else|if|in|not|or|return|then|to|try|where|while|with)\\\\b/.source) + ')[ \\\\t]*)' + '(?!' + keywords.source + ')' + /[a-z_]\\\\w*\\\\b/.source + '(?=[ \\\\t]*(?:' + ('(?!' + keywords.source + ')' + /[a-z_]/.source + '|' + // number\\n        /\\\\d|-\\\\.?\\\\d/.source + '|' + // other expressions or literals\\n        /[({'\\\"$@#?]/.source) + '))', 'im'),\\n        lookbehind: true,\\n        greedy: true,\\n        alias: 'function'\\n      },\\n      'function-definition': {\\n        pattern: /(\\\\b(?:fn|function)\\\\s+)\\\\w+\\\\b/i,\\n        lookbehind: true,\\n        alias: 'function'\\n      },\\n      argument: {\\n        pattern: /\\\\b[a-z_]\\\\w*(?=:)/i,\\n        alias: 'attr-name'\\n      },\\n      keyword: keywords,\\n      boolean: /\\\\b(?:false|true)\\\\b/,\\n      time: {\\n        pattern: /(^|[^\\\\w.])(?:(?:(?:\\\\d+(?:\\\\.\\\\d*)?|\\\\.\\\\d+)(?:[eEdD][+-]\\\\d+|[LP])?[msft])+|\\\\d+:\\\\d+(?:\\\\.\\\\d*)?)(?![\\\\w.:])/,\\n        lookbehind: true,\\n        alias: 'number'\\n      },\\n      number: [{\\n        pattern: /(^|[^\\\\w.])(?:(?:\\\\d+(?:\\\\.\\\\d*)?|\\\\.\\\\d+)(?:[eEdD][+-]\\\\d+|[LP])?|0x[a-fA-F0-9]+)(?![\\\\w.:])/,\\n        lookbehind: true\\n      }, /\\\\b(?:e|pi)\\\\b/],\\n      constant: /\\\\b(?:dontcollect|ok|silentValue|undefined|unsupplied)\\\\b/,\\n      color: {\\n        pattern: /\\\\b(?:black|blue|brown|gray|green|orange|red|white|yellow)\\\\b/i,\\n        alias: 'constant'\\n      },\\n      operator: /[-+*/<>=!]=?|[&^?]|#(?!\\\\()/,\\n      punctuation: /[()\\\\[\\\\]{}.:,;]|#(?=\\\\()|\\\\\\\\$/m\\n    };\\n  })(Prism);\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"maxscript\",\"Prism\",\"keywords\",\"languages\",\"comment\",\"pattern\",\"greedy\",\"string\",\"lookbehind\",\"path\",\"alias\",\"RegExp\",\"source\",\"argument\",\"keyword\",\"boolean\",\"time\",\"number\",\"constant\",\"color\",\"operator\",\"punctuation\",\"Object\",\"defineProperty\",\"value\",\"default\",\"displayName\",\"aliases\"]\n}\n"]