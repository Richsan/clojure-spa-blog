["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/parse5/lib/parser/open-element-stack.js"],"~:js","shadow$provide.module$node_modules$parse5$lib$parser$open_element_stack=function(global,require,module,exports){function isImpliedEndTagRequired(tn){switch(tn.length){case 1:return tn===$.P;case 2:return tn===$.RB||tn===$.RP||tn===$.RT||tn===$.DD||tn===$.DT||tn===$.LI;case 3:return tn===$.RTC;case 6:return tn===$.OPTION;case 8:return tn===$.OPTGROUP}return!1}function isImpliedEndTagRequiredThoroughly(tn){switch(tn.length){case 1:return tn===$.P;case 2:return tn===$.RB||tn===$.RP||tn===$.RT||tn===\n$.DD||tn===$.DT||tn===$.LI||tn===$.TD||tn===$.TH||tn===$.TR;case 3:return tn===$.RTC;case 5:return tn===$.TBODY||tn===$.TFOOT||tn===$.THEAD;case 6:return tn===$.OPTION;case 7:return tn===$.CAPTION;case 8:return tn===$.OPTGROUP||tn===$.COLGROUP}return!1}function isScopingElement(tn,ns){switch(tn.length){case 2:if(tn===$.TD||tn===$.TH)return ns===NS.HTML;if(tn===$.MI||tn===$.MO||tn===$.MN||tn===$.MS)return ns===NS.MATHML;break;case 4:if(tn===$.HTML)return ns===NS.HTML;if(tn===$.DESC)return ns===NS.SVG;\nbreak;case 5:if(tn===$.TABLE)return ns===NS.HTML;if(tn===$.MTEXT)return ns===NS.MATHML;if(tn===$.TITLE)return ns===NS.SVG;break;case 6:return(tn===$.APPLET||tn===$.OBJECT)&&ns===NS.HTML;case 7:return(tn===$.CAPTION||tn===$.MARQUEE)&&ns===NS.HTML;case 8:return tn===$.TEMPLATE&&ns===NS.HTML;case 13:return tn===$.FOREIGN_OBJECT&&ns===NS.SVG;case 14:return tn===$.ANNOTATION_XML&&ns===NS.MATHML}return!1}global=require(\"module$node_modules$parse5$lib$common$html\");const $=global.TAG_NAMES,NS=global.NAMESPACES;\nclass OpenElementStack{constructor(document,treeAdapter){this.stackTop=-1;this.items=[];this.current=document;this.currentTmplContent=this.currentTagName=null;this.tmplCount=0;this.treeAdapter=treeAdapter}_indexOf(element){let idx=-1;for(let i=this.stackTop;0<=i;i--)if(this.items[i]===element){idx=i;break}return idx}_isInTemplate(){return this.currentTagName===$.TEMPLATE&&this.treeAdapter.getNamespaceURI(this.current)===NS.HTML}_updateCurrentElement(){this.currentTagName=(this.current=this.items[this.stackTop])&&\nthis.treeAdapter.getTagName(this.current);this.currentTmplContent=this._isInTemplate()?this.treeAdapter.getTemplateContent(this.current):null}push(element){this.items[++this.stackTop]=element;this._updateCurrentElement();this._isInTemplate()&&this.tmplCount++}pop(){this.stackTop--;0<this.tmplCount&&this._isInTemplate()&&this.tmplCount--;this._updateCurrentElement()}replace(oldElement,newElement){oldElement=this._indexOf(oldElement);this.items[oldElement]=newElement;oldElement===this.stackTop&&this._updateCurrentElement()}insertAfter(referenceElement,\nnewElement){referenceElement=this._indexOf(referenceElement)+1;this.items.splice(referenceElement,0,newElement);referenceElement===++this.stackTop&&this._updateCurrentElement()}popUntilTagNamePopped(tagName){for(;-1<this.stackTop;){const tn=this.currentTagName,ns=this.treeAdapter.getNamespaceURI(this.current);this.pop();if(tn===tagName&&ns===NS.HTML)break}}popUntilElementPopped(element){for(;-1<this.stackTop;){const poppedElement=this.current;this.pop();if(poppedElement===element)break}}popUntilNumberedHeaderPopped(){for(;-1<\nthis.stackTop;){const tn=this.currentTagName,ns=this.treeAdapter.getNamespaceURI(this.current);this.pop();if(tn===$.H1||tn===$.H2||tn===$.H3||tn===$.H4||tn===$.H5||tn===$.H6&&ns===NS.HTML)break}}popUntilTableCellPopped(){for(;-1<this.stackTop;){const tn=this.currentTagName,ns=this.treeAdapter.getNamespaceURI(this.current);this.pop();if(tn===$.TD||tn===$.TH&&ns===NS.HTML)break}}popAllUpToHtmlElement(){this.stackTop=0;this._updateCurrentElement()}clearBackToTableContext(){for(;this.currentTagName!==\n$.TABLE&&this.currentTagName!==$.TEMPLATE&&this.currentTagName!==$.HTML||this.treeAdapter.getNamespaceURI(this.current)!==NS.HTML;)this.pop()}clearBackToTableBodyContext(){for(;this.currentTagName!==$.TBODY&&this.currentTagName!==$.TFOOT&&this.currentTagName!==$.THEAD&&this.currentTagName!==$.TEMPLATE&&this.currentTagName!==$.HTML||this.treeAdapter.getNamespaceURI(this.current)!==NS.HTML;)this.pop()}clearBackToTableRowContext(){for(;this.currentTagName!==$.TR&&this.currentTagName!==$.TEMPLATE&&this.currentTagName!==\n$.HTML||this.treeAdapter.getNamespaceURI(this.current)!==NS.HTML;)this.pop()}remove(element){for(let i=this.stackTop;0<=i;i--)if(this.items[i]===element){this.items.splice(i,1);this.stackTop--;this._updateCurrentElement();break}}tryPeekProperlyNestedBodyElement(){const element=this.items[1];return element&&this.treeAdapter.getTagName(element)===$.BODY?element:null}contains(element){return-1<this._indexOf(element)}getCommonAncestor(element){element=this._indexOf(element);return 0<=--element?this.items[element]:\nnull}isRootHtmlElementCurrent(){return 0===this.stackTop&&this.currentTagName===$.HTML}hasInScope(tagName){for(let i=this.stackTop;0<=i;i--){const tn=this.treeAdapter.getTagName(this.items[i]),ns=this.treeAdapter.getNamespaceURI(this.items[i]);if(tn===tagName&&ns===NS.HTML)break;if(isScopingElement(tn,ns))return!1}return!0}hasNumberedHeaderInScope(){for(let i=this.stackTop;0<=i;i--){const tn=this.treeAdapter.getTagName(this.items[i]),ns=this.treeAdapter.getNamespaceURI(this.items[i]);if((tn===$.H1||\ntn===$.H2||tn===$.H3||tn===$.H4||tn===$.H5||tn===$.H6)&&ns===NS.HTML)break;if(isScopingElement(tn,ns))return!1}return!0}hasInListItemScope(tagName){for(let i=this.stackTop;0<=i;i--){const tn=this.treeAdapter.getTagName(this.items[i]),ns=this.treeAdapter.getNamespaceURI(this.items[i]);if(tn===tagName&&ns===NS.HTML)break;if((tn===$.UL||tn===$.OL)&&ns===NS.HTML||isScopingElement(tn,ns))return!1}return!0}hasInButtonScope(tagName){for(let i=this.stackTop;0<=i;i--){const tn=this.treeAdapter.getTagName(this.items[i]),\nns=this.treeAdapter.getNamespaceURI(this.items[i]);if(tn===tagName&&ns===NS.HTML)break;if(tn===$.BUTTON&&ns===NS.HTML||isScopingElement(tn,ns))return!1}return!0}hasInTableScope(tagName){for(let i=this.stackTop;0<=i;i--){const tn=this.treeAdapter.getTagName(this.items[i]);if(this.treeAdapter.getNamespaceURI(this.items[i])===NS.HTML){if(tn===tagName)break;if(tn===$.TABLE||tn===$.TEMPLATE||tn===$.HTML)return!1}}return!0}hasTableBodyContextInTableScope(){for(let i=this.stackTop;0<=i;i--){const tn=this.treeAdapter.getTagName(this.items[i]);\nif(this.treeAdapter.getNamespaceURI(this.items[i])===NS.HTML){if(tn===$.TBODY||tn===$.THEAD||tn===$.TFOOT)break;if(tn===$.TABLE||tn===$.HTML)return!1}}return!0}hasInSelectScope(tagName){for(let i=this.stackTop;0<=i;i--){const tn=this.treeAdapter.getTagName(this.items[i]);if(this.treeAdapter.getNamespaceURI(this.items[i])===NS.HTML){if(tn===tagName)break;if(tn!==$.OPTION&&tn!==$.OPTGROUP)return!1}}return!0}generateImpliedEndTags(){for(;isImpliedEndTagRequired(this.currentTagName);)this.pop()}generateImpliedEndTagsThoroughly(){for(;isImpliedEndTagRequiredThoroughly(this.currentTagName);)this.pop()}generateImpliedEndTagsWithExclusion(exclusionTagName){for(;isImpliedEndTagRequired(this.currentTagName)&&\nthis.currentTagName!==exclusionTagName;)this.pop()}}module.exports=OpenElementStack}","~:source","shadow$provide[\"module$node_modules$parse5$lib$parser$open_element_stack\"] = function(global,require,module,exports) {\n'use strict';\n\nconst HTML = require('../common/html');\n\n//Aliases\nconst $ = HTML.TAG_NAMES;\nconst NS = HTML.NAMESPACES;\n\n//Element utils\n\n//OPTIMIZATION: Integer comparisons are low-cost, so we can use very fast tag name length filters here.\n//It's faster than using dictionary.\nfunction isImpliedEndTagRequired(tn) {\n    switch (tn.length) {\n        case 1:\n            return tn === $.P;\n\n        case 2:\n            return tn === $.RB || tn === $.RP || tn === $.RT || tn === $.DD || tn === $.DT || tn === $.LI;\n\n        case 3:\n            return tn === $.RTC;\n\n        case 6:\n            return tn === $.OPTION;\n\n        case 8:\n            return tn === $.OPTGROUP;\n    }\n\n    return false;\n}\n\nfunction isImpliedEndTagRequiredThoroughly(tn) {\n    switch (tn.length) {\n        case 1:\n            return tn === $.P;\n\n        case 2:\n            return (\n                tn === $.RB ||\n                tn === $.RP ||\n                tn === $.RT ||\n                tn === $.DD ||\n                tn === $.DT ||\n                tn === $.LI ||\n                tn === $.TD ||\n                tn === $.TH ||\n                tn === $.TR\n            );\n\n        case 3:\n            return tn === $.RTC;\n\n        case 5:\n            return tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD;\n\n        case 6:\n            return tn === $.OPTION;\n\n        case 7:\n            return tn === $.CAPTION;\n\n        case 8:\n            return tn === $.OPTGROUP || tn === $.COLGROUP;\n    }\n\n    return false;\n}\n\nfunction isScopingElement(tn, ns) {\n    switch (tn.length) {\n        case 2:\n            if (tn === $.TD || tn === $.TH) {\n                return ns === NS.HTML;\n            } else if (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS) {\n                return ns === NS.MATHML;\n            }\n\n            break;\n\n        case 4:\n            if (tn === $.HTML) {\n                return ns === NS.HTML;\n            } else if (tn === $.DESC) {\n                return ns === NS.SVG;\n            }\n\n            break;\n\n        case 5:\n            if (tn === $.TABLE) {\n                return ns === NS.HTML;\n            } else if (tn === $.MTEXT) {\n                return ns === NS.MATHML;\n            } else if (tn === $.TITLE) {\n                return ns === NS.SVG;\n            }\n\n            break;\n\n        case 6:\n            return (tn === $.APPLET || tn === $.OBJECT) && ns === NS.HTML;\n\n        case 7:\n            return (tn === $.CAPTION || tn === $.MARQUEE) && ns === NS.HTML;\n\n        case 8:\n            return tn === $.TEMPLATE && ns === NS.HTML;\n\n        case 13:\n            return tn === $.FOREIGN_OBJECT && ns === NS.SVG;\n\n        case 14:\n            return tn === $.ANNOTATION_XML && ns === NS.MATHML;\n    }\n\n    return false;\n}\n\n//Stack of open elements\nclass OpenElementStack {\n    constructor(document, treeAdapter) {\n        this.stackTop = -1;\n        this.items = [];\n        this.current = document;\n        this.currentTagName = null;\n        this.currentTmplContent = null;\n        this.tmplCount = 0;\n        this.treeAdapter = treeAdapter;\n    }\n\n    //Index of element\n    _indexOf(element) {\n        let idx = -1;\n\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.items[i] === element) {\n                idx = i;\n                break;\n            }\n        }\n        return idx;\n    }\n\n    //Update current element\n    _isInTemplate() {\n        return this.currentTagName === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n    }\n\n    _updateCurrentElement() {\n        this.current = this.items[this.stackTop];\n        this.currentTagName = this.current && this.treeAdapter.getTagName(this.current);\n\n        this.currentTmplContent = this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : null;\n    }\n\n    //Mutations\n    push(element) {\n        this.items[++this.stackTop] = element;\n        this._updateCurrentElement();\n\n        if (this._isInTemplate()) {\n            this.tmplCount++;\n        }\n    }\n\n    pop() {\n        this.stackTop--;\n\n        if (this.tmplCount > 0 && this._isInTemplate()) {\n            this.tmplCount--;\n        }\n\n        this._updateCurrentElement();\n    }\n\n    replace(oldElement, newElement) {\n        const idx = this._indexOf(oldElement);\n\n        this.items[idx] = newElement;\n\n        if (idx === this.stackTop) {\n            this._updateCurrentElement();\n        }\n    }\n\n    insertAfter(referenceElement, newElement) {\n        const insertionIdx = this._indexOf(referenceElement) + 1;\n\n        this.items.splice(insertionIdx, 0, newElement);\n\n        if (insertionIdx === ++this.stackTop) {\n            this._updateCurrentElement();\n        }\n    }\n\n    popUntilTagNamePopped(tagName) {\n        while (this.stackTop > -1) {\n            const tn = this.currentTagName;\n            const ns = this.treeAdapter.getNamespaceURI(this.current);\n\n            this.pop();\n\n            if (tn === tagName && ns === NS.HTML) {\n                break;\n            }\n        }\n    }\n\n    popUntilElementPopped(element) {\n        while (this.stackTop > -1) {\n            const poppedElement = this.current;\n\n            this.pop();\n\n            if (poppedElement === element) {\n                break;\n            }\n        }\n    }\n\n    popUntilNumberedHeaderPopped() {\n        while (this.stackTop > -1) {\n            const tn = this.currentTagName;\n            const ns = this.treeAdapter.getNamespaceURI(this.current);\n\n            this.pop();\n\n            if (\n                tn === $.H1 ||\n                tn === $.H2 ||\n                tn === $.H3 ||\n                tn === $.H4 ||\n                tn === $.H5 ||\n                (tn === $.H6 && ns === NS.HTML)\n            ) {\n                break;\n            }\n        }\n    }\n\n    popUntilTableCellPopped() {\n        while (this.stackTop > -1) {\n            const tn = this.currentTagName;\n            const ns = this.treeAdapter.getNamespaceURI(this.current);\n\n            this.pop();\n\n            if (tn === $.TD || (tn === $.TH && ns === NS.HTML)) {\n                break;\n            }\n        }\n    }\n\n    popAllUpToHtmlElement() {\n        //NOTE: here we assume that root <html> element is always first in the open element stack, so\n        //we perform this fast stack clean up.\n        this.stackTop = 0;\n        this._updateCurrentElement();\n    }\n\n    clearBackToTableContext() {\n        while (\n            (this.currentTagName !== $.TABLE && this.currentTagName !== $.TEMPLATE && this.currentTagName !== $.HTML) ||\n            this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML\n        ) {\n            this.pop();\n        }\n    }\n\n    clearBackToTableBodyContext() {\n        while (\n            (this.currentTagName !== $.TBODY &&\n                this.currentTagName !== $.TFOOT &&\n                this.currentTagName !== $.THEAD &&\n                this.currentTagName !== $.TEMPLATE &&\n                this.currentTagName !== $.HTML) ||\n            this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML\n        ) {\n            this.pop();\n        }\n    }\n\n    clearBackToTableRowContext() {\n        while (\n            (this.currentTagName !== $.TR && this.currentTagName !== $.TEMPLATE && this.currentTagName !== $.HTML) ||\n            this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML\n        ) {\n            this.pop();\n        }\n    }\n\n    remove(element) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.items[i] === element) {\n                this.items.splice(i, 1);\n                this.stackTop--;\n                this._updateCurrentElement();\n                break;\n            }\n        }\n    }\n\n    //Search\n    tryPeekProperlyNestedBodyElement() {\n        //Properly nested <body> element (should be second element in stack).\n        const element = this.items[1];\n\n        return element && this.treeAdapter.getTagName(element) === $.BODY ? element : null;\n    }\n\n    contains(element) {\n        return this._indexOf(element) > -1;\n    }\n\n    getCommonAncestor(element) {\n        let elementIdx = this._indexOf(element);\n\n        return --elementIdx >= 0 ? this.items[elementIdx] : null;\n    }\n\n    isRootHtmlElementCurrent() {\n        return this.stackTop === 0 && this.currentTagName === $.HTML;\n    }\n\n    //Element in scope\n    hasInScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.treeAdapter.getTagName(this.items[i]);\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n\n            if (isScopingElement(tn, ns)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    hasNumberedHeaderInScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.treeAdapter.getTagName(this.items[i]);\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n            if (\n                (tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6) &&\n                ns === NS.HTML\n            ) {\n                return true;\n            }\n\n            if (isScopingElement(tn, ns)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    hasInListItemScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.treeAdapter.getTagName(this.items[i]);\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n\n            if (((tn === $.UL || tn === $.OL) && ns === NS.HTML) || isScopingElement(tn, ns)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    hasInButtonScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.treeAdapter.getTagName(this.items[i]);\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n\n            if ((tn === $.BUTTON && ns === NS.HTML) || isScopingElement(tn, ns)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    hasInTableScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.treeAdapter.getTagName(this.items[i]);\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n            if (ns !== NS.HTML) {\n                continue;\n            }\n\n            if (tn === tagName) {\n                return true;\n            }\n\n            if (tn === $.TABLE || tn === $.TEMPLATE || tn === $.HTML) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    hasTableBodyContextInTableScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.treeAdapter.getTagName(this.items[i]);\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n            if (ns !== NS.HTML) {\n                continue;\n            }\n\n            if (tn === $.TBODY || tn === $.THEAD || tn === $.TFOOT) {\n                return true;\n            }\n\n            if (tn === $.TABLE || tn === $.HTML) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    hasInSelectScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.treeAdapter.getTagName(this.items[i]);\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n            if (ns !== NS.HTML) {\n                continue;\n            }\n\n            if (tn === tagName) {\n                return true;\n            }\n\n            if (tn !== $.OPTION && tn !== $.OPTGROUP) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    //Implied end tags\n    generateImpliedEndTags() {\n        while (isImpliedEndTagRequired(this.currentTagName)) {\n            this.pop();\n        }\n    }\n\n    generateImpliedEndTagsThoroughly() {\n        while (isImpliedEndTagRequiredThoroughly(this.currentTagName)) {\n            this.pop();\n        }\n    }\n\n    generateImpliedEndTagsWithExclusion(exclusionTagName) {\n        while (isImpliedEndTagRequired(this.currentTagName) && this.currentTagName !== exclusionTagName) {\n            this.pop();\n        }\n    }\n}\n\nmodule.exports = OpenElementStack;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$parse5$lib$common$html","~$shadow.js"]],"~:properties",["^5",["tmplCount","currentTmplContent","stackTop","items","current","treeAdapter","currentTagName"]],"~:compiled-at",1676667638407,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$parse5$lib$parser$open_element_stack.js\",\n\"lineCount\":14,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/parse5/lib/parser/open-element-stack.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$parse5$lib$parser$open_element_stack\\\"] = function(global,require,module,exports) {\\n'use strict';\\n\\nconst HTML = require('../common/html');\\n\\n//Aliases\\nconst $ = HTML.TAG_NAMES;\\nconst NS = HTML.NAMESPACES;\\n\\n//Element utils\\n\\n//OPTIMIZATION: Integer comparisons are low-cost, so we can use very fast tag name length filters here.\\n//It's faster than using dictionary.\\nfunction isImpliedEndTagRequired(tn) {\\n    switch (tn.length) {\\n        case 1:\\n            return tn === $.P;\\n\\n        case 2:\\n            return tn === $.RB || tn === $.RP || tn === $.RT || tn === $.DD || tn === $.DT || tn === $.LI;\\n\\n        case 3:\\n            return tn === $.RTC;\\n\\n        case 6:\\n            return tn === $.OPTION;\\n\\n        case 8:\\n            return tn === $.OPTGROUP;\\n    }\\n\\n    return false;\\n}\\n\\nfunction isImpliedEndTagRequiredThoroughly(tn) {\\n    switch (tn.length) {\\n        case 1:\\n            return tn === $.P;\\n\\n        case 2:\\n            return (\\n                tn === $.RB ||\\n                tn === $.RP ||\\n                tn === $.RT ||\\n                tn === $.DD ||\\n                tn === $.DT ||\\n                tn === $.LI ||\\n                tn === $.TD ||\\n                tn === $.TH ||\\n                tn === $.TR\\n            );\\n\\n        case 3:\\n            return tn === $.RTC;\\n\\n        case 5:\\n            return tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD;\\n\\n        case 6:\\n            return tn === $.OPTION;\\n\\n        case 7:\\n            return tn === $.CAPTION;\\n\\n        case 8:\\n            return tn === $.OPTGROUP || tn === $.COLGROUP;\\n    }\\n\\n    return false;\\n}\\n\\nfunction isScopingElement(tn, ns) {\\n    switch (tn.length) {\\n        case 2:\\n            if (tn === $.TD || tn === $.TH) {\\n                return ns === NS.HTML;\\n            } else if (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS) {\\n                return ns === NS.MATHML;\\n            }\\n\\n            break;\\n\\n        case 4:\\n            if (tn === $.HTML) {\\n                return ns === NS.HTML;\\n            } else if (tn === $.DESC) {\\n                return ns === NS.SVG;\\n            }\\n\\n            break;\\n\\n        case 5:\\n            if (tn === $.TABLE) {\\n                return ns === NS.HTML;\\n            } else if (tn === $.MTEXT) {\\n                return ns === NS.MATHML;\\n            } else if (tn === $.TITLE) {\\n                return ns === NS.SVG;\\n            }\\n\\n            break;\\n\\n        case 6:\\n            return (tn === $.APPLET || tn === $.OBJECT) && ns === NS.HTML;\\n\\n        case 7:\\n            return (tn === $.CAPTION || tn === $.MARQUEE) && ns === NS.HTML;\\n\\n        case 8:\\n            return tn === $.TEMPLATE && ns === NS.HTML;\\n\\n        case 13:\\n            return tn === $.FOREIGN_OBJECT && ns === NS.SVG;\\n\\n        case 14:\\n            return tn === $.ANNOTATION_XML && ns === NS.MATHML;\\n    }\\n\\n    return false;\\n}\\n\\n//Stack of open elements\\nclass OpenElementStack {\\n    constructor(document, treeAdapter) {\\n        this.stackTop = -1;\\n        this.items = [];\\n        this.current = document;\\n        this.currentTagName = null;\\n        this.currentTmplContent = null;\\n        this.tmplCount = 0;\\n        this.treeAdapter = treeAdapter;\\n    }\\n\\n    //Index of element\\n    _indexOf(element) {\\n        let idx = -1;\\n\\n        for (let i = this.stackTop; i >= 0; i--) {\\n            if (this.items[i] === element) {\\n                idx = i;\\n                break;\\n            }\\n        }\\n        return idx;\\n    }\\n\\n    //Update current element\\n    _isInTemplate() {\\n        return this.currentTagName === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\\n    }\\n\\n    _updateCurrentElement() {\\n        this.current = this.items[this.stackTop];\\n        this.currentTagName = this.current && this.treeAdapter.getTagName(this.current);\\n\\n        this.currentTmplContent = this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : null;\\n    }\\n\\n    //Mutations\\n    push(element) {\\n        this.items[++this.stackTop] = element;\\n        this._updateCurrentElement();\\n\\n        if (this._isInTemplate()) {\\n            this.tmplCount++;\\n        }\\n    }\\n\\n    pop() {\\n        this.stackTop--;\\n\\n        if (this.tmplCount > 0 && this._isInTemplate()) {\\n            this.tmplCount--;\\n        }\\n\\n        this._updateCurrentElement();\\n    }\\n\\n    replace(oldElement, newElement) {\\n        const idx = this._indexOf(oldElement);\\n\\n        this.items[idx] = newElement;\\n\\n        if (idx === this.stackTop) {\\n            this._updateCurrentElement();\\n        }\\n    }\\n\\n    insertAfter(referenceElement, newElement) {\\n        const insertionIdx = this._indexOf(referenceElement) + 1;\\n\\n        this.items.splice(insertionIdx, 0, newElement);\\n\\n        if (insertionIdx === ++this.stackTop) {\\n            this._updateCurrentElement();\\n        }\\n    }\\n\\n    popUntilTagNamePopped(tagName) {\\n        while (this.stackTop > -1) {\\n            const tn = this.currentTagName;\\n            const ns = this.treeAdapter.getNamespaceURI(this.current);\\n\\n            this.pop();\\n\\n            if (tn === tagName && ns === NS.HTML) {\\n                break;\\n            }\\n        }\\n    }\\n\\n    popUntilElementPopped(element) {\\n        while (this.stackTop > -1) {\\n            const poppedElement = this.current;\\n\\n            this.pop();\\n\\n            if (poppedElement === element) {\\n                break;\\n            }\\n        }\\n    }\\n\\n    popUntilNumberedHeaderPopped() {\\n        while (this.stackTop > -1) {\\n            const tn = this.currentTagName;\\n            const ns = this.treeAdapter.getNamespaceURI(this.current);\\n\\n            this.pop();\\n\\n            if (\\n                tn === $.H1 ||\\n                tn === $.H2 ||\\n                tn === $.H3 ||\\n                tn === $.H4 ||\\n                tn === $.H5 ||\\n                (tn === $.H6 && ns === NS.HTML)\\n            ) {\\n                break;\\n            }\\n        }\\n    }\\n\\n    popUntilTableCellPopped() {\\n        while (this.stackTop > -1) {\\n            const tn = this.currentTagName;\\n            const ns = this.treeAdapter.getNamespaceURI(this.current);\\n\\n            this.pop();\\n\\n            if (tn === $.TD || (tn === $.TH && ns === NS.HTML)) {\\n                break;\\n            }\\n        }\\n    }\\n\\n    popAllUpToHtmlElement() {\\n        //NOTE: here we assume that root <html> element is always first in the open element stack, so\\n        //we perform this fast stack clean up.\\n        this.stackTop = 0;\\n        this._updateCurrentElement();\\n    }\\n\\n    clearBackToTableContext() {\\n        while (\\n            (this.currentTagName !== $.TABLE && this.currentTagName !== $.TEMPLATE && this.currentTagName !== $.HTML) ||\\n            this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML\\n        ) {\\n            this.pop();\\n        }\\n    }\\n\\n    clearBackToTableBodyContext() {\\n        while (\\n            (this.currentTagName !== $.TBODY &&\\n                this.currentTagName !== $.TFOOT &&\\n                this.currentTagName !== $.THEAD &&\\n                this.currentTagName !== $.TEMPLATE &&\\n                this.currentTagName !== $.HTML) ||\\n            this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML\\n        ) {\\n            this.pop();\\n        }\\n    }\\n\\n    clearBackToTableRowContext() {\\n        while (\\n            (this.currentTagName !== $.TR && this.currentTagName !== $.TEMPLATE && this.currentTagName !== $.HTML) ||\\n            this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML\\n        ) {\\n            this.pop();\\n        }\\n    }\\n\\n    remove(element) {\\n        for (let i = this.stackTop; i >= 0; i--) {\\n            if (this.items[i] === element) {\\n                this.items.splice(i, 1);\\n                this.stackTop--;\\n                this._updateCurrentElement();\\n                break;\\n            }\\n        }\\n    }\\n\\n    //Search\\n    tryPeekProperlyNestedBodyElement() {\\n        //Properly nested <body> element (should be second element in stack).\\n        const element = this.items[1];\\n\\n        return element && this.treeAdapter.getTagName(element) === $.BODY ? element : null;\\n    }\\n\\n    contains(element) {\\n        return this._indexOf(element) > -1;\\n    }\\n\\n    getCommonAncestor(element) {\\n        let elementIdx = this._indexOf(element);\\n\\n        return --elementIdx >= 0 ? this.items[elementIdx] : null;\\n    }\\n\\n    isRootHtmlElementCurrent() {\\n        return this.stackTop === 0 && this.currentTagName === $.HTML;\\n    }\\n\\n    //Element in scope\\n    hasInScope(tagName) {\\n        for (let i = this.stackTop; i >= 0; i--) {\\n            const tn = this.treeAdapter.getTagName(this.items[i]);\\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\\n\\n            if (tn === tagName && ns === NS.HTML) {\\n                return true;\\n            }\\n\\n            if (isScopingElement(tn, ns)) {\\n                return false;\\n            }\\n        }\\n\\n        return true;\\n    }\\n\\n    hasNumberedHeaderInScope() {\\n        for (let i = this.stackTop; i >= 0; i--) {\\n            const tn = this.treeAdapter.getTagName(this.items[i]);\\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\\n\\n            if (\\n                (tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6) &&\\n                ns === NS.HTML\\n            ) {\\n                return true;\\n            }\\n\\n            if (isScopingElement(tn, ns)) {\\n                return false;\\n            }\\n        }\\n\\n        return true;\\n    }\\n\\n    hasInListItemScope(tagName) {\\n        for (let i = this.stackTop; i >= 0; i--) {\\n            const tn = this.treeAdapter.getTagName(this.items[i]);\\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\\n\\n            if (tn === tagName && ns === NS.HTML) {\\n                return true;\\n            }\\n\\n            if (((tn === $.UL || tn === $.OL) && ns === NS.HTML) || isScopingElement(tn, ns)) {\\n                return false;\\n            }\\n        }\\n\\n        return true;\\n    }\\n\\n    hasInButtonScope(tagName) {\\n        for (let i = this.stackTop; i >= 0; i--) {\\n            const tn = this.treeAdapter.getTagName(this.items[i]);\\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\\n\\n            if (tn === tagName && ns === NS.HTML) {\\n                return true;\\n            }\\n\\n            if ((tn === $.BUTTON && ns === NS.HTML) || isScopingElement(tn, ns)) {\\n                return false;\\n            }\\n        }\\n\\n        return true;\\n    }\\n\\n    hasInTableScope(tagName) {\\n        for (let i = this.stackTop; i >= 0; i--) {\\n            const tn = this.treeAdapter.getTagName(this.items[i]);\\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\\n\\n            if (ns !== NS.HTML) {\\n                continue;\\n            }\\n\\n            if (tn === tagName) {\\n                return true;\\n            }\\n\\n            if (tn === $.TABLE || tn === $.TEMPLATE || tn === $.HTML) {\\n                return false;\\n            }\\n        }\\n\\n        return true;\\n    }\\n\\n    hasTableBodyContextInTableScope() {\\n        for (let i = this.stackTop; i >= 0; i--) {\\n            const tn = this.treeAdapter.getTagName(this.items[i]);\\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\\n\\n            if (ns !== NS.HTML) {\\n                continue;\\n            }\\n\\n            if (tn === $.TBODY || tn === $.THEAD || tn === $.TFOOT) {\\n                return true;\\n            }\\n\\n            if (tn === $.TABLE || tn === $.HTML) {\\n                return false;\\n            }\\n        }\\n\\n        return true;\\n    }\\n\\n    hasInSelectScope(tagName) {\\n        for (let i = this.stackTop; i >= 0; i--) {\\n            const tn = this.treeAdapter.getTagName(this.items[i]);\\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\\n\\n            if (ns !== NS.HTML) {\\n                continue;\\n            }\\n\\n            if (tn === tagName) {\\n                return true;\\n            }\\n\\n            if (tn !== $.OPTION && tn !== $.OPTGROUP) {\\n                return false;\\n            }\\n        }\\n\\n        return true;\\n    }\\n\\n    //Implied end tags\\n    generateImpliedEndTags() {\\n        while (isImpliedEndTagRequired(this.currentTagName)) {\\n            this.pop();\\n        }\\n    }\\n\\n    generateImpliedEndTagsThoroughly() {\\n        while (isImpliedEndTagRequiredThoroughly(this.currentTagName)) {\\n            this.pop();\\n        }\\n    }\\n\\n    generateImpliedEndTagsWithExclusion(exclusionTagName) {\\n        while (isImpliedEndTagRequired(this.currentTagName) && this.currentTagName !== exclusionTagName) {\\n            this.pop();\\n        }\\n    }\\n}\\n\\nmodule.exports = OpenElementStack;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"isImpliedEndTagRequired\",\"tn\",\"length\",\"$\",\"P\",\"RB\",\"RP\",\"RT\",\"DD\",\"DT\",\"LI\",\"RTC\",\"OPTION\",\"OPTGROUP\",\"isImpliedEndTagRequiredThoroughly\",\"TD\",\"TH\",\"TR\",\"TBODY\",\"TFOOT\",\"THEAD\",\"CAPTION\",\"COLGROUP\",\"isScopingElement\",\"ns\",\"NS\",\"HTML\",\"MI\",\"MO\",\"MN\",\"MS\",\"MATHML\",\"DESC\",\"SVG\",\"TABLE\",\"MTEXT\",\"TITLE\",\"APPLET\",\"OBJECT\",\"MARQUEE\",\"TEMPLATE\",\"FOREIGN_OBJECT\",\"ANNOTATION_XML\",\"TAG_NAMES\",\"NAMESPACES\",\"OpenElementStack\",\"constructor\",\"document\",\"treeAdapter\",\"stackTop\",\"items\",\"current\",\"currentTmplContent\",\"currentTagName\",\"tmplCount\",\"_indexOf\",\"element\",\"idx\",\"i\",\"_isInTemplate\",\"getNamespaceURI\",\"_updateCurrentElement\",\"getTagName\",\"getTemplateContent\",\"push\",\"pop\",\"replace\",\"oldElement\",\"newElement\",\"insertAfter\",\"referenceElement\",\"insertionIdx\",\"splice\",\"popUntilTagNamePopped\",\"tagName\",\"popUntilElementPopped\",\"poppedElement\",\"popUntilNumberedHeaderPopped\",\"H1\",\"H2\",\"H3\",\"H4\",\"H5\",\"H6\",\"popUntilTableCellPopped\",\"popAllUpToHtmlElement\",\"clearBackToTableContext\",\"clearBackToTableBodyContext\",\"clearBackToTableRowContext\",\"remove\",\"tryPeekProperlyNestedBodyElement\",\"BODY\",\"contains\",\"getCommonAncestor\",\"elementIdx\",\"isRootHtmlElementCurrent\",\"hasInScope\",\"hasNumberedHeaderInScope\",\"hasInListItemScope\",\"UL\",\"OL\",\"hasInButtonScope\",\"BUTTON\",\"hasInTableScope\",\"hasTableBodyContextInTableScope\",\"hasInSelectScope\",\"generateImpliedEndTags\",\"generateImpliedEndTagsThoroughly\",\"generateImpliedEndTagsWithExclusion\",\"exclusionTagName\"]\n}\n"]