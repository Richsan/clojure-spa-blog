["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/matlab.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$matlab=function(global,require,module,exports){function matlab(Prism){Prism.languages.matlab={comment:[/%\\{[\\s\\S]*?\\}%/,/%.+/],string:{pattern:/\\B'(?:''|[^'\\r\\n])*'/,greedy:!0},number:/(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[eE][+-]?\\d+)?(?:[ij])?|\\b[ij]\\b/,keyword:/\\b(?:NaN|break|case|catch|continue|else|elseif|end|for|function|if|inf|otherwise|parfor|pause|pi|return|switch|try|while)\\b/,function:/\\b(?!\\d)\\w+(?=\\s*\\()/,operator:/\\.?[*^\\/\\\\']|[+\\-:@]|[<>=~]=?|&&?|\\|\\|?/,\npunctuation:/\\.{3}|[.,;\\[\\](){}!]/}}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=matlab;matlab.displayName=\"matlab\";matlab.aliases=[]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$matlab\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = matlab;\n// @ts-nocheck\nmatlab.displayName = 'matlab';\nmatlab.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nfunction matlab(Prism) {\n  Prism.languages.matlab = {\n    comment: [/%\\{[\\s\\S]*?\\}%/, /%.+/],\n    string: {\n      pattern: /\\B'(?:''|[^'\\r\\n])*'/,\n      greedy: true\n    },\n    // FIXME We could handle imaginary numbers as a whole\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[eE][+-]?\\d+)?(?:[ij])?|\\b[ij]\\b/,\n    keyword: /\\b(?:NaN|break|case|catch|continue|else|elseif|end|for|function|if|inf|otherwise|parfor|pause|pi|return|switch|try|while)\\b/,\n    function: /\\b(?!\\d)\\w+(?=\\s*\\()/,\n    operator: /\\.?[*^\\/\\\\']|[+\\-:@]|[<>=~]=?|&&?|\\|\\|?/,\n    punctuation: /\\.{3}|[.,;\\[\\](){}!]/\n  };\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["punctuation","string","aliases","matlab","operator","displayName","__esModule","value","keyword","number","greedy","function","pattern","comment","default"]],"~:compiled-at",1676841365435,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$matlab.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,yCAAA,CAA8D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAYtGC,QAASA,OAAM,CAACC,KAAD,CAAQ,CACrBA,KAAMC,CAAAA,SAAUF,CAAAA,MAAhB,CAAyB,CACvBG,QAAS,CAAC,gBAAD,CAAmB,KAAnB,CADc,CAEvBC,OAAQ,CACNC,QAAS,sBADH,CAENC,OAAQ,CAAA,CAFF,CAFe,CAOvBC,OAAQ,gEAPe,CAQvBC,QAAS,6HARc,CASvBC,SAAU,sBATa,CAUvBC,SAAU,yCAVa;AAWvBC,YAAa,sBAXU,CADJ,CATvBC,MAAOC,CAAAA,cAAP,CAAsBd,OAAtB,CAA+B,YAA/B,CAA6C,CAC3Ce,MAAO,CAAA,CADoC,CAA7C,CAGAf,QAAQgB,CAAAA,OAAR,CAAkBf,MAElBA,OAAOgB,CAAAA,WAAP,CAAqB,QACrBhB,OAAOiB,CAAAA,OAAP,CAAiB,EATqF;\",\n\"sources\":[\"node_modules/refractor/lang/matlab.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$matlab\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = matlab;\\n// @ts-nocheck\\nmatlab.displayName = 'matlab';\\nmatlab.aliases = [];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction matlab(Prism) {\\n  Prism.languages.matlab = {\\n    comment: [/%\\\\{[\\\\s\\\\S]*?\\\\}%/, /%.+/],\\n    string: {\\n      pattern: /\\\\B'(?:''|[^'\\\\r\\\\n])*'/,\\n      greedy: true\\n    },\\n    // FIXME We could handle imaginary numbers as a whole\\n    number: /(?:\\\\b\\\\d+(?:\\\\.\\\\d*)?|\\\\B\\\\.\\\\d+)(?:[eE][+-]?\\\\d+)?(?:[ij])?|\\\\b[ij]\\\\b/,\\n    keyword: /\\\\b(?:NaN|break|case|catch|continue|else|elseif|end|for|function|if|inf|otherwise|parfor|pause|pi|return|switch|try|while)\\\\b/,\\n    function: /\\\\b(?!\\\\d)\\\\w+(?=\\\\s*\\\\()/,\\n    operator: /\\\\.?[*^\\\\/\\\\\\\\']|[+\\\\-:@]|[<>=~]=?|&&?|\\\\|\\\\|?/,\\n    punctuation: /\\\\.{3}|[.,;\\\\[\\\\](){}!]/\\n  };\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"matlab\",\"Prism\",\"languages\",\"comment\",\"string\",\"pattern\",\"greedy\",\"number\",\"keyword\",\"function\",\"operator\",\"punctuation\",\"Object\",\"defineProperty\",\"value\",\"default\",\"displayName\",\"aliases\"]\n}\n"]