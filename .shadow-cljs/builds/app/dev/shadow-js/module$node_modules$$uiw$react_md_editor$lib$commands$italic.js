["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@uiw/react-md-editor/lib/commands/italic.js"],"~:js","shadow$provide.module$node_modules$$uiw$react_md_editor$lib$commands$italic=function(global,require,module,exports){global=require(\"module$node_modules$$babel$runtime$helpers$interopRequireWildcard\")[\"default\"];Object.defineProperty(exports,\"__esModule\",{value:!0});exports.italic=void 0;global(require(\"module$node_modules$react$index\"));var _markdownUtils=require(\"module$node_modules$$uiw$react_md_editor$lib$utils$markdownUtils\");require=require(\"module$node_modules$react$jsx_runtime\");require={name:\"italic\",\nkeyCommand:\"italic\",shortcuts:\"ctrlcmd+i\",value:\"*{{text}}*\",buttonProps:{\"aria-label\":\"Add italic text (ctrl + i)\",title:\"Add italic text (ctrl + i)\"},icon:(0,require.jsx)(\"svg\",{\"data-name\":\"italic\",width:\"12\",height:\"12\",role:\"img\",viewBox:\"0 0 320 512\",children:(0,require.jsx)(\"path\",{fill:\"currentColor\",d:\"M204.758 416h-33.849l62.092-320h40.725a16 16 0 0 0 15.704-12.937l6.242-32C297.599 41.184 290.034 32 279.968 32H120.235a16 16 0 0 0-15.704 12.937l-6.242 32C96.362 86.816 103.927 96 113.993 96h33.846l-62.09 320H46.278a16 16 0 0 0-15.704 12.935l-6.245 32C22.402 470.815 29.967 480 40.034 480h158.479a16 16 0 0 0 15.704-12.935l6.245-32c1.927-9.88-5.638-19.065-15.704-19.065z\"})}),\nexecute:function(state,api){var newSelectionRange=(0,_markdownUtils.selectWord)({text:state.text,selection:state.selection});newSelectionRange=api.setSelectionRange(newSelectionRange);var val=state.command.value||\"\";api.replaceSelection(val.replace(/({{text}})/gi,newSelectionRange.selectedText));state=newSelectionRange.selection.start+val.indexOf(\"{{text}}\");newSelectionRange=newSelectionRange.selection.start+val.indexOf(\"{{text}}\")+(newSelectionRange.selection.end-newSelectionRange.selection.start);\napi.setSelectionRange({start:state,end:newSelectionRange})}};exports.italic=require}","~:source","shadow$provide[\"module$node_modules$$uiw$react_md_editor$lib$commands$italic\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\")[\"default\"];\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.italic = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _markdownUtils = require(\"../utils/markdownUtils\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar italic = {\n  name: 'italic',\n  keyCommand: 'italic',\n  shortcuts: 'ctrlcmd+i',\n  value: '*{{text}}*',\n  buttonProps: {\n    'aria-label': 'Add italic text (ctrl + i)',\n    title: 'Add italic text (ctrl + i)'\n  },\n  icon: /*#__PURE__*/(0, _jsxRuntime.jsx)(\"svg\", {\n    \"data-name\": \"italic\",\n    width: \"12\",\n    height: \"12\",\n    role: \"img\",\n    viewBox: \"0 0 320 512\",\n    children: /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n      fill: \"currentColor\",\n      d: \"M204.758 416h-33.849l62.092-320h40.725a16 16 0 0 0 15.704-12.937l6.242-32C297.599 41.184 290.034 32 279.968 32H120.235a16 16 0 0 0-15.704 12.937l-6.242 32C96.362 86.816 103.927 96 113.993 96h33.846l-62.09 320H46.278a16 16 0 0 0-15.704 12.935l-6.245 32C22.402 470.815 29.967 480 40.034 480h158.479a16 16 0 0 0 15.704-12.935l6.245-32c1.927-9.88-5.638-19.065-15.704-19.065z\"\n    })\n  }),\n  execute: function execute(state, api) {\n    // Adjust the selection to encompass the whole word if the caret is inside one\n    var newSelectionRange = (0, _markdownUtils.selectWord)({\n      text: state.text,\n      selection: state.selection\n    });\n    var state1 = api.setSelectionRange(newSelectionRange);\n    // Replaces the current selection with the bold mark up\n    var val = state.command.value || '';\n    api.replaceSelection(val.replace(/({{text}})/gi, state1.selectedText));\n    var start = state1.selection.start + val.indexOf('{{text}}');\n    var end = state1.selection.start + val.indexOf('{{text}}') + (state1.selection.end - state1.selection.start);\n    // Adjust the selection to not contain the **\n    api.setSelectionRange({\n      start: start,\n      end: end\n    });\n  }\n};\nexports.italic = italic;\n//# sourceMappingURL=italic.js.map\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$react$jsx_runtime","~$module$node_modules$$uiw$react_md_editor$lib$utils$markdownUtils","~$module$node_modules$$babel$runtime$helpers$interopRequireWildcard","~$module$node_modules$react$index","~$shadow.js"]],"~:properties",["^5",["d","role","width","height","shortcuts","children","__esModule","viewBox","name","value","keyCommand","start","text","fill","title","italic","execute","selection","buttonProps","end","icon"]],"~:compiled-at",1676841365512,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$uiw$react_md_editor$lib$commands$italic.js\",\n\"lineCount\":4,\n\"mappings\":\"AAAAA,cAAA,CAAA,4DAAA,CAAiF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGrHC,MAAAA,CAA0BH,OAAA,CAAQ,mEAAR,CAAA,CAAyD,SAAzD,CAC9BI,OAAOC,CAAAA,cAAP,CAAsBH,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CI,MAAO,CAAA,CADoC,CAA7C,CAGAJ,QAAQK,CAAAA,MAAR,CAAiB,IAAK,EACVJ,OAAA,CAAwBH,OAAA,CAAQ,iCAAR,CAAxB,CACZ,KAAIQ,eAAiBR,OAAA,CAAQ,kEAAR,CACjBS,QAAAA,CAAcT,OAAA,CAAQ,uCAAR,CACdO,QAAAA,CAAS,CACXG,KAAM,QADK;AAEXC,WAAY,QAFD,CAGXC,UAAW,WAHA,CAIXN,MAAO,YAJI,CAKXO,YAAa,CACX,aAAc,4BADH,CAEXC,MAAO,4BAFI,CALF,CASXC,KAAmB,GAAIN,OAAYO,CAAAA,GAAhB,EAAqB,KAArB,CAA4B,CAC7C,YAAa,QADgC,CAE7CC,MAAO,IAFsC,CAG7CC,OAAQ,IAHqC,CAI7CC,KAAM,KAJuC,CAK7CC,QAAS,aALoC,CAM7CC,SAAuB,GAAIZ,OAAYO,CAAAA,GAAhB,EAAqB,MAArB,CAA6B,CAClDM,KAAM,cAD4C,CAElDC,EAAG,oXAF+C,CAA7B,CANsB,CAA5B,CATR;AAoBXC,QAASA,QAAgB,CAACC,KAAD,CAAQC,GAAR,CAAa,CAEpC,IAAIC,kBAAoB,GAAInB,cAAeoB,CAAAA,UAAnB,EAA+B,CACrDC,KAAMJ,KAAMI,CAAAA,IADyC,CAErDC,UAAWL,KAAMK,CAAAA,SAFoC,CAA/B,CAIpBC,kBAAAA,CAASL,GAAIM,CAAAA,iBAAJ,CAAsBL,iBAAtB,CAEb,KAAIM,IAAMR,KAAMS,CAAAA,OAAQ5B,CAAAA,KAApB2B,EAA6B,EACjCP,IAAIS,CAAAA,gBAAJ,CAAqBF,GAAIG,CAAAA,OAAJ,CAAY,cAAZ,CAA4BL,iBAAOM,CAAAA,YAAnC,CAArB,CACIC,MAAAA,CAAQP,iBAAOD,CAAAA,SAAUQ,CAAAA,KAAzBA,CAAiCL,GAAIM,CAAAA,OAAJ,CAAY,UAAZ,CACjCC,kBAAAA,CAAMT,iBAAOD,CAAAA,SAAUQ,CAAAA,KAAvBE,CAA+BP,GAAIM,CAAAA,OAAJ,CAAY,UAAZ,CAA/BC,EAA0DT,iBAAOD,CAAAA,SAAUU,CAAAA,GAA3EA,CAAiFT,iBAAOD,CAAAA,SAAUQ,CAAAA,KAAlGE,CAEJd;GAAIM,CAAAA,iBAAJ,CAAsB,CACpBM,MAAOA,KADa,CAEpBE,IAAKA,iBAFe,CAAtB,CAboC,CApB3B,CAuCbtC,QAAQK,CAAAA,MAAR,CAAiBA,OAlDwG;\",\n\"sources\":[\"node_modules/@uiw/react-md-editor/lib/commands/italic.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$uiw$react_md_editor$lib$commands$italic\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nvar _interopRequireWildcard = require(\\\"@babel/runtime/helpers/interopRequireWildcard\\\")[\\\"default\\\"];\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.italic = void 0;\\nvar React = _interopRequireWildcard(require(\\\"react\\\"));\\nvar _markdownUtils = require(\\\"../utils/markdownUtils\\\");\\nvar _jsxRuntime = require(\\\"react/jsx-runtime\\\");\\nvar italic = {\\n  name: 'italic',\\n  keyCommand: 'italic',\\n  shortcuts: 'ctrlcmd+i',\\n  value: '*{{text}}*',\\n  buttonProps: {\\n    'aria-label': 'Add italic text (ctrl + i)',\\n    title: 'Add italic text (ctrl + i)'\\n  },\\n  icon: /*#__PURE__*/(0, _jsxRuntime.jsx)(\\\"svg\\\", {\\n    \\\"data-name\\\": \\\"italic\\\",\\n    width: \\\"12\\\",\\n    height: \\\"12\\\",\\n    role: \\\"img\\\",\\n    viewBox: \\\"0 0 320 512\\\",\\n    children: /*#__PURE__*/(0, _jsxRuntime.jsx)(\\\"path\\\", {\\n      fill: \\\"currentColor\\\",\\n      d: \\\"M204.758 416h-33.849l62.092-320h40.725a16 16 0 0 0 15.704-12.937l6.242-32C297.599 41.184 290.034 32 279.968 32H120.235a16 16 0 0 0-15.704 12.937l-6.242 32C96.362 86.816 103.927 96 113.993 96h33.846l-62.09 320H46.278a16 16 0 0 0-15.704 12.935l-6.245 32C22.402 470.815 29.967 480 40.034 480h158.479a16 16 0 0 0 15.704-12.935l6.245-32c1.927-9.88-5.638-19.065-15.704-19.065z\\\"\\n    })\\n  }),\\n  execute: function execute(state, api) {\\n    // Adjust the selection to encompass the whole word if the caret is inside one\\n    var newSelectionRange = (0, _markdownUtils.selectWord)({\\n      text: state.text,\\n      selection: state.selection\\n    });\\n    var state1 = api.setSelectionRange(newSelectionRange);\\n    // Replaces the current selection with the bold mark up\\n    var val = state.command.value || '';\\n    api.replaceSelection(val.replace(/({{text}})/gi, state1.selectedText));\\n    var start = state1.selection.start + val.indexOf('{{text}}');\\n    var end = state1.selection.start + val.indexOf('{{text}}') + (state1.selection.end - state1.selection.start);\\n    // Adjust the selection to not contain the **\\n    api.setSelectionRange({\\n      start: start,\\n      end: end\\n    });\\n  }\\n};\\nexports.italic = italic;\\n//# sourceMappingURL=italic.js.map\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_interopRequireWildcard\",\"Object\",\"defineProperty\",\"value\",\"italic\",\"_markdownUtils\",\"_jsxRuntime\",\"name\",\"keyCommand\",\"shortcuts\",\"buttonProps\",\"title\",\"icon\",\"jsx\",\"width\",\"height\",\"role\",\"viewBox\",\"children\",\"fill\",\"d\",\"execute\",\"state\",\"api\",\"newSelectionRange\",\"selectWord\",\"text\",\"selection\",\"state1\",\"setSelectionRange\",\"val\",\"command\",\"replaceSelection\",\"replace\",\"selectedText\",\"start\",\"indexOf\",\"end\"]\n}\n"]