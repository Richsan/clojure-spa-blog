["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@mui/base/node/BadgeUnstyled/useBadge.js"],"~:js","shadow$provide.module$node_modules$$mui$base$node$BadgeUnstyled$useBadge=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=function(parameters){const {badgeContent:badgeContentProp,invisible:invisibleProp=!1,max:maxProp=99,showZero=!1}=parameters,prevProps=(0,_utils.usePreviousProps)({badgeContent:badgeContentProp,max:maxProp});let invisible=invisibleProp;!1!==invisibleProp||0!==badgeContentProp||showZero||(invisible=!0);const {badgeContent,\nmax=maxProp}=invisible?prevProps:parameters;return{badgeContent,invisible,max,displayValue:badgeContent&&Number(badgeContent)>max?`${max}+`:badgeContent}};var _utils=require(\"module$node_modules$$mui$utils$index\")}","~:source","shadow$provide[\"module$node_modules$$mui$base$node$BadgeUnstyled$useBadge\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useBadge;\nvar _utils = require(\"@mui/utils\");\n/**\n *\n * Demos:\n *\n * - [Unstyled badge](https://mui.com/base/react-badge/#hook)\n *\n * API:\n *\n * - [useBadge API](https://mui.com/base/api/use-badge/)\n */\nfunction useBadge(parameters) {\n  const {\n    badgeContent: badgeContentProp,\n    invisible: invisibleProp = false,\n    max: maxProp = 99,\n    showZero = false\n  } = parameters;\n  const prevProps = (0, _utils.usePreviousProps)({\n    badgeContent: badgeContentProp,\n    max: maxProp\n  });\n  let invisible = invisibleProp;\n  if (invisibleProp === false && badgeContentProp === 0 && !showZero) {\n    invisible = true;\n  }\n  const {\n    badgeContent,\n    max = maxProp\n  } = invisible ? prevProps : parameters;\n  const displayValue = badgeContent && Number(badgeContent) > max ? `${max}+` : badgeContent;\n  return {\n    badgeContent,\n    invisible,\n    max,\n    displayValue\n  };\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$$mui$utils$index","~$shadow.js"]],"~:properties",["^5",["__esModule","max","displayValue","value","badgeContent","default","invisible"]],"~:compiled-at",1676594832604,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$mui$base$node$BadgeUnstyled$useBadge.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,yDAAA,CAA8E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGtHC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,OAAR,CAYAC,QAAiB,CAACC,UAAD,CAAa,CAC5B,MAAM,CACJ,aAAcC,gBADV,CAEJ,UAAWC,aAAA,CAAgB,CAAA,CAFvB,CAGJ,IAAKC,OAAA,CAAU,EAHX,CAIJC,QAAA,CAAW,CAAA,CAJP,CAAA,CAKFJ,UALJ,CAMMK,UAAY,GAAIC,MAAOC,CAAAA,gBAAX,EAA6B,CAC7CC,aAAcP,gBAD+B,CAE7CQ,IAAKN,OAFwC,CAA7B,CAIlB,KAAIO,UAAYR,aACM,EAAA,CAAtB,GAAIA,aAAJ,EAAoD,CAApD,GAA+BD,gBAA/B,EAA0DG,QAA1D,GACEM,SADF,CACc,CAAA,CADd,CAGA,OAAM,CACJF,YADI;AAEJC,GAAA,CAAMN,OAFF,CAAA,CAGFO,SAAA,CAAYL,SAAZ,CAAwBL,UAE5B,OAAO,CACLQ,YADK,CAELE,SAFK,CAGLD,GAHK,CAILE,aALmBH,YAAAG,EAAgBC,MAAA,CAAOJ,YAAP,CAAhBG,CAAuCF,GAAvCE,CAA8C,GAAEF,GAAF,GAA9CE,CAAyDH,YACvE,CApBqB,CAX9B,KAAIF,OAASd,OAAA,CAAQ,sCAAR,CAPyG;\",\n\"sources\":[\"node_modules/@mui/base/node/BadgeUnstyled/useBadge.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$mui$base$node$BadgeUnstyled$useBadge\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = useBadge;\\nvar _utils = require(\\\"@mui/utils\\\");\\n/**\\n *\\n * Demos:\\n *\\n * - [Unstyled badge](https://mui.com/base/react-badge/#hook)\\n *\\n * API:\\n *\\n * - [useBadge API](https://mui.com/base/api/use-badge/)\\n */\\nfunction useBadge(parameters) {\\n  const {\\n    badgeContent: badgeContentProp,\\n    invisible: invisibleProp = false,\\n    max: maxProp = 99,\\n    showZero = false\\n  } = parameters;\\n  const prevProps = (0, _utils.usePreviousProps)({\\n    badgeContent: badgeContentProp,\\n    max: maxProp\\n  });\\n  let invisible = invisibleProp;\\n  if (invisibleProp === false && badgeContentProp === 0 && !showZero) {\\n    invisible = true;\\n  }\\n  const {\\n    badgeContent,\\n    max = maxProp\\n  } = invisible ? prevProps : parameters;\\n  const displayValue = badgeContent && Number(badgeContent) > max ? `${max}+` : badgeContent;\\n  return {\\n    badgeContent,\\n    invisible,\\n    max,\\n    displayValue\\n  };\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"default\",\"useBadge\",\"parameters\",\"badgeContentProp\",\"invisibleProp\",\"maxProp\",\"showZero\",\"prevProps\",\"_utils\",\"usePreviousProps\",\"badgeContent\",\"max\",\"invisible\",\"displayValue\",\"Number\"]\n}\n"]