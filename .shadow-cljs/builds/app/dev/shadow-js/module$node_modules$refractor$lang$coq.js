["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/coq.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$coq=function(global,require,module,exports){function coq(Prism$jscomp$0){(function(Prism){for(var commentSource=/\\(\\*(?:[^(*]|\\((?!\\*)|\\*(?!\\))|<self>)*\\*\\)/.source,i=0;2>i;i++)commentSource=commentSource.replace(/<self>/g,function(){return commentSource});commentSource=commentSource.replace(/<self>/g,\"[]\");Prism.languages.coq={comment:RegExp(commentSource),string:{pattern:/\"(?:[^\"]|\"\")*\"(?!\")/,greedy:!0},attribute:[{pattern:RegExp(/#\\[(?:[^\\[\\](\"]|\"(?:[^\"]|\"\")*\"(?!\")|\\((?!\\*)|<comment>)*\\]/.source.replace(/<comment>/g,\nfunction(){return commentSource})),greedy:!0,alias:\"attr-name\",inside:{comment:RegExp(commentSource),string:{pattern:/\"(?:[^\"]|\"\")*\"(?!\")/,greedy:!0},operator:/=/,punctuation:/^#\\[|\\]$|[,()]/}},{pattern:/\\b(?:Cumulative|Global|Local|Monomorphic|NonCumulative|Polymorphic|Private|Program)\\b/,alias:\"attr-name\"}],keyword:/\\b(?:Abort|About|Add|Admit|Admitted|All|Arguments|As|Assumptions|Axiom|Axioms|Back|BackTo|Backtrace|BinOp|BinOpSpec|BinRel|Bind|Blacklist|Canonical|Case|Cd|Check|Class|Classes|Close|CoFixpoint|CoInductive|Coercion|Coercions|Collection|Combined|Compute|Conjecture|Conjectures|Constant|Constants|Constraint|Constructors|Context|Corollary|Create|CstOp|Custom|Cut|Debug|Declare|Defined|Definition|Delimit|Dependencies|Dependent|Derive|Diffs|Drop|Elimination|End|Entry|Equality|Eval|Example|Existential|Existentials|Existing|Export|Extern|Extraction|Fact|Fail|Field|File|Firstorder|Fixpoint|Flags|Focus|From|Funclass|Function|Functional|GC|Generalizable|Goal|Grab|Grammar|Graph|Guarded|Haskell|Heap|Hide|Hint|HintDb|Hints|Hypotheses|Hypothesis|IF|Identity|Immediate|Implicit|Implicits|Import|Include|Induction|Inductive|Infix|Info|Initial|InjTyp|Inline|Inspect|Instance|Instances|Intro|Intros|Inversion|Inversion_clear|JSON|Language|Left|Lemma|Let|Lia|Libraries|Library|Load|LoadPath|Locate|Ltac|Ltac2|ML|Match|Method|Minimality|Module|Modules|Morphism|Next|NoInline|Notation|Number|OCaml|Obligation|Obligations|Opaque|Open|Optimize|Parameter|Parameters|Parametric|Path|Paths|Prenex|Preterm|Primitive|Print|Profile|Projections|Proof|Prop|PropBinOp|PropOp|PropUOp|Property|Proposition|Pwd|Qed|Quit|Rec|Record|Recursive|Redirect|Reduction|Register|Relation|Remark|Remove|Require|Reserved|Reset|Resolve|Restart|Rewrite|Right|Ring|Rings|SProp|Saturate|Save|Scheme|Scope|Scopes|Search|SearchHead|SearchPattern|SearchRewrite|Section|Separate|Set|Setoid|Show|Signatures|Solve|Solver|Sort|Sortclass|Sorted|Spec|Step|Strategies|Strategy|String|Structure|SubClass|Subgraph|SuchThat|Tactic|Term|TestCompile|Theorem|Time|Timeout|To|Transparent|Type|Typeclasses|Types|Typing|UnOp|UnOpSpec|Undelimit|Undo|Unfocus|Unfocused|Unfold|Universe|Universes|Unshelve|Variable|Variables|Variant|Verbose|View|Visibility|Zify|_|apply|as|at|by|cofix|else|end|exists|exists2|fix|for|forall|fun|if|in|let|match|measure|move|removed|return|struct|then|using|wf|where|with)\\b/,\nnumber:/\\b(?:0x[a-f0-9][a-f0-9_]*(?:\\.[a-f0-9_]+)?(?:p[+-]?\\d[\\d_]*)?|\\d[\\d_]*(?:\\.[\\d_]+)?(?:e[+-]?\\d[\\d_]*)?)\\b/i,punct:{pattern:/@\\{|\\{\\||\\[=|:>/,alias:\"punctuation\"},operator:/\\/\\\\|\\\\\\/|\\.{2,3}|:{1,2}=|\\*\\*|[-=]>|<(?:->?|[+:=>]|<:)|>(?:=|->)|\\|[-|]?|[-!%&*+/<=>?@^~']/,punctuation:/\\.\\(|`\\(|@\\{|`\\{|\\{\\||\\[=|:>|[:.,;(){}\\[\\]]/}})(Prism$jscomp$0)}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=coq;coq.displayName=\"coq\";coq.aliases=[]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$coq\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = coq;\n// @ts-nocheck\ncoq.displayName = 'coq';\ncoq.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nfunction coq(Prism) {\n  ;\n\n  (function (Prism) {\n    // https://github.com/coq/coq\n    var commentSource = /\\(\\*(?:[^(*]|\\((?!\\*)|\\*(?!\\))|<self>)*\\*\\)/.source;\n\n    for (var i = 0; i < 2; i++) {\n      commentSource = commentSource.replace(/<self>/g, function () {\n        return commentSource;\n      });\n    }\n\n    commentSource = commentSource.replace(/<self>/g, '[]');\n    Prism.languages.coq = {\n      comment: RegExp(commentSource),\n      string: {\n        pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n        greedy: true\n      },\n      attribute: [{\n        pattern: RegExp(/#\\[(?:[^\\[\\](\"]|\"(?:[^\"]|\"\")*\"(?!\")|\\((?!\\*)|<comment>)*\\]/.source.replace(/<comment>/g, function () {\n          return commentSource;\n        })),\n        greedy: true,\n        alias: 'attr-name',\n        inside: {\n          comment: RegExp(commentSource),\n          string: {\n            pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n            greedy: true\n          },\n          operator: /=/,\n          punctuation: /^#\\[|\\]$|[,()]/\n        }\n      }, {\n        pattern: /\\b(?:Cumulative|Global|Local|Monomorphic|NonCumulative|Polymorphic|Private|Program)\\b/,\n        alias: 'attr-name'\n      }],\n      keyword: /\\b(?:Abort|About|Add|Admit|Admitted|All|Arguments|As|Assumptions|Axiom|Axioms|Back|BackTo|Backtrace|BinOp|BinOpSpec|BinRel|Bind|Blacklist|Canonical|Case|Cd|Check|Class|Classes|Close|CoFixpoint|CoInductive|Coercion|Coercions|Collection|Combined|Compute|Conjecture|Conjectures|Constant|Constants|Constraint|Constructors|Context|Corollary|Create|CstOp|Custom|Cut|Debug|Declare|Defined|Definition|Delimit|Dependencies|Dependent|Derive|Diffs|Drop|Elimination|End|Entry|Equality|Eval|Example|Existential|Existentials|Existing|Export|Extern|Extraction|Fact|Fail|Field|File|Firstorder|Fixpoint|Flags|Focus|From|Funclass|Function|Functional|GC|Generalizable|Goal|Grab|Grammar|Graph|Guarded|Haskell|Heap|Hide|Hint|HintDb|Hints|Hypotheses|Hypothesis|IF|Identity|Immediate|Implicit|Implicits|Import|Include|Induction|Inductive|Infix|Info|Initial|InjTyp|Inline|Inspect|Instance|Instances|Intro|Intros|Inversion|Inversion_clear|JSON|Language|Left|Lemma|Let|Lia|Libraries|Library|Load|LoadPath|Locate|Ltac|Ltac2|ML|Match|Method|Minimality|Module|Modules|Morphism|Next|NoInline|Notation|Number|OCaml|Obligation|Obligations|Opaque|Open|Optimize|Parameter|Parameters|Parametric|Path|Paths|Prenex|Preterm|Primitive|Print|Profile|Projections|Proof|Prop|PropBinOp|PropOp|PropUOp|Property|Proposition|Pwd|Qed|Quit|Rec|Record|Recursive|Redirect|Reduction|Register|Relation|Remark|Remove|Require|Reserved|Reset|Resolve|Restart|Rewrite|Right|Ring|Rings|SProp|Saturate|Save|Scheme|Scope|Scopes|Search|SearchHead|SearchPattern|SearchRewrite|Section|Separate|Set|Setoid|Show|Signatures|Solve|Solver|Sort|Sortclass|Sorted|Spec|Step|Strategies|Strategy|String|Structure|SubClass|Subgraph|SuchThat|Tactic|Term|TestCompile|Theorem|Time|Timeout|To|Transparent|Type|Typeclasses|Types|Typing|UnOp|UnOpSpec|Undelimit|Undo|Unfocus|Unfocused|Unfold|Universe|Universes|Unshelve|Variable|Variables|Variant|Verbose|View|Visibility|Zify|_|apply|as|at|by|cofix|else|end|exists|exists2|fix|for|forall|fun|if|in|let|match|measure|move|removed|return|struct|then|using|wf|where|with)\\b/,\n      number: /\\b(?:0x[a-f0-9][a-f0-9_]*(?:\\.[a-f0-9_]+)?(?:p[+-]?\\d[\\d_]*)?|\\d[\\d_]*(?:\\.[\\d_]+)?(?:e[+-]?\\d[\\d_]*)?)\\b/i,\n      punct: {\n        pattern: /@\\{|\\{\\||\\[=|:>/,\n        alias: 'punctuation'\n      },\n      operator: /\\/\\\\|\\\\\\/|\\.{2,3}|:{1,2}=|\\*\\*|[-=]>|<(?:->?|[+:=>]|<:)|>(?:=|->)|\\|[-|]?|[-!%&*+/<=>?@^~']/,\n      punctuation: /\\.\\(|`\\(|@\\{|`\\{|\\{\\||\\[=|:>|[:.,;(){}\\[\\]]/\n    };\n  })(Prism);\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["punctuation","string","aliases","punct","operator","displayName","__esModule","attribute","value","keyword","number","greedy","pattern","inside","coq","alias","comment","default"]],"~:compiled-at",1676841365402,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$coq.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,CAAA,sCAAA,CAA2D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAYnGC,QAASA,IAAG,CAACC,cAAD,CAAQ,CAGjB,SAAS,CAACA,KAAD,CAAQ,CAIhB,IAFA,IAAIC,cAAgB,6CAA8CC,CAAAA,MAAlE,CAESC,EAAI,CAAb,CAAoB,CAApB,CAAgBA,CAAhB,CAAuBA,CAAA,EAAvB,CACEF,aAAA,CAAgBA,aAAcG,CAAAA,OAAd,CAAsB,SAAtB,CAAiC,QAAS,EAAG,CAC3D,MAAOH,cADoD,CAA7C,CAKlBA,cAAA,CAAgBA,aAAcG,CAAAA,OAAd,CAAsB,SAAtB,CAAiC,IAAjC,CAChBJ,MAAMK,CAAAA,SAAUN,CAAAA,GAAhB,CAAsB,CACpBO,QAASC,MAAA,CAAON,aAAP,CADW,CAEpBO,OAAQ,CACNC,QAAS,qBADH,CAENC,OAAQ,CAAA,CAFF,CAFY,CAMpBC,UAAW,CAAC,CACVF,QAASF,MAAA,CAAO,4DAA6DL,CAAAA,MAAOE,CAAAA,OAApE,CAA4E,YAA5E;AAA0F,QAAS,EAAG,CACpH,MAAOH,cAD6G,CAAtG,CAAP,CADC,CAIVS,OAAQ,CAAA,CAJE,CAKVE,MAAO,WALG,CAMVC,OAAQ,CACNP,QAASC,MAAA,CAAON,aAAP,CADH,CAENO,OAAQ,CACNC,QAAS,qBADH,CAENC,OAAQ,CAAA,CAFF,CAFF,CAMNI,SAAU,GANJ,CAONC,YAAa,gBAPP,CANE,CAAD,CAeR,CACDN,QAAS,uFADR,CAEDG,MAAO,WAFN,CAfQ,CANS,CAyBpBI,QAAS,y/DAzBW;AA0BpBC,OAAQ,4GA1BY,CA2BpBC,MAAO,CACLT,QAAS,iBADJ,CAELG,MAAO,aAFF,CA3Ba,CA+BpBE,SAAU,6FA/BU,CAgCpBC,YAAa,6CAhCO,CAXN,CAAjB,CAAD,CA6CGf,cA7CH,CAHkB,CATpBmB,MAAOC,CAAAA,cAAP,CAAsBtB,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CuB,MAAO,CAAA,CADoC,CAA7C,CAGAvB,QAAQwB,CAAAA,OAAR,CAAkBvB,GAElBA,IAAIwB,CAAAA,WAAJ,CAAkB,KAClBxB,IAAIyB,CAAAA,OAAJ,CAAc,EATqF;\",\n\"sources\":[\"node_modules/refractor/lang/coq.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$coq\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = coq;\\n// @ts-nocheck\\ncoq.displayName = 'coq';\\ncoq.aliases = [];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction coq(Prism) {\\n  ;\\n\\n  (function (Prism) {\\n    // https://github.com/coq/coq\\n    var commentSource = /\\\\(\\\\*(?:[^(*]|\\\\((?!\\\\*)|\\\\*(?!\\\\))|<self>)*\\\\*\\\\)/.source;\\n\\n    for (var i = 0; i < 2; i++) {\\n      commentSource = commentSource.replace(/<self>/g, function () {\\n        return commentSource;\\n      });\\n    }\\n\\n    commentSource = commentSource.replace(/<self>/g, '[]');\\n    Prism.languages.coq = {\\n      comment: RegExp(commentSource),\\n      string: {\\n        pattern: /\\\"(?:[^\\\"]|\\\"\\\")*\\\"(?!\\\")/,\\n        greedy: true\\n      },\\n      attribute: [{\\n        pattern: RegExp(/#\\\\[(?:[^\\\\[\\\\](\\\"]|\\\"(?:[^\\\"]|\\\"\\\")*\\\"(?!\\\")|\\\\((?!\\\\*)|<comment>)*\\\\]/.source.replace(/<comment>/g, function () {\\n          return commentSource;\\n        })),\\n        greedy: true,\\n        alias: 'attr-name',\\n        inside: {\\n          comment: RegExp(commentSource),\\n          string: {\\n            pattern: /\\\"(?:[^\\\"]|\\\"\\\")*\\\"(?!\\\")/,\\n            greedy: true\\n          },\\n          operator: /=/,\\n          punctuation: /^#\\\\[|\\\\]$|[,()]/\\n        }\\n      }, {\\n        pattern: /\\\\b(?:Cumulative|Global|Local|Monomorphic|NonCumulative|Polymorphic|Private|Program)\\\\b/,\\n        alias: 'attr-name'\\n      }],\\n      keyword: /\\\\b(?:Abort|About|Add|Admit|Admitted|All|Arguments|As|Assumptions|Axiom|Axioms|Back|BackTo|Backtrace|BinOp|BinOpSpec|BinRel|Bind|Blacklist|Canonical|Case|Cd|Check|Class|Classes|Close|CoFixpoint|CoInductive|Coercion|Coercions|Collection|Combined|Compute|Conjecture|Conjectures|Constant|Constants|Constraint|Constructors|Context|Corollary|Create|CstOp|Custom|Cut|Debug|Declare|Defined|Definition|Delimit|Dependencies|Dependent|Derive|Diffs|Drop|Elimination|End|Entry|Equality|Eval|Example|Existential|Existentials|Existing|Export|Extern|Extraction|Fact|Fail|Field|File|Firstorder|Fixpoint|Flags|Focus|From|Funclass|Function|Functional|GC|Generalizable|Goal|Grab|Grammar|Graph|Guarded|Haskell|Heap|Hide|Hint|HintDb|Hints|Hypotheses|Hypothesis|IF|Identity|Immediate|Implicit|Implicits|Import|Include|Induction|Inductive|Infix|Info|Initial|InjTyp|Inline|Inspect|Instance|Instances|Intro|Intros|Inversion|Inversion_clear|JSON|Language|Left|Lemma|Let|Lia|Libraries|Library|Load|LoadPath|Locate|Ltac|Ltac2|ML|Match|Method|Minimality|Module|Modules|Morphism|Next|NoInline|Notation|Number|OCaml|Obligation|Obligations|Opaque|Open|Optimize|Parameter|Parameters|Parametric|Path|Paths|Prenex|Preterm|Primitive|Print|Profile|Projections|Proof|Prop|PropBinOp|PropOp|PropUOp|Property|Proposition|Pwd|Qed|Quit|Rec|Record|Recursive|Redirect|Reduction|Register|Relation|Remark|Remove|Require|Reserved|Reset|Resolve|Restart|Rewrite|Right|Ring|Rings|SProp|Saturate|Save|Scheme|Scope|Scopes|Search|SearchHead|SearchPattern|SearchRewrite|Section|Separate|Set|Setoid|Show|Signatures|Solve|Solver|Sort|Sortclass|Sorted|Spec|Step|Strategies|Strategy|String|Structure|SubClass|Subgraph|SuchThat|Tactic|Term|TestCompile|Theorem|Time|Timeout|To|Transparent|Type|Typeclasses|Types|Typing|UnOp|UnOpSpec|Undelimit|Undo|Unfocus|Unfocused|Unfold|Universe|Universes|Unshelve|Variable|Variables|Variant|Verbose|View|Visibility|Zify|_|apply|as|at|by|cofix|else|end|exists|exists2|fix|for|forall|fun|if|in|let|match|measure|move|removed|return|struct|then|using|wf|where|with)\\\\b/,\\n      number: /\\\\b(?:0x[a-f0-9][a-f0-9_]*(?:\\\\.[a-f0-9_]+)?(?:p[+-]?\\\\d[\\\\d_]*)?|\\\\d[\\\\d_]*(?:\\\\.[\\\\d_]+)?(?:e[+-]?\\\\d[\\\\d_]*)?)\\\\b/i,\\n      punct: {\\n        pattern: /@\\\\{|\\\\{\\\\||\\\\[=|:>/,\\n        alias: 'punctuation'\\n      },\\n      operator: /\\\\/\\\\\\\\|\\\\\\\\\\\\/|\\\\.{2,3}|:{1,2}=|\\\\*\\\\*|[-=]>|<(?:->?|[+:=>]|<:)|>(?:=|->)|\\\\|[-|]?|[-!%&*+/<=>?@^~']/,\\n      punctuation: /\\\\.\\\\(|`\\\\(|@\\\\{|`\\\\{|\\\\{\\\\||\\\\[=|:>|[:.,;(){}\\\\[\\\\]]/\\n    };\\n  })(Prism);\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"coq\",\"Prism\",\"commentSource\",\"source\",\"i\",\"replace\",\"languages\",\"comment\",\"RegExp\",\"string\",\"pattern\",\"greedy\",\"attribute\",\"alias\",\"inside\",\"operator\",\"punctuation\",\"keyword\",\"number\",\"punct\",\"Object\",\"defineProperty\",\"value\",\"default\",\"displayName\",\"aliases\"]\n}\n"]