["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/highlight_DOT_js/lib/languages/yaml.js"],"~:js","shadow$provide.module$node_modules$highlight_DOT_js$lib$languages$yaml=function(global,require,module,exports){module.exports=function(hljs){var STRING={className:\"string\",relevance:0,variants:[{begin:/'/,end:/'/},{begin:/\"/,end:/\"/},{begin:/\\S+/}],contains:[hljs.BACKSLASH_ESCAPE,{className:\"template-variable\",variants:[{begin:/\\{\\{/,end:/\\}\\}/},{begin:/%\\{/,end:/\\}/}]}]};const CONTAINER_STRING=hljs.inherit(STRING,{variants:[{begin:/'/,end:/'/},{begin:/\"/,end:/\"/},{begin:/[^\\s,{}[\\]]+/}]}),VALUE_CONTAINER=\n{end:\",\",endsWithParent:!0,excludeEnd:!0,keywords:\"true false yes no null\",relevance:0};hljs=[{className:\"attr\",variants:[{begin:\"\\\\w[\\\\w :\\\\/.-]*:(?\\x3d[ \\t]|$)\"},{begin:'\"\\\\w[\\\\w :\\\\/.-]*\":(?\\x3d[ \\t]|$)'},{begin:\"'\\\\w[\\\\w :\\\\/.-]*':(?\\x3d[ \\t]|$)\"}]},{className:\"meta\",begin:\"^---\\\\s*$\",relevance:10},{className:\"string\",begin:\"[\\\\|\\x3e]([1-9]?[+-])?[ ]*\\\\n( +)[^ ][^\\\\n]*\\\\n(\\\\2[^\\\\n]+\\\\n?)*\"},{begin:\"\\x3c%[%\\x3d-]?\",end:\"[%-]?%\\x3e\",subLanguage:\"ruby\",excludeBegin:!0,excludeEnd:!0,relevance:0},\n{className:\"type\",begin:\"!\\\\w+![\\\\w#;/?:@\\x26\\x3d+$,.~*'()[\\\\]]+\"},{className:\"type\",begin:\"!\\x3c[\\\\w#;/?:@\\x26\\x3d+$,.~*'()[\\\\]]+\\x3e\"},{className:\"type\",begin:\"![\\\\w#;/?:@\\x26\\x3d+$,.~*'()[\\\\]]+\"},{className:\"type\",begin:\"!![\\\\w#;/?:@\\x26\\x3d+$,.~*'()[\\\\]]+\"},{className:\"meta\",begin:\"\\x26\"+hljs.UNDERSCORE_IDENT_RE+\"$\"},{className:\"meta\",begin:\"\\\\*\"+hljs.UNDERSCORE_IDENT_RE+\"$\"},{className:\"bullet\",begin:\"-(?\\x3d[ ]|$)\",relevance:0},hljs.HASH_COMMENT_MODE,{beginKeywords:\"true false yes no null\",\nkeywords:{literal:\"true false yes no null\"}},{className:\"number\",begin:\"\\\\b[0-9]{4}(-[0-9][0-9]){0,2}([Tt \\\\t][0-9][0-9]?(:[0-9][0-9]){2})?(\\\\.[0-9]*)?([ \\\\t])*(Z|[-+][0-9][0-9]?(:[0-9][0-9])?)?\\\\b\"},{className:\"number\",begin:hljs.C_NUMBER_RE+\"\\\\b\",relevance:0},{begin:/\\{/,end:/\\}/,contains:[VALUE_CONTAINER],illegal:\"\\\\n\",relevance:0},{begin:\"\\\\[\",end:\"\\\\]\",contains:[VALUE_CONTAINER],illegal:\"\\\\n\",relevance:0},STRING];STRING=[...hljs];STRING.pop();STRING.push(CONTAINER_STRING);VALUE_CONTAINER.contains=\nSTRING;return{name:\"YAML\",case_insensitive:!0,aliases:[\"yml\"],contains:hljs}}}","~:source","shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$yaml\"] = function(global,require,module,exports) {\n/*\nLanguage: YAML\nDescription: Yet Another Markdown Language\nAuthor: Stefan Wienert <stwienert@gmail.com>\nContributors: Carl Baxter <carl@cbax.tech>\nRequires: ruby.js\nWebsite: https://yaml.org\nCategory: common, config\n*/\nfunction yaml(hljs) {\n  const LITERALS = 'true false yes no null';\n\n  // YAML spec allows non-reserved URI characters in tags.\n  const URI_CHARACTERS = '[\\\\w#;/?:@&=+$,.~*\\'()[\\\\]]+';\n\n  // Define keys as starting with a word character\n  // ...containing word chars, spaces, colons, forward-slashes, hyphens and periods\n  // ...and ending with a colon followed immediately by a space, tab or newline.\n  // The YAML spec allows for much more than this, but this covers most use-cases.\n  const KEY = {\n    className: 'attr',\n    variants: [\n      { begin: '\\\\w[\\\\w :\\\\/.-]*:(?=[ \\t]|$)' },\n      { // double quoted keys\n        begin: '\"\\\\w[\\\\w :\\\\/.-]*\":(?=[ \\t]|$)' },\n      { // single quoted keys\n        begin: '\\'\\\\w[\\\\w :\\\\/.-]*\\':(?=[ \\t]|$)' }\n    ]\n  };\n\n  const TEMPLATE_VARIABLES = {\n    className: 'template-variable',\n    variants: [\n      { // jinja templates Ansible\n        begin: /\\{\\{/,\n        end: /\\}\\}/\n      },\n      { // Ruby i18n\n        begin: /%\\{/,\n        end: /\\}/\n      }\n    ]\n  };\n  const STRING = {\n    className: 'string',\n    relevance: 0,\n    variants: [\n      {\n        begin: /'/,\n        end: /'/\n      },\n      {\n        begin: /\"/,\n        end: /\"/\n      },\n      { begin: /\\S+/ }\n    ],\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      TEMPLATE_VARIABLES\n    ]\n  };\n\n  // Strings inside of value containers (objects) can't contain braces,\n  // brackets, or commas\n  const CONTAINER_STRING = hljs.inherit(STRING, { variants: [\n    {\n      begin: /'/,\n      end: /'/\n    },\n    {\n      begin: /\"/,\n      end: /\"/\n    },\n    { begin: /[^\\s,{}[\\]]+/ }\n  ] });\n\n  const DATE_RE = '[0-9]{4}(-[0-9][0-9]){0,2}';\n  const TIME_RE = '([Tt \\\\t][0-9][0-9]?(:[0-9][0-9]){2})?';\n  const FRACTION_RE = '(\\\\.[0-9]*)?';\n  const ZONE_RE = '([ \\\\t])*(Z|[-+][0-9][0-9]?(:[0-9][0-9])?)?';\n  const TIMESTAMP = {\n    className: 'number',\n    begin: '\\\\b' + DATE_RE + TIME_RE + FRACTION_RE + ZONE_RE + '\\\\b'\n  };\n\n  const VALUE_CONTAINER = {\n    end: ',',\n    endsWithParent: true,\n    excludeEnd: true,\n    keywords: LITERALS,\n    relevance: 0\n  };\n  const OBJECT = {\n    begin: /\\{/,\n    end: /\\}/,\n    contains: [ VALUE_CONTAINER ],\n    illegal: '\\\\n',\n    relevance: 0\n  };\n  const ARRAY = {\n    begin: '\\\\[',\n    end: '\\\\]',\n    contains: [ VALUE_CONTAINER ],\n    illegal: '\\\\n',\n    relevance: 0\n  };\n\n  const MODES = [\n    KEY,\n    {\n      className: 'meta',\n      begin: '^---\\\\s*$',\n      relevance: 10\n    },\n    { // multi line string\n      // Blocks start with a | or > followed by a newline\n      //\n      // Indentation of subsequent lines must be the same to\n      // be considered part of the block\n      className: 'string',\n      begin: '[\\\\|>]([1-9]?[+-])?[ ]*\\\\n( +)[^ ][^\\\\n]*\\\\n(\\\\2[^\\\\n]+\\\\n?)*'\n    },\n    { // Ruby/Rails erb\n      begin: '<%[%=-]?',\n      end: '[%-]?%>',\n      subLanguage: 'ruby',\n      excludeBegin: true,\n      excludeEnd: true,\n      relevance: 0\n    },\n    { // named tags\n      className: 'type',\n      begin: '!\\\\w+!' + URI_CHARACTERS\n    },\n    // https://yaml.org/spec/1.2/spec.html#id2784064\n    { // verbatim tags\n      className: 'type',\n      begin: '!<' + URI_CHARACTERS + \">\"\n    },\n    { // primary tags\n      className: 'type',\n      begin: '!' + URI_CHARACTERS\n    },\n    { // secondary tags\n      className: 'type',\n      begin: '!!' + URI_CHARACTERS\n    },\n    { // fragment id &ref\n      className: 'meta',\n      begin: '&' + hljs.UNDERSCORE_IDENT_RE + '$'\n    },\n    { // fragment reference *ref\n      className: 'meta',\n      begin: '\\\\*' + hljs.UNDERSCORE_IDENT_RE + '$'\n    },\n    { // array listing\n      className: 'bullet',\n      // TODO: remove |$ hack when we have proper look-ahead support\n      begin: '-(?=[ ]|$)',\n      relevance: 0\n    },\n    hljs.HASH_COMMENT_MODE,\n    {\n      beginKeywords: LITERALS,\n      keywords: { literal: LITERALS }\n    },\n    TIMESTAMP,\n    // numbers are any valid C-style number that\n    // sit isolated from other words\n    {\n      className: 'number',\n      begin: hljs.C_NUMBER_RE + '\\\\b',\n      relevance: 0\n    },\n    OBJECT,\n    ARRAY,\n    STRING\n  ];\n\n  const VALUE_MODES = [ ...MODES ];\n  VALUE_MODES.pop();\n  VALUE_MODES.push(CONTAINER_STRING);\n  VALUE_CONTAINER.contains = VALUE_MODES;\n\n  return {\n    name: 'YAML',\n    case_insensitive: true,\n    aliases: [ 'yml' ],\n    contains: MODES\n  };\n}\n\nmodule.exports = yaml;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["case_insensitive","variants","excludeBegin","begin","aliases","subLanguage","className","contains","relevance","name","keywords","beginKeywords","excludeEnd","illegal","endsWithParent","literal","end"]],"~:compiled-at",1676671710245,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$highlight_DOT_js$lib$languages$yaml.js\",\n\"lineCount\":5,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/highlight_DOT_js/lib/languages/yaml.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$highlight_DOT_js$lib$languages$yaml\\\"] = function(global,require,module,exports) {\\n/*\\nLanguage: YAML\\nDescription: Yet Another Markdown Language\\nAuthor: Stefan Wienert <stwienert@gmail.com>\\nContributors: Carl Baxter <carl@cbax.tech>\\nRequires: ruby.js\\nWebsite: https://yaml.org\\nCategory: common, config\\n*/\\nfunction yaml(hljs) {\\n  const LITERALS = 'true false yes no null';\\n\\n  // YAML spec allows non-reserved URI characters in tags.\\n  const URI_CHARACTERS = '[\\\\\\\\w#;/?:@&=+$,.~*\\\\'()[\\\\\\\\]]+';\\n\\n  // Define keys as starting with a word character\\n  // ...containing word chars, spaces, colons, forward-slashes, hyphens and periods\\n  // ...and ending with a colon followed immediately by a space, tab or newline.\\n  // The YAML spec allows for much more than this, but this covers most use-cases.\\n  const KEY = {\\n    className: 'attr',\\n    variants: [\\n      { begin: '\\\\\\\\w[\\\\\\\\w :\\\\\\\\/.-]*:(?=[ \\\\t]|$)' },\\n      { // double quoted keys\\n        begin: '\\\"\\\\\\\\w[\\\\\\\\w :\\\\\\\\/.-]*\\\":(?=[ \\\\t]|$)' },\\n      { // single quoted keys\\n        begin: '\\\\'\\\\\\\\w[\\\\\\\\w :\\\\\\\\/.-]*\\\\':(?=[ \\\\t]|$)' }\\n    ]\\n  };\\n\\n  const TEMPLATE_VARIABLES = {\\n    className: 'template-variable',\\n    variants: [\\n      { // jinja templates Ansible\\n        begin: /\\\\{\\\\{/,\\n        end: /\\\\}\\\\}/\\n      },\\n      { // Ruby i18n\\n        begin: /%\\\\{/,\\n        end: /\\\\}/\\n      }\\n    ]\\n  };\\n  const STRING = {\\n    className: 'string',\\n    relevance: 0,\\n    variants: [\\n      {\\n        begin: /'/,\\n        end: /'/\\n      },\\n      {\\n        begin: /\\\"/,\\n        end: /\\\"/\\n      },\\n      { begin: /\\\\S+/ }\\n    ],\\n    contains: [\\n      hljs.BACKSLASH_ESCAPE,\\n      TEMPLATE_VARIABLES\\n    ]\\n  };\\n\\n  // Strings inside of value containers (objects) can't contain braces,\\n  // brackets, or commas\\n  const CONTAINER_STRING = hljs.inherit(STRING, { variants: [\\n    {\\n      begin: /'/,\\n      end: /'/\\n    },\\n    {\\n      begin: /\\\"/,\\n      end: /\\\"/\\n    },\\n    { begin: /[^\\\\s,{}[\\\\]]+/ }\\n  ] });\\n\\n  const DATE_RE = '[0-9]{4}(-[0-9][0-9]){0,2}';\\n  const TIME_RE = '([Tt \\\\\\\\t][0-9][0-9]?(:[0-9][0-9]){2})?';\\n  const FRACTION_RE = '(\\\\\\\\.[0-9]*)?';\\n  const ZONE_RE = '([ \\\\\\\\t])*(Z|[-+][0-9][0-9]?(:[0-9][0-9])?)?';\\n  const TIMESTAMP = {\\n    className: 'number',\\n    begin: '\\\\\\\\b' + DATE_RE + TIME_RE + FRACTION_RE + ZONE_RE + '\\\\\\\\b'\\n  };\\n\\n  const VALUE_CONTAINER = {\\n    end: ',',\\n    endsWithParent: true,\\n    excludeEnd: true,\\n    keywords: LITERALS,\\n    relevance: 0\\n  };\\n  const OBJECT = {\\n    begin: /\\\\{/,\\n    end: /\\\\}/,\\n    contains: [ VALUE_CONTAINER ],\\n    illegal: '\\\\\\\\n',\\n    relevance: 0\\n  };\\n  const ARRAY = {\\n    begin: '\\\\\\\\[',\\n    end: '\\\\\\\\]',\\n    contains: [ VALUE_CONTAINER ],\\n    illegal: '\\\\\\\\n',\\n    relevance: 0\\n  };\\n\\n  const MODES = [\\n    KEY,\\n    {\\n      className: 'meta',\\n      begin: '^---\\\\\\\\s*$',\\n      relevance: 10\\n    },\\n    { // multi line string\\n      // Blocks start with a | or > followed by a newline\\n      //\\n      // Indentation of subsequent lines must be the same to\\n      // be considered part of the block\\n      className: 'string',\\n      begin: '[\\\\\\\\|>]([1-9]?[+-])?[ ]*\\\\\\\\n( +)[^ ][^\\\\\\\\n]*\\\\\\\\n(\\\\\\\\2[^\\\\\\\\n]+\\\\\\\\n?)*'\\n    },\\n    { // Ruby/Rails erb\\n      begin: '<%[%=-]?',\\n      end: '[%-]?%>',\\n      subLanguage: 'ruby',\\n      excludeBegin: true,\\n      excludeEnd: true,\\n      relevance: 0\\n    },\\n    { // named tags\\n      className: 'type',\\n      begin: '!\\\\\\\\w+!' + URI_CHARACTERS\\n    },\\n    // https://yaml.org/spec/1.2/spec.html#id2784064\\n    { // verbatim tags\\n      className: 'type',\\n      begin: '!<' + URI_CHARACTERS + \\\">\\\"\\n    },\\n    { // primary tags\\n      className: 'type',\\n      begin: '!' + URI_CHARACTERS\\n    },\\n    { // secondary tags\\n      className: 'type',\\n      begin: '!!' + URI_CHARACTERS\\n    },\\n    { // fragment id &ref\\n      className: 'meta',\\n      begin: '&' + hljs.UNDERSCORE_IDENT_RE + '$'\\n    },\\n    { // fragment reference *ref\\n      className: 'meta',\\n      begin: '\\\\\\\\*' + hljs.UNDERSCORE_IDENT_RE + '$'\\n    },\\n    { // array listing\\n      className: 'bullet',\\n      // TODO: remove |$ hack when we have proper look-ahead support\\n      begin: '-(?=[ ]|$)',\\n      relevance: 0\\n    },\\n    hljs.HASH_COMMENT_MODE,\\n    {\\n      beginKeywords: LITERALS,\\n      keywords: { literal: LITERALS }\\n    },\\n    TIMESTAMP,\\n    // numbers are any valid C-style number that\\n    // sit isolated from other words\\n    {\\n      className: 'number',\\n      begin: hljs.C_NUMBER_RE + '\\\\\\\\b',\\n      relevance: 0\\n    },\\n    OBJECT,\\n    ARRAY,\\n    STRING\\n  ];\\n\\n  const VALUE_MODES = [ ...MODES ];\\n  VALUE_MODES.pop();\\n  VALUE_MODES.push(CONTAINER_STRING);\\n  VALUE_CONTAINER.contains = VALUE_MODES;\\n\\n  return {\\n    name: 'YAML',\\n    case_insensitive: true,\\n    aliases: [ 'yml' ],\\n    contains: MODES\\n  };\\n}\\n\\nmodule.exports = yaml;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"yaml\",\"hljs\",\"STRING\",\"className\",\"relevance\",\"variants\",\"begin\",\"end\",\"contains\",\"BACKSLASH_ESCAPE\",\"TEMPLATE_VARIABLES\",\"CONTAINER_STRING\",\"inherit\",\"VALUE_CONTAINER\",\"endsWithParent\",\"excludeEnd\",\"keywords\",\"LITERALS\",\"MODES\",\"KEY\",\"subLanguage\",\"excludeBegin\",\"UNDERSCORE_IDENT_RE\",\"HASH_COMMENT_MODE\",\"beginKeywords\",\"literal\",\"TIMESTAMP\",\"C_NUMBER_RE\",\"OBJECT\",\"illegal\",\"ARRAY\",\"VALUE_MODES\",\"pop\",\"push\",\"name\",\"case_insensitive\",\"aliases\"]\n}\n"]