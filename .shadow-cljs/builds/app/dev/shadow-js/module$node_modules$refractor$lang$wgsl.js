["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/wgsl.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$wgsl=function(global,require,module,exports){function wgsl(Prism){Prism.languages.wgsl={comment:{pattern:/\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,greedy:!0},\"builtin-attribute\":{pattern:/(@)builtin\\(.*?\\)/,lookbehind:!0,inside:{attribute:{pattern:/^builtin/,alias:\"attr-name\"},punctuation:/[(),]/,\"built-in-values\":{pattern:/\\b(?:frag_depth|front_facing|global_invocation_id|instance_index|local_invocation_id|local_invocation_index|num_workgroups|position|sample_index|sample_mask|vertex_index|workgroup_id)\\b/,\nalias:\"attr-value\"}}},attributes:{pattern:/(@)(?:align|binding|compute|const|fragment|group|id|interpolate|invariant|location|size|vertex|workgroup_size)/i,lookbehind:!0,alias:\"attr-name\"},functions:{pattern:/\\b(fn\\s+)[_a-zA-Z]\\w*(?=[(<])/,lookbehind:!0,alias:\"function\"},keyword:/\\b(?:bitcast|break|case|const|continue|continuing|default|discard|else|enable|fallthrough|fn|for|function|if|let|loop|private|return|storage|struct|switch|type|uniform|var|while|workgroup)\\b/,builtin:/\\b(?:abs|acos|acosh|all|any|array|asin|asinh|atan|atan2|atanh|atomic|atomicAdd|atomicAnd|atomicCompareExchangeWeak|atomicExchange|atomicLoad|atomicMax|atomicMin|atomicOr|atomicStore|atomicSub|atomicXor|bool|ceil|clamp|cos|cosh|countLeadingZeros|countOneBits|countTrailingZeros|cross|degrees|determinant|distance|dot|dpdx|dpdxCoarse|dpdxFine|dpdy|dpdyCoarse|dpdyFine|exp|exp2|extractBits|f32|f64|faceForward|firstLeadingBit|floor|fma|fract|frexp|fwidth|fwidthCoarse|fwidthFine|i32|i64|insertBits|inverseSqrt|ldexp|length|log|log2|mat[2-4]x[2-4]|max|min|mix|modf|normalize|override|pack2x16float|pack2x16snorm|pack2x16unorm|pack4x8snorm|pack4x8unorm|pow|ptr|quantizeToF16|radians|reflect|refract|reverseBits|round|sampler|sampler_comparison|select|shiftLeft|shiftRight|sign|sin|sinh|smoothstep|sqrt|staticAssert|step|storageBarrier|tan|tanh|textureDimensions|textureGather|textureGatherCompare|textureLoad|textureNumLayers|textureNumLevels|textureNumSamples|textureSample|textureSampleBias|textureSampleCompare|textureSampleCompareLevel|textureSampleGrad|textureSampleLevel|textureStore|texture_1d|texture_2d|texture_2d_array|texture_3d|texture_cube|texture_cube_array|texture_depth_2d|texture_depth_2d_array|texture_depth_cube|texture_depth_cube_array|texture_depth_multisampled_2d|texture_multisampled_2d|texture_storage_1d|texture_storage_2d|texture_storage_2d_array|texture_storage_3d|transpose|trunc|u32|u64|unpack2x16float|unpack2x16snorm|unpack2x16unorm|unpack4x8snorm|unpack4x8unorm|vec[2-4]|workgroupBarrier)\\b/,\n\"function-calls\":{pattern:/\\b[_a-z]\\w*(?=\\()/i,alias:\"function\"},\"class-name\":/\\b(?:[A-Z][A-Za-z0-9]*)\\b/,\"bool-literal\":{pattern:/\\b(?:false|true)\\b/,alias:\"boolean\"},\"hex-int-literal\":{pattern:/\\b0[xX][0-9a-fA-F]+[iu]?\\b(?![.pP])/,alias:\"number\"},\"hex-float-literal\":{pattern:/\\b0[xX][0-9a-fA-F]*(?:\\.[0-9a-fA-F]*)?(?:[pP][+-]?\\d+[fh]?)?/,alias:\"number\"},\"decimal-float-literal\":[{pattern:/\\d*\\.\\d+(?:[eE](?:\\+|-)?\\d+)?[fh]?/,alias:\"number\"},{pattern:/\\d+\\.\\d*(?:[eE](?:\\+|-)?\\d+)?[fh]?/,alias:\"number\"},\n{pattern:/\\d+[eE](?:\\+|-)?\\d+[fh]?/,alias:\"number\"},{pattern:/\\b\\d+[fh]\\b/,alias:\"number\"}],\"int-literal\":{pattern:/\\b\\d+[iu]?\\b/,alias:\"number\"},operator:[{pattern:/(?:\\^|~|\\|(?!\\|)|\\|\\||&&|<<|>>|!)(?!=)/},{pattern:/&(?![&=])/},{pattern:/(?:\\+=|-=|\\*=|\\/=|%=|\\^=|&=|\\|=|<<=|>>=)/},{pattern:/(^|[^<>=!])=(?![=>])/,lookbehind:!0},{pattern:/(?:==|!=|<=|\\+\\+|--|(^|[^=])>=)/,lookbehind:!0},{pattern:/(?:(?:[+%]|(?:\\*(?!\\w)))(?!=))|(?:-(?!>))|(?:\\/(?!\\/))/},{pattern:/->/}],punctuation:/[@(){}[\\],;<>:.]/}}\nObject.defineProperty(exports,\"__esModule\",{value:!0});exports.default=wgsl;wgsl.displayName=\"wgsl\";wgsl.aliases=[]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$wgsl\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = wgsl;\n// @ts-nocheck\nwgsl.displayName = 'wgsl';\nwgsl.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nfunction wgsl(Prism) {\n  Prism.languages.wgsl = {\n    comment: {\n      pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n      greedy: true\n    },\n    'builtin-attribute': {\n      pattern: /(@)builtin\\(.*?\\)/,\n      lookbehind: true,\n      inside: {\n        attribute: {\n          pattern: /^builtin/,\n          alias: 'attr-name'\n        },\n        punctuation: /[(),]/,\n        'built-in-values': {\n          pattern: /\\b(?:frag_depth|front_facing|global_invocation_id|instance_index|local_invocation_id|local_invocation_index|num_workgroups|position|sample_index|sample_mask|vertex_index|workgroup_id)\\b/,\n          alias: 'attr-value'\n        }\n      }\n    },\n    attributes: {\n      pattern: /(@)(?:align|binding|compute|const|fragment|group|id|interpolate|invariant|location|size|vertex|workgroup_size)/i,\n      lookbehind: true,\n      alias: 'attr-name'\n    },\n    functions: {\n      pattern: /\\b(fn\\s+)[_a-zA-Z]\\w*(?=[(<])/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    keyword: /\\b(?:bitcast|break|case|const|continue|continuing|default|discard|else|enable|fallthrough|fn|for|function|if|let|loop|private|return|storage|struct|switch|type|uniform|var|while|workgroup)\\b/,\n    builtin: /\\b(?:abs|acos|acosh|all|any|array|asin|asinh|atan|atan2|atanh|atomic|atomicAdd|atomicAnd|atomicCompareExchangeWeak|atomicExchange|atomicLoad|atomicMax|atomicMin|atomicOr|atomicStore|atomicSub|atomicXor|bool|ceil|clamp|cos|cosh|countLeadingZeros|countOneBits|countTrailingZeros|cross|degrees|determinant|distance|dot|dpdx|dpdxCoarse|dpdxFine|dpdy|dpdyCoarse|dpdyFine|exp|exp2|extractBits|f32|f64|faceForward|firstLeadingBit|floor|fma|fract|frexp|fwidth|fwidthCoarse|fwidthFine|i32|i64|insertBits|inverseSqrt|ldexp|length|log|log2|mat[2-4]x[2-4]|max|min|mix|modf|normalize|override|pack2x16float|pack2x16snorm|pack2x16unorm|pack4x8snorm|pack4x8unorm|pow|ptr|quantizeToF16|radians|reflect|refract|reverseBits|round|sampler|sampler_comparison|select|shiftLeft|shiftRight|sign|sin|sinh|smoothstep|sqrt|staticAssert|step|storageBarrier|tan|tanh|textureDimensions|textureGather|textureGatherCompare|textureLoad|textureNumLayers|textureNumLevels|textureNumSamples|textureSample|textureSampleBias|textureSampleCompare|textureSampleCompareLevel|textureSampleGrad|textureSampleLevel|textureStore|texture_1d|texture_2d|texture_2d_array|texture_3d|texture_cube|texture_cube_array|texture_depth_2d|texture_depth_2d_array|texture_depth_cube|texture_depth_cube_array|texture_depth_multisampled_2d|texture_multisampled_2d|texture_storage_1d|texture_storage_2d|texture_storage_2d_array|texture_storage_3d|transpose|trunc|u32|u64|unpack2x16float|unpack2x16snorm|unpack2x16unorm|unpack4x8snorm|unpack4x8unorm|vec[2-4]|workgroupBarrier)\\b/,\n    'function-calls': {\n      pattern: /\\b[_a-z]\\w*(?=\\()/i,\n      alias: 'function'\n    },\n    'class-name': /\\b(?:[A-Z][A-Za-z0-9]*)\\b/,\n    'bool-literal': {\n      pattern: /\\b(?:false|true)\\b/,\n      alias: 'boolean'\n    },\n    'hex-int-literal': {\n      pattern: /\\b0[xX][0-9a-fA-F]+[iu]?\\b(?![.pP])/,\n      alias: 'number'\n    },\n    'hex-float-literal': {\n      pattern: /\\b0[xX][0-9a-fA-F]*(?:\\.[0-9a-fA-F]*)?(?:[pP][+-]?\\d+[fh]?)?/,\n      alias: 'number'\n    },\n    'decimal-float-literal': [{\n      pattern: /\\d*\\.\\d+(?:[eE](?:\\+|-)?\\d+)?[fh]?/,\n      alias: 'number'\n    }, {\n      pattern: /\\d+\\.\\d*(?:[eE](?:\\+|-)?\\d+)?[fh]?/,\n      alias: 'number'\n    }, {\n      pattern: /\\d+[eE](?:\\+|-)?\\d+[fh]?/,\n      alias: 'number'\n    }, {\n      pattern: /\\b\\d+[fh]\\b/,\n      alias: 'number'\n    }],\n    'int-literal': {\n      pattern: /\\b\\d+[iu]?\\b/,\n      alias: 'number'\n    },\n    operator: [{\n      pattern: /(?:\\^|~|\\|(?!\\|)|\\|\\||&&|<<|>>|!)(?!=)/\n    }, {\n      pattern: /&(?![&=])/\n    }, {\n      pattern: /(?:\\+=|-=|\\*=|\\/=|%=|\\^=|&=|\\|=|<<=|>>=)/\n    }, {\n      pattern: /(^|[^<>=!])=(?![=>])/,\n      lookbehind: true\n    }, {\n      pattern: /(?:==|!=|<=|\\+\\+|--|(^|[^=])>=)/,\n      lookbehind: true\n    }, {\n      pattern: /(?:(?:[+%]|(?:\\*(?!\\w)))(?!=))|(?:-(?!>))|(?:\\/(?!\\/))/\n    }, {\n      pattern: /->/\n    }],\n    punctuation: /[@(){}[\\],;<>:.]/\n  };\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["punctuation","aliases","operator","displayName","__esModule","wgsl","attribute","lookbehind","value","keyword","functions","greedy","attributes","pattern","inside","alias","comment","builtin","default"]],"~:compiled-at",1676841365475,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$wgsl.js\",\n\"lineCount\":5,\n\"mappings\":\"AAAAA,cAAA,CAAA,uCAAA,CAA4D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAYpGC,QAASA,KAAI,CAACC,KAAD,CAAQ,CACnBA,KAAMC,CAAAA,SAAUF,CAAAA,IAAhB,CAAuB,CACrBG,QAAS,CACPC,QAAS,+BADF,CAEPC,OAAQ,CAAA,CAFD,CADY,CAKrB,oBAAqB,CACnBD,QAAS,mBADU,CAEnBE,WAAY,CAAA,CAFO,CAGnBC,OAAQ,CACNC,UAAW,CACTJ,QAAS,UADA,CAETK,MAAO,WAFE,CADL,CAKNC,YAAa,OALP,CAMN,kBAAmB,CACjBN,QAAS,2LADQ;AAEjBK,MAAO,YAFU,CANb,CAHW,CALA,CAoBrBE,WAAY,CACVP,QAAS,iHADC,CAEVE,WAAY,CAAA,CAFF,CAGVG,MAAO,WAHG,CApBS,CAyBrBG,UAAW,CACTR,QAAS,+BADA,CAETE,WAAY,CAAA,CAFH,CAGTG,MAAO,UAHE,CAzBU,CA8BrBI,QAAS,gMA9BY,CA+BrBC,QAAS,++CA/BY;AAgCrB,iBAAkB,CAChBV,QAAS,oBADO,CAEhBK,MAAO,UAFS,CAhCG,CAoCrB,aAAc,2BApCO,CAqCrB,eAAgB,CACdL,QAAS,oBADK,CAEdK,MAAO,SAFO,CArCK,CAyCrB,kBAAmB,CACjBL,QAAS,qCADQ,CAEjBK,MAAO,QAFU,CAzCE,CA6CrB,oBAAqB,CACnBL,QAAS,8DADU,CAEnBK,MAAO,QAFY,CA7CA,CAiDrB,wBAAyB,CAAC,CACxBL,QAAS,oCADe,CAExBK,MAAO,QAFiB,CAAD,CAGtB,CACDL,QAAS,oCADR,CAEDK,MAAO,QAFN,CAHsB;AAMtB,CACDL,QAAS,0BADR,CAEDK,MAAO,QAFN,CANsB,CAStB,CACDL,QAAS,aADR,CAEDK,MAAO,QAFN,CATsB,CAjDJ,CA8DrB,cAAe,CACbL,QAAS,cADI,CAEbK,MAAO,QAFM,CA9DM,CAkErBM,SAAU,CAAC,CACTX,QAAS,wCADA,CAAD,CAEP,CACDA,QAAS,WADR,CAFO,CAIP,CACDA,QAAS,0CADR,CAJO,CAMP,CACDA,QAAS,sBADR,CAEDE,WAAY,CAAA,CAFX,CANO,CASP,CACDF,QAAS,iCADR,CAEDE,WAAY,CAAA,CAFX,CATO,CAYP,CACDF,QAAS,wDADR,CAZO,CAcP,CACDA,QAAS,IADR,CAdO,CAlEW,CAmFrBM,YAAa,kBAnFQ,CADJ;AATrBM,MAAOC,CAAAA,cAAP,CAAsBlB,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CmB,MAAO,CAAA,CADoC,CAA7C,CAGAnB,QAAQoB,CAAAA,OAAR,CAAkBnB,IAElBA,KAAKoB,CAAAA,WAAL,CAAmB,MACnBpB,KAAKqB,CAAAA,OAAL,CAAe,EATqF;\",\n\"sources\":[\"node_modules/refractor/lang/wgsl.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$wgsl\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = wgsl;\\n// @ts-nocheck\\nwgsl.displayName = 'wgsl';\\nwgsl.aliases = [];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction wgsl(Prism) {\\n  Prism.languages.wgsl = {\\n    comment: {\\n      pattern: /\\\\/\\\\/.*|\\\\/\\\\*[\\\\s\\\\S]*?(?:\\\\*\\\\/|$)/,\\n      greedy: true\\n    },\\n    'builtin-attribute': {\\n      pattern: /(@)builtin\\\\(.*?\\\\)/,\\n      lookbehind: true,\\n      inside: {\\n        attribute: {\\n          pattern: /^builtin/,\\n          alias: 'attr-name'\\n        },\\n        punctuation: /[(),]/,\\n        'built-in-values': {\\n          pattern: /\\\\b(?:frag_depth|front_facing|global_invocation_id|instance_index|local_invocation_id|local_invocation_index|num_workgroups|position|sample_index|sample_mask|vertex_index|workgroup_id)\\\\b/,\\n          alias: 'attr-value'\\n        }\\n      }\\n    },\\n    attributes: {\\n      pattern: /(@)(?:align|binding|compute|const|fragment|group|id|interpolate|invariant|location|size|vertex|workgroup_size)/i,\\n      lookbehind: true,\\n      alias: 'attr-name'\\n    },\\n    functions: {\\n      pattern: /\\\\b(fn\\\\s+)[_a-zA-Z]\\\\w*(?=[(<])/,\\n      lookbehind: true,\\n      alias: 'function'\\n    },\\n    keyword: /\\\\b(?:bitcast|break|case|const|continue|continuing|default|discard|else|enable|fallthrough|fn|for|function|if|let|loop|private|return|storage|struct|switch|type|uniform|var|while|workgroup)\\\\b/,\\n    builtin: /\\\\b(?:abs|acos|acosh|all|any|array|asin|asinh|atan|atan2|atanh|atomic|atomicAdd|atomicAnd|atomicCompareExchangeWeak|atomicExchange|atomicLoad|atomicMax|atomicMin|atomicOr|atomicStore|atomicSub|atomicXor|bool|ceil|clamp|cos|cosh|countLeadingZeros|countOneBits|countTrailingZeros|cross|degrees|determinant|distance|dot|dpdx|dpdxCoarse|dpdxFine|dpdy|dpdyCoarse|dpdyFine|exp|exp2|extractBits|f32|f64|faceForward|firstLeadingBit|floor|fma|fract|frexp|fwidth|fwidthCoarse|fwidthFine|i32|i64|insertBits|inverseSqrt|ldexp|length|log|log2|mat[2-4]x[2-4]|max|min|mix|modf|normalize|override|pack2x16float|pack2x16snorm|pack2x16unorm|pack4x8snorm|pack4x8unorm|pow|ptr|quantizeToF16|radians|reflect|refract|reverseBits|round|sampler|sampler_comparison|select|shiftLeft|shiftRight|sign|sin|sinh|smoothstep|sqrt|staticAssert|step|storageBarrier|tan|tanh|textureDimensions|textureGather|textureGatherCompare|textureLoad|textureNumLayers|textureNumLevels|textureNumSamples|textureSample|textureSampleBias|textureSampleCompare|textureSampleCompareLevel|textureSampleGrad|textureSampleLevel|textureStore|texture_1d|texture_2d|texture_2d_array|texture_3d|texture_cube|texture_cube_array|texture_depth_2d|texture_depth_2d_array|texture_depth_cube|texture_depth_cube_array|texture_depth_multisampled_2d|texture_multisampled_2d|texture_storage_1d|texture_storage_2d|texture_storage_2d_array|texture_storage_3d|transpose|trunc|u32|u64|unpack2x16float|unpack2x16snorm|unpack2x16unorm|unpack4x8snorm|unpack4x8unorm|vec[2-4]|workgroupBarrier)\\\\b/,\\n    'function-calls': {\\n      pattern: /\\\\b[_a-z]\\\\w*(?=\\\\()/i,\\n      alias: 'function'\\n    },\\n    'class-name': /\\\\b(?:[A-Z][A-Za-z0-9]*)\\\\b/,\\n    'bool-literal': {\\n      pattern: /\\\\b(?:false|true)\\\\b/,\\n      alias: 'boolean'\\n    },\\n    'hex-int-literal': {\\n      pattern: /\\\\b0[xX][0-9a-fA-F]+[iu]?\\\\b(?![.pP])/,\\n      alias: 'number'\\n    },\\n    'hex-float-literal': {\\n      pattern: /\\\\b0[xX][0-9a-fA-F]*(?:\\\\.[0-9a-fA-F]*)?(?:[pP][+-]?\\\\d+[fh]?)?/,\\n      alias: 'number'\\n    },\\n    'decimal-float-literal': [{\\n      pattern: /\\\\d*\\\\.\\\\d+(?:[eE](?:\\\\+|-)?\\\\d+)?[fh]?/,\\n      alias: 'number'\\n    }, {\\n      pattern: /\\\\d+\\\\.\\\\d*(?:[eE](?:\\\\+|-)?\\\\d+)?[fh]?/,\\n      alias: 'number'\\n    }, {\\n      pattern: /\\\\d+[eE](?:\\\\+|-)?\\\\d+[fh]?/,\\n      alias: 'number'\\n    }, {\\n      pattern: /\\\\b\\\\d+[fh]\\\\b/,\\n      alias: 'number'\\n    }],\\n    'int-literal': {\\n      pattern: /\\\\b\\\\d+[iu]?\\\\b/,\\n      alias: 'number'\\n    },\\n    operator: [{\\n      pattern: /(?:\\\\^|~|\\\\|(?!\\\\|)|\\\\|\\\\||&&|<<|>>|!)(?!=)/\\n    }, {\\n      pattern: /&(?![&=])/\\n    }, {\\n      pattern: /(?:\\\\+=|-=|\\\\*=|\\\\/=|%=|\\\\^=|&=|\\\\|=|<<=|>>=)/\\n    }, {\\n      pattern: /(^|[^<>=!])=(?![=>])/,\\n      lookbehind: true\\n    }, {\\n      pattern: /(?:==|!=|<=|\\\\+\\\\+|--|(^|[^=])>=)/,\\n      lookbehind: true\\n    }, {\\n      pattern: /(?:(?:[+%]|(?:\\\\*(?!\\\\w)))(?!=))|(?:-(?!>))|(?:\\\\/(?!\\\\/))/\\n    }, {\\n      pattern: /->/\\n    }],\\n    punctuation: /[@(){}[\\\\],;<>:.]/\\n  };\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"wgsl\",\"Prism\",\"languages\",\"comment\",\"pattern\",\"greedy\",\"lookbehind\",\"inside\",\"attribute\",\"alias\",\"punctuation\",\"attributes\",\"functions\",\"keyword\",\"builtin\",\"operator\",\"Object\",\"defineProperty\",\"value\",\"default\",\"displayName\",\"aliases\"]\n}\n"]