["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/autoit.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$autoit=function(global,require,module,exports){function autoit(Prism){Prism.languages.autoit={comment:[/;.*/,{pattern:/(^[\\t ]*)#(?:comments-start|cs)[\\s\\S]*?^[ \\t]*#(?:ce|comments-end)/m,lookbehind:!0}],url:{pattern:/(^[\\t ]*#include\\s+)(?:<[^\\r\\n>]+>|\"[^\\r\\n\"]+\")/m,lookbehind:!0},string:{pattern:/([\"'])(?:\\1\\1|(?!\\1)[^\\r\\n])*\\1/,greedy:!0,inside:{variable:/([%$@])\\w+\\1/}},directive:{pattern:/(^[\\t ]*)#[\\w-]+/m,lookbehind:!0,alias:\"keyword\"},function:/\\b\\w+(?=\\()/,\nvariable:/[$@]\\w+/,keyword:/\\b(?:Case|Const|Continue(?:Case|Loop)|Default|Dim|Do|Else(?:If)?|End(?:Func|If|Select|Switch|With)|Enum|Exit(?:Loop)?|For|Func|Global|If|In|Local|Next|Null|ReDim|Select|Static|Step|Switch|Then|To|Until|Volatile|WEnd|While|With)\\b/i,number:/\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i,boolean:/\\b(?:False|True)\\b/i,operator:/<[=>]?|[-+*\\/=&>]=?|[?^]|\\b(?:And|Not|Or)\\b/i,punctuation:/[\\[\\]().,:]/}}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=\nautoit;autoit.displayName=\"autoit\";autoit.aliases=[]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$autoit\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = autoit;\n// @ts-nocheck\nautoit.displayName = 'autoit';\nautoit.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nfunction autoit(Prism) {\n  Prism.languages.autoit = {\n    comment: [/;.*/, {\n      // The multi-line comments delimiters can actually be commented out with \";\"\n      pattern: /(^[\\t ]*)#(?:comments-start|cs)[\\s\\S]*?^[ \\t]*#(?:ce|comments-end)/m,\n      lookbehind: true\n    }],\n    url: {\n      pattern: /(^[\\t ]*#include\\s+)(?:<[^\\r\\n>]+>|\"[^\\r\\n\"]+\")/m,\n      lookbehind: true\n    },\n    string: {\n      pattern: /([\"'])(?:\\1\\1|(?!\\1)[^\\r\\n])*\\1/,\n      greedy: true,\n      inside: {\n        variable: /([%$@])\\w+\\1/\n      }\n    },\n    directive: {\n      pattern: /(^[\\t ]*)#[\\w-]+/m,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    function: /\\b\\w+(?=\\()/,\n    // Variables and macros\n    variable: /[$@]\\w+/,\n    keyword: /\\b(?:Case|Const|Continue(?:Case|Loop)|Default|Dim|Do|Else(?:If)?|End(?:Func|If|Select|Switch|With)|Enum|Exit(?:Loop)?|For|Func|Global|If|In|Local|Next|Null|ReDim|Select|Static|Step|Switch|Then|To|Until|Volatile|WEnd|While|With)\\b/i,\n    number: /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i,\n    boolean: /\\b(?:False|True)\\b/i,\n    operator: /<[=>]?|[-+*\\/=&>]=?|[?^]|\\b(?:And|Not|Or)\\b/i,\n    punctuation: /[\\[\\]().,:]/\n  };\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["boolean","url","punctuation","string","aliases","directive","operator","displayName","__esModule","autoit","lookbehind","value","variable","keyword","number","greedy","function","pattern","inside","alias","comment","default"]],"~:compiled-at",1676841365393,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$autoit.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,CAAA,yCAAA,CAA8D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAYtGC,QAASA,OAAM,CAACC,KAAD,CAAQ,CACrBA,KAAMC,CAAAA,SAAUF,CAAAA,MAAhB,CAAyB,CACvBG,QAAS,CAAC,KAAD,CAAQ,CAEfC,QAAS,qEAFM,CAGfC,WAAY,CAAA,CAHG,CAAR,CADc,CAMvBC,IAAK,CACHF,QAAS,kDADN,CAEHC,WAAY,CAAA,CAFT,CANkB,CAUvBE,OAAQ,CACNH,QAAS,iCADH,CAENI,OAAQ,CAAA,CAFF,CAGNC,OAAQ,CACNC,SAAU,cADJ,CAHF,CAVe,CAiBvBC,UAAW,CACTP,QAAS,mBADA,CAETC,WAAY,CAAA,CAFH,CAGTO,MAAO,SAHE,CAjBY,CAsBvBC,SAAU,aAtBa;AAwBvBH,SAAU,SAxBa,CAyBvBI,QAAS,wOAzBc,CA0BvBC,OAAQ,iDA1Be,CA2BvBC,QAAS,qBA3Bc,CA4BvBC,SAAU,8CA5Ba,CA6BvBC,YAAa,aA7BU,CADJ,CATvBC,MAAOC,CAAAA,cAAP,CAAsBrB,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CsB,MAAO,CAAA,CADoC,CAA7C,CAGAtB,QAAQuB,CAAAA,OAAR;AAAkBtB,MAElBA,OAAOuB,CAAAA,WAAP,CAAqB,QACrBvB,OAAOwB,CAAAA,OAAP,CAAiB,EATqF;\",\n\"sources\":[\"node_modules/refractor/lang/autoit.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$autoit\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = autoit;\\n// @ts-nocheck\\nautoit.displayName = 'autoit';\\nautoit.aliases = [];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction autoit(Prism) {\\n  Prism.languages.autoit = {\\n    comment: [/;.*/, {\\n      // The multi-line comments delimiters can actually be commented out with \\\";\\\"\\n      pattern: /(^[\\\\t ]*)#(?:comments-start|cs)[\\\\s\\\\S]*?^[ \\\\t]*#(?:ce|comments-end)/m,\\n      lookbehind: true\\n    }],\\n    url: {\\n      pattern: /(^[\\\\t ]*#include\\\\s+)(?:<[^\\\\r\\\\n>]+>|\\\"[^\\\\r\\\\n\\\"]+\\\")/m,\\n      lookbehind: true\\n    },\\n    string: {\\n      pattern: /([\\\"'])(?:\\\\1\\\\1|(?!\\\\1)[^\\\\r\\\\n])*\\\\1/,\\n      greedy: true,\\n      inside: {\\n        variable: /([%$@])\\\\w+\\\\1/\\n      }\\n    },\\n    directive: {\\n      pattern: /(^[\\\\t ]*)#[\\\\w-]+/m,\\n      lookbehind: true,\\n      alias: 'keyword'\\n    },\\n    function: /\\\\b\\\\w+(?=\\\\()/,\\n    // Variables and macros\\n    variable: /[$@]\\\\w+/,\\n    keyword: /\\\\b(?:Case|Const|Continue(?:Case|Loop)|Default|Dim|Do|Else(?:If)?|End(?:Func|If|Select|Switch|With)|Enum|Exit(?:Loop)?|For|Func|Global|If|In|Local|Next|Null|ReDim|Select|Static|Step|Switch|Then|To|Until|Volatile|WEnd|While|With)\\\\b/i,\\n    number: /\\\\b(?:0x[\\\\da-f]+|\\\\d+(?:\\\\.\\\\d+)?(?:e[+-]?\\\\d+)?)\\\\b/i,\\n    boolean: /\\\\b(?:False|True)\\\\b/i,\\n    operator: /<[=>]?|[-+*\\\\/=&>]=?|[?^]|\\\\b(?:And|Not|Or)\\\\b/i,\\n    punctuation: /[\\\\[\\\\]().,:]/\\n  };\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"autoit\",\"Prism\",\"languages\",\"comment\",\"pattern\",\"lookbehind\",\"url\",\"string\",\"greedy\",\"inside\",\"variable\",\"directive\",\"alias\",\"function\",\"keyword\",\"number\",\"boolean\",\"operator\",\"punctuation\",\"Object\",\"defineProperty\",\"value\",\"default\",\"displayName\",\"aliases\"]\n}\n"]