["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/gettext.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$gettext=function(global,require,module,exports){function gettext(Prism){Prism.languages.gettext={comment:[{pattern:/# .*/,greedy:!0,alias:\"translator-comment\"},{pattern:/#\\..*/,greedy:!0,alias:\"extracted-comment\"},{pattern:/#:.*/,greedy:!0,alias:\"reference-comment\"},{pattern:/#,.*/,greedy:!0,alias:\"flag-comment\"},{pattern:/#\\|.*/,greedy:!0,alias:\"previously-untranslated-comment\"},{pattern:/#.*/,greedy:!0}],string:{pattern:/(^|[^\\\\])\"(?:[^\"\\\\]|\\\\.)*\"/,\nlookbehind:!0,greedy:!0},keyword:/^msg(?:ctxt|id|id_plural|str)\\b/m,number:/\\b\\d+\\b/,punctuation:/[\\[\\]]/};Prism.languages.po=Prism.languages.gettext}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=gettext;gettext.displayName=\"gettext\";gettext.aliases=[\"po\"]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$gettext\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = gettext;\n// @ts-nocheck\ngettext.displayName = 'gettext';\ngettext.aliases = ['po'];\n/** @type {import('../core.js').Syntax} */\n\nfunction gettext(Prism) {\n  Prism.languages.gettext = {\n    comment: [{\n      pattern: /# .*/,\n      greedy: true,\n      alias: 'translator-comment'\n    }, {\n      pattern: /#\\..*/,\n      greedy: true,\n      alias: 'extracted-comment'\n    }, {\n      pattern: /#:.*/,\n      greedy: true,\n      alias: 'reference-comment'\n    }, {\n      pattern: /#,.*/,\n      greedy: true,\n      alias: 'flag-comment'\n    }, {\n      pattern: /#\\|.*/,\n      greedy: true,\n      alias: 'previously-untranslated-comment'\n    }, {\n      pattern: /#.*/,\n      greedy: true\n    }],\n    string: {\n      pattern: /(^|[^\\\\])\"(?:[^\"\\\\]|\\\\.)*\"/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword: /^msg(?:ctxt|id|id_plural|str)\\b/m,\n    number: /\\b\\d+\\b/,\n    punctuation: /[\\[\\]]/\n  };\n  Prism.languages.po = Prism.languages.gettext;\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["punctuation","string","aliases","po","displayName","__esModule","lookbehind","value","keyword","number","greedy","gettext","pattern","alias","comment","default"]],"~:compiled-at",1676841365414,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$gettext.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,0CAAA,CAA+D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAYvGC,QAASA,QAAO,CAACC,KAAD,CAAQ,CACtBA,KAAMC,CAAAA,SAAUF,CAAAA,OAAhB,CAA0B,CACxBG,QAAS,CAAC,CACRC,QAAS,MADD,CAERC,OAAQ,CAAA,CAFA,CAGRC,MAAO,oBAHC,CAAD,CAIN,CACDF,QAAS,OADR,CAEDC,OAAQ,CAAA,CAFP,CAGDC,MAAO,mBAHN,CAJM,CAQN,CACDF,QAAS,MADR,CAEDC,OAAQ,CAAA,CAFP,CAGDC,MAAO,mBAHN,CARM,CAYN,CACDF,QAAS,MADR,CAEDC,OAAQ,CAAA,CAFP,CAGDC,MAAO,cAHN,CAZM,CAgBN,CACDF,QAAS,OADR,CAEDC,OAAQ,CAAA,CAFP,CAGDC,MAAO,iCAHN,CAhBM,CAoBN,CACDF,QAAS,KADR,CAEDC,OAAQ,CAAA,CAFP,CApBM,CADe,CAyBxBE,OAAQ,CACNH,QAAS,4BADH;AAENI,WAAY,CAAA,CAFN,CAGNH,OAAQ,CAAA,CAHF,CAzBgB,CA8BxBI,QAAS,kCA9Be,CA+BxBC,OAAQ,SA/BgB,CAgCxBC,YAAa,QAhCW,CAkC1BV,MAAMC,CAAAA,SAAUU,CAAAA,EAAhB,CAAqBX,KAAMC,CAAAA,SAAUF,CAAAA,OAnCf,CATxBa,MAAOC,CAAAA,cAAP,CAAsBf,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CgB,MAAO,CAAA,CADoC,CAA7C,CAGAhB,QAAQiB,CAAAA,OAAR,CAAkBhB,OAElBA,QAAQiB,CAAAA,WAAR,CAAsB,SACtBjB,QAAQkB,CAAAA,OAAR,CAAkB,CAAC,IAAD,CATqF;\",\n\"sources\":[\"node_modules/refractor/lang/gettext.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$gettext\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = gettext;\\n// @ts-nocheck\\ngettext.displayName = 'gettext';\\ngettext.aliases = ['po'];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction gettext(Prism) {\\n  Prism.languages.gettext = {\\n    comment: [{\\n      pattern: /# .*/,\\n      greedy: true,\\n      alias: 'translator-comment'\\n    }, {\\n      pattern: /#\\\\..*/,\\n      greedy: true,\\n      alias: 'extracted-comment'\\n    }, {\\n      pattern: /#:.*/,\\n      greedy: true,\\n      alias: 'reference-comment'\\n    }, {\\n      pattern: /#,.*/,\\n      greedy: true,\\n      alias: 'flag-comment'\\n    }, {\\n      pattern: /#\\\\|.*/,\\n      greedy: true,\\n      alias: 'previously-untranslated-comment'\\n    }, {\\n      pattern: /#.*/,\\n      greedy: true\\n    }],\\n    string: {\\n      pattern: /(^|[^\\\\\\\\])\\\"(?:[^\\\"\\\\\\\\]|\\\\\\\\.)*\\\"/,\\n      lookbehind: true,\\n      greedy: true\\n    },\\n    keyword: /^msg(?:ctxt|id|id_plural|str)\\\\b/m,\\n    number: /\\\\b\\\\d+\\\\b/,\\n    punctuation: /[\\\\[\\\\]]/\\n  };\\n  Prism.languages.po = Prism.languages.gettext;\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"gettext\",\"Prism\",\"languages\",\"comment\",\"pattern\",\"greedy\",\"alias\",\"string\",\"lookbehind\",\"keyword\",\"number\",\"punctuation\",\"po\",\"Object\",\"defineProperty\",\"value\",\"default\",\"displayName\",\"aliases\"]\n}\n"]