["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/vala.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$vala=function(global,require,module,exports){function vala(Prism){Prism.register(_clike.default);Prism.languages.vala=Prism.languages.extend(\"clike\",{\"class-name\":[{pattern:/\\b[A-Z]\\w*(?:\\.\\w+)*\\b(?=(?:\\?\\s+|\\*?\\s+\\*?)\\w)/,inside:{punctuation:/\\./}},{pattern:/(\\[)[A-Z]\\w*(?:\\.\\w+)*\\b/,lookbehind:!0,inside:{punctuation:/\\./}},{pattern:/(\\b(?:class|interface)\\s+[A-Z]\\w*(?:\\.\\w+)*\\s*:\\s*)[A-Z]\\w*(?:\\.\\w+)*\\b/,lookbehind:!0,inside:{punctuation:/\\./}},\n{pattern:/((?:\\b(?:class|enum|interface|new|struct)\\s+)|(?:catch\\s+\\())[A-Z]\\w*(?:\\.\\w+)*\\b/,lookbehind:!0,inside:{punctuation:/\\./}}],keyword:/\\b(?:abstract|as|assert|async|base|bool|break|case|catch|char|class|const|construct|continue|default|delegate|delete|do|double|dynamic|else|ensures|enum|errordomain|extern|finally|float|for|foreach|get|if|in|inline|int|int16|int32|int64|int8|interface|internal|is|lock|long|namespace|new|null|out|override|owned|params|private|protected|public|ref|requires|return|set|short|signal|sizeof|size_t|ssize_t|static|string|struct|switch|this|throw|throws|try|typeof|uchar|uint|uint16|uint32|uint64|uint8|ulong|unichar|unowned|ushort|using|value|var|virtual|void|volatile|weak|while|yield)\\b/i,\nfunction:/\\b\\w+(?=\\s*\\()/,number:/(?:\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)(?:f|u?l?)?/i,operator:/\\+\\+|--|&&|\\|\\||<<=?|>>=?|=>|->|~|[+\\-*\\/%&^|=!<>]=?|\\?\\??|\\.\\.\\./,punctuation:/[{}[\\];(),.:]/,constant:/\\b[A-Z0-9_]+\\b/});Prism.languages.insertBefore(\"vala\",\"string\",{\"raw-string\":{pattern:/\"\"\"[\\s\\S]*?\"\"\"/,greedy:!0,alias:\"string\"},\"template-string\":{pattern:/@\"[\\s\\S]*?\"/,greedy:!0,inside:{interpolation:{pattern:/\\$(?:\\([^)]*\\)|[a-zA-Z]\\w*)/,inside:{delimiter:{pattern:/^\\$\\(?|\\)$/,\nalias:\"punctuation\"},rest:Prism.languages.vala}},string:/[\\s\\S]+/}}});Prism.languages.insertBefore(\"vala\",\"keyword\",{regex:{pattern:/\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[imsx]{0,4}(?=\\s*(?:$|[\\r\\n,.;})\\]]))/,greedy:!0,inside:{\"regex-source\":{pattern:/^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,lookbehind:!0,alias:\"language-regex\",inside:Prism.languages.regex},\"regex-delimiter\":/^\\//,\"regex-flags\":/^[a-z]+$/}}})}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=vala;var _clike=function(obj){return obj&&\nobj.__esModule?obj:{default:obj}}(require(\"module$node_modules$refractor$lang$clike\"));vala.displayName=\"vala\";vala.aliases=[]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$vala\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = vala;\n\nvar _clike = _interopRequireDefault(require(\"./clike.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// @ts-nocheck\nvala.displayName = 'vala';\nvala.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nfunction vala(Prism) {\n  Prism.register(_clike.default);\n  Prism.languages.vala = Prism.languages.extend('clike', {\n    // Classes copied from prism-csharp\n    'class-name': [{\n      // (Foo bar, Bar baz)\n      pattern: /\\b[A-Z]\\w*(?:\\.\\w+)*\\b(?=(?:\\?\\s+|\\*?\\s+\\*?)\\w)/,\n      inside: {\n        punctuation: /\\./\n      }\n    }, {\n      // [Foo]\n      pattern: /(\\[)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n      lookbehind: true,\n      inside: {\n        punctuation: /\\./\n      }\n    }, {\n      // class Foo : Bar\n      pattern: /(\\b(?:class|interface)\\s+[A-Z]\\w*(?:\\.\\w+)*\\s*:\\s*)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n      lookbehind: true,\n      inside: {\n        punctuation: /\\./\n      }\n    }, {\n      // class Foo\n      pattern: /((?:\\b(?:class|enum|interface|new|struct)\\s+)|(?:catch\\s+\\())[A-Z]\\w*(?:\\.\\w+)*\\b/,\n      lookbehind: true,\n      inside: {\n        punctuation: /\\./\n      }\n    }],\n    keyword: /\\b(?:abstract|as|assert|async|base|bool|break|case|catch|char|class|const|construct|continue|default|delegate|delete|do|double|dynamic|else|ensures|enum|errordomain|extern|finally|float|for|foreach|get|if|in|inline|int|int16|int32|int64|int8|interface|internal|is|lock|long|namespace|new|null|out|override|owned|params|private|protected|public|ref|requires|return|set|short|signal|sizeof|size_t|ssize_t|static|string|struct|switch|this|throw|throws|try|typeof|uchar|uint|uint16|uint32|uint64|uint8|ulong|unichar|unowned|ushort|using|value|var|virtual|void|volatile|weak|while|yield)\\b/i,\n    function: /\\b\\w+(?=\\s*\\()/,\n    number: /(?:\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)(?:f|u?l?)?/i,\n    operator: /\\+\\+|--|&&|\\|\\||<<=?|>>=?|=>|->|~|[+\\-*\\/%&^|=!<>]=?|\\?\\??|\\.\\.\\./,\n    punctuation: /[{}[\\];(),.:]/,\n    constant: /\\b[A-Z0-9_]+\\b/\n  });\n  Prism.languages.insertBefore('vala', 'string', {\n    'raw-string': {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true,\n      alias: 'string'\n    },\n    'template-string': {\n      pattern: /@\"[\\s\\S]*?\"/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /\\$(?:\\([^)]*\\)|[a-zA-Z]\\w*)/,\n          inside: {\n            delimiter: {\n              pattern: /^\\$\\(?|\\)$/,\n              alias: 'punctuation'\n            },\n            rest: Prism.languages.vala\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  });\n  Prism.languages.insertBefore('vala', 'keyword', {\n    regex: {\n      pattern: /\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[imsx]{0,4}(?=\\s*(?:$|[\\r\\n,.;})\\]]))/,\n      greedy: true,\n      inside: {\n        'regex-source': {\n          pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n          lookbehind: true,\n          alias: 'language-regex',\n          inside: Prism.languages.regex\n        },\n        'regex-delimiter': /^\\//,\n        'regex-flags': /^[a-z]+$/\n      }\n    }\n  });\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$refractor$lang$clike"]],"~:properties",["^5",["punctuation","string","aliases","constant","operator","displayName","__esModule","regex","rest","lookbehind","value","delimiter","keyword","number","greedy","function","vala","pattern","inside","alias","interpolation","default"]],"~:compiled-at",1676841365472,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$vala.js\",\n\"lineCount\":5,\n\"mappings\":\"AAAAA,cAAA,CAAA,uCAAA,CAA4D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAiBpGC,QAASA,KAAI,CAACC,KAAD,CAAQ,CACnBA,KAAMC,CAAAA,QAAN,CAAeC,MAAOC,CAAAA,OAAtB,CACAH,MAAMI,CAAAA,SAAUL,CAAAA,IAAhB,CAAuBC,KAAMI,CAAAA,SAAUC,CAAAA,MAAhB,CAAuB,OAAvB,CAAgC,CAErD,aAAc,CAAC,CAEbC,QAAS,iDAFI,CAGbC,OAAQ,CACNC,YAAa,IADP,CAHK,CAAD,CAMX,CAEDF,QAAS,0BAFR,CAGDG,WAAY,CAAA,CAHX,CAIDF,OAAQ,CACNC,YAAa,IADP,CAJP,CANW,CAaX,CAEDF,QAAS,yEAFR,CAGDG,WAAY,CAAA,CAHX,CAIDF,OAAQ,CACNC,YAAa,IADP,CAJP,CAbW;AAoBX,CAEDF,QAAS,mFAFR,CAGDG,WAAY,CAAA,CAHX,CAIDF,OAAQ,CACNC,YAAa,IADP,CAJP,CApBW,CAFuC,CA8BrDE,QAAS,2kBA9B4C;AA+BrDC,SAAU,gBA/B2C,CAgCrDC,OAAQ,0EAhC6C,CAiCrDC,SAAU,mEAjC2C,CAkCrDL,YAAa,eAlCwC,CAmCrDM,SAAU,gBAnC2C,CAAhC,CAqCvBd,MAAMI,CAAAA,SAAUW,CAAAA,YAAhB,CAA6B,MAA7B,CAAqC,QAArC,CAA+C,CAC7C,aAAc,CACZT,QAAS,gBADG,CAEZU,OAAQ,CAAA,CAFI,CAGZC,MAAO,QAHK,CAD+B,CAM7C,kBAAmB,CACjBX,QAAS,aADQ,CAEjBU,OAAQ,CAAA,CAFS,CAGjBT,OAAQ,CACNW,cAAe,CACbZ,QAAS,6BADI,CAEbC,OAAQ,CACNY,UAAW,CACTb,QAAS,YADA;AAETW,MAAO,aAFE,CADL,CAKNG,KAAMpB,KAAMI,CAAAA,SAAUL,CAAAA,IALhB,CAFK,CADT,CAWNsB,OAAQ,SAXF,CAHS,CAN0B,CAA/C,CAwBArB,MAAMI,CAAAA,SAAUW,CAAAA,YAAhB,CAA6B,MAA7B,CAAqC,SAArC,CAAgD,CAC9CO,MAAO,CACLhB,QAAS,yFADJ,CAELU,OAAQ,CAAA,CAFH,CAGLT,OAAQ,CACN,eAAgB,CACdD,QAAS,2BADK,CAEdG,WAAY,CAAA,CAFE,CAGdQ,MAAO,gBAHO,CAIdV,OAAQP,KAAMI,CAAAA,SAAUkB,CAAAA,KAJV,CADV,CAON,kBAAmB,KAPb,CAQN,cAAe,UART,CAHH,CADuC,CAAhD,CA/DmB,CAdrBC,MAAOC,CAAAA,cAAP,CAAsB1B,OAAtB,CAA+B,YAA/B,CAA6C,CAC3C2B,MAAO,CAAA,CADoC,CAA7C,CAGA3B,QAAQK,CAAAA,OAAR,CAAkBJ,IAElB,KAAIG,OAEJwB,QAA+B,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA;AAAOA,GAAIC,CAAAA,UAAX,CAAwBD,GAAxB,CAA8B,CAAExB,QAASwB,GAAX,CAAvC,CAFxB,CAAuB/B,OAAA,CAAQ,0CAAR,CAAvB,CAKbG,KAAK8B,CAAAA,WAAL,CAAmB,MACnB9B,KAAK+B,CAAAA,OAAL,CAAe,EAdqF;\",\n\"sources\":[\"node_modules/refractor/lang/vala.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$vala\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = vala;\\n\\nvar _clike = _interopRequireDefault(require(\\\"./clike.js\\\"));\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\n// @ts-nocheck\\nvala.displayName = 'vala';\\nvala.aliases = [];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction vala(Prism) {\\n  Prism.register(_clike.default);\\n  Prism.languages.vala = Prism.languages.extend('clike', {\\n    // Classes copied from prism-csharp\\n    'class-name': [{\\n      // (Foo bar, Bar baz)\\n      pattern: /\\\\b[A-Z]\\\\w*(?:\\\\.\\\\w+)*\\\\b(?=(?:\\\\?\\\\s+|\\\\*?\\\\s+\\\\*?)\\\\w)/,\\n      inside: {\\n        punctuation: /\\\\./\\n      }\\n    }, {\\n      // [Foo]\\n      pattern: /(\\\\[)[A-Z]\\\\w*(?:\\\\.\\\\w+)*\\\\b/,\\n      lookbehind: true,\\n      inside: {\\n        punctuation: /\\\\./\\n      }\\n    }, {\\n      // class Foo : Bar\\n      pattern: /(\\\\b(?:class|interface)\\\\s+[A-Z]\\\\w*(?:\\\\.\\\\w+)*\\\\s*:\\\\s*)[A-Z]\\\\w*(?:\\\\.\\\\w+)*\\\\b/,\\n      lookbehind: true,\\n      inside: {\\n        punctuation: /\\\\./\\n      }\\n    }, {\\n      // class Foo\\n      pattern: /((?:\\\\b(?:class|enum|interface|new|struct)\\\\s+)|(?:catch\\\\s+\\\\())[A-Z]\\\\w*(?:\\\\.\\\\w+)*\\\\b/,\\n      lookbehind: true,\\n      inside: {\\n        punctuation: /\\\\./\\n      }\\n    }],\\n    keyword: /\\\\b(?:abstract|as|assert|async|base|bool|break|case|catch|char|class|const|construct|continue|default|delegate|delete|do|double|dynamic|else|ensures|enum|errordomain|extern|finally|float|for|foreach|get|if|in|inline|int|int16|int32|int64|int8|interface|internal|is|lock|long|namespace|new|null|out|override|owned|params|private|protected|public|ref|requires|return|set|short|signal|sizeof|size_t|ssize_t|static|string|struct|switch|this|throw|throws|try|typeof|uchar|uint|uint16|uint32|uint64|uint8|ulong|unichar|unowned|ushort|using|value|var|virtual|void|volatile|weak|while|yield)\\\\b/i,\\n    function: /\\\\b\\\\w+(?=\\\\s*\\\\()/,\\n    number: /(?:\\\\b0x[\\\\da-f]+\\\\b|(?:\\\\b\\\\d+(?:\\\\.\\\\d*)?|\\\\B\\\\.\\\\d+)(?:e[+-]?\\\\d+)?)(?:f|u?l?)?/i,\\n    operator: /\\\\+\\\\+|--|&&|\\\\|\\\\||<<=?|>>=?|=>|->|~|[+\\\\-*\\\\/%&^|=!<>]=?|\\\\?\\\\??|\\\\.\\\\.\\\\./,\\n    punctuation: /[{}[\\\\];(),.:]/,\\n    constant: /\\\\b[A-Z0-9_]+\\\\b/\\n  });\\n  Prism.languages.insertBefore('vala', 'string', {\\n    'raw-string': {\\n      pattern: /\\\"\\\"\\\"[\\\\s\\\\S]*?\\\"\\\"\\\"/,\\n      greedy: true,\\n      alias: 'string'\\n    },\\n    'template-string': {\\n      pattern: /@\\\"[\\\\s\\\\S]*?\\\"/,\\n      greedy: true,\\n      inside: {\\n        interpolation: {\\n          pattern: /\\\\$(?:\\\\([^)]*\\\\)|[a-zA-Z]\\\\w*)/,\\n          inside: {\\n            delimiter: {\\n              pattern: /^\\\\$\\\\(?|\\\\)$/,\\n              alias: 'punctuation'\\n            },\\n            rest: Prism.languages.vala\\n          }\\n        },\\n        string: /[\\\\s\\\\S]+/\\n      }\\n    }\\n  });\\n  Prism.languages.insertBefore('vala', 'keyword', {\\n    regex: {\\n      pattern: /\\\\/(?:\\\\[(?:[^\\\\]\\\\\\\\\\\\r\\\\n]|\\\\\\\\.)*\\\\]|\\\\\\\\.|[^/\\\\\\\\\\\\[\\\\r\\\\n])+\\\\/[imsx]{0,4}(?=\\\\s*(?:$|[\\\\r\\\\n,.;})\\\\]]))/,\\n      greedy: true,\\n      inside: {\\n        'regex-source': {\\n          pattern: /^(\\\\/)[\\\\s\\\\S]+(?=\\\\/[a-z]*$)/,\\n          lookbehind: true,\\n          alias: 'language-regex',\\n          inside: Prism.languages.regex\\n        },\\n        'regex-delimiter': /^\\\\//,\\n        'regex-flags': /^[a-z]+$/\\n      }\\n    }\\n  });\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"vala\",\"Prism\",\"register\",\"_clike\",\"default\",\"languages\",\"extend\",\"pattern\",\"inside\",\"punctuation\",\"lookbehind\",\"keyword\",\"function\",\"number\",\"operator\",\"constant\",\"insertBefore\",\"greedy\",\"alias\",\"interpolation\",\"delimiter\",\"rest\",\"string\",\"regex\",\"Object\",\"defineProperty\",\"value\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"displayName\",\"aliases\"]\n}\n"]