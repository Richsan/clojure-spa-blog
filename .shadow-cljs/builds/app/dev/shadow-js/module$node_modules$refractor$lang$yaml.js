["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/yaml.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$yaml=function(global,require,module,exports){function yaml(Prism$jscomp$0){(function(Prism){function createValuePattern(value,flags){flags=(flags||\"\").replace(/m/g,\"\")+\"m\";var pattern=/([:\\-,[{]\\s*(?:\\s<<prop>>[ \\t]+)?)(?:<<value>>)(?=[ \\t]*(?:$|,|\\]|\\}|(?:[\\r\\n]\\s*)?#))/.source.replace(/<<prop>>/g,function(){return properties}).replace(/<<value>>/g,function(){return value});return RegExp(pattern,flags)}var anchorOrAlias=/[*&][^\\s[\\]{},]+/,tag=/!(?:<[\\w\\-%#;/?:@&=+$,.!~*'()[\\]]+>|(?:[a-zA-Z\\d-]*!)?[\\w\\-%#;/?:@&=+$.~*'()]+)?/,\nproperties=\"(?:\"+tag.source+\"(?:[ \\t]+\"+anchorOrAlias.source+\")?|\"+anchorOrAlias.source+\"(?:[ \\t]+\"+tag.source+\")?)\",plainKey=/(?:[^\\s\\x00-\\x08\\x0e-\\x1f!\"#%&'*,\\-:>?@[\\]`{|}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]|[?:-]<PLAIN>)(?:[ \\t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(/<PLAIN>/g,function(){return/[^\\s\\x00-\\x08\\x0e-\\x1f,[\\]{}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]/.source}),string=/\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'/.source;Prism.languages.yaml={scalar:{pattern:RegExp(/([\\-:]\\s*(?:\\s<<prop>>[ \\t]+)?[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)\\S[^\\r\\n]*(?:\\2[^\\r\\n]+)*)/.source.replace(/<<prop>>/g,\nfunction(){return properties})),lookbehind:!0,alias:\"string\"},comment:/#.*/,key:{pattern:RegExp(/((?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:<<prop>>[ \\t]+)?)<<key>>(?=\\s*:\\s)/.source.replace(/<<prop>>/g,function(){return properties}).replace(/<<key>>/g,function(){return\"(?:\"+plainKey+\"|\"+string+\")\"})),lookbehind:!0,greedy:!0,alias:\"atrule\"},directive:{pattern:/(^[ \\t]*)%.+/m,lookbehind:!0,alias:\"important\"},datetime:{pattern:createValuePattern(/\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?(?:[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?))?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?/.source),\nlookbehind:!0,alias:\"number\"},boolean:{pattern:createValuePattern(/false|true/.source,\"i\"),lookbehind:!0,alias:\"important\"},null:{pattern:createValuePattern(/null|~/.source,\"i\"),lookbehind:!0,alias:\"important\"},string:{pattern:createValuePattern(string),lookbehind:!0,greedy:!0},number:{pattern:createValuePattern(/[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)/.source,\"i\"),lookbehind:!0},tag,important:anchorOrAlias,punctuation:/---|[:[\\]{}\\-,|>?]|\\.\\.\\./};Prism.languages.yml=\nPrism.languages.yaml})(Prism$jscomp$0)}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=yaml;yaml.displayName=\"yaml\";yaml.aliases=[\"yml\"]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$yaml\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = yaml;\n// @ts-nocheck\nyaml.displayName = 'yaml';\nyaml.aliases = ['yml'];\n/** @type {import('../core.js').Syntax} */\n\nfunction yaml(Prism) {\n  ;\n\n  (function (Prism) {\n    // https://yaml.org/spec/1.2/spec.html#c-ns-anchor-property\n    // https://yaml.org/spec/1.2/spec.html#c-ns-alias-node\n    var anchorOrAlias = /[*&][^\\s[\\]{},]+/; // https://yaml.org/spec/1.2/spec.html#c-ns-tag-property\n\n    var tag = /!(?:<[\\w\\-%#;/?:@&=+$,.!~*'()[\\]]+>|(?:[a-zA-Z\\d-]*!)?[\\w\\-%#;/?:@&=+$.~*'()]+)?/; // https://yaml.org/spec/1.2/spec.html#c-ns-properties(n,c)\n\n    var properties = '(?:' + tag.source + '(?:[ \\t]+' + anchorOrAlias.source + ')?|' + anchorOrAlias.source + '(?:[ \\t]+' + tag.source + ')?)'; // https://yaml.org/spec/1.2/spec.html#ns-plain(n,c)\n    // This is a simplified version that doesn't support \"#\" and multiline keys\n    // All these long scarry character classes are simplified versions of YAML's characters\n\n    var plainKey = /(?:[^\\s\\x00-\\x08\\x0e-\\x1f!\"#%&'*,\\-:>?@[\\]`{|}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]|[?:-]<PLAIN>)(?:[ \\t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(/<PLAIN>/g, function () {\n      return /[^\\s\\x00-\\x08\\x0e-\\x1f,[\\]{}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]/.source;\n    });\n    var string = /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'/.source;\n    /**\n     *\n     * @param {string} value\n     * @param {string} [flags]\n     * @returns {RegExp}\n     */\n\n    function createValuePattern(value, flags) {\n      flags = (flags || '').replace(/m/g, '') + 'm'; // add m flag\n\n      var pattern = /([:\\-,[{]\\s*(?:\\s<<prop>>[ \\t]+)?)(?:<<value>>)(?=[ \\t]*(?:$|,|\\]|\\}|(?:[\\r\\n]\\s*)?#))/.source.replace(/<<prop>>/g, function () {\n        return properties;\n      }).replace(/<<value>>/g, function () {\n        return value;\n      });\n      return RegExp(pattern, flags);\n    }\n\n    Prism.languages.yaml = {\n      scalar: {\n        pattern: RegExp(/([\\-:]\\s*(?:\\s<<prop>>[ \\t]+)?[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)\\S[^\\r\\n]*(?:\\2[^\\r\\n]+)*)/.source.replace(/<<prop>>/g, function () {\n          return properties;\n        })),\n        lookbehind: true,\n        alias: 'string'\n      },\n      comment: /#.*/,\n      key: {\n        pattern: RegExp(/((?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:<<prop>>[ \\t]+)?)<<key>>(?=\\s*:\\s)/.source.replace(/<<prop>>/g, function () {\n          return properties;\n        }).replace(/<<key>>/g, function () {\n          return '(?:' + plainKey + '|' + string + ')';\n        })),\n        lookbehind: true,\n        greedy: true,\n        alias: 'atrule'\n      },\n      directive: {\n        pattern: /(^[ \\t]*)%.+/m,\n        lookbehind: true,\n        alias: 'important'\n      },\n      datetime: {\n        pattern: createValuePattern(/\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?(?:[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?))?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?/.source),\n        lookbehind: true,\n        alias: 'number'\n      },\n      boolean: {\n        pattern: createValuePattern(/false|true/.source, 'i'),\n        lookbehind: true,\n        alias: 'important'\n      },\n      null: {\n        pattern: createValuePattern(/null|~/.source, 'i'),\n        lookbehind: true,\n        alias: 'important'\n      },\n      string: {\n        pattern: createValuePattern(string),\n        lookbehind: true,\n        greedy: true\n      },\n      number: {\n        pattern: createValuePattern(/[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)/.source, 'i'),\n        lookbehind: true\n      },\n      tag: tag,\n      important: anchorOrAlias,\n      punctuation: /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n    };\n    Prism.languages.yml = Prism.languages.yaml;\n  })(Prism);\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["boolean","punctuation","string","aliases","scalar","important","directive","yml","displayName","null","key","__esModule","yaml","lookbehind","tag","value","number","greedy","datetime","pattern","alias","comment","default"]],"~:compiled-at",1676841365366,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$yaml.js\",\n\"lineCount\":5,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/refractor/lang/yaml.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$yaml\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = yaml;\\n// @ts-nocheck\\nyaml.displayName = 'yaml';\\nyaml.aliases = ['yml'];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction yaml(Prism) {\\n  ;\\n\\n  (function (Prism) {\\n    // https://yaml.org/spec/1.2/spec.html#c-ns-anchor-property\\n    // https://yaml.org/spec/1.2/spec.html#c-ns-alias-node\\n    var anchorOrAlias = /[*&][^\\\\s[\\\\]{},]+/; // https://yaml.org/spec/1.2/spec.html#c-ns-tag-property\\n\\n    var tag = /!(?:<[\\\\w\\\\-%#;/?:@&=+$,.!~*'()[\\\\]]+>|(?:[a-zA-Z\\\\d-]*!)?[\\\\w\\\\-%#;/?:@&=+$.~*'()]+)?/; // https://yaml.org/spec/1.2/spec.html#c-ns-properties(n,c)\\n\\n    var properties = '(?:' + tag.source + '(?:[ \\\\t]+' + anchorOrAlias.source + ')?|' + anchorOrAlias.source + '(?:[ \\\\t]+' + tag.source + ')?)'; // https://yaml.org/spec/1.2/spec.html#ns-plain(n,c)\\n    // This is a simplified version that doesn't support \\\"#\\\" and multiline keys\\n    // All these long scarry character classes are simplified versions of YAML's characters\\n\\n    var plainKey = /(?:[^\\\\s\\\\x00-\\\\x08\\\\x0e-\\\\x1f!\\\"#%&'*,\\\\-:>?@[\\\\]`{|}\\\\x7f-\\\\x84\\\\x86-\\\\x9f\\\\ud800-\\\\udfff\\\\ufffe\\\\uffff]|[?:-]<PLAIN>)(?:[ \\\\t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(/<PLAIN>/g, function () {\\n      return /[^\\\\s\\\\x00-\\\\x08\\\\x0e-\\\\x1f,[\\\\]{}\\\\x7f-\\\\x84\\\\x86-\\\\x9f\\\\ud800-\\\\udfff\\\\ufffe\\\\uffff]/.source;\\n    });\\n    var string = /\\\"(?:[^\\\"\\\\\\\\\\\\r\\\\n]|\\\\\\\\.)*\\\"|'(?:[^'\\\\\\\\\\\\r\\\\n]|\\\\\\\\.)*'/.source;\\n    /**\\n     *\\n     * @param {string} value\\n     * @param {string} [flags]\\n     * @returns {RegExp}\\n     */\\n\\n    function createValuePattern(value, flags) {\\n      flags = (flags || '').replace(/m/g, '') + 'm'; // add m flag\\n\\n      var pattern = /([:\\\\-,[{]\\\\s*(?:\\\\s<<prop>>[ \\\\t]+)?)(?:<<value>>)(?=[ \\\\t]*(?:$|,|\\\\]|\\\\}|(?:[\\\\r\\\\n]\\\\s*)?#))/.source.replace(/<<prop>>/g, function () {\\n        return properties;\\n      }).replace(/<<value>>/g, function () {\\n        return value;\\n      });\\n      return RegExp(pattern, flags);\\n    }\\n\\n    Prism.languages.yaml = {\\n      scalar: {\\n        pattern: RegExp(/([\\\\-:]\\\\s*(?:\\\\s<<prop>>[ \\\\t]+)?[|>])[ \\\\t]*(?:((?:\\\\r?\\\\n|\\\\r)[ \\\\t]+)\\\\S[^\\\\r\\\\n]*(?:\\\\2[^\\\\r\\\\n]+)*)/.source.replace(/<<prop>>/g, function () {\\n          return properties;\\n        })),\\n        lookbehind: true,\\n        alias: 'string'\\n      },\\n      comment: /#.*/,\\n      key: {\\n        pattern: RegExp(/((?:^|[:\\\\-,[{\\\\r\\\\n?])[ \\\\t]*(?:<<prop>>[ \\\\t]+)?)<<key>>(?=\\\\s*:\\\\s)/.source.replace(/<<prop>>/g, function () {\\n          return properties;\\n        }).replace(/<<key>>/g, function () {\\n          return '(?:' + plainKey + '|' + string + ')';\\n        })),\\n        lookbehind: true,\\n        greedy: true,\\n        alias: 'atrule'\\n      },\\n      directive: {\\n        pattern: /(^[ \\\\t]*)%.+/m,\\n        lookbehind: true,\\n        alias: 'important'\\n      },\\n      datetime: {\\n        pattern: createValuePattern(/\\\\d{4}-\\\\d\\\\d?-\\\\d\\\\d?(?:[tT]|[ \\\\t]+)\\\\d\\\\d?:\\\\d{2}:\\\\d{2}(?:\\\\.\\\\d*)?(?:[ \\\\t]*(?:Z|[-+]\\\\d\\\\d?(?::\\\\d{2})?))?|\\\\d{4}-\\\\d{2}-\\\\d{2}|\\\\d\\\\d?:\\\\d{2}(?::\\\\d{2}(?:\\\\.\\\\d*)?)?/.source),\\n        lookbehind: true,\\n        alias: 'number'\\n      },\\n      boolean: {\\n        pattern: createValuePattern(/false|true/.source, 'i'),\\n        lookbehind: true,\\n        alias: 'important'\\n      },\\n      null: {\\n        pattern: createValuePattern(/null|~/.source, 'i'),\\n        lookbehind: true,\\n        alias: 'important'\\n      },\\n      string: {\\n        pattern: createValuePattern(string),\\n        lookbehind: true,\\n        greedy: true\\n      },\\n      number: {\\n        pattern: createValuePattern(/[+-]?(?:0x[\\\\da-f]+|0o[0-7]+|(?:\\\\d+(?:\\\\.\\\\d*)?|\\\\.\\\\d+)(?:e[+-]?\\\\d+)?|\\\\.inf|\\\\.nan)/.source, 'i'),\\n        lookbehind: true\\n      },\\n      tag: tag,\\n      important: anchorOrAlias,\\n      punctuation: /---|[:[\\\\]{}\\\\-,|>?]|\\\\.\\\\.\\\\./\\n    };\\n    Prism.languages.yml = Prism.languages.yaml;\\n  })(Prism);\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"yaml\",\"Prism\",\"createValuePattern\",\"value\",\"flags\",\"replace\",\"pattern\",\"source\",\"properties\",\"RegExp\",\"anchorOrAlias\",\"tag\",\"plainKey\",\"string\",\"languages\",\"scalar\",\"lookbehind\",\"alias\",\"comment\",\"key\",\"greedy\",\"directive\",\"datetime\",\"boolean\",\"null\",\"number\",\"important\",\"punctuation\",\"yml\",\"Object\",\"defineProperty\",\"default\",\"displayName\",\"aliases\"]\n}\n"]