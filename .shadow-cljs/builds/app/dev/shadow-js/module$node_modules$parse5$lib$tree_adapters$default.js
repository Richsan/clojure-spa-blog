["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/parse5/lib/tree-adapters/default.js"],"~:js","shadow$provide.module$node_modules$parse5$lib$tree_adapters$default=function(global,require,module,exports){const {DOCUMENT_MODE}=require(\"module$node_modules$parse5$lib$common$html\");exports.createDocument=function(){return{nodeName:\"#document\",mode:DOCUMENT_MODE.NO_QUIRKS,childNodes:[]}};exports.createDocumentFragment=function(){return{nodeName:\"#document-fragment\",childNodes:[]}};exports.createElement=function(tagName,namespaceURI,attrs){return{nodeName:tagName,tagName,attrs,namespaceURI,childNodes:[],\nparentNode:null}};exports.createCommentNode=function(data){return{nodeName:\"#comment\",data,parentNode:null}};const createTextNode=function(value){return{nodeName:\"#text\",value,parentNode:null}},appendChild=exports.appendChild=function(parentNode,newNode){parentNode.childNodes.push(newNode);newNode.parentNode=parentNode},insertBefore=exports.insertBefore=function(parentNode,newNode,referenceNode){referenceNode=parentNode.childNodes.indexOf(referenceNode);parentNode.childNodes.splice(referenceNode,\n0,newNode);newNode.parentNode=parentNode};exports.setTemplateContent=function(templateElement,contentElement){templateElement.content=contentElement};exports.getTemplateContent=function(templateElement){return templateElement.content};exports.setDocumentType=function(document,name,publicId,systemId){let doctypeNode=null;for(let i=0;i<document.childNodes.length;i++)if(\"#documentType\"===document.childNodes[i].nodeName){doctypeNode=document.childNodes[i];break}doctypeNode?(doctypeNode.name=name,doctypeNode.publicId=\npublicId,doctypeNode.systemId=systemId):appendChild(document,{nodeName:\"#documentType\",name,publicId,systemId})};exports.setDocumentMode=function(document,mode){document.mode=mode};exports.getDocumentMode=function(document){return document.mode};exports.detachNode=function(node){if(node.parentNode){const idx=node.parentNode.childNodes.indexOf(node);node.parentNode.childNodes.splice(idx,1);node.parentNode=null}};exports.insertText=function(parentNode,text){if(parentNode.childNodes.length){const prevNode=\nparentNode.childNodes[parentNode.childNodes.length-1];if(\"#text\"===prevNode.nodeName){prevNode.value+=text;return}}appendChild(parentNode,createTextNode(text))};exports.insertTextBefore=function(parentNode,text,referenceNode){const prevNode=parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode)-1];prevNode&&\"#text\"===prevNode.nodeName?prevNode.value+=text:insertBefore(parentNode,createTextNode(text),referenceNode)};exports.adoptAttributes=function(recipient,attrs){const recipientAttrsMap=\n[];for(var i=0;i<recipient.attrs.length;i++)recipientAttrsMap.push(recipient.attrs[i].name);for(i=0;i<attrs.length;i++)-1===recipientAttrsMap.indexOf(attrs[i].name)&&recipient.attrs.push(attrs[i])};exports.getFirstChild=function(node){return node.childNodes[0]};exports.getChildNodes=function(node){return node.childNodes};exports.getParentNode=function(node){return node.parentNode};exports.getAttrList=function(element){return element.attrs};exports.getTagName=function(element){return element.tagName};\nexports.getNamespaceURI=function(element){return element.namespaceURI};exports.getTextNodeContent=function(textNode){return textNode.value};exports.getCommentNodeContent=function(commentNode){return commentNode.data};exports.getDocumentTypeNodeName=function(doctypeNode){return doctypeNode.name};exports.getDocumentTypeNodePublicId=function(doctypeNode){return doctypeNode.publicId};exports.getDocumentTypeNodeSystemId=function(doctypeNode){return doctypeNode.systemId};exports.isTextNode=function(node){return\"#text\"===\nnode.nodeName};exports.isCommentNode=function(node){return\"#comment\"===node.nodeName};exports.isDocumentTypeNode=function(node){return\"#documentType\"===node.nodeName};exports.isElementNode=function(node){return!!node.tagName};exports.setNodeSourceCodeLocation=function(node,location){node.sourceCodeLocation=location};exports.getNodeSourceCodeLocation=function(node){return node.sourceCodeLocation};exports.updateNodeSourceCodeLocation=function(node,endLocation){node.sourceCodeLocation=Object.assign(node.sourceCodeLocation,\nendLocation)}}","~:source","shadow$provide[\"module$node_modules$parse5$lib$tree_adapters$default\"] = function(global,require,module,exports) {\n'use strict';\n\nconst { DOCUMENT_MODE } = require('../common/html');\n\n//Node construction\nexports.createDocument = function() {\n    return {\n        nodeName: '#document',\n        mode: DOCUMENT_MODE.NO_QUIRKS,\n        childNodes: []\n    };\n};\n\nexports.createDocumentFragment = function() {\n    return {\n        nodeName: '#document-fragment',\n        childNodes: []\n    };\n};\n\nexports.createElement = function(tagName, namespaceURI, attrs) {\n    return {\n        nodeName: tagName,\n        tagName: tagName,\n        attrs: attrs,\n        namespaceURI: namespaceURI,\n        childNodes: [],\n        parentNode: null\n    };\n};\n\nexports.createCommentNode = function(data) {\n    return {\n        nodeName: '#comment',\n        data: data,\n        parentNode: null\n    };\n};\n\nconst createTextNode = function(value) {\n    return {\n        nodeName: '#text',\n        value: value,\n        parentNode: null\n    };\n};\n\n//Tree mutation\nconst appendChild = (exports.appendChild = function(parentNode, newNode) {\n    parentNode.childNodes.push(newNode);\n    newNode.parentNode = parentNode;\n});\n\nconst insertBefore = (exports.insertBefore = function(parentNode, newNode, referenceNode) {\n    const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\n\n    parentNode.childNodes.splice(insertionIdx, 0, newNode);\n    newNode.parentNode = parentNode;\n});\n\nexports.setTemplateContent = function(templateElement, contentElement) {\n    templateElement.content = contentElement;\n};\n\nexports.getTemplateContent = function(templateElement) {\n    return templateElement.content;\n};\n\nexports.setDocumentType = function(document, name, publicId, systemId) {\n    let doctypeNode = null;\n\n    for (let i = 0; i < document.childNodes.length; i++) {\n        if (document.childNodes[i].nodeName === '#documentType') {\n            doctypeNode = document.childNodes[i];\n            break;\n        }\n    }\n\n    if (doctypeNode) {\n        doctypeNode.name = name;\n        doctypeNode.publicId = publicId;\n        doctypeNode.systemId = systemId;\n    } else {\n        appendChild(document, {\n            nodeName: '#documentType',\n            name: name,\n            publicId: publicId,\n            systemId: systemId\n        });\n    }\n};\n\nexports.setDocumentMode = function(document, mode) {\n    document.mode = mode;\n};\n\nexports.getDocumentMode = function(document) {\n    return document.mode;\n};\n\nexports.detachNode = function(node) {\n    if (node.parentNode) {\n        const idx = node.parentNode.childNodes.indexOf(node);\n\n        node.parentNode.childNodes.splice(idx, 1);\n        node.parentNode = null;\n    }\n};\n\nexports.insertText = function(parentNode, text) {\n    if (parentNode.childNodes.length) {\n        const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\n\n        if (prevNode.nodeName === '#text') {\n            prevNode.value += text;\n            return;\n        }\n    }\n\n    appendChild(parentNode, createTextNode(text));\n};\n\nexports.insertTextBefore = function(parentNode, text, referenceNode) {\n    const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\n\n    if (prevNode && prevNode.nodeName === '#text') {\n        prevNode.value += text;\n    } else {\n        insertBefore(parentNode, createTextNode(text), referenceNode);\n    }\n};\n\nexports.adoptAttributes = function(recipient, attrs) {\n    const recipientAttrsMap = [];\n\n    for (let i = 0; i < recipient.attrs.length; i++) {\n        recipientAttrsMap.push(recipient.attrs[i].name);\n    }\n\n    for (let j = 0; j < attrs.length; j++) {\n        if (recipientAttrsMap.indexOf(attrs[j].name) === -1) {\n            recipient.attrs.push(attrs[j]);\n        }\n    }\n};\n\n//Tree traversing\nexports.getFirstChild = function(node) {\n    return node.childNodes[0];\n};\n\nexports.getChildNodes = function(node) {\n    return node.childNodes;\n};\n\nexports.getParentNode = function(node) {\n    return node.parentNode;\n};\n\nexports.getAttrList = function(element) {\n    return element.attrs;\n};\n\n//Node data\nexports.getTagName = function(element) {\n    return element.tagName;\n};\n\nexports.getNamespaceURI = function(element) {\n    return element.namespaceURI;\n};\n\nexports.getTextNodeContent = function(textNode) {\n    return textNode.value;\n};\n\nexports.getCommentNodeContent = function(commentNode) {\n    return commentNode.data;\n};\n\nexports.getDocumentTypeNodeName = function(doctypeNode) {\n    return doctypeNode.name;\n};\n\nexports.getDocumentTypeNodePublicId = function(doctypeNode) {\n    return doctypeNode.publicId;\n};\n\nexports.getDocumentTypeNodeSystemId = function(doctypeNode) {\n    return doctypeNode.systemId;\n};\n\n//Node types\nexports.isTextNode = function(node) {\n    return node.nodeName === '#text';\n};\n\nexports.isCommentNode = function(node) {\n    return node.nodeName === '#comment';\n};\n\nexports.isDocumentTypeNode = function(node) {\n    return node.nodeName === '#documentType';\n};\n\nexports.isElementNode = function(node) {\n    return !!node.tagName;\n};\n\n// Source code location\nexports.setNodeSourceCodeLocation = function(node, location) {\n    node.sourceCodeLocation = location;\n};\n\nexports.getNodeSourceCodeLocation = function(node) {\n    return node.sourceCodeLocation;\n};\n\nexports.updateNodeSourceCodeLocation = function(node, endLocation) {\n    node.sourceCodeLocation = Object.assign(node.sourceCodeLocation, endLocation);\n};\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$parse5$lib$common$html","~$shadow.js"]],"~:properties",["^5",["getDocumentTypeNodePublicId","detachNode","systemId","updateNodeSourceCodeLocation","attrs","getNamespaceURI","getParentNode","getCommentNodeContent","appendChild","childNodes","getDocumentTypeNodeName","createDocument","setNodeSourceCodeLocation","getTextNodeContent","createElement","publicId","getTemplateContent","adoptAttributes","getAttrList","sourceCodeLocation","isTextNode","mode","parentNode","nodeName","getDocumentMode","insertBefore","name","setDocumentMode","createCommentNode","value","getDocumentTypeNodeSystemId","setDocumentType","content","getChildNodes","namespaceURI","tagName","insertText","getNodeSourceCodeLocation","getFirstChild","createDocumentFragment","data","isDocumentTypeNode","insertTextBefore","isElementNode","getTagName","setTemplateContent","isCommentNode"]],"~:compiled-at",1676667638417,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$parse5$lib$tree_adapters$default.js\",\n\"lineCount\":9,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/parse5/lib/tree-adapters/default.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$parse5$lib$tree_adapters$default\\\"] = function(global,require,module,exports) {\\n'use strict';\\n\\nconst { DOCUMENT_MODE } = require('../common/html');\\n\\n//Node construction\\nexports.createDocument = function() {\\n    return {\\n        nodeName: '#document',\\n        mode: DOCUMENT_MODE.NO_QUIRKS,\\n        childNodes: []\\n    };\\n};\\n\\nexports.createDocumentFragment = function() {\\n    return {\\n        nodeName: '#document-fragment',\\n        childNodes: []\\n    };\\n};\\n\\nexports.createElement = function(tagName, namespaceURI, attrs) {\\n    return {\\n        nodeName: tagName,\\n        tagName: tagName,\\n        attrs: attrs,\\n        namespaceURI: namespaceURI,\\n        childNodes: [],\\n        parentNode: null\\n    };\\n};\\n\\nexports.createCommentNode = function(data) {\\n    return {\\n        nodeName: '#comment',\\n        data: data,\\n        parentNode: null\\n    };\\n};\\n\\nconst createTextNode = function(value) {\\n    return {\\n        nodeName: '#text',\\n        value: value,\\n        parentNode: null\\n    };\\n};\\n\\n//Tree mutation\\nconst appendChild = (exports.appendChild = function(parentNode, newNode) {\\n    parentNode.childNodes.push(newNode);\\n    newNode.parentNode = parentNode;\\n});\\n\\nconst insertBefore = (exports.insertBefore = function(parentNode, newNode, referenceNode) {\\n    const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\\n\\n    parentNode.childNodes.splice(insertionIdx, 0, newNode);\\n    newNode.parentNode = parentNode;\\n});\\n\\nexports.setTemplateContent = function(templateElement, contentElement) {\\n    templateElement.content = contentElement;\\n};\\n\\nexports.getTemplateContent = function(templateElement) {\\n    return templateElement.content;\\n};\\n\\nexports.setDocumentType = function(document, name, publicId, systemId) {\\n    let doctypeNode = null;\\n\\n    for (let i = 0; i < document.childNodes.length; i++) {\\n        if (document.childNodes[i].nodeName === '#documentType') {\\n            doctypeNode = document.childNodes[i];\\n            break;\\n        }\\n    }\\n\\n    if (doctypeNode) {\\n        doctypeNode.name = name;\\n        doctypeNode.publicId = publicId;\\n        doctypeNode.systemId = systemId;\\n    } else {\\n        appendChild(document, {\\n            nodeName: '#documentType',\\n            name: name,\\n            publicId: publicId,\\n            systemId: systemId\\n        });\\n    }\\n};\\n\\nexports.setDocumentMode = function(document, mode) {\\n    document.mode = mode;\\n};\\n\\nexports.getDocumentMode = function(document) {\\n    return document.mode;\\n};\\n\\nexports.detachNode = function(node) {\\n    if (node.parentNode) {\\n        const idx = node.parentNode.childNodes.indexOf(node);\\n\\n        node.parentNode.childNodes.splice(idx, 1);\\n        node.parentNode = null;\\n    }\\n};\\n\\nexports.insertText = function(parentNode, text) {\\n    if (parentNode.childNodes.length) {\\n        const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\\n\\n        if (prevNode.nodeName === '#text') {\\n            prevNode.value += text;\\n            return;\\n        }\\n    }\\n\\n    appendChild(parentNode, createTextNode(text));\\n};\\n\\nexports.insertTextBefore = function(parentNode, text, referenceNode) {\\n    const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\\n\\n    if (prevNode && prevNode.nodeName === '#text') {\\n        prevNode.value += text;\\n    } else {\\n        insertBefore(parentNode, createTextNode(text), referenceNode);\\n    }\\n};\\n\\nexports.adoptAttributes = function(recipient, attrs) {\\n    const recipientAttrsMap = [];\\n\\n    for (let i = 0; i < recipient.attrs.length; i++) {\\n        recipientAttrsMap.push(recipient.attrs[i].name);\\n    }\\n\\n    for (let j = 0; j < attrs.length; j++) {\\n        if (recipientAttrsMap.indexOf(attrs[j].name) === -1) {\\n            recipient.attrs.push(attrs[j]);\\n        }\\n    }\\n};\\n\\n//Tree traversing\\nexports.getFirstChild = function(node) {\\n    return node.childNodes[0];\\n};\\n\\nexports.getChildNodes = function(node) {\\n    return node.childNodes;\\n};\\n\\nexports.getParentNode = function(node) {\\n    return node.parentNode;\\n};\\n\\nexports.getAttrList = function(element) {\\n    return element.attrs;\\n};\\n\\n//Node data\\nexports.getTagName = function(element) {\\n    return element.tagName;\\n};\\n\\nexports.getNamespaceURI = function(element) {\\n    return element.namespaceURI;\\n};\\n\\nexports.getTextNodeContent = function(textNode) {\\n    return textNode.value;\\n};\\n\\nexports.getCommentNodeContent = function(commentNode) {\\n    return commentNode.data;\\n};\\n\\nexports.getDocumentTypeNodeName = function(doctypeNode) {\\n    return doctypeNode.name;\\n};\\n\\nexports.getDocumentTypeNodePublicId = function(doctypeNode) {\\n    return doctypeNode.publicId;\\n};\\n\\nexports.getDocumentTypeNodeSystemId = function(doctypeNode) {\\n    return doctypeNode.systemId;\\n};\\n\\n//Node types\\nexports.isTextNode = function(node) {\\n    return node.nodeName === '#text';\\n};\\n\\nexports.isCommentNode = function(node) {\\n    return node.nodeName === '#comment';\\n};\\n\\nexports.isDocumentTypeNode = function(node) {\\n    return node.nodeName === '#documentType';\\n};\\n\\nexports.isElementNode = function(node) {\\n    return !!node.tagName;\\n};\\n\\n// Source code location\\nexports.setNodeSourceCodeLocation = function(node, location) {\\n    node.sourceCodeLocation = location;\\n};\\n\\nexports.getNodeSourceCodeLocation = function(node) {\\n    return node.sourceCodeLocation;\\n};\\n\\nexports.updateNodeSourceCodeLocation = function(node, endLocation) {\\n    node.sourceCodeLocation = Object.assign(node.sourceCodeLocation, endLocation);\\n};\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"DOCUMENT_MODE\",\"createDocument\",\"exports.createDocument\",\"nodeName\",\"mode\",\"NO_QUIRKS\",\"childNodes\",\"createDocumentFragment\",\"exports.createDocumentFragment\",\"createElement\",\"exports.createElement\",\"tagName\",\"namespaceURI\",\"attrs\",\"parentNode\",\"createCommentNode\",\"exports.createCommentNode\",\"data\",\"createTextNode\",\"value\",\"appendChild\",\"exports.appendChild\",\"newNode\",\"push\",\"insertBefore\",\"exports.insertBefore\",\"referenceNode\",\"insertionIdx\",\"indexOf\",\"splice\",\"setTemplateContent\",\"exports.setTemplateContent\",\"templateElement\",\"contentElement\",\"content\",\"getTemplateContent\",\"exports.getTemplateContent\",\"setDocumentType\",\"exports.setDocumentType\",\"document\",\"name\",\"publicId\",\"systemId\",\"doctypeNode\",\"i\",\"length\",\"setDocumentMode\",\"exports.setDocumentMode\",\"getDocumentMode\",\"exports.getDocumentMode\",\"detachNode\",\"exports.detachNode\",\"node\",\"idx\",\"insertText\",\"exports.insertText\",\"text\",\"prevNode\",\"insertTextBefore\",\"exports.insertTextBefore\",\"adoptAttributes\",\"exports.adoptAttributes\",\"recipient\",\"recipientAttrsMap\",\"j\",\"getFirstChild\",\"exports.getFirstChild\",\"getChildNodes\",\"exports.getChildNodes\",\"getParentNode\",\"exports.getParentNode\",\"getAttrList\",\"exports.getAttrList\",\"element\",\"getTagName\",\"exports.getTagName\",\"getNamespaceURI\",\"exports.getNamespaceURI\",\"getTextNodeContent\",\"exports.getTextNodeContent\",\"textNode\",\"getCommentNodeContent\",\"exports.getCommentNodeContent\",\"commentNode\",\"getDocumentTypeNodeName\",\"exports.getDocumentTypeNodeName\",\"getDocumentTypeNodePublicId\",\"exports.getDocumentTypeNodePublicId\",\"getDocumentTypeNodeSystemId\",\"exports.getDocumentTypeNodeSystemId\",\"isTextNode\",\"exports.isTextNode\",\"isCommentNode\",\"exports.isCommentNode\",\"isDocumentTypeNode\",\"exports.isDocumentTypeNode\",\"isElementNode\",\"exports.isElementNode\",\"setNodeSourceCodeLocation\",\"exports.setNodeSourceCodeLocation\",\"location\",\"sourceCodeLocation\",\"getNodeSourceCodeLocation\",\"exports.getNodeSourceCodeLocation\",\"updateNodeSourceCodeLocation\",\"exports.updateNodeSourceCodeLocation\",\"endLocation\",\"Object\",\"assign\"]\n}\n"]