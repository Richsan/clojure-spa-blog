["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mdast-util-to-markdown/lib/util/indent-lines.js"],"~:js","shadow$provide.module$node_modules$mdast_util_to_markdown$lib$util$indent_lines=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.indentLines=function(value,map){const result=[];var start=0;let line=0,match;for(;match=eol.exec(value);)start=value.slice(start,match.index),result.push(map(start,line,!start)),result.push(match[0]),start=match.index+match[0].length,line++;value=value.slice(start);result.push(map(value,line,!value));return result.join(\"\")};\nconst eol=/\\r?\\n|\\r/g}","~:source","shadow$provide[\"module$node_modules$mdast_util_to_markdown$lib$util$indent_lines\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.indentLines = indentLines;\n\n/**\n * @typedef {import('../types.js').IndentLines} IndentLines\n */\nconst eol = /\\r?\\n|\\r/g;\n/**\n * @type {IndentLines}\n */\n\nfunction indentLines(value, map) {\n  /** @type {Array<string>} */\n  const result = [];\n  let start = 0;\n  let line = 0;\n  /** @type {RegExpExecArray | null} */\n\n  let match;\n\n  while (match = eol.exec(value)) {\n    one(value.slice(start, match.index));\n    result.push(match[0]);\n    start = match.index + match[0].length;\n    line++;\n  }\n\n  one(value.slice(start));\n  return result.join('');\n  /**\n   * @param {string} value\n   */\n\n  function one(value) {\n    result.push(map(value, line, !value));\n  }\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["__esModule","indentLines","value"]],"~:compiled-at",1676841365337,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mdast_util_to_markdown$lib$util$indent_lines.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,gEAAA,CAAqF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG7HC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,WAAR,CAUAA,QAAoB,CAACD,KAAD,CAAQE,GAAR,CAAa,CAE/B,MAAMC,OAAS,EACf,KAAIC,MAAQ,CACZ,KAAIC,KAAO,CAAX,CAGIC,KAEJ,KAAA,CAAOA,KAAP,CAAeC,GAAIC,CAAAA,IAAJ,CAASR,KAAT,CAAf,CAAA,CACM,KAGJ,CAHIA,KAAMS,CAAAA,KAAN,CAAYL,KAAZ,CAAmBE,KAAMI,CAAAA,KAAzB,CAGJ,CAUAP,MAAOQ,CAAAA,IAAP,CAAYT,GAAA,CAAIF,KAAJ,CAAWK,IAAX,CAAiB,CAACL,KAAlB,CAAZ,CAVA,CAFAG,MAAOQ,CAAAA,IAAP,CAAYL,KAAA,CAAM,CAAN,CAAZ,CAEA,CADAF,KACA,CADQE,KAAMI,CAAAA,KACd,CADsBJ,KAAA,CAAM,CAAN,CAASM,CAAAA,MAC/B,CAAAP,IAAA,EAGE,MAAA,CAAAL,KAAMS,CAAAA,KAAN,CAAYL,KAAZ,CAOFD,OAAOQ,CAAAA,IAAP,CAAYT,GAAA,CAAIF,KAAJ,CAAWK,IAAX,CAAiB,CAACL,KAAlB,CAAZ,CANF,OAAOG,OAAOU,CAAAA,IAAP,CAAY,EAAZ,CAjBwB,CALjC;MAAMN,IAAM,WAXiH;\",\n\"sources\":[\"node_modules/mdast-util-to-markdown/lib/util/indent-lines.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$mdast_util_to_markdown$lib$util$indent_lines\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.indentLines = indentLines;\\n\\n/**\\n * @typedef {import('../types.js').IndentLines} IndentLines\\n */\\nconst eol = /\\\\r?\\\\n|\\\\r/g;\\n/**\\n * @type {IndentLines}\\n */\\n\\nfunction indentLines(value, map) {\\n  /** @type {Array<string>} */\\n  const result = [];\\n  let start = 0;\\n  let line = 0;\\n  /** @type {RegExpExecArray | null} */\\n\\n  let match;\\n\\n  while (match = eol.exec(value)) {\\n    one(value.slice(start, match.index));\\n    result.push(match[0]);\\n    start = match.index + match[0].length;\\n    line++;\\n  }\\n\\n  one(value.slice(start));\\n  return result.join('');\\n  /**\\n   * @param {string} value\\n   */\\n\\n  function one(value) {\\n    result.push(map(value, line, !value));\\n  }\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"indentLines\",\"map\",\"result\",\"start\",\"line\",\"match\",\"eol\",\"exec\",\"slice\",\"index\",\"push\",\"length\",\"join\"]\n}\n"]