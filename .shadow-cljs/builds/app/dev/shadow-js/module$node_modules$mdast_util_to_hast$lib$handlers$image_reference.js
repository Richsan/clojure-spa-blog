["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mdast-util-to-hast/lib/handlers/image-reference.js"],"~:js","shadow$provide.module$node_modules$mdast_util_to_hast$lib$handlers$image_reference=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.imageReference=function(state,node){var def=state.definition(node.identifier);if(!def)return(0,_revert.revert)(state,node);const properties={src:(0,_micromarkUtilSanitizeUri.normalizeUri)(def.url||\"\"),alt:node.alt};null!==def.title&&void 0!==def.title&&(properties.title=def.title);def={type:\"element\",tagName:\"img\",\nproperties,children:[]};state.patch(node,def);return state.applyData(node,def)};var _micromarkUtilSanitizeUri=require(\"module$node_modules$micromark_util_sanitize_uri$index\"),_revert=require(\"module$node_modules$mdast_util_to_hast$lib$revert\")}","~:source","shadow$provide[\"module$node_modules$mdast_util_to_hast$lib$handlers$image_reference\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.imageReference = imageReference;\n\nvar _micromarkUtilSanitizeUri = require(\"micromark-util-sanitize-uri\");\n\nvar _revert = require(\"../revert.js\");\n\n/**\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {ElementContent | Array<ElementContent>}\n *   hast node.\n */\nfunction imageReference(state, node) {\n  const def = state.definition(node.identifier);\n\n  if (!def) {\n    return (0, _revert.revert)(state, node);\n  }\n  /** @type {Properties} */\n\n\n  const properties = {\n    src: (0, _micromarkUtilSanitizeUri.normalizeUri)(def.url || ''),\n    alt: node.alt\n  };\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title;\n  }\n  /** @type {Element} */\n\n\n  const result = {\n    type: 'element',\n    tagName: 'img',\n    properties,\n    children: []\n  };\n  state.patch(node, result);\n  return state.applyData(node, result);\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$mdast_util_to_hast$lib$revert","~$shadow.js","~$module$node_modules$micromark_util_sanitize_uri$index"]],"~:properties",["^5",["properties","children","__esModule","src","value","alt","title","type","tagName","imageReference"]],"~:compiled-at",1676665867312,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mdast_util_to_hast$lib$handlers$image_reference.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,mEAAA,CAAwF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGhIC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,cAAR,CAwBAA,QAAuB,CAACC,KAAD,CAAQC,IAAR,CAAc,CACnC,IAAMC,IAAMF,KAAMG,CAAAA,UAAN,CAAiBF,IAAKG,CAAAA,UAAtB,CAEZ,IAAI,CAACF,GAAL,CACE,MAAO,GAAIG,OAAQC,CAAAA,MAAZ,EAAoBN,KAApB,CAA2BC,IAA3B,CAKT,OAAMM,WAAa,CACjBC,IAAK,GAAIC,yBAA0BC,CAAAA,YAA9B,EAA4CR,GAAIS,CAAAA,GAAhD,EAAuD,EAAvD,CADY,CAEjBC,IAAKX,IAAKW,CAAAA,GAFO,CAKD,KAAlB,GAAIV,GAAIW,CAAAA,KAAR,EAAwCC,IAAAA,EAAxC,GAA0BZ,GAAIW,CAAAA,KAA9B,GACEN,UAAWM,CAAAA,KADb,CACqBX,GAAIW,CAAAA,KADzB,CAMME,IAAAA,CAAS,CACbC,KAAM,SADO,CAEbC,QAAS,KAFI;AAGbV,UAHa,CAIbW,SAAU,EAJG,CAMflB,MAAMmB,CAAAA,KAAN,CAAYlB,IAAZ,CAAkBc,GAAlB,CACA,OAAOf,MAAMoB,CAAAA,SAAN,CAAgBnB,IAAhB,CAAsBc,GAAtB,CA3B4B,CAtBrC,KAAIN,0BAA4BhB,OAAA,CAAQ,uDAAR,CAAhC,CAEIY,QAAUZ,OAAA,CAAQ,mDAAR,CAVkH;\",\n\"sources\":[\"node_modules/mdast-util-to-hast/lib/handlers/image-reference.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$mdast_util_to_hast$lib$handlers$image_reference\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.imageReference = imageReference;\\n\\nvar _micromarkUtilSanitizeUri = require(\\\"micromark-util-sanitize-uri\\\");\\n\\nvar _revert = require(\\\"../revert.js\\\");\\n\\n/**\\n * @typedef {import('hast').ElementContent} ElementContent\\n * @typedef {import('hast').Element} Element\\n * @typedef {import('hast').Properties} Properties\\n * @typedef {import('mdast').ImageReference} ImageReference\\n * @typedef {import('../state.js').State} State\\n */\\n\\n/**\\n * Turn an mdast `imageReference` node into hast.\\n *\\n * @param {State} state\\n *   Info passed around.\\n * @param {ImageReference} node\\n *   mdast node.\\n * @returns {ElementContent | Array<ElementContent>}\\n *   hast node.\\n */\\nfunction imageReference(state, node) {\\n  const def = state.definition(node.identifier);\\n\\n  if (!def) {\\n    return (0, _revert.revert)(state, node);\\n  }\\n  /** @type {Properties} */\\n\\n\\n  const properties = {\\n    src: (0, _micromarkUtilSanitizeUri.normalizeUri)(def.url || ''),\\n    alt: node.alt\\n  };\\n\\n  if (def.title !== null && def.title !== undefined) {\\n    properties.title = def.title;\\n  }\\n  /** @type {Element} */\\n\\n\\n  const result = {\\n    type: 'element',\\n    tagName: 'img',\\n    properties,\\n    children: []\\n  };\\n  state.patch(node, result);\\n  return state.applyData(node, result);\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"imageReference\",\"state\",\"node\",\"def\",\"definition\",\"identifier\",\"_revert\",\"revert\",\"properties\",\"src\",\"_micromarkUtilSanitizeUri\",\"normalizeUri\",\"url\",\"alt\",\"title\",\"undefined\",\"result\",\"type\",\"tagName\",\"children\",\"patch\",\"applyData\"]\n}\n"]