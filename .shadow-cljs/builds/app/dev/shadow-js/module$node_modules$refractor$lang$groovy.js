["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/groovy.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$groovy=function(global,require,module,exports){function groovy(Prism){Prism.register(_clike.default);var interpolation={pattern:/((?:^|[^\\\\$])(?:\\\\{2})*)\\$(?:\\w+|\\{[^{}]*\\})/,lookbehind:!0,inside:{\"interpolation-punctuation\":{pattern:/^\\$\\{?|\\}$/,alias:\"punctuation\"},expression:{pattern:/[\\s\\S]+/,inside:null}}};Prism.languages.groovy=Prism.languages.extend(\"clike\",{string:{pattern:/'''(?:[^\\\\]|\\\\[\\s\\S])*?'''|'(?:\\\\.|[^\\\\'\\r\\n])*'/,greedy:!0},keyword:/\\b(?:abstract|as|assert|boolean|break|byte|case|catch|char|class|const|continue|def|default|do|double|else|enum|extends|final|finally|float|for|goto|if|implements|import|in|instanceof|int|interface|long|native|new|package|private|protected|public|return|short|static|strictfp|super|switch|synchronized|this|throw|throws|trait|transient|try|void|volatile|while)\\b/,\nnumber:/\\b(?:0b[01_]+|0x[\\da-f_]+(?:\\.[\\da-f_p\\-]+)?|[\\d_]+(?:\\.[\\d_]+)?(?:e[+-]?\\d+)?)[glidf]?\\b/i,operator:{pattern:/(^|[^.])(?:~|==?~?|\\?[.:]?|\\*(?:[.=]|\\*=?)?|\\.[@&]|\\.\\.<|\\.\\.(?!\\.)|-[-=>]?|\\+[+=]?|!=?|<(?:<=?|=>?)?|>(?:>>?=?|=)?|&[&=]?|\\|[|=]?|\\/=?|\\^=?|%=?)/,lookbehind:!0},punctuation:/\\.+|[{}[\\];(),:$]/});Prism.languages.insertBefore(\"groovy\",\"string\",{shebang:{pattern:/#!.+/,alias:\"comment\",greedy:!0},\"interpolation-string\":{pattern:/\"\"\"(?:[^\\\\]|\\\\[\\s\\S])*?\"\"\"|([\"/])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1|\\$\\/(?:[^/$]|\\$(?:[/$]|(?![/$]))|\\/(?!\\$))*\\/\\$/,\ngreedy:!0,inside:{interpolation,string:/[\\s\\S]+/}}});Prism.languages.insertBefore(\"groovy\",\"punctuation\",{\"spock-block\":/\\b(?:and|cleanup|expect|given|setup|then|when|where):/});Prism.languages.insertBefore(\"groovy\",\"function\",{annotation:{pattern:/(^|[^.])@\\w+/,lookbehind:!0,alias:\"punctuation\"}});interpolation.inside.expression.inside=Prism.languages.groovy}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=groovy;var _clike=function(obj){return obj&&obj.__esModule?obj:{default:obj}}(require(\"module$node_modules$refractor$lang$clike\"));\ngroovy.displayName=\"groovy\";groovy.aliases=[]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$groovy\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = groovy;\n\nvar _clike = _interopRequireDefault(require(\"./clike.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// @ts-nocheck\ngroovy.displayName = 'groovy';\ngroovy.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nfunction groovy(Prism) {\n  Prism.register(_clike.default);\n\n  (function (Prism) {\n    var interpolation = {\n      pattern: /((?:^|[^\\\\$])(?:\\\\{2})*)\\$(?:\\w+|\\{[^{}]*\\})/,\n      lookbehind: true,\n      inside: {\n        'interpolation-punctuation': {\n          pattern: /^\\$\\{?|\\}$/,\n          alias: 'punctuation'\n        },\n        expression: {\n          pattern: /[\\s\\S]+/,\n          inside: null // see below\n\n        }\n      }\n    };\n    Prism.languages.groovy = Prism.languages.extend('clike', {\n      string: {\n        // https://groovy-lang.org/syntax.html#_dollar_slashy_string\n        pattern: /'''(?:[^\\\\]|\\\\[\\s\\S])*?'''|'(?:\\\\.|[^\\\\'\\r\\n])*'/,\n        greedy: true\n      },\n      keyword: /\\b(?:abstract|as|assert|boolean|break|byte|case|catch|char|class|const|continue|def|default|do|double|else|enum|extends|final|finally|float|for|goto|if|implements|import|in|instanceof|int|interface|long|native|new|package|private|protected|public|return|short|static|strictfp|super|switch|synchronized|this|throw|throws|trait|transient|try|void|volatile|while)\\b/,\n      number: /\\b(?:0b[01_]+|0x[\\da-f_]+(?:\\.[\\da-f_p\\-]+)?|[\\d_]+(?:\\.[\\d_]+)?(?:e[+-]?\\d+)?)[glidf]?\\b/i,\n      operator: {\n        pattern: /(^|[^.])(?:~|==?~?|\\?[.:]?|\\*(?:[.=]|\\*=?)?|\\.[@&]|\\.\\.<|\\.\\.(?!\\.)|-[-=>]?|\\+[+=]?|!=?|<(?:<=?|=>?)?|>(?:>>?=?|=)?|&[&=]?|\\|[|=]?|\\/=?|\\^=?|%=?)/,\n        lookbehind: true\n      },\n      punctuation: /\\.+|[{}[\\];(),:$]/\n    });\n    Prism.languages.insertBefore('groovy', 'string', {\n      shebang: {\n        pattern: /#!.+/,\n        alias: 'comment',\n        greedy: true\n      },\n      'interpolation-string': {\n        // TODO: Slash strings (e.g. /foo/) can contain line breaks but this will cause a lot of trouble with\n        // simple division (see JS regex), so find a fix maybe?\n        pattern: /\"\"\"(?:[^\\\\]|\\\\[\\s\\S])*?\"\"\"|([\"/])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1|\\$\\/(?:[^/$]|\\$(?:[/$]|(?![/$]))|\\/(?!\\$))*\\/\\$/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation,\n          string: /[\\s\\S]+/\n        }\n      }\n    });\n    Prism.languages.insertBefore('groovy', 'punctuation', {\n      'spock-block': /\\b(?:and|cleanup|expect|given|setup|then|when|where):/\n    });\n    Prism.languages.insertBefore('groovy', 'function', {\n      annotation: {\n        pattern: /(^|[^.])@\\w+/,\n        lookbehind: true,\n        alias: 'punctuation'\n      }\n    });\n    interpolation.inside.expression.inside = Prism.languages.groovy;\n  })(Prism);\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$refractor$lang$clike"]],"~:properties",["^5",["punctuation","string","aliases","operator","displayName","__esModule","expression","groovy","shebang","lookbehind","value","keyword","number","greedy","pattern","inside","annotation","alias","interpolation","default"]],"~:compiled-at",1676841365417,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$groovy.js\",\n\"lineCount\":4,\n\"mappings\":\"AAAAA,cAAA,CAAA,yCAAA,CAA8D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAiBtGC,QAASA,OAAM,CAACC,KAAD,CAAQ,CACrBA,KAAMC,CAAAA,QAAN,CAAeC,MAAOC,CAAAA,OAAtB,CAGE,KAAIC,cAAgB,CAClBC,QAAS,8CADS,CAElBC,WAAY,CAAA,CAFM,CAGlBC,OAAQ,CACN,4BAA6B,CAC3BF,QAAS,YADkB,CAE3BG,MAAO,aAFoB,CADvB,CAKNC,WAAY,CACVJ,QAAS,SADC,CAEVE,OAAQ,IAFE,CALN,CAHU,CAyDnBP,MA1CKU,CAAAA,SAAUX,CAAAA,MAAhB,CA0CCC,KA1C8BU,CAAAA,SAAUC,CAAAA,MAAhB,CAAuB,OAAvB,CAAgC,CACvDC,OAAQ,CAENP,QAAS,kDAFH,CAGNQ,OAAQ,CAAA,CAHF,CAD+C,CAMvDC,QAAS,4WAN8C;AAOvDC,OAAQ,4FAP+C,CAQvDC,SAAU,CACRX,QAAS,mJADD,CAERC,WAAY,CAAA,CAFJ,CAR6C,CAYvDW,YAAa,mBAZ0C,CAAhC,CA0CxBjB,MA5BKU,CAAAA,SAAUQ,CAAAA,YAAhB,CAA6B,QAA7B,CAAuC,QAAvC,CAAiD,CAC/CC,QAAS,CACPd,QAAS,MADF,CAEPG,MAAO,SAFA,CAGPK,OAAQ,CAAA,CAHD,CADsC,CAM/C,uBAAwB,CAGtBR,QAAS,6GAHa;AAItBQ,OAAQ,CAAA,CAJc,CAKtBN,OAAQ,CACSH,aADT,CAENQ,OAAQ,SAFF,CALc,CANuB,CAAjD,CA4BCZ,MAXKU,CAAAA,SAAUQ,CAAAA,YAAhB,CAA6B,QAA7B,CAAuC,aAAvC,CAAsD,CACpD,cAAe,uDADqC,CAAtD,CAWClB,MARKU,CAAAA,SAAUQ,CAAAA,YAAhB,CAA6B,QAA7B,CAAuC,UAAvC,CAAmD,CACjDE,WAAY,CACVf,QAAS,cADC,CAEVC,WAAY,CAAA,CAFF,CAGVE,MAAO,aAHG,CADqC,CAAnD,CAOAJ,cAAcG,CAAAA,MAAOE,CAAAA,UAAWF,CAAAA,MAAhC,CACCP,KAD8CU,CAAAA,SAAUX,CAAAA,MA5DtC,CAdvBsB,MAAOC,CAAAA,cAAP,CAAsBxB,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CyB,MAAO,CAAA,CADoC,CAA7C,CAGAzB,QAAQK,CAAAA,OAAR,CAAkBJ,MAElB,KAAIG,OAEJsB,QAA+B,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAIC,CAAAA,UAAX,CAAwBD,GAAxB,CAA8B,CAAEtB,QAASsB,GAAX,CAAvC,CAFxB,CAAuB7B,OAAA,CAAQ,0CAAR,CAAvB,CAKbG;MAAO4B,CAAAA,WAAP,CAAqB,QACrB5B,OAAO6B,CAAAA,OAAP,CAAiB,EAdqF;\",\n\"sources\":[\"node_modules/refractor/lang/groovy.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$groovy\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = groovy;\\n\\nvar _clike = _interopRequireDefault(require(\\\"./clike.js\\\"));\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\n// @ts-nocheck\\ngroovy.displayName = 'groovy';\\ngroovy.aliases = [];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction groovy(Prism) {\\n  Prism.register(_clike.default);\\n\\n  (function (Prism) {\\n    var interpolation = {\\n      pattern: /((?:^|[^\\\\\\\\$])(?:\\\\\\\\{2})*)\\\\$(?:\\\\w+|\\\\{[^{}]*\\\\})/,\\n      lookbehind: true,\\n      inside: {\\n        'interpolation-punctuation': {\\n          pattern: /^\\\\$\\\\{?|\\\\}$/,\\n          alias: 'punctuation'\\n        },\\n        expression: {\\n          pattern: /[\\\\s\\\\S]+/,\\n          inside: null // see below\\n\\n        }\\n      }\\n    };\\n    Prism.languages.groovy = Prism.languages.extend('clike', {\\n      string: {\\n        // https://groovy-lang.org/syntax.html#_dollar_slashy_string\\n        pattern: /'''(?:[^\\\\\\\\]|\\\\\\\\[\\\\s\\\\S])*?'''|'(?:\\\\\\\\.|[^\\\\\\\\'\\\\r\\\\n])*'/,\\n        greedy: true\\n      },\\n      keyword: /\\\\b(?:abstract|as|assert|boolean|break|byte|case|catch|char|class|const|continue|def|default|do|double|else|enum|extends|final|finally|float|for|goto|if|implements|import|in|instanceof|int|interface|long|native|new|package|private|protected|public|return|short|static|strictfp|super|switch|synchronized|this|throw|throws|trait|transient|try|void|volatile|while)\\\\b/,\\n      number: /\\\\b(?:0b[01_]+|0x[\\\\da-f_]+(?:\\\\.[\\\\da-f_p\\\\-]+)?|[\\\\d_]+(?:\\\\.[\\\\d_]+)?(?:e[+-]?\\\\d+)?)[glidf]?\\\\b/i,\\n      operator: {\\n        pattern: /(^|[^.])(?:~|==?~?|\\\\?[.:]?|\\\\*(?:[.=]|\\\\*=?)?|\\\\.[@&]|\\\\.\\\\.<|\\\\.\\\\.(?!\\\\.)|-[-=>]?|\\\\+[+=]?|!=?|<(?:<=?|=>?)?|>(?:>>?=?|=)?|&[&=]?|\\\\|[|=]?|\\\\/=?|\\\\^=?|%=?)/,\\n        lookbehind: true\\n      },\\n      punctuation: /\\\\.+|[{}[\\\\];(),:$]/\\n    });\\n    Prism.languages.insertBefore('groovy', 'string', {\\n      shebang: {\\n        pattern: /#!.+/,\\n        alias: 'comment',\\n        greedy: true\\n      },\\n      'interpolation-string': {\\n        // TODO: Slash strings (e.g. /foo/) can contain line breaks but this will cause a lot of trouble with\\n        // simple division (see JS regex), so find a fix maybe?\\n        pattern: /\\\"\\\"\\\"(?:[^\\\\\\\\]|\\\\\\\\[\\\\s\\\\S])*?\\\"\\\"\\\"|([\\\"/])(?:\\\\\\\\.|(?!\\\\1)[^\\\\\\\\\\\\r\\\\n])*\\\\1|\\\\$\\\\/(?:[^/$]|\\\\$(?:[/$]|(?![/$]))|\\\\/(?!\\\\$))*\\\\/\\\\$/,\\n        greedy: true,\\n        inside: {\\n          interpolation: interpolation,\\n          string: /[\\\\s\\\\S]+/\\n        }\\n      }\\n    });\\n    Prism.languages.insertBefore('groovy', 'punctuation', {\\n      'spock-block': /\\\\b(?:and|cleanup|expect|given|setup|then|when|where):/\\n    });\\n    Prism.languages.insertBefore('groovy', 'function', {\\n      annotation: {\\n        pattern: /(^|[^.])@\\\\w+/,\\n        lookbehind: true,\\n        alias: 'punctuation'\\n      }\\n    });\\n    interpolation.inside.expression.inside = Prism.languages.groovy;\\n  })(Prism);\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"groovy\",\"Prism\",\"register\",\"_clike\",\"default\",\"interpolation\",\"pattern\",\"lookbehind\",\"inside\",\"alias\",\"expression\",\"languages\",\"extend\",\"string\",\"greedy\",\"keyword\",\"number\",\"operator\",\"punctuation\",\"insertBefore\",\"shebang\",\"annotation\",\"Object\",\"defineProperty\",\"value\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"displayName\",\"aliases\"]\n}\n"]