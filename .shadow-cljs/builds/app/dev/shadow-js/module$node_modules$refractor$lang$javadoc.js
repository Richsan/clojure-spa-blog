["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/javadoc.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$javadoc=function(global,require,module,exports){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function javadoc(Prism$jscomp$0){Prism$jscomp$0.register(_java.default);Prism$jscomp$0.register(_javadoclike.default);Prism$jscomp$0.register(_markup.default);(function(Prism){var codeLinePattern=/(^(?:[\\t ]*(?:\\*\\s*)*))[^*\\s].*$/m,memberReference=/#\\s*\\w+(?:\\s*\\([^()]*\\))?/.source,reference=/(?:\\b[a-zA-Z]\\w+\\s*\\.\\s*)*\\b[A-Z]\\w*(?:\\s*<mem>)?|<mem>/.source.replace(/<mem>/g,\nfunction(){return memberReference});Prism.languages.javadoc=Prism.languages.extend(\"javadoclike\",{});Prism.languages.insertBefore(\"javadoc\",\"keyword\",{reference:{pattern:RegExp(/(@(?:exception|link|linkplain|see|throws|value)\\s+(?:\\*\\s*)?)/.source+\"(?:\"+reference+\")\"),lookbehind:!0,inside:{function:{pattern:/(#\\s*)\\w+(?=\\s*\\()/,lookbehind:!0},field:{pattern:/(#\\s*)\\w+/,lookbehind:!0},namespace:{pattern:/\\b(?:[a-z]\\w*\\s*\\.\\s*)+/,inside:{punctuation:/\\./}},\"class-name\":/\\b[A-Z]\\w*/,keyword:Prism.languages.java.keyword,\npunctuation:/[#()[\\],.]/}},\"class-name\":{pattern:/(@param\\s+)<[A-Z]\\w*>/,lookbehind:!0,inside:{punctuation:/[.<>]/}},\"code-section\":[{pattern:/(\\{@code\\s+(?!\\s))(?:[^\\s{}]|\\s+(?![\\s}])|\\{(?:[^{}]|\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\})*\\})+(?=\\s*\\})/,lookbehind:!0,inside:{code:{pattern:codeLinePattern,lookbehind:!0,inside:Prism.languages.java,alias:\"language-java\"}}},{pattern:/(<(code|pre|tt)>(?!<code>)\\s*)\\S(?:\\S|\\s+\\S)*?(?=\\s*<\\/\\2>)/,lookbehind:!0,inside:{line:{pattern:codeLinePattern,lookbehind:!0,\ninside:{tag:Prism.languages.markup.tag,entity:Prism.languages.markup.entity,code:{pattern:/.+/,inside:Prism.languages.java,alias:\"language-java\"}}}}}],tag:Prism.languages.markup.tag,entity:Prism.languages.markup.entity});Prism.languages.javadoclike.addSupport(\"java\",Prism.languages.javadoc)})(Prism$jscomp$0)}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=javadoc;var _java=_interopRequireDefault(require(\"module$node_modules$refractor$lang$java\")),_javadoclike=_interopRequireDefault(require(\"module$node_modules$refractor$lang$javadoclike\")),\n_markup=_interopRequireDefault(require(\"module$node_modules$refractor$lang$markup\"));javadoc.displayName=\"javadoc\";javadoc.aliases=[]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$javadoc\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = javadoc;\n\nvar _java = _interopRequireDefault(require(\"./java.js\"));\n\nvar _javadoclike = _interopRequireDefault(require(\"./javadoclike.js\"));\n\nvar _markup = _interopRequireDefault(require(\"./markup.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// @ts-nocheck\njavadoc.displayName = 'javadoc';\njavadoc.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nfunction javadoc(Prism) {\n  Prism.register(_java.default);\n  Prism.register(_javadoclike.default);\n  Prism.register(_markup.default);\n\n  (function (Prism) {\n    var codeLinePattern = /(^(?:[\\t ]*(?:\\*\\s*)*))[^*\\s].*$/m;\n    var memberReference = /#\\s*\\w+(?:\\s*\\([^()]*\\))?/.source;\n    var reference = /(?:\\b[a-zA-Z]\\w+\\s*\\.\\s*)*\\b[A-Z]\\w*(?:\\s*<mem>)?|<mem>/.source.replace(/<mem>/g, function () {\n      return memberReference;\n    });\n    Prism.languages.javadoc = Prism.languages.extend('javadoclike', {});\n    Prism.languages.insertBefore('javadoc', 'keyword', {\n      reference: {\n        pattern: RegExp(/(@(?:exception|link|linkplain|see|throws|value)\\s+(?:\\*\\s*)?)/.source + '(?:' + reference + ')'),\n        lookbehind: true,\n        inside: {\n          function: {\n            pattern: /(#\\s*)\\w+(?=\\s*\\()/,\n            lookbehind: true\n          },\n          field: {\n            pattern: /(#\\s*)\\w+/,\n            lookbehind: true\n          },\n          namespace: {\n            pattern: /\\b(?:[a-z]\\w*\\s*\\.\\s*)+/,\n            inside: {\n              punctuation: /\\./\n            }\n          },\n          'class-name': /\\b[A-Z]\\w*/,\n          keyword: Prism.languages.java.keyword,\n          punctuation: /[#()[\\],.]/\n        }\n      },\n      'class-name': {\n        // @param <T> the first generic type parameter\n        pattern: /(@param\\s+)<[A-Z]\\w*>/,\n        lookbehind: true,\n        inside: {\n          punctuation: /[.<>]/\n        }\n      },\n      'code-section': [{\n        pattern: /(\\{@code\\s+(?!\\s))(?:[^\\s{}]|\\s+(?![\\s}])|\\{(?:[^{}]|\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\})*\\})+(?=\\s*\\})/,\n        lookbehind: true,\n        inside: {\n          code: {\n            // there can't be any HTML inside of {@code} tags\n            pattern: codeLinePattern,\n            lookbehind: true,\n            inside: Prism.languages.java,\n            alias: 'language-java'\n          }\n        }\n      }, {\n        pattern: /(<(code|pre|tt)>(?!<code>)\\s*)\\S(?:\\S|\\s+\\S)*?(?=\\s*<\\/\\2>)/,\n        lookbehind: true,\n        inside: {\n          line: {\n            pattern: codeLinePattern,\n            lookbehind: true,\n            inside: {\n              // highlight HTML tags and entities\n              tag: Prism.languages.markup.tag,\n              entity: Prism.languages.markup.entity,\n              code: {\n                // everything else is Java code\n                pattern: /.+/,\n                inside: Prism.languages.java,\n                alias: 'language-java'\n              }\n            }\n          }\n        }\n      }],\n      tag: Prism.languages.markup.tag,\n      entity: Prism.languages.markup.entity\n    });\n    Prism.languages.javadoclike.addSupport('java', Prism.languages.javadoc);\n  })(Prism);\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$refractor$lang$java","~$module$node_modules$refractor$lang$markup","~$shadow.js","~$module$node_modules$refractor$lang$javadoclike"]],"~:properties",["^5",["punctuation","aliases","displayName","__esModule","lookbehind","tag","value","field","keyword","function","line","reference","pattern","inside","alias","namespace","javadoc","entity","default","code"]],"~:compiled-at",1676841365425,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$javadoc.js\",\n\"lineCount\":5,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/refractor/lang/javadoc.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$javadoc\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = javadoc;\\n\\nvar _java = _interopRequireDefault(require(\\\"./java.js\\\"));\\n\\nvar _javadoclike = _interopRequireDefault(require(\\\"./javadoclike.js\\\"));\\n\\nvar _markup = _interopRequireDefault(require(\\\"./markup.js\\\"));\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\n// @ts-nocheck\\njavadoc.displayName = 'javadoc';\\njavadoc.aliases = [];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction javadoc(Prism) {\\n  Prism.register(_java.default);\\n  Prism.register(_javadoclike.default);\\n  Prism.register(_markup.default);\\n\\n  (function (Prism) {\\n    var codeLinePattern = /(^(?:[\\\\t ]*(?:\\\\*\\\\s*)*))[^*\\\\s].*$/m;\\n    var memberReference = /#\\\\s*\\\\w+(?:\\\\s*\\\\([^()]*\\\\))?/.source;\\n    var reference = /(?:\\\\b[a-zA-Z]\\\\w+\\\\s*\\\\.\\\\s*)*\\\\b[A-Z]\\\\w*(?:\\\\s*<mem>)?|<mem>/.source.replace(/<mem>/g, function () {\\n      return memberReference;\\n    });\\n    Prism.languages.javadoc = Prism.languages.extend('javadoclike', {});\\n    Prism.languages.insertBefore('javadoc', 'keyword', {\\n      reference: {\\n        pattern: RegExp(/(@(?:exception|link|linkplain|see|throws|value)\\\\s+(?:\\\\*\\\\s*)?)/.source + '(?:' + reference + ')'),\\n        lookbehind: true,\\n        inside: {\\n          function: {\\n            pattern: /(#\\\\s*)\\\\w+(?=\\\\s*\\\\()/,\\n            lookbehind: true\\n          },\\n          field: {\\n            pattern: /(#\\\\s*)\\\\w+/,\\n            lookbehind: true\\n          },\\n          namespace: {\\n            pattern: /\\\\b(?:[a-z]\\\\w*\\\\s*\\\\.\\\\s*)+/,\\n            inside: {\\n              punctuation: /\\\\./\\n            }\\n          },\\n          'class-name': /\\\\b[A-Z]\\\\w*/,\\n          keyword: Prism.languages.java.keyword,\\n          punctuation: /[#()[\\\\],.]/\\n        }\\n      },\\n      'class-name': {\\n        // @param <T> the first generic type parameter\\n        pattern: /(@param\\\\s+)<[A-Z]\\\\w*>/,\\n        lookbehind: true,\\n        inside: {\\n          punctuation: /[.<>]/\\n        }\\n      },\\n      'code-section': [{\\n        pattern: /(\\\\{@code\\\\s+(?!\\\\s))(?:[^\\\\s{}]|\\\\s+(?![\\\\s}])|\\\\{(?:[^{}]|\\\\{(?:[^{}]|\\\\{(?:[^{}]|\\\\{[^{}]*\\\\})*\\\\})*\\\\})*\\\\})+(?=\\\\s*\\\\})/,\\n        lookbehind: true,\\n        inside: {\\n          code: {\\n            // there can't be any HTML inside of {@code} tags\\n            pattern: codeLinePattern,\\n            lookbehind: true,\\n            inside: Prism.languages.java,\\n            alias: 'language-java'\\n          }\\n        }\\n      }, {\\n        pattern: /(<(code|pre|tt)>(?!<code>)\\\\s*)\\\\S(?:\\\\S|\\\\s+\\\\S)*?(?=\\\\s*<\\\\/\\\\2>)/,\\n        lookbehind: true,\\n        inside: {\\n          line: {\\n            pattern: codeLinePattern,\\n            lookbehind: true,\\n            inside: {\\n              // highlight HTML tags and entities\\n              tag: Prism.languages.markup.tag,\\n              entity: Prism.languages.markup.entity,\\n              code: {\\n                // everything else is Java code\\n                pattern: /.+/,\\n                inside: Prism.languages.java,\\n                alias: 'language-java'\\n              }\\n            }\\n          }\\n        }\\n      }],\\n      tag: Prism.languages.markup.tag,\\n      entity: Prism.languages.markup.entity\\n    });\\n    Prism.languages.javadoclike.addSupport('java', Prism.languages.javadoc);\\n  })(Prism);\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"default\",\"javadoc\",\"Prism\",\"register\",\"_java\",\"_javadoclike\",\"_markup\",\"codeLinePattern\",\"memberReference\",\"source\",\"reference\",\"replace\",\"languages\",\"extend\",\"insertBefore\",\"pattern\",\"RegExp\",\"lookbehind\",\"inside\",\"function\",\"field\",\"namespace\",\"punctuation\",\"keyword\",\"java\",\"code\",\"alias\",\"line\",\"tag\",\"markup\",\"entity\",\"javadoclike\",\"addSupport\",\"Object\",\"defineProperty\",\"value\",\"displayName\",\"aliases\"]\n}\n"]