["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/lilypond.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$lilypond=function(global,require,module,exports){function lilypond(Prism$jscomp$0){Prism$jscomp$0.register(_scheme.default);(function(Prism){for(var schemeExpression=/\\((?:[^();\"#\\\\]|\\\\[\\s\\S]|;.*(?!.)|\"(?:[^\"\\\\]|\\\\.)*\"|#(?:\\{(?:(?!#\\})[\\s\\S])*#\\}|[^{])|<expr>)*\\)/.source,i=0;5>i;i++)schemeExpression=schemeExpression.replace(/<expr>/g,function(){return schemeExpression});schemeExpression=schemeExpression.replace(/<expr>/g,/[^\\s\\S]/.source);i=Prism.languages.lilypond=\n{comment:/%(?:(?!\\{).*|\\{[\\s\\S]*?%\\})/,\"embedded-scheme\":{pattern:RegExp(/(^|[=\\s])#(?:\"(?:[^\"\\\\]|\\\\.)*\"|[^\\s()\"]*(?:[^\\s()]|<expr>))/.source.replace(/<expr>/g,function(){return schemeExpression}),\"m\"),lookbehind:!0,greedy:!0,inside:{scheme:{pattern:/^(#)[\\s\\S]+$/,lookbehind:!0,alias:\"language-scheme\",inside:{\"embedded-lilypond\":{pattern:/#\\{[\\s\\S]*?#\\}/,greedy:!0,inside:{punctuation:/^#\\{|#\\}$/,lilypond:{pattern:/[\\s\\S]+/,alias:\"language-lilypond\",inside:null}}},rest:Prism.languages.scheme}},punctuation:/#/}},\nstring:{pattern:/\"(?:[^\"\\\\]|\\\\.)*\"/,greedy:!0},\"class-name\":{pattern:/(\\\\new\\s+)[\\w-]+/,lookbehind:!0},keyword:{pattern:/\\\\[a-z][-\\w]*/i,inside:{punctuation:/^\\\\/}},operator:/[=|]|<<|>>/,punctuation:{pattern:/(^|[a-z\\d])(?:'+|,+|[_^]?-[_^]?(?:[-+^!>._]|(?=\\d))|[_^]\\.?|[.!])|[{}()[\\]<>^~]|\\\\[()[\\]<>\\\\!]|--|__/,lookbehind:!0},number:/\\b\\d+(?:\\/\\d+)?\\b/};i[\"embedded-scheme\"].inside.scheme.inside[\"embedded-lilypond\"].inside.lilypond.inside=i;Prism.languages.ly=i})(Prism$jscomp$0)}Object.defineProperty(exports,\n\"__esModule\",{value:!0});exports.default=lilypond;var _scheme=function(obj){return obj&&obj.__esModule?obj:{default:obj}}(require(\"module$node_modules$refractor$lang$scheme\"));lilypond.displayName=\"lilypond\";lilypond.aliases=[\"ly\"]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$lilypond\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = lilypond;\n\nvar _scheme = _interopRequireDefault(require(\"./scheme.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// @ts-nocheck\nlilypond.displayName = 'lilypond';\nlilypond.aliases = ['ly'];\n/** @type {import('../core.js').Syntax} */\n\nfunction lilypond(Prism) {\n  Prism.register(_scheme.default);\n\n  (function (Prism) {\n    var schemeExpression = /\\((?:[^();\"#\\\\]|\\\\[\\s\\S]|;.*(?!.)|\"(?:[^\"\\\\]|\\\\.)*\"|#(?:\\{(?:(?!#\\})[\\s\\S])*#\\}|[^{])|<expr>)*\\)/.source; // allow for up to pow(2, recursivenessLog2) many levels of recursive brace expressions\n    // For some reason, this can't be 4\n\n    var recursivenessLog2 = 5;\n\n    for (var i = 0; i < recursivenessLog2; i++) {\n      schemeExpression = schemeExpression.replace(/<expr>/g, function () {\n        return schemeExpression;\n      });\n    }\n\n    schemeExpression = schemeExpression.replace(/<expr>/g, /[^\\s\\S]/.source);\n    var lilypond = Prism.languages.lilypond = {\n      comment: /%(?:(?!\\{).*|\\{[\\s\\S]*?%\\})/,\n      'embedded-scheme': {\n        pattern: RegExp(/(^|[=\\s])#(?:\"(?:[^\"\\\\]|\\\\.)*\"|[^\\s()\"]*(?:[^\\s()]|<expr>))/.source.replace(/<expr>/g, function () {\n          return schemeExpression;\n        }), 'm'),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          scheme: {\n            pattern: /^(#)[\\s\\S]+$/,\n            lookbehind: true,\n            alias: 'language-scheme',\n            inside: {\n              'embedded-lilypond': {\n                pattern: /#\\{[\\s\\S]*?#\\}/,\n                greedy: true,\n                inside: {\n                  punctuation: /^#\\{|#\\}$/,\n                  lilypond: {\n                    pattern: /[\\s\\S]+/,\n                    alias: 'language-lilypond',\n                    inside: null // see below\n\n                  }\n                }\n              },\n              rest: Prism.languages.scheme\n            }\n          },\n          punctuation: /#/\n        }\n      },\n      string: {\n        pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n        greedy: true\n      },\n      'class-name': {\n        pattern: /(\\\\new\\s+)[\\w-]+/,\n        lookbehind: true\n      },\n      keyword: {\n        pattern: /\\\\[a-z][-\\w]*/i,\n        inside: {\n          punctuation: /^\\\\/\n        }\n      },\n      operator: /[=|]|<<|>>/,\n      punctuation: {\n        pattern: /(^|[a-z\\d])(?:'+|,+|[_^]?-[_^]?(?:[-+^!>._]|(?=\\d))|[_^]\\.?|[.!])|[{}()[\\]<>^~]|\\\\[()[\\]<>\\\\!]|--|__/,\n        lookbehind: true\n      },\n      number: /\\b\\d+(?:\\/\\d+)?\\b/\n    };\n    lilypond['embedded-scheme'].inside['scheme'].inside['embedded-lilypond'].inside['lilypond'].inside = lilypond;\n    Prism.languages.ly = lilypond;\n  })(Prism);\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$refractor$lang$scheme","~$shadow.js"]],"~:properties",["^5",["lilypond","punctuation","string","aliases","operator","displayName","__esModule","rest","ly","lookbehind","value","keyword","number","greedy","pattern","inside","alias","comment","scheme","default"]],"~:compiled-at",1676841365432,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$lilypond.js\",\n\"lineCount\":4,\n\"mappings\":\"AAAAA,cAAA,CAAA,2CAAA,CAAgE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAiBxGC,QAASA,SAAQ,CAACC,cAAD,CAAQ,CACvBA,cAAMC,CAAAA,QAAN,CAAeC,OAAQC,CAAAA,OAAvB,CAEC,UAAS,CAACH,KAAD,CAAQ,CAMhB,IALA,IAAII,iBAAmB,kGAAmGC,CAAAA,MAA1H,CAKSC,EAAI,CAAb,CAFwBC,CAExB,CAAgBD,CAAhB,CAAuCA,CAAA,EAAvC,CACEF,gBAAA,CAAmBA,gBAAiBI,CAAAA,OAAjB,CAAyB,SAAzB,CAAoC,QAAS,EAAG,CACjE,MAAOJ,iBAD0D,CAAhD,CAKrBA,iBAAA,CAAmBA,gBAAiBI,CAAAA,OAAjB,CAAyB,SAAzB,CAAoC,SAAUH,CAAAA,MAA9C,CACfN,EAAAA,CAAWC,KAAMS,CAAAA,SAAUV,CAAAA,QAA3BA;AAAsC,CACxCW,QAAS,6BAD+B,CAExC,kBAAmB,CACjBC,QAASC,MAAA,CAAO,6DAA8DP,CAAAA,MAAOG,CAAAA,OAArE,CAA6E,SAA7E,CAAwF,QAAS,EAAG,CAClH,MAAOJ,iBAD2G,CAApG,CAAP,CAEL,GAFK,CADQ,CAIjBS,WAAY,CAAA,CAJK,CAKjBC,OAAQ,CAAA,CALS,CAMjBC,OAAQ,CACNC,OAAQ,CACNL,QAAS,cADH,CAENE,WAAY,CAAA,CAFN,CAGNI,MAAO,iBAHD,CAINF,OAAQ,CACN,oBAAqB,CACnBJ,QAAS,gBADU,CAEnBG,OAAQ,CAAA,CAFW,CAGnBC,OAAQ,CACNG,YAAa,WADP,CAENnB,SAAU,CACRY,QAAS,SADD,CAERM,MAAO,mBAFC,CAGRF,OAAQ,IAHA,CAFJ,CAHW,CADf,CAcNI,KAAMnB,KAAMS,CAAAA,SAAUO,CAAAA,MAdhB,CAJF,CADF,CAsBNE,YAAa,GAtBP,CANS,CAFqB;AAiCxCE,OAAQ,CACNT,QAAS,mBADH,CAENG,OAAQ,CAAA,CAFF,CAjCgC,CAqCxC,aAAc,CACZH,QAAS,kBADG,CAEZE,WAAY,CAAA,CAFA,CArC0B,CAyCxCQ,QAAS,CACPV,QAAS,gBADF,CAEPI,OAAQ,CACNG,YAAa,KADP,CAFD,CAzC+B,CA+CxCI,SAAU,YA/C8B,CAgDxCJ,YAAa,CACXP,QAAS,sGADE,CAEXE,WAAY,CAAA,CAFD,CAhD2B,CAoDxCU,OAAQ,mBApDgC,CAsD1CxB,EAAA,CAAS,iBAAT,CAA4BgB,CAAAA,MAA5B,CAAA,MAA6CA,CAAAA,MAA7C,CAAoD,mBAApD,CAAyEA,CAAAA,MAAzE,CAAA,QAA4FA,CAAAA,MAA5F,CAAqGhB,CACrGC,MAAMS,CAAAA,SAAUe,CAAAA,EAAhB,CAAqBzB,CApEL,CAAjB,CAAD,CAqEGC,cArEH,CAHuB,CAdzByB,MAAOC,CAAAA,cAAP,CAAsB5B,OAAtB;AAA+B,YAA/B,CAA6C,CAC3C6B,MAAO,CAAA,CADoC,CAA7C,CAGA7B,QAAQK,CAAAA,OAAR,CAAkBJ,QAElB,KAAIG,QAEJ0B,QAA+B,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAIC,CAAAA,UAAX,CAAwBD,GAAxB,CAA8B,CAAE1B,QAAS0B,GAAX,CAAvC,CAFvB,CAAuBjC,OAAA,CAAQ,2CAAR,CAAvB,CAKdG,SAASgC,CAAAA,WAAT,CAAuB,UACvBhC,SAASiC,CAAAA,OAAT,CAAmB,CAAC,IAAD,CAdqF;\",\n\"sources\":[\"node_modules/refractor/lang/lilypond.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$lilypond\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = lilypond;\\n\\nvar _scheme = _interopRequireDefault(require(\\\"./scheme.js\\\"));\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\n// @ts-nocheck\\nlilypond.displayName = 'lilypond';\\nlilypond.aliases = ['ly'];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction lilypond(Prism) {\\n  Prism.register(_scheme.default);\\n\\n  (function (Prism) {\\n    var schemeExpression = /\\\\((?:[^();\\\"#\\\\\\\\]|\\\\\\\\[\\\\s\\\\S]|;.*(?!.)|\\\"(?:[^\\\"\\\\\\\\]|\\\\\\\\.)*\\\"|#(?:\\\\{(?:(?!#\\\\})[\\\\s\\\\S])*#\\\\}|[^{])|<expr>)*\\\\)/.source; // allow for up to pow(2, recursivenessLog2) many levels of recursive brace expressions\\n    // For some reason, this can't be 4\\n\\n    var recursivenessLog2 = 5;\\n\\n    for (var i = 0; i < recursivenessLog2; i++) {\\n      schemeExpression = schemeExpression.replace(/<expr>/g, function () {\\n        return schemeExpression;\\n      });\\n    }\\n\\n    schemeExpression = schemeExpression.replace(/<expr>/g, /[^\\\\s\\\\S]/.source);\\n    var lilypond = Prism.languages.lilypond = {\\n      comment: /%(?:(?!\\\\{).*|\\\\{[\\\\s\\\\S]*?%\\\\})/,\\n      'embedded-scheme': {\\n        pattern: RegExp(/(^|[=\\\\s])#(?:\\\"(?:[^\\\"\\\\\\\\]|\\\\\\\\.)*\\\"|[^\\\\s()\\\"]*(?:[^\\\\s()]|<expr>))/.source.replace(/<expr>/g, function () {\\n          return schemeExpression;\\n        }), 'm'),\\n        lookbehind: true,\\n        greedy: true,\\n        inside: {\\n          scheme: {\\n            pattern: /^(#)[\\\\s\\\\S]+$/,\\n            lookbehind: true,\\n            alias: 'language-scheme',\\n            inside: {\\n              'embedded-lilypond': {\\n                pattern: /#\\\\{[\\\\s\\\\S]*?#\\\\}/,\\n                greedy: true,\\n                inside: {\\n                  punctuation: /^#\\\\{|#\\\\}$/,\\n                  lilypond: {\\n                    pattern: /[\\\\s\\\\S]+/,\\n                    alias: 'language-lilypond',\\n                    inside: null // see below\\n\\n                  }\\n                }\\n              },\\n              rest: Prism.languages.scheme\\n            }\\n          },\\n          punctuation: /#/\\n        }\\n      },\\n      string: {\\n        pattern: /\\\"(?:[^\\\"\\\\\\\\]|\\\\\\\\.)*\\\"/,\\n        greedy: true\\n      },\\n      'class-name': {\\n        pattern: /(\\\\\\\\new\\\\s+)[\\\\w-]+/,\\n        lookbehind: true\\n      },\\n      keyword: {\\n        pattern: /\\\\\\\\[a-z][-\\\\w]*/i,\\n        inside: {\\n          punctuation: /^\\\\\\\\/\\n        }\\n      },\\n      operator: /[=|]|<<|>>/,\\n      punctuation: {\\n        pattern: /(^|[a-z\\\\d])(?:'+|,+|[_^]?-[_^]?(?:[-+^!>._]|(?=\\\\d))|[_^]\\\\.?|[.!])|[{}()[\\\\]<>^~]|\\\\\\\\[()[\\\\]<>\\\\\\\\!]|--|__/,\\n        lookbehind: true\\n      },\\n      number: /\\\\b\\\\d+(?:\\\\/\\\\d+)?\\\\b/\\n    };\\n    lilypond['embedded-scheme'].inside['scheme'].inside['embedded-lilypond'].inside['lilypond'].inside = lilypond;\\n    Prism.languages.ly = lilypond;\\n  })(Prism);\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"lilypond\",\"Prism\",\"register\",\"_scheme\",\"default\",\"schemeExpression\",\"source\",\"i\",\"recursivenessLog2\",\"replace\",\"languages\",\"comment\",\"pattern\",\"RegExp\",\"lookbehind\",\"greedy\",\"inside\",\"scheme\",\"alias\",\"punctuation\",\"rest\",\"string\",\"keyword\",\"operator\",\"number\",\"ly\",\"Object\",\"defineProperty\",\"value\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"displayName\",\"aliases\"]\n}\n"]