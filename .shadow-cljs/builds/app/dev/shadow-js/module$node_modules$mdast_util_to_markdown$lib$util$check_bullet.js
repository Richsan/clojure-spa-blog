["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mdast-util-to-markdown/lib/util/check-bullet.js"],"~:js","shadow$provide.module$node_modules$mdast_util_to_markdown$lib$util$check_bullet=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.checkBullet=function(state){state=state.options.bullet||\"*\";if(\"*\"!==state&&\"+\"!==state&&\"-\"!==state)throw Error(\"Cannot serialize items with `\"+state+\"` for `options.bullet`, expected `*`, `+`, or `-`\");return state}}","~:source","shadow$provide[\"module$node_modules$mdast_util_to_markdown$lib$util$check_bullet\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.checkBullet = checkBullet;\n\n/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nfunction checkBullet(state) {\n  const marker = state.options.bullet || '*';\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error('Cannot serialize items with `' + marker + '` for `options.bullet`, expected `*`, `+`, or `-`');\n  }\n\n  return marker;\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["__esModule","checkBullet","value"]],"~:compiled-at",1676841365343,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mdast_util_to_markdown$lib$util$check_bullet.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAA,gEAAA,CAAqF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG7HC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,WAAR,CAWAA,QAAoB,CAACC,KAAD,CAAQ,CACpBC,KAAAA,CAASD,KAAME,CAAAA,OAAQC,CAAAA,MAAvBF,EAAiC,GAEvC,IAAe,GAAf,GAAIA,KAAJ,EAAiC,GAAjC,GAAsBA,KAAtB,EAAmD,GAAnD,GAAwCA,KAAxC,CACE,KAAUG,MAAJ,CAAU,+BAAV,CAA4CH,KAA5C,CAAqD,mDAArD,CAAN,CAGF,MAAOA,MAPmB,CAjBiG;\",\n\"sources\":[\"node_modules/mdast-util-to-markdown/lib/util/check-bullet.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$mdast_util_to_markdown$lib$util$check_bullet\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.checkBullet = checkBullet;\\n\\n/**\\n * @typedef {import('../types.js').State} State\\n * @typedef {import('../types.js').Options} Options\\n */\\n\\n/**\\n * @param {State} state\\n * @returns {Exclude<Options['bullet'], null | undefined>}\\n */\\nfunction checkBullet(state) {\\n  const marker = state.options.bullet || '*';\\n\\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\\n    throw new Error('Cannot serialize items with `' + marker + '` for `options.bullet`, expected `*`, `+`, or `-`');\\n  }\\n\\n  return marker;\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"checkBullet\",\"state\",\"marker\",\"options\",\"bullet\",\"Error\"]\n}\n"]