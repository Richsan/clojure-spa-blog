["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/gedcom.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$gedcom=function(global,require,module,exports){function gedcom(Prism){Prism.languages.gedcom={\"line-value\":{pattern:/(^[\\t ]*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?\\w+ ).+/m,lookbehind:!0,inside:{pointer:{pattern:/^@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@$/,alias:\"variable\"}}},record:{pattern:/(^[\\t ]*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?)\\w+/m,lookbehind:!0,alias:\"tag\"},level:{pattern:/(^[\\t ]*)\\d+/m,\nlookbehind:!0,alias:\"number\"},pointer:{pattern:/@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@/,alias:\"variable\"}}}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=gedcom;gedcom.displayName=\"gedcom\";gedcom.aliases=[]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$gedcom\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = gedcom;\n// @ts-nocheck\ngedcom.displayName = 'gedcom';\ngedcom.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nfunction gedcom(Prism) {\n  Prism.languages.gedcom = {\n    'line-value': {\n      // Preceded by level, optional pointer, and tag\n      pattern: /(^[\\t ]*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?\\w+ ).+/m,\n      lookbehind: true,\n      inside: {\n        pointer: {\n          pattern: /^@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@$/,\n          alias: 'variable'\n        }\n      }\n    },\n    record: {\n      // Preceded by level and optional pointer\n      pattern: /(^[\\t ]*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?)\\w+/m,\n      lookbehind: true,\n      alias: 'tag'\n    },\n    level: {\n      pattern: /(^[\\t ]*)\\d+/m,\n      lookbehind: true,\n      alias: 'number'\n    },\n    pointer: {\n      pattern: /@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@/,\n      alias: 'variable'\n    }\n  };\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["aliases","record","displayName","gedcom","__esModule","lookbehind","pointer","level","value","pattern","inside","alias","default"]],"~:compiled-at",1676841365413,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$gedcom.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,yCAAA,CAA8D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAYtGC,QAASA,OAAM,CAACC,KAAD,CAAQ,CACrBA,KAAMC,CAAAA,SAAUF,CAAAA,MAAhB,CAAyB,CACvB,aAAc,CAEZG,QAAS,kFAFG,CAGZC,WAAY,CAAA,CAHA,CAIZC,OAAQ,CACNC,QAAS,CACPH,QAAS,wDADF,CAEPI,MAAO,UAFA,CADH,CAJI,CADS,CAYvBC,OAAQ,CAENL,QAAS,+EAFH,CAGNC,WAAY,CAAA,CAHN,CAING,MAAO,KAJD,CAZe,CAkBvBE,MAAO,CACLN,QAAS,eADJ;AAELC,WAAY,CAAA,CAFP,CAGLG,MAAO,QAHF,CAlBgB,CAuBvBD,QAAS,CACPH,QAAS,sDADF,CAEPI,MAAO,UAFA,CAvBc,CADJ,CATvBG,MAAOC,CAAAA,cAAP,CAAsBZ,OAAtB,CAA+B,YAA/B,CAA6C,CAC3Ca,MAAO,CAAA,CADoC,CAA7C,CAGAb,QAAQc,CAAAA,OAAR,CAAkBb,MAElBA,OAAOc,CAAAA,WAAP,CAAqB,QACrBd,OAAOe,CAAAA,OAAP,CAAiB,EATqF;\",\n\"sources\":[\"node_modules/refractor/lang/gedcom.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$gedcom\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = gedcom;\\n// @ts-nocheck\\ngedcom.displayName = 'gedcom';\\ngedcom.aliases = [];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction gedcom(Prism) {\\n  Prism.languages.gedcom = {\\n    'line-value': {\\n      // Preceded by level, optional pointer, and tag\\n      pattern: /(^[\\\\t ]*\\\\d+ +(?:@\\\\w[\\\\w!\\\"$%&'()*+,\\\\-./:;<=>?[\\\\\\\\\\\\]^`{|}~\\\\x80-\\\\xfe #]*@ +)?\\\\w+ ).+/m,\\n      lookbehind: true,\\n      inside: {\\n        pointer: {\\n          pattern: /^@\\\\w[\\\\w!\\\"$%&'()*+,\\\\-./:;<=>?[\\\\\\\\\\\\]^`{|}~\\\\x80-\\\\xfe #]*@$/,\\n          alias: 'variable'\\n        }\\n      }\\n    },\\n    record: {\\n      // Preceded by level and optional pointer\\n      pattern: /(^[\\\\t ]*\\\\d+ +(?:@\\\\w[\\\\w!\\\"$%&'()*+,\\\\-./:;<=>?[\\\\\\\\\\\\]^`{|}~\\\\x80-\\\\xfe #]*@ +)?)\\\\w+/m,\\n      lookbehind: true,\\n      alias: 'tag'\\n    },\\n    level: {\\n      pattern: /(^[\\\\t ]*)\\\\d+/m,\\n      lookbehind: true,\\n      alias: 'number'\\n    },\\n    pointer: {\\n      pattern: /@\\\\w[\\\\w!\\\"$%&'()*+,\\\\-./:;<=>?[\\\\\\\\\\\\]^`{|}~\\\\x80-\\\\xfe #]*@/,\\n      alias: 'variable'\\n    }\\n  };\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"gedcom\",\"Prism\",\"languages\",\"pattern\",\"lookbehind\",\"inside\",\"pointer\",\"alias\",\"record\",\"level\",\"Object\",\"defineProperty\",\"value\",\"default\",\"displayName\",\"aliases\"]\n}\n"]