["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/space-separated-tokens/index.js"],"~:js","shadow$provide.module$node_modules$space_separated_tokens$index=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.parse=function(value){return(value=String(value||\"\").trim())?value.split(/[ \\t\\n\\r\\f]+/g):[]};exports.stringify=function(values){return values.join(\" \").trim()}}","~:source","shadow$provide[\"module$node_modules$space_separated_tokens$index\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parse = parse;\nexports.stringify = stringify;\n\n/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nfunction parse(value) {\n  const input = String(value || '').trim();\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : [];\n}\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\n\n\nfunction stringify(values) {\n  return values.join(' ').trim();\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["__esModule","value","stringify","parse"]],"~:compiled-at",1676665867335,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$space_separated_tokens$index.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAA,gDAAA,CAAqE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG7GC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,KAAR,CAWAA,QAAc,CAACD,KAAD,CAAQ,CAEpB,MAAO,CADDE,KACC,CADOC,MAAA,CAAOH,KAAP,EAAgB,EAAhB,CAAoBI,CAAAA,IAApB,EACP,EAAQF,KAAMG,CAAAA,KAAN,CAAY,eAAZ,CAAR,CAAuC,EAF1B,CAVtBR,QAAQS,CAAAA,SAAR,CAwBAA,QAAkB,CAACC,MAAD,CAAS,CACzB,MAAOA,OAAOC,CAAAA,IAAP,CAAY,GAAZ,CAAiBJ,CAAAA,IAAjB,EADkB,CA/BkF;\",\n\"sources\":[\"node_modules/space-separated-tokens/index.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$space_separated_tokens$index\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.parse = parse;\\nexports.stringify = stringify;\\n\\n/**\\n * Parse space-separated tokens to an array of strings.\\n *\\n * @param {string} value\\n *   Space-separated tokens.\\n * @returns {Array<string>}\\n *   List of tokens.\\n */\\nfunction parse(value) {\\n  const input = String(value || '').trim();\\n  return input ? input.split(/[ \\\\t\\\\n\\\\r\\\\f]+/g) : [];\\n}\\n/**\\n * Serialize an array of strings as space separated-tokens.\\n *\\n * @param {Array<string|number>} values\\n *   List of tokens.\\n * @returns {string}\\n *   Space-separated tokens.\\n */\\n\\n\\nfunction stringify(values) {\\n  return values.join(' ').trim();\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"parse\",\"input\",\"String\",\"trim\",\"split\",\"stringify\",\"values\",\"join\"]\n}\n"]