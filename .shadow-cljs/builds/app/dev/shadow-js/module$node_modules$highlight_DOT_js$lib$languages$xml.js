["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/highlight_DOT_js/lib/languages/xml.js"],"~:js","shadow$provide.module$node_modules$highlight_DOT_js$lib$languages$xml=function(global,require,module,exports){module.exports=function(hljs){const regex=hljs.regex,TAG_NAME_RE=regex.concat(/[\\p{L}_]/u,regex.optional(/[\\p{L}0-9_.-]*:/u),/[\\p{L}0-9_.-]*/u),XML_ENTITIES={className:\"symbol\",begin:/&[a-z]+;|&#[0-9]+;|&#x[a-f0-9]+;/},XML_META_KEYWORDS={begin:/\\s/,contains:[{className:\"keyword\",begin:/#?[a-z_][a-z1-9_-]+/,illegal:/\\n/}]},XML_META_PAR_KEYWORDS=hljs.inherit(XML_META_KEYWORDS,{begin:/\\(/,end:/\\)/}),\nAPOS_META_STRING_MODE=hljs.inherit(hljs.APOS_STRING_MODE,{className:\"string\"}),QUOTE_META_STRING_MODE=hljs.inherit(hljs.QUOTE_STRING_MODE,{className:\"string\"}),TAG_INTERNALS={endsWithParent:!0,illegal:/</,relevance:0,contains:[{className:\"attr\",begin:/[\\p{L}0-9._:-]+/u,relevance:0},{begin:/=\\s*/,relevance:0,contains:[{className:\"string\",endsParent:!0,variants:[{begin:/\"/,end:/\"/,contains:[XML_ENTITIES]},{begin:/'/,end:/'/,contains:[XML_ENTITIES]},{begin:/[^\\s\"'=<>`]+/}]}]}]};return{name:\"HTML, XML\",\naliases:\"html xhtml rss atom xjb xsd xsl plist wsf svg\".split(\" \"),case_insensitive:!0,unicodeRegex:!0,contains:[{className:\"meta\",begin:/<![a-z]/,end:/>/,relevance:10,contains:[XML_META_KEYWORDS,QUOTE_META_STRING_MODE,APOS_META_STRING_MODE,XML_META_PAR_KEYWORDS,{begin:/\\[/,end:/\\]/,contains:[{className:\"meta\",begin:/<![a-z]/,end:/>/,contains:[XML_META_KEYWORDS,XML_META_PAR_KEYWORDS,QUOTE_META_STRING_MODE,APOS_META_STRING_MODE]}]}]},hljs.COMMENT(/\\x3c!--/,/--\\x3e/,{relevance:10}),{begin:/<!\\[CDATA\\[/,\nend:/\\]\\]>/,relevance:10},XML_ENTITIES,{className:\"meta\",end:/\\?>/,variants:[{begin:/<\\?xml/,relevance:10,contains:[QUOTE_META_STRING_MODE]},{begin:/<\\?[a-z][a-z0-9]+/}]},{className:\"tag\",begin:/<style(?=\\s|>)/,end:/>/,keywords:{name:\"style\"},contains:[TAG_INTERNALS],starts:{end:/<\\/style>/,returnEnd:!0,subLanguage:[\"css\",\"xml\"]}},{className:\"tag\",begin:/<script(?=\\s|>)/,end:/>/,keywords:{name:\"script\"},contains:[TAG_INTERNALS],starts:{end:/<\\/script>/,returnEnd:!0,subLanguage:[\"javascript\",\"handlebars\",\n\"xml\"]}},{className:\"tag\",begin:/<>|<\\/>/},{className:\"tag\",begin:regex.concat(/</,regex.lookahead(regex.concat(TAG_NAME_RE,regex.either(/\\/>/,/>/,/\\s/)))),end:/\\/?>/,contains:[{className:\"name\",begin:TAG_NAME_RE,relevance:0,starts:TAG_INTERNALS}]},{className:\"tag\",begin:regex.concat(/<\\//,regex.lookahead(regex.concat(TAG_NAME_RE,/>/))),contains:[{className:\"name\",begin:TAG_NAME_RE,relevance:0},{begin:/>/,relevance:0,endsParent:!0}]}]}}}","~:source","shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$xml\"] = function(global,require,module,exports) {\n/*\nLanguage: HTML, XML\nWebsite: https://www.w3.org/XML/\nCategory: common, web\nAudit: 2020\n*/\n\n/** @type LanguageFn */\nfunction xml(hljs) {\n  const regex = hljs.regex;\n  // XML names can have the following additional letters: https://www.w3.org/TR/xml/#NT-NameChar\n  // OTHER_NAME_CHARS = /[:\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]/;\n  // Element names start with NAME_START_CHAR followed by optional other Unicode letters, ASCII digits, hyphens, underscores, and periods\n  // const TAG_NAME_RE = regex.concat(/[A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/, regex.optional(/[A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*:/), /[A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*/);;\n  // const XML_IDENT_RE = /[A-Z_a-z:\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]+/;\n  // const TAG_NAME_RE = regex.concat(/[A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/, regex.optional(/[A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*:/), /[A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*/);\n  // however, to cater for performance and more Unicode support rely simply on the Unicode letter class\n  const TAG_NAME_RE = regex.concat(/[\\p{L}_]/u, regex.optional(/[\\p{L}0-9_.-]*:/u), /[\\p{L}0-9_.-]*/u);\n  const XML_IDENT_RE = /[\\p{L}0-9._:-]+/u;\n  const XML_ENTITIES = {\n    className: 'symbol',\n    begin: /&[a-z]+;|&#[0-9]+;|&#x[a-f0-9]+;/\n  };\n  const XML_META_KEYWORDS = {\n    begin: /\\s/,\n    contains: [\n      {\n        className: 'keyword',\n        begin: /#?[a-z_][a-z1-9_-]+/,\n        illegal: /\\n/\n      }\n    ]\n  };\n  const XML_META_PAR_KEYWORDS = hljs.inherit(XML_META_KEYWORDS, {\n    begin: /\\(/,\n    end: /\\)/\n  });\n  const APOS_META_STRING_MODE = hljs.inherit(hljs.APOS_STRING_MODE, { className: 'string' });\n  const QUOTE_META_STRING_MODE = hljs.inherit(hljs.QUOTE_STRING_MODE, { className: 'string' });\n  const TAG_INTERNALS = {\n    endsWithParent: true,\n    illegal: /</,\n    relevance: 0,\n    contains: [\n      {\n        className: 'attr',\n        begin: XML_IDENT_RE,\n        relevance: 0\n      },\n      {\n        begin: /=\\s*/,\n        relevance: 0,\n        contains: [\n          {\n            className: 'string',\n            endsParent: true,\n            variants: [\n              {\n                begin: /\"/,\n                end: /\"/,\n                contains: [ XML_ENTITIES ]\n              },\n              {\n                begin: /'/,\n                end: /'/,\n                contains: [ XML_ENTITIES ]\n              },\n              { begin: /[^\\s\"'=<>`]+/ }\n            ]\n          }\n        ]\n      }\n    ]\n  };\n  return {\n    name: 'HTML, XML',\n    aliases: [\n      'html',\n      'xhtml',\n      'rss',\n      'atom',\n      'xjb',\n      'xsd',\n      'xsl',\n      'plist',\n      'wsf',\n      'svg'\n    ],\n    case_insensitive: true,\n    unicodeRegex: true,\n    contains: [\n      {\n        className: 'meta',\n        begin: /<![a-z]/,\n        end: />/,\n        relevance: 10,\n        contains: [\n          XML_META_KEYWORDS,\n          QUOTE_META_STRING_MODE,\n          APOS_META_STRING_MODE,\n          XML_META_PAR_KEYWORDS,\n          {\n            begin: /\\[/,\n            end: /\\]/,\n            contains: [\n              {\n                className: 'meta',\n                begin: /<![a-z]/,\n                end: />/,\n                contains: [\n                  XML_META_KEYWORDS,\n                  XML_META_PAR_KEYWORDS,\n                  QUOTE_META_STRING_MODE,\n                  APOS_META_STRING_MODE\n                ]\n              }\n            ]\n          }\n        ]\n      },\n      hljs.COMMENT(\n        /<!--/,\n        /-->/,\n        { relevance: 10 }\n      ),\n      {\n        begin: /<!\\[CDATA\\[/,\n        end: /\\]\\]>/,\n        relevance: 10\n      },\n      XML_ENTITIES,\n      // xml processing instructions\n      {\n        className: 'meta',\n        end: /\\?>/,\n        variants: [\n          {\n            begin: /<\\?xml/,\n            relevance: 10,\n            contains: [\n              QUOTE_META_STRING_MODE\n            ]\n          },\n          {\n            begin: /<\\?[a-z][a-z0-9]+/,\n          }\n        ]\n\n      },\n      {\n        className: 'tag',\n        /*\n        The lookahead pattern (?=...) ensures that 'begin' only matches\n        '<style' as a single word, followed by a whitespace or an\n        ending bracket.\n        */\n        begin: /<style(?=\\s|>)/,\n        end: />/,\n        keywords: { name: 'style' },\n        contains: [ TAG_INTERNALS ],\n        starts: {\n          end: /<\\/style>/,\n          returnEnd: true,\n          subLanguage: [\n            'css',\n            'xml'\n          ]\n        }\n      },\n      {\n        className: 'tag',\n        // See the comment in the <style tag about the lookahead pattern\n        begin: /<script(?=\\s|>)/,\n        end: />/,\n        keywords: { name: 'script' },\n        contains: [ TAG_INTERNALS ],\n        starts: {\n          end: /<\\/script>/,\n          returnEnd: true,\n          subLanguage: [\n            'javascript',\n            'handlebars',\n            'xml'\n          ]\n        }\n      },\n      // we need this for now for jSX\n      {\n        className: 'tag',\n        begin: /<>|<\\/>/\n      },\n      // open tag\n      {\n        className: 'tag',\n        begin: regex.concat(\n          /</,\n          regex.lookahead(regex.concat(\n            TAG_NAME_RE,\n            // <tag/>\n            // <tag>\n            // <tag ...\n            regex.either(/\\/>/, />/, /\\s/)\n          ))\n        ),\n        end: /\\/?>/,\n        contains: [\n          {\n            className: 'name',\n            begin: TAG_NAME_RE,\n            relevance: 0,\n            starts: TAG_INTERNALS\n          }\n        ]\n      },\n      // close tag\n      {\n        className: 'tag',\n        begin: regex.concat(\n          /<\\//,\n          regex.lookahead(regex.concat(\n            TAG_NAME_RE, />/\n          ))\n        ),\n        contains: [\n          {\n            className: 'name',\n            begin: TAG_NAME_RE,\n            relevance: 0\n          },\n          {\n            begin: />/,\n            relevance: 0,\n            endsParent: true\n          }\n        ]\n      }\n    ]\n  };\n}\n\nmodule.exports = xml;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["case_insensitive","variants","begin","aliases","returnEnd","subLanguage","className","contains","relevance","name","endsParent","unicodeRegex","keywords","starts","illegal","endsWithParent","end"]],"~:compiled-at",1676671710244,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$highlight_DOT_js$lib$languages$xml.js\",\n\"lineCount\":5,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/highlight_DOT_js/lib/languages/xml.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$highlight_DOT_js$lib$languages$xml\\\"] = function(global,require,module,exports) {\\n/*\\nLanguage: HTML, XML\\nWebsite: https://www.w3.org/XML/\\nCategory: common, web\\nAudit: 2020\\n*/\\n\\n/** @type LanguageFn */\\nfunction xml(hljs) {\\n  const regex = hljs.regex;\\n  // XML names can have the following additional letters: https://www.w3.org/TR/xml/#NT-NameChar\\n  // OTHER_NAME_CHARS = /[:\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]/;\\n  // Element names start with NAME_START_CHAR followed by optional other Unicode letters, ASCII digits, hyphens, underscores, and periods\\n  // const TAG_NAME_RE = regex.concat(/[A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD]/, regex.optional(/[A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]*:/), /[A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]*/);;\\n  // const XML_IDENT_RE = /[A-Z_a-z:\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]+/;\\n  // const TAG_NAME_RE = regex.concat(/[A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD]/, regex.optional(/[A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]*:/), /[A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]*/);\\n  // however, to cater for performance and more Unicode support rely simply on the Unicode letter class\\n  const TAG_NAME_RE = regex.concat(/[\\\\p{L}_]/u, regex.optional(/[\\\\p{L}0-9_.-]*:/u), /[\\\\p{L}0-9_.-]*/u);\\n  const XML_IDENT_RE = /[\\\\p{L}0-9._:-]+/u;\\n  const XML_ENTITIES = {\\n    className: 'symbol',\\n    begin: /&[a-z]+;|&#[0-9]+;|&#x[a-f0-9]+;/\\n  };\\n  const XML_META_KEYWORDS = {\\n    begin: /\\\\s/,\\n    contains: [\\n      {\\n        className: 'keyword',\\n        begin: /#?[a-z_][a-z1-9_-]+/,\\n        illegal: /\\\\n/\\n      }\\n    ]\\n  };\\n  const XML_META_PAR_KEYWORDS = hljs.inherit(XML_META_KEYWORDS, {\\n    begin: /\\\\(/,\\n    end: /\\\\)/\\n  });\\n  const APOS_META_STRING_MODE = hljs.inherit(hljs.APOS_STRING_MODE, { className: 'string' });\\n  const QUOTE_META_STRING_MODE = hljs.inherit(hljs.QUOTE_STRING_MODE, { className: 'string' });\\n  const TAG_INTERNALS = {\\n    endsWithParent: true,\\n    illegal: /</,\\n    relevance: 0,\\n    contains: [\\n      {\\n        className: 'attr',\\n        begin: XML_IDENT_RE,\\n        relevance: 0\\n      },\\n      {\\n        begin: /=\\\\s*/,\\n        relevance: 0,\\n        contains: [\\n          {\\n            className: 'string',\\n            endsParent: true,\\n            variants: [\\n              {\\n                begin: /\\\"/,\\n                end: /\\\"/,\\n                contains: [ XML_ENTITIES ]\\n              },\\n              {\\n                begin: /'/,\\n                end: /'/,\\n                contains: [ XML_ENTITIES ]\\n              },\\n              { begin: /[^\\\\s\\\"'=<>`]+/ }\\n            ]\\n          }\\n        ]\\n      }\\n    ]\\n  };\\n  return {\\n    name: 'HTML, XML',\\n    aliases: [\\n      'html',\\n      'xhtml',\\n      'rss',\\n      'atom',\\n      'xjb',\\n      'xsd',\\n      'xsl',\\n      'plist',\\n      'wsf',\\n      'svg'\\n    ],\\n    case_insensitive: true,\\n    unicodeRegex: true,\\n    contains: [\\n      {\\n        className: 'meta',\\n        begin: /<![a-z]/,\\n        end: />/,\\n        relevance: 10,\\n        contains: [\\n          XML_META_KEYWORDS,\\n          QUOTE_META_STRING_MODE,\\n          APOS_META_STRING_MODE,\\n          XML_META_PAR_KEYWORDS,\\n          {\\n            begin: /\\\\[/,\\n            end: /\\\\]/,\\n            contains: [\\n              {\\n                className: 'meta',\\n                begin: /<![a-z]/,\\n                end: />/,\\n                contains: [\\n                  XML_META_KEYWORDS,\\n                  XML_META_PAR_KEYWORDS,\\n                  QUOTE_META_STRING_MODE,\\n                  APOS_META_STRING_MODE\\n                ]\\n              }\\n            ]\\n          }\\n        ]\\n      },\\n      hljs.COMMENT(\\n        /\\u003c!--/,\\n        /--\\u003e/,\\n        { relevance: 10 }\\n      ),\\n      {\\n        begin: /<!\\\\[CDATA\\\\[/,\\n        end: /\\\\]\\\\]>/,\\n        relevance: 10\\n      },\\n      XML_ENTITIES,\\n      // xml processing instructions\\n      {\\n        className: 'meta',\\n        end: /\\\\?>/,\\n        variants: [\\n          {\\n            begin: /<\\\\?xml/,\\n            relevance: 10,\\n            contains: [\\n              QUOTE_META_STRING_MODE\\n            ]\\n          },\\n          {\\n            begin: /<\\\\?[a-z][a-z0-9]+/,\\n          }\\n        ]\\n\\n      },\\n      {\\n        className: 'tag',\\n        /*\\n        The lookahead pattern (?=...) ensures that 'begin' only matches\\n        '<style' as a single word, followed by a whitespace or an\\n        ending bracket.\\n        */\\n        begin: /<style(?=\\\\s|>)/,\\n        end: />/,\\n        keywords: { name: 'style' },\\n        contains: [ TAG_INTERNALS ],\\n        starts: {\\n          end: /<\\\\/style>/,\\n          returnEnd: true,\\n          subLanguage: [\\n            'css',\\n            'xml'\\n          ]\\n        }\\n      },\\n      {\\n        className: 'tag',\\n        // See the comment in the <style tag about the lookahead pattern\\n        begin: /<script(?=\\\\s|>)/,\\n        end: />/,\\n        keywords: { name: 'script' },\\n        contains: [ TAG_INTERNALS ],\\n        starts: {\\n          end: /<\\\\/script>/,\\n          returnEnd: true,\\n          subLanguage: [\\n            'javascript',\\n            'handlebars',\\n            'xml'\\n          ]\\n        }\\n      },\\n      // we need this for now for jSX\\n      {\\n        className: 'tag',\\n        begin: /<>|<\\\\/>/\\n      },\\n      // open tag\\n      {\\n        className: 'tag',\\n        begin: regex.concat(\\n          /</,\\n          regex.lookahead(regex.concat(\\n            TAG_NAME_RE,\\n            // <tag/>\\n            // <tag>\\n            // <tag ...\\n            regex.either(/\\\\/>/, />/, /\\\\s/)\\n          ))\\n        ),\\n        end: /\\\\/?>/,\\n        contains: [\\n          {\\n            className: 'name',\\n            begin: TAG_NAME_RE,\\n            relevance: 0,\\n            starts: TAG_INTERNALS\\n          }\\n        ]\\n      },\\n      // close tag\\n      {\\n        className: 'tag',\\n        begin: regex.concat(\\n          /<\\\\//,\\n          regex.lookahead(regex.concat(\\n            TAG_NAME_RE, />/\\n          ))\\n        ),\\n        contains: [\\n          {\\n            className: 'name',\\n            begin: TAG_NAME_RE,\\n            relevance: 0\\n          },\\n          {\\n            begin: />/,\\n            relevance: 0,\\n            endsParent: true\\n          }\\n        ]\\n      }\\n    ]\\n  };\\n}\\n\\nmodule.exports = xml;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"xml\",\"hljs\",\"regex\",\"TAG_NAME_RE\",\"concat\",\"optional\",\"XML_ENTITIES\",\"className\",\"begin\",\"XML_META_KEYWORDS\",\"contains\",\"illegal\",\"XML_META_PAR_KEYWORDS\",\"inherit\",\"end\",\"APOS_META_STRING_MODE\",\"APOS_STRING_MODE\",\"QUOTE_META_STRING_MODE\",\"QUOTE_STRING_MODE\",\"TAG_INTERNALS\",\"endsWithParent\",\"relevance\",\"XML_IDENT_RE\",\"endsParent\",\"variants\",\"name\",\"aliases\",\"case_insensitive\",\"unicodeRegex\",\"COMMENT\",\"keywords\",\"starts\",\"returnEnd\",\"subLanguage\",\"lookahead\",\"either\"]\n}\n"]