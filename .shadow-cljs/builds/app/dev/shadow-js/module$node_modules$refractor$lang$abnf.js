["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/abnf.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$abnf=function(global,require,module,exports){function abnf(Prism){Prism.languages.abnf={comment:/;.*/,string:{pattern:/(?:%[is])?\"[^\"\\n\\r]*\"/,greedy:!0,inside:{punctuation:/^%[is]/}},range:{pattern:/%(?:b[01]+-[01]+|d\\d+-\\d+|x[A-F\\d]+-[A-F\\d]+)/i,alias:\"number\"},terminal:{pattern:/%(?:b[01]+(?:\\.[01]+)*|d\\d+(?:\\.\\d+)*|x[A-F\\d]+(?:\\.[A-F\\d]+)*)/i,alias:\"number\"},repetition:{pattern:/(^|[^\\w-])(?:\\d*\\*\\d*|\\d+)/,lookbehind:!0,alias:\"operator\"},definition:{pattern:/(^[ \\t]*)(?:[a-z][\\w-]*|<[^<>\\r\\n]*>)(?=\\s*=)/m,\nlookbehind:!0,alias:\"keyword\",inside:{punctuation:/<|>/}},\"core-rule\":{pattern:RegExp(\"(?:(^|[^\\x3c\\\\w-])(?:ALPHA|BIT|CHAR|CR|CRLF|CTL|DIGIT|DQUOTE|HEXDIG|HTAB|LF|LWSP|OCTET|SP|VCHAR|WSP)|\\x3c(?:ALPHA|BIT|CHAR|CR|CRLF|CTL|DIGIT|DQUOTE|HEXDIG|HTAB|LF|LWSP|OCTET|SP|VCHAR|WSP)\\x3e)(?![\\\\w-])\",\"i\"),lookbehind:!0,alias:[\"rule\",\"constant\"],inside:{punctuation:/<|>/}},rule:{pattern:/(^|[^<\\w-])[a-z][\\w-]*|<[^<>\\r\\n]*>/i,lookbehind:!0,inside:{punctuation:/<|>/}},operator:/=\\/?|\\//,punctuation:/[()\\[\\]]/}}\nObject.defineProperty(exports,\"__esModule\",{value:!0});exports.default=abnf;abnf.displayName=\"abnf\";abnf.aliases=[]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$abnf\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = abnf;\n// @ts-nocheck\nabnf.displayName = 'abnf';\nabnf.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nfunction abnf(Prism) {\n  ;\n\n  (function (Prism) {\n    var coreRules = '(?:ALPHA|BIT|CHAR|CR|CRLF|CTL|DIGIT|DQUOTE|HEXDIG|HTAB|LF|LWSP|OCTET|SP|VCHAR|WSP)';\n    Prism.languages.abnf = {\n      comment: /;.*/,\n      string: {\n        pattern: /(?:%[is])?\"[^\"\\n\\r]*\"/,\n        greedy: true,\n        inside: {\n          punctuation: /^%[is]/\n        }\n      },\n      range: {\n        pattern: /%(?:b[01]+-[01]+|d\\d+-\\d+|x[A-F\\d]+-[A-F\\d]+)/i,\n        alias: 'number'\n      },\n      terminal: {\n        pattern: /%(?:b[01]+(?:\\.[01]+)*|d\\d+(?:\\.\\d+)*|x[A-F\\d]+(?:\\.[A-F\\d]+)*)/i,\n        alias: 'number'\n      },\n      repetition: {\n        pattern: /(^|[^\\w-])(?:\\d*\\*\\d*|\\d+)/,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      definition: {\n        pattern: /(^[ \\t]*)(?:[a-z][\\w-]*|<[^<>\\r\\n]*>)(?=\\s*=)/m,\n        lookbehind: true,\n        alias: 'keyword',\n        inside: {\n          punctuation: /<|>/\n        }\n      },\n      'core-rule': {\n        pattern: RegExp('(?:(^|[^<\\\\w-])' + coreRules + '|<' + coreRules + '>)(?![\\\\w-])', 'i'),\n        lookbehind: true,\n        alias: ['rule', 'constant'],\n        inside: {\n          punctuation: /<|>/\n        }\n      },\n      rule: {\n        pattern: /(^|[^<\\w-])[a-z][\\w-]*|<[^<>\\r\\n]*>/i,\n        lookbehind: true,\n        inside: {\n          punctuation: /<|>/\n        }\n      },\n      operator: /=\\/?|\\//,\n      punctuation: /[()\\[\\]]/\n    };\n  })(Prism);\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["terminal","range","rule","punctuation","string","aliases","operator","abnf","displayName","__esModule","lookbehind","value","greedy","definition","pattern","inside","alias","repetition","comment","default"]],"~:compiled-at",1676841365385,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$abnf.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,CAAA,uCAAA,CAA4D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAYpGC,QAASA,KAAI,CAACC,KAAD,CAAQ,CAqDhBA,KAhDKC,CAAAA,SAAUF,CAAAA,IAAhB,CAAuB,CACrBG,QAAS,KADY,CAErBC,OAAQ,CACNC,QAAS,uBADH,CAENC,OAAQ,CAAA,CAFF,CAGNC,OAAQ,CACNC,YAAa,QADP,CAHF,CAFa,CASrBC,MAAO,CACLJ,QAAS,gDADJ,CAELK,MAAO,QAFF,CATc,CAarBC,SAAU,CACRN,QAAS,kEADD,CAERK,MAAO,QAFC,CAbW,CAiBrBE,WAAY,CACVP,QAAS,4BADC,CAEVQ,WAAY,CAAA,CAFF,CAGVH,MAAO,UAHG,CAjBS,CAsBrBI,WAAY,CACVT,QAAS,gDADC;AAEVQ,WAAY,CAAA,CAFF,CAGVH,MAAO,SAHG,CAIVH,OAAQ,CACNC,YAAa,KADP,CAJE,CAtBS,CA8BrB,YAAa,CACXH,QAASU,MAAA,CAAO,4MAAP,CAA0E,GAA1E,CADE,CAEXF,WAAY,CAAA,CAFD,CAGXH,MAAO,CAAC,MAAD,CAAS,UAAT,CAHI,CAIXH,OAAQ,CACNC,YAAa,KADP,CAJG,CA9BQ,CAsCrBQ,KAAM,CACJX,QAAS,sCADL,CAEJQ,WAAY,CAAA,CAFR,CAGJN,OAAQ,CACNC,YAAa,KADP,CAHJ,CAtCe,CA6CrBS,SAAU,SA7CW,CA8CrBT,YAAa,UA9CQ,CALN;AATrBU,MAAOC,CAAAA,cAAP,CAAsBpB,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CqB,MAAO,CAAA,CADoC,CAA7C,CAGArB,QAAQsB,CAAAA,OAAR,CAAkBrB,IAElBA,KAAKsB,CAAAA,WAAL,CAAmB,MACnBtB,KAAKuB,CAAAA,OAAL,CAAe,EATqF;\",\n\"sources\":[\"node_modules/refractor/lang/abnf.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$abnf\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = abnf;\\n// @ts-nocheck\\nabnf.displayName = 'abnf';\\nabnf.aliases = [];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction abnf(Prism) {\\n  ;\\n\\n  (function (Prism) {\\n    var coreRules = '(?:ALPHA|BIT|CHAR|CR|CRLF|CTL|DIGIT|DQUOTE|HEXDIG|HTAB|LF|LWSP|OCTET|SP|VCHAR|WSP)';\\n    Prism.languages.abnf = {\\n      comment: /;.*/,\\n      string: {\\n        pattern: /(?:%[is])?\\\"[^\\\"\\\\n\\\\r]*\\\"/,\\n        greedy: true,\\n        inside: {\\n          punctuation: /^%[is]/\\n        }\\n      },\\n      range: {\\n        pattern: /%(?:b[01]+-[01]+|d\\\\d+-\\\\d+|x[A-F\\\\d]+-[A-F\\\\d]+)/i,\\n        alias: 'number'\\n      },\\n      terminal: {\\n        pattern: /%(?:b[01]+(?:\\\\.[01]+)*|d\\\\d+(?:\\\\.\\\\d+)*|x[A-F\\\\d]+(?:\\\\.[A-F\\\\d]+)*)/i,\\n        alias: 'number'\\n      },\\n      repetition: {\\n        pattern: /(^|[^\\\\w-])(?:\\\\d*\\\\*\\\\d*|\\\\d+)/,\\n        lookbehind: true,\\n        alias: 'operator'\\n      },\\n      definition: {\\n        pattern: /(^[ \\\\t]*)(?:[a-z][\\\\w-]*|<[^<>\\\\r\\\\n]*>)(?=\\\\s*=)/m,\\n        lookbehind: true,\\n        alias: 'keyword',\\n        inside: {\\n          punctuation: /<|>/\\n        }\\n      },\\n      'core-rule': {\\n        pattern: RegExp('(?:(^|[^<\\\\\\\\w-])' + coreRules + '|<' + coreRules + '>)(?![\\\\\\\\w-])', 'i'),\\n        lookbehind: true,\\n        alias: ['rule', 'constant'],\\n        inside: {\\n          punctuation: /<|>/\\n        }\\n      },\\n      rule: {\\n        pattern: /(^|[^<\\\\w-])[a-z][\\\\w-]*|<[^<>\\\\r\\\\n]*>/i,\\n        lookbehind: true,\\n        inside: {\\n          punctuation: /<|>/\\n        }\\n      },\\n      operator: /=\\\\/?|\\\\//,\\n      punctuation: /[()\\\\[\\\\]]/\\n    };\\n  })(Prism);\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"abnf\",\"Prism\",\"languages\",\"comment\",\"string\",\"pattern\",\"greedy\",\"inside\",\"punctuation\",\"range\",\"alias\",\"terminal\",\"repetition\",\"lookbehind\",\"definition\",\"RegExp\",\"rule\",\"operator\",\"Object\",\"defineProperty\",\"value\",\"default\",\"displayName\",\"aliases\"]\n}\n"]