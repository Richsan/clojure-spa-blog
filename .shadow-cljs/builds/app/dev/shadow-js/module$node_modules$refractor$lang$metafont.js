["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/metafont.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$metafont=function(global,require,module,exports){function metafont(Prism){Prism.languages.metafont={comment:{pattern:/%.*/,greedy:!0},string:{pattern:/\"[^\\r\\n\"]*\"/,greedy:!0},number:/\\d*\\.?\\d+/,boolean:/\\b(?:false|true)\\b/,punctuation:[/[,;()]/,{pattern:/(^|[^{}])(?:\\{|\\})(?![{}])/,lookbehind:!0},{pattern:/(^|[^[])\\[(?!\\[)/,lookbehind:!0},{pattern:/(^|[^\\]])\\](?!\\])/,lookbehind:!0}],constant:[{pattern:/(^|[^!?])\\?\\?\\?(?![!?])/,lookbehind:!0},{pattern:/(^|[^/*\\\\])(?:\\\\|\\\\\\\\)(?![/*\\\\])/,\nlookbehind:!0},/\\b(?:_|blankpicture|bp|cc|cm|dd|ditto|down|eps|epsilon|fullcircle|halfcircle|identity|in|infinity|left|mm|nullpen|nullpicture|origin|pc|penrazor|penspeck|pensquare|penstroke|proof|pt|quartercircle|relax|right|smoke|unitpixel|unitsquare|up)\\b/],quantity:{pattern:/\\b(?:autorounding|blacker|boundarychar|charcode|chardp|chardx|chardy|charext|charht|charic|charwd|currentwindow|day|designsize|displaying|fillin|fontmaking|granularity|hppp|join_radius|month|o_correction|pausing|pen_(?:bot|lft|rt|top)|pixels_per_inch|proofing|showstopping|smoothing|time|tolerance|tracingcapsules|tracingchoices|tracingcommands|tracingedges|tracingequations|tracingmacros|tracingonline|tracingoutput|tracingpens|tracingrestores|tracingspecs|tracingstats|tracingtitles|turningcheck|vppp|warningcheck|xoffset|year|yoffset)\\b/,\nalias:\"keyword\"},command:{pattern:/\\b(?:addto|batchmode|charlist|cull|display|errhelp|errmessage|errorstopmode|everyjob|extensible|fontdimen|headerbyte|inner|interim|let|ligtable|message|newinternal|nonstopmode|numspecial|openwindow|outer|randomseed|save|scrollmode|shipout|show|showdependencies|showstats|showtoken|showvariable|special)\\b/,alias:\"builtin\"},operator:[{pattern:/(^|[^>=<:|])(?:<|<=|=|=:|\\|=:|\\|=:>|=:\\|>|=:\\||\\|=:\\||\\|=:\\|>|\\|=:\\|>>|>|>=|:|:=|<>|::|\\|\\|:)(?![>=<:|])/,lookbehind:!0},{pattern:/(^|[^+-])(?:\\+|\\+\\+|-{1,3}|\\+-\\+)(?![+-])/,\nlookbehind:!0},{pattern:/(^|[^/*\\\\])(?:\\*|\\*\\*|\\/)(?![/*\\\\])/,lookbehind:!0},{pattern:/(^|[^.])(?:\\.{2,3})(?!\\.)/,lookbehind:!0},{pattern:/(^|[^@#&$])&(?![@#&$])/,lookbehind:!0},/\\b(?:and|not|or)\\b/],macro:{pattern:/\\b(?:abs|beginchar|bot|byte|capsule_def|ceiling|change_width|clear_pen_memory|clearit|clearpen|clearxy|counterclockwise|cullit|cutdraw|cutoff|decr|define_blacker_pixels|define_corrected_pixels|define_good_x_pixels|define_good_y_pixels|define_horizontal_corrected_pixels|define_pixels|define_whole_blacker_pixels|define_whole_pixels|define_whole_vertical_blacker_pixels|define_whole_vertical_pixels|dir|direction|directionpoint|div|dotprod|downto|draw|drawdot|endchar|erase|fill|filldraw|fix_units|flex|font_coding_scheme|font_extra_space|font_identifier|font_normal_shrink|font_normal_space|font_normal_stretch|font_quad|font_size|font_slant|font_x_height|gfcorners|gobble|gobbled|good\\.(?:bot|lft|rt|top|x|y)|grayfont|hide|hround|imagerules|incr|interact|interpath|intersectionpoint|inverse|italcorr|killtext|labelfont|labels|lft|loggingall|lowres_fix|makegrid|makelabel(?:\\.(?:bot|lft|rt|top)(?:\\.nodot)?)?|max|min|mod|mode_def|mode_setup|nodisplays|notransforms|numtok|openit|penlabels|penpos|pickup|proofoffset|proofrule|proofrulethickness|range|reflectedabout|rotatedabout|rotatedaround|round|rt|savepen|screenchars|screenrule|screenstrokes|shipit|showit|slantfont|softjoin|solve|stop|superellipse|tensepath|thru|titlefont|top|tracingall|tracingnone|undraw|undrawdot|unfill|unfilldraw|upto|vround)\\b/,\nalias:\"function\"},builtin:/\\b(?:ASCII|angle|char|cosd|decimal|directiontime|floor|hex|intersectiontimes|jobname|known|length|makepath|makepen|mexp|mlog|normaldeviate|oct|odd|pencircle|penoffset|point|postcontrol|precontrol|reverse|rotated|sind|sqrt|str|subpath|substring|totalweight|turningnumber|uniformdeviate|unknown|xpart|xxpart|xypart|ypart|yxpart|yypart)\\b/,keyword:/\\b(?:also|at|atleast|begingroup|charexists|contour|controls|curl|cycle|def|delimiters|doublepath|dropping|dump|else|elseif|end|enddef|endfor|endgroup|endinput|exitif|exitunless|expandafter|fi|for|forever|forsuffixes|from|if|input|inwindow|keeping|kern|of|primarydef|quote|readstring|scaled|scantokens|secondarydef|shifted|skipto|slanted|step|tension|tertiarydef|to|transformed|until|vardef|withpen|withweight|xscaled|yscaled|zscaled)\\b/,\ntype:{pattern:/\\b(?:boolean|expr|numeric|pair|path|pen|picture|primary|secondary|string|suffix|tertiary|text|transform)\\b/,alias:\"property\"},variable:{pattern:/(^|[^@#&$])(?:@#|#@|#|@)(?![@#&$])|\\b(?:aspect_ratio|currentpen|currentpicture|currenttransform|d|extra_beginchar|extra_endchar|extra_setup|h|localfont|mag|mode|screen_cols|screen_rows|w|whatever|x|y|z)\\b/,lookbehind:!0}}}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=metafont;metafont.displayName=\"metafont\";metafont.aliases=\n[]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$metafont\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = metafont;\n// @ts-nocheck\nmetafont.displayName = 'metafont';\nmetafont.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nfunction metafont(Prism) {\n  Prism.languages.metafont = {\n    // Syntax of METAFONT with the added (public) elements of PlainMETAFONT. Except for internal quantities they are expected to be rarely redefined. Freely inspired by the syntax of Christophe Grandsire for the Crimson Editor.\n    comment: {\n      pattern: /%.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /\"[^\\r\\n\"]*\"/,\n      greedy: true\n    },\n    number: /\\d*\\.?\\d+/,\n    boolean: /\\b(?:false|true)\\b/,\n    punctuation: [/[,;()]/, {\n      pattern: /(^|[^{}])(?:\\{|\\})(?![{}])/,\n      lookbehind: true\n    }, {\n      pattern: /(^|[^[])\\[(?!\\[)/,\n      lookbehind: true\n    }, {\n      pattern: /(^|[^\\]])\\](?!\\])/,\n      lookbehind: true\n    }],\n    constant: [{\n      pattern: /(^|[^!?])\\?\\?\\?(?![!?])/,\n      lookbehind: true\n    }, {\n      pattern: /(^|[^/*\\\\])(?:\\\\|\\\\\\\\)(?![/*\\\\])/,\n      lookbehind: true\n    }, /\\b(?:_|blankpicture|bp|cc|cm|dd|ditto|down|eps|epsilon|fullcircle|halfcircle|identity|in|infinity|left|mm|nullpen|nullpicture|origin|pc|penrazor|penspeck|pensquare|penstroke|proof|pt|quartercircle|relax|right|smoke|unitpixel|unitsquare|up)\\b/],\n    quantity: {\n      pattern: /\\b(?:autorounding|blacker|boundarychar|charcode|chardp|chardx|chardy|charext|charht|charic|charwd|currentwindow|day|designsize|displaying|fillin|fontmaking|granularity|hppp|join_radius|month|o_correction|pausing|pen_(?:bot|lft|rt|top)|pixels_per_inch|proofing|showstopping|smoothing|time|tolerance|tracingcapsules|tracingchoices|tracingcommands|tracingedges|tracingequations|tracingmacros|tracingonline|tracingoutput|tracingpens|tracingrestores|tracingspecs|tracingstats|tracingtitles|turningcheck|vppp|warningcheck|xoffset|year|yoffset)\\b/,\n      alias: 'keyword'\n    },\n    command: {\n      pattern: /\\b(?:addto|batchmode|charlist|cull|display|errhelp|errmessage|errorstopmode|everyjob|extensible|fontdimen|headerbyte|inner|interim|let|ligtable|message|newinternal|nonstopmode|numspecial|openwindow|outer|randomseed|save|scrollmode|shipout|show|showdependencies|showstats|showtoken|showvariable|special)\\b/,\n      alias: 'builtin'\n    },\n    operator: [{\n      pattern: /(^|[^>=<:|])(?:<|<=|=|=:|\\|=:|\\|=:>|=:\\|>|=:\\||\\|=:\\||\\|=:\\|>|\\|=:\\|>>|>|>=|:|:=|<>|::|\\|\\|:)(?![>=<:|])/,\n      lookbehind: true\n    }, {\n      pattern: /(^|[^+-])(?:\\+|\\+\\+|-{1,3}|\\+-\\+)(?![+-])/,\n      lookbehind: true\n    }, {\n      pattern: /(^|[^/*\\\\])(?:\\*|\\*\\*|\\/)(?![/*\\\\])/,\n      lookbehind: true\n    }, {\n      pattern: /(^|[^.])(?:\\.{2,3})(?!\\.)/,\n      lookbehind: true\n    }, {\n      pattern: /(^|[^@#&$])&(?![@#&$])/,\n      lookbehind: true\n    }, /\\b(?:and|not|or)\\b/],\n    macro: {\n      pattern: /\\b(?:abs|beginchar|bot|byte|capsule_def|ceiling|change_width|clear_pen_memory|clearit|clearpen|clearxy|counterclockwise|cullit|cutdraw|cutoff|decr|define_blacker_pixels|define_corrected_pixels|define_good_x_pixels|define_good_y_pixels|define_horizontal_corrected_pixels|define_pixels|define_whole_blacker_pixels|define_whole_pixels|define_whole_vertical_blacker_pixels|define_whole_vertical_pixels|dir|direction|directionpoint|div|dotprod|downto|draw|drawdot|endchar|erase|fill|filldraw|fix_units|flex|font_coding_scheme|font_extra_space|font_identifier|font_normal_shrink|font_normal_space|font_normal_stretch|font_quad|font_size|font_slant|font_x_height|gfcorners|gobble|gobbled|good\\.(?:bot|lft|rt|top|x|y)|grayfont|hide|hround|imagerules|incr|interact|interpath|intersectionpoint|inverse|italcorr|killtext|labelfont|labels|lft|loggingall|lowres_fix|makegrid|makelabel(?:\\.(?:bot|lft|rt|top)(?:\\.nodot)?)?|max|min|mod|mode_def|mode_setup|nodisplays|notransforms|numtok|openit|penlabels|penpos|pickup|proofoffset|proofrule|proofrulethickness|range|reflectedabout|rotatedabout|rotatedaround|round|rt|savepen|screenchars|screenrule|screenstrokes|shipit|showit|slantfont|softjoin|solve|stop|superellipse|tensepath|thru|titlefont|top|tracingall|tracingnone|undraw|undrawdot|unfill|unfilldraw|upto|vround)\\b/,\n      alias: 'function'\n    },\n    builtin: /\\b(?:ASCII|angle|char|cosd|decimal|directiontime|floor|hex|intersectiontimes|jobname|known|length|makepath|makepen|mexp|mlog|normaldeviate|oct|odd|pencircle|penoffset|point|postcontrol|precontrol|reverse|rotated|sind|sqrt|str|subpath|substring|totalweight|turningnumber|uniformdeviate|unknown|xpart|xxpart|xypart|ypart|yxpart|yypart)\\b/,\n    keyword: /\\b(?:also|at|atleast|begingroup|charexists|contour|controls|curl|cycle|def|delimiters|doublepath|dropping|dump|else|elseif|end|enddef|endfor|endgroup|endinput|exitif|exitunless|expandafter|fi|for|forever|forsuffixes|from|if|input|inwindow|keeping|kern|of|primarydef|quote|readstring|scaled|scantokens|secondarydef|shifted|skipto|slanted|step|tension|tertiarydef|to|transformed|until|vardef|withpen|withweight|xscaled|yscaled|zscaled)\\b/,\n    type: {\n      pattern: /\\b(?:boolean|expr|numeric|pair|path|pen|picture|primary|secondary|string|suffix|tertiary|text|transform)\\b/,\n      alias: 'property'\n    },\n    variable: {\n      pattern: /(^|[^@#&$])(?:@#|#@|#|@)(?![@#&$])|\\b(?:aspect_ratio|currentpen|currentpicture|currenttransform|d|extra_beginchar|extra_endchar|extra_setup|h|localfont|mag|mode|screen_cols|screen_rows|w|whatever|x|y|z)\\b/,\n      lookbehind: true\n    }\n  };\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["boolean","punctuation","string","aliases","command","constant","operator","displayName","__esModule","lookbehind","value","quantity","variable","keyword","number","greedy","pattern","type","metafont","alias","comment","builtin","default","macro"]],"~:compiled-at",1676841365437,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$metafont.js\",\n\"lineCount\":7,\n\"mappings\":\"AAAAA,cAAA,CAAA,2CAAA,CAAgE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAYxGC,QAASA,SAAQ,CAACC,KAAD,CAAQ,CACvBA,KAAMC,CAAAA,SAAUF,CAAAA,QAAhB,CAA2B,CAEzBG,QAAS,CACPC,QAAS,KADF,CAEPC,OAAQ,CAAA,CAFD,CAFgB,CAMzBC,OAAQ,CACNF,QAAS,aADH,CAENC,OAAQ,CAAA,CAFF,CANiB,CAUzBE,OAAQ,WAViB,CAWzBC,QAAS,oBAXgB,CAYzBC,YAAa,CAAC,QAAD,CAAW,CACtBL,QAAS,4BADa,CAEtBM,WAAY,CAAA,CAFU,CAAX,CAGV,CACDN,QAAS,kBADR,CAEDM,WAAY,CAAA,CAFX,CAHU,CAMV,CACDN,QAAS,mBADR,CAEDM,WAAY,CAAA,CAFX,CANU,CAZY,CAsBzBC,SAAU,CAAC,CACTP,QAAS,yBADA,CAETM,WAAY,CAAA,CAFH,CAAD,CAGP,CACDN,QAAS,kCADR;AAEDM,WAAY,CAAA,CAFX,CAHO,CAMP,mPANO,CAtBe,CA6BzBE,SAAU,CACRR,QAAS,6hBADD;AAERS,MAAO,SAFC,CA7Be,CAiCzBC,QAAS,CACPV,QAAS,kTADF,CAEPS,MAAO,SAFA,CAjCgB,CAqCzBE,SAAU,CAAC,CACTX,QAAS,0GADA,CAETM,WAAY,CAAA,CAFH,CAAD,CAGP,CACDN,QAAS,2CADR;AAEDM,WAAY,CAAA,CAFX,CAHO,CAMP,CACDN,QAAS,qCADR,CAEDM,WAAY,CAAA,CAFX,CANO,CASP,CACDN,QAAS,2BADR,CAEDM,WAAY,CAAA,CAFX,CATO,CAYP,CACDN,QAAS,wBADR,CAEDM,WAAY,CAAA,CAFX,CAZO,CAeP,oBAfO,CArCe,CAqDzBM,MAAO,CACLZ,QAAS,0xCADJ;AAELS,MAAO,UAFF,CArDkB,CAyDzBI,QAAS,iVAzDgB,CA0DzBC,QAAS,qbA1DgB;AA2DzBC,KAAM,CACJf,QAAS,4GADL,CAEJS,MAAO,UAFH,CA3DmB,CA+DzBO,SAAU,CACRhB,QAAS,8MADD,CAERM,WAAY,CAAA,CAFJ,CA/De,CADJ,CATzBW,MAAOC,CAAAA,cAAP,CAAsBvB,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CwB,MAAO,CAAA,CADoC,CAA7C,CAGAxB,QAAQyB,CAAAA,OAAR,CAAkBxB,QAElBA,SAASyB,CAAAA,WAAT,CAAuB,UACvBzB,SAAS0B,CAAAA,OAAT;AAAmB,EATqF;\",\n\"sources\":[\"node_modules/refractor/lang/metafont.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$metafont\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = metafont;\\n// @ts-nocheck\\nmetafont.displayName = 'metafont';\\nmetafont.aliases = [];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction metafont(Prism) {\\n  Prism.languages.metafont = {\\n    // Syntax of METAFONT with the added (public) elements of PlainMETAFONT. Except for internal quantities they are expected to be rarely redefined. Freely inspired by the syntax of Christophe Grandsire for the Crimson Editor.\\n    comment: {\\n      pattern: /%.*/,\\n      greedy: true\\n    },\\n    string: {\\n      pattern: /\\\"[^\\\\r\\\\n\\\"]*\\\"/,\\n      greedy: true\\n    },\\n    number: /\\\\d*\\\\.?\\\\d+/,\\n    boolean: /\\\\b(?:false|true)\\\\b/,\\n    punctuation: [/[,;()]/, {\\n      pattern: /(^|[^{}])(?:\\\\{|\\\\})(?![{}])/,\\n      lookbehind: true\\n    }, {\\n      pattern: /(^|[^[])\\\\[(?!\\\\[)/,\\n      lookbehind: true\\n    }, {\\n      pattern: /(^|[^\\\\]])\\\\](?!\\\\])/,\\n      lookbehind: true\\n    }],\\n    constant: [{\\n      pattern: /(^|[^!?])\\\\?\\\\?\\\\?(?![!?])/,\\n      lookbehind: true\\n    }, {\\n      pattern: /(^|[^/*\\\\\\\\])(?:\\\\\\\\|\\\\\\\\\\\\\\\\)(?![/*\\\\\\\\])/,\\n      lookbehind: true\\n    }, /\\\\b(?:_|blankpicture|bp|cc|cm|dd|ditto|down|eps|epsilon|fullcircle|halfcircle|identity|in|infinity|left|mm|nullpen|nullpicture|origin|pc|penrazor|penspeck|pensquare|penstroke|proof|pt|quartercircle|relax|right|smoke|unitpixel|unitsquare|up)\\\\b/],\\n    quantity: {\\n      pattern: /\\\\b(?:autorounding|blacker|boundarychar|charcode|chardp|chardx|chardy|charext|charht|charic|charwd|currentwindow|day|designsize|displaying|fillin|fontmaking|granularity|hppp|join_radius|month|o_correction|pausing|pen_(?:bot|lft|rt|top)|pixels_per_inch|proofing|showstopping|smoothing|time|tolerance|tracingcapsules|tracingchoices|tracingcommands|tracingedges|tracingequations|tracingmacros|tracingonline|tracingoutput|tracingpens|tracingrestores|tracingspecs|tracingstats|tracingtitles|turningcheck|vppp|warningcheck|xoffset|year|yoffset)\\\\b/,\\n      alias: 'keyword'\\n    },\\n    command: {\\n      pattern: /\\\\b(?:addto|batchmode|charlist|cull|display|errhelp|errmessage|errorstopmode|everyjob|extensible|fontdimen|headerbyte|inner|interim|let|ligtable|message|newinternal|nonstopmode|numspecial|openwindow|outer|randomseed|save|scrollmode|shipout|show|showdependencies|showstats|showtoken|showvariable|special)\\\\b/,\\n      alias: 'builtin'\\n    },\\n    operator: [{\\n      pattern: /(^|[^>=<:|])(?:<|<=|=|=:|\\\\|=:|\\\\|=:>|=:\\\\|>|=:\\\\||\\\\|=:\\\\||\\\\|=:\\\\|>|\\\\|=:\\\\|>>|>|>=|:|:=|<>|::|\\\\|\\\\|:)(?![>=<:|])/,\\n      lookbehind: true\\n    }, {\\n      pattern: /(^|[^+-])(?:\\\\+|\\\\+\\\\+|-{1,3}|\\\\+-\\\\+)(?![+-])/,\\n      lookbehind: true\\n    }, {\\n      pattern: /(^|[^/*\\\\\\\\])(?:\\\\*|\\\\*\\\\*|\\\\/)(?![/*\\\\\\\\])/,\\n      lookbehind: true\\n    }, {\\n      pattern: /(^|[^.])(?:\\\\.{2,3})(?!\\\\.)/,\\n      lookbehind: true\\n    }, {\\n      pattern: /(^|[^@#&$])&(?![@#&$])/,\\n      lookbehind: true\\n    }, /\\\\b(?:and|not|or)\\\\b/],\\n    macro: {\\n      pattern: /\\\\b(?:abs|beginchar|bot|byte|capsule_def|ceiling|change_width|clear_pen_memory|clearit|clearpen|clearxy|counterclockwise|cullit|cutdraw|cutoff|decr|define_blacker_pixels|define_corrected_pixels|define_good_x_pixels|define_good_y_pixels|define_horizontal_corrected_pixels|define_pixels|define_whole_blacker_pixels|define_whole_pixels|define_whole_vertical_blacker_pixels|define_whole_vertical_pixels|dir|direction|directionpoint|div|dotprod|downto|draw|drawdot|endchar|erase|fill|filldraw|fix_units|flex|font_coding_scheme|font_extra_space|font_identifier|font_normal_shrink|font_normal_space|font_normal_stretch|font_quad|font_size|font_slant|font_x_height|gfcorners|gobble|gobbled|good\\\\.(?:bot|lft|rt|top|x|y)|grayfont|hide|hround|imagerules|incr|interact|interpath|intersectionpoint|inverse|italcorr|killtext|labelfont|labels|lft|loggingall|lowres_fix|makegrid|makelabel(?:\\\\.(?:bot|lft|rt|top)(?:\\\\.nodot)?)?|max|min|mod|mode_def|mode_setup|nodisplays|notransforms|numtok|openit|penlabels|penpos|pickup|proofoffset|proofrule|proofrulethickness|range|reflectedabout|rotatedabout|rotatedaround|round|rt|savepen|screenchars|screenrule|screenstrokes|shipit|showit|slantfont|softjoin|solve|stop|superellipse|tensepath|thru|titlefont|top|tracingall|tracingnone|undraw|undrawdot|unfill|unfilldraw|upto|vround)\\\\b/,\\n      alias: 'function'\\n    },\\n    builtin: /\\\\b(?:ASCII|angle|char|cosd|decimal|directiontime|floor|hex|intersectiontimes|jobname|known|length|makepath|makepen|mexp|mlog|normaldeviate|oct|odd|pencircle|penoffset|point|postcontrol|precontrol|reverse|rotated|sind|sqrt|str|subpath|substring|totalweight|turningnumber|uniformdeviate|unknown|xpart|xxpart|xypart|ypart|yxpart|yypart)\\\\b/,\\n    keyword: /\\\\b(?:also|at|atleast|begingroup|charexists|contour|controls|curl|cycle|def|delimiters|doublepath|dropping|dump|else|elseif|end|enddef|endfor|endgroup|endinput|exitif|exitunless|expandafter|fi|for|forever|forsuffixes|from|if|input|inwindow|keeping|kern|of|primarydef|quote|readstring|scaled|scantokens|secondarydef|shifted|skipto|slanted|step|tension|tertiarydef|to|transformed|until|vardef|withpen|withweight|xscaled|yscaled|zscaled)\\\\b/,\\n    type: {\\n      pattern: /\\\\b(?:boolean|expr|numeric|pair|path|pen|picture|primary|secondary|string|suffix|tertiary|text|transform)\\\\b/,\\n      alias: 'property'\\n    },\\n    variable: {\\n      pattern: /(^|[^@#&$])(?:@#|#@|#|@)(?![@#&$])|\\\\b(?:aspect_ratio|currentpen|currentpicture|currenttransform|d|extra_beginchar|extra_endchar|extra_setup|h|localfont|mag|mode|screen_cols|screen_rows|w|whatever|x|y|z)\\\\b/,\\n      lookbehind: true\\n    }\\n  };\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"metafont\",\"Prism\",\"languages\",\"comment\",\"pattern\",\"greedy\",\"string\",\"number\",\"boolean\",\"punctuation\",\"lookbehind\",\"constant\",\"quantity\",\"alias\",\"command\",\"operator\",\"macro\",\"builtin\",\"keyword\",\"type\",\"variable\",\"Object\",\"defineProperty\",\"value\",\"default\",\"displayName\",\"aliases\"]\n}\n"]