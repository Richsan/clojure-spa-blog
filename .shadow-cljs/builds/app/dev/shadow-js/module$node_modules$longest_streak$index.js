["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/longest-streak/index.js"],"~:js","shadow$provide.module$node_modules$longest_streak$index=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.longestStreak=function(value,substring){value=String(value);let index=value.indexOf(substring),expected=index,count=0,max=0;if(\"string\"!==typeof substring)throw new TypeError(\"Expected substring\");for(;-1!==index;)index===expected?++count>max&&(max=count):count=1,expected=index+substring.length,index=value.indexOf(substring,expected);return max}}","~:source","shadow$provide[\"module$node_modules$longest_streak$index\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.longestStreak = longestStreak;\n\n/**\n * Get the count of the longest repeating streak of `substring` in `value`.\n *\n * @param {string} value\n *   Content to search in.\n * @param {string} substring\n *   Substring to look for, typically one character.\n * @returns {number}\n *   Count of most frequent adjacent `substring`s in `value`.\n */\nfunction longestStreak(value, substring) {\n  const source = String(value);\n  let index = source.indexOf(substring);\n  let expected = index;\n  let count = 0;\n  let max = 0;\n\n  if (typeof substring !== 'string') {\n    throw new TypeError('Expected substring');\n  }\n\n  while (index !== -1) {\n    if (index === expected) {\n      if (++count > max) {\n        max = count;\n      }\n    } else {\n      count = 1;\n    }\n\n    expected = index + substring.length;\n    index = source.indexOf(substring, expected);\n  }\n\n  return max;\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["__esModule","value","longestStreak"]],"~:compiled-at",1676667584526,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$longest_streak$index.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAA,wCAAA,CAA6D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGrGC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,aAAR,CAYAA,QAAsB,CAACD,KAAD,CAAQE,SAAR,CAAmB,CACjCC,KAAAA,CAASC,MAAA,CAAOJ,KAAP,CACf,KAAIK,MAAQF,KAAOG,CAAAA,OAAP,CAAeJ,SAAf,CAAZ,CACIK,SAAWF,KADf,CAEIG,MAAQ,CAFZ,CAGIC,IAAM,CAEV,IAAyB,QAAzB,GAAI,MAAOP,UAAX,CACE,KAAM,KAAIQ,SAAJ,CAAc,oBAAd,CAAN,CAGF,IAAA,CAAiB,CAAC,CAAlB,GAAOL,KAAP,CAAA,CACMA,KAAJ,GAAcE,QAAd,CACM,EAAEC,KADR,CACgBC,GADhB,GAEIA,GAFJ,CAEUD,KAFV,EAKEA,KALF,CAKU,CAIV,CADAD,QACA,CADWF,KACX,CADmBH,SAAUS,CAAAA,MAC7B,CAAAN,KAAA,CAAQF,KAAOG,CAAAA,OAAP,CAAeJ,SAAf,CAA0BK,QAA1B,CAGV,OAAOE,IAxBgC,CAlB4D;\",\n\"sources\":[\"node_modules/longest-streak/index.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$longest_streak$index\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.longestStreak = longestStreak;\\n\\n/**\\n * Get the count of the longest repeating streak of `substring` in `value`.\\n *\\n * @param {string} value\\n *   Content to search in.\\n * @param {string} substring\\n *   Substring to look for, typically one character.\\n * @returns {number}\\n *   Count of most frequent adjacent `substring`s in `value`.\\n */\\nfunction longestStreak(value, substring) {\\n  const source = String(value);\\n  let index = source.indexOf(substring);\\n  let expected = index;\\n  let count = 0;\\n  let max = 0;\\n\\n  if (typeof substring !== 'string') {\\n    throw new TypeError('Expected substring');\\n  }\\n\\n  while (index !== -1) {\\n    if (index === expected) {\\n      if (++count > max) {\\n        max = count;\\n      }\\n    } else {\\n      count = 1;\\n    }\\n\\n    expected = index + substring.length;\\n    index = source.indexOf(substring, expected);\\n  }\\n\\n  return max;\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"longestStreak\",\"substring\",\"source\",\"String\",\"index\",\"indexOf\",\"expected\",\"count\",\"max\",\"TypeError\",\"length\"]\n}\n"]