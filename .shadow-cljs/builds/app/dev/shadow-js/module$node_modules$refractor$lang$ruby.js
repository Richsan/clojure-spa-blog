["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/ruby.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$ruby=function(global,require,module,exports){function ruby(Prism){Prism.register(_clike.default);Prism.languages.ruby=Prism.languages.extend(\"clike\",{comment:{pattern:/#.*|^=begin\\s[\\s\\S]*?^=end/m,greedy:!0},\"class-name\":{pattern:/(\\b(?:class|module)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+|\\b[A-Z_]\\w*(?=\\s*\\.\\s*new\\b)/,lookbehind:!0,inside:{punctuation:/[.\\\\]/}},keyword:/\\b(?:BEGIN|END|alias|and|begin|break|case|class|def|define_method|defined|do|each|else|elsif|end|ensure|extend|for|if|in|include|module|new|next|nil|not|or|prepend|private|protected|public|raise|redo|require|rescue|retry|return|self|super|then|throw|undef|unless|until|when|while|yield)\\b/,\noperator:/\\.{2,3}|&\\.|===|<?=>|[!=]?~|(?:&&|\\|\\||<<|>>|\\*\\*|[+\\-*/%<>!^&|=])=?|[?:]/,punctuation:/[(){}[\\].,;]/});Prism.languages.insertBefore(\"ruby\",\"operator\",{\"double-colon\":{pattern:/::/,alias:\"punctuation\"}});var interpolation={pattern:/((?:^|[^\\\\])(?:\\\\{2})*)#\\{(?:[^{}]|\\{[^{}]*\\})*\\}/,lookbehind:!0,inside:{content:{pattern:/^(#\\{)[\\s\\S]+(?=\\}$)/,lookbehind:!0,inside:Prism.languages.ruby},delimiter:{pattern:/^#\\{|\\}$/,alias:\"punctuation\"}}};delete Prism.languages.ruby.function;var percentExpression=\n\"(?:\"+[/([^a-zA-Z0-9\\s{(\\[<=])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/.source,/\\((?:[^()\\\\]|\\\\[\\s\\S]|\\((?:[^()\\\\]|\\\\[\\s\\S])*\\))*\\)/.source,/\\{(?:[^{}\\\\]|\\\\[\\s\\S]|\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\})*\\}/.source,/\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S]|\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\])*\\]/.source,/<(?:[^<>\\\\]|\\\\[\\s\\S]|<(?:[^<>\\\\]|\\\\[\\s\\S])*>)*>/.source].join(\"|\")+\")\",symbolName=/(?:\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|(?:\\b[a-zA-Z_]\\w*|[^\\s\\0-\\x7F]+)[?!]?|\\$.)/.source;Prism.languages.insertBefore(\"ruby\",\"keyword\",{\"regex-literal\":[{pattern:RegExp(/%r/.source+\npercentExpression+/[egimnosux]{0,6}/.source),greedy:!0,inside:{interpolation,regex:/[\\s\\S]+/}},{pattern:/(^|[^/])\\/(?!\\/)(?:\\[[^\\r\\n\\]]+\\]|\\\\.|[^[/\\\\\\r\\n])+\\/[egimnosux]{0,6}(?=\\s*(?:$|[\\r\\n,.;})#]))/,lookbehind:!0,greedy:!0,inside:{interpolation,regex:/[\\s\\S]+/}}],variable:/[@$]+[a-zA-Z_]\\w*(?:[?!]|\\b)/,symbol:[{pattern:RegExp(/(^|[^:]):/.source+symbolName),lookbehind:!0,greedy:!0},{pattern:RegExp(/([\\r\\n{(,][ \\t]*)/.source+symbolName+/(?=:(?!:))/.source),lookbehind:!0,greedy:!0}],\"method-definition\":{pattern:/(\\bdef\\s+)\\w+(?:\\s*\\.\\s*\\w+)?/,\nlookbehind:!0,inside:{function:/\\b\\w+$/,keyword:/^self\\b/,\"class-name\":/^\\w+/,punctuation:/\\./}}});Prism.languages.insertBefore(\"ruby\",\"string\",{\"string-literal\":[{pattern:RegExp(/%[qQiIwWs]?/.source+percentExpression),greedy:!0,inside:{interpolation,string:/[\\s\\S]+/}},{pattern:/(\"|')(?:#\\{[^}]+\\}|#(?!\\{)|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\#\\r\\n])*\\1/,greedy:!0,inside:{interpolation,string:/[\\s\\S]+/}},{pattern:/<<[-~]?([a-z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?[\\t ]*\\1/i,alias:\"heredoc-string\",greedy:!0,inside:{delimiter:{pattern:/^<<[-~]?[a-z_]\\w*|\\b[a-z_]\\w*$/i,\ninside:{symbol:/\\b\\w+/,punctuation:/^<<[-~]?/}},interpolation,string:/[\\s\\S]+/}},{pattern:/<<[-~]?'([a-z_]\\w*)'[\\r\\n](?:.*[\\r\\n])*?[\\t ]*\\1/i,alias:\"heredoc-string\",greedy:!0,inside:{delimiter:{pattern:/^<<[-~]?'[a-z_]\\w*'|\\b[a-z_]\\w*$/i,inside:{symbol:/\\b\\w+/,punctuation:/^<<[-~]?'|'$/}},string:/[\\s\\S]+/}}],\"command-literal\":[{pattern:RegExp(/%x/.source+percentExpression),greedy:!0,inside:{interpolation,command:{pattern:/[\\s\\S]+/,alias:\"string\"}}},{pattern:/`(?:#\\{[^}]+\\}|#(?!\\{)|\\\\(?:\\r\\n|[\\s\\S])|[^\\\\`#\\r\\n])*`/,\ngreedy:!0,inside:{interpolation,command:{pattern:/[\\s\\S]+/,alias:\"string\"}}}]});delete Prism.languages.ruby.string;Prism.languages.insertBefore(\"ruby\",\"number\",{builtin:/\\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Fixnum|Float|Hash|IO|Integer|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|Stat|String|Struct|Symbol|TMS|Thread|ThreadGroup|Time|TrueClass)\\b/,constant:/\\b[A-Z][A-Z0-9_]*(?:[?!]|\\b)/});Prism.languages.rb=Prism.languages.ruby}Object.defineProperty(exports,\n\"__esModule\",{value:!0});exports.default=ruby;var _clike=function(obj){return obj&&obj.__esModule?obj:{default:obj}}(require(\"module$node_modules$refractor$lang$clike\"));ruby.displayName=\"ruby\";ruby.aliases=[\"rb\"]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$ruby\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = ruby;\n\nvar _clike = _interopRequireDefault(require(\"./clike.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// @ts-nocheck\nruby.displayName = 'ruby';\nruby.aliases = ['rb'];\n/** @type {import('../core.js').Syntax} */\n\nfunction ruby(Prism) {\n  Prism.register(_clike.default)\n  /**\n   * Original by Samuel Flores\n   *\n   * Adds the following new token classes:\n   *     constant, builtin, variable, symbol, regex\n   */\n  ;\n\n  (function (Prism) {\n    Prism.languages.ruby = Prism.languages.extend('clike', {\n      comment: {\n        pattern: /#.*|^=begin\\s[\\s\\S]*?^=end/m,\n        greedy: true\n      },\n      'class-name': {\n        pattern: /(\\b(?:class|module)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+|\\b[A-Z_]\\w*(?=\\s*\\.\\s*new\\b)/,\n        lookbehind: true,\n        inside: {\n          punctuation: /[.\\\\]/\n        }\n      },\n      keyword: /\\b(?:BEGIN|END|alias|and|begin|break|case|class|def|define_method|defined|do|each|else|elsif|end|ensure|extend|for|if|in|include|module|new|next|nil|not|or|prepend|private|protected|public|raise|redo|require|rescue|retry|return|self|super|then|throw|undef|unless|until|when|while|yield)\\b/,\n      operator: /\\.{2,3}|&\\.|===|<?=>|[!=]?~|(?:&&|\\|\\||<<|>>|\\*\\*|[+\\-*/%<>!^&|=])=?|[?:]/,\n      punctuation: /[(){}[\\].,;]/\n    });\n    Prism.languages.insertBefore('ruby', 'operator', {\n      'double-colon': {\n        pattern: /::/,\n        alias: 'punctuation'\n      }\n    });\n    var interpolation = {\n      pattern: /((?:^|[^\\\\])(?:\\\\{2})*)#\\{(?:[^{}]|\\{[^{}]*\\})*\\}/,\n      lookbehind: true,\n      inside: {\n        content: {\n          pattern: /^(#\\{)[\\s\\S]+(?=\\}$)/,\n          lookbehind: true,\n          inside: Prism.languages.ruby\n        },\n        delimiter: {\n          pattern: /^#\\{|\\}$/,\n          alias: 'punctuation'\n        }\n      }\n    };\n    delete Prism.languages.ruby.function;\n    var percentExpression = '(?:' + [/([^a-zA-Z0-9\\s{(\\[<=])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/.source, /\\((?:[^()\\\\]|\\\\[\\s\\S]|\\((?:[^()\\\\]|\\\\[\\s\\S])*\\))*\\)/.source, /\\{(?:[^{}\\\\]|\\\\[\\s\\S]|\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\})*\\}/.source, /\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S]|\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\])*\\]/.source, /<(?:[^<>\\\\]|\\\\[\\s\\S]|<(?:[^<>\\\\]|\\\\[\\s\\S])*>)*>/.source].join('|') + ')';\n    var symbolName = /(?:\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|(?:\\b[a-zA-Z_]\\w*|[^\\s\\0-\\x7F]+)[?!]?|\\$.)/.source;\n    Prism.languages.insertBefore('ruby', 'keyword', {\n      'regex-literal': [{\n        pattern: RegExp(/%r/.source + percentExpression + /[egimnosux]{0,6}/.source),\n        greedy: true,\n        inside: {\n          interpolation: interpolation,\n          regex: /[\\s\\S]+/\n        }\n      }, {\n        pattern: /(^|[^/])\\/(?!\\/)(?:\\[[^\\r\\n\\]]+\\]|\\\\.|[^[/\\\\\\r\\n])+\\/[egimnosux]{0,6}(?=\\s*(?:$|[\\r\\n,.;})#]))/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          interpolation: interpolation,\n          regex: /[\\s\\S]+/\n        }\n      }],\n      variable: /[@$]+[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n      symbol: [{\n        pattern: RegExp(/(^|[^:]):/.source + symbolName),\n        lookbehind: true,\n        greedy: true\n      }, {\n        pattern: RegExp(/([\\r\\n{(,][ \\t]*)/.source + symbolName + /(?=:(?!:))/.source),\n        lookbehind: true,\n        greedy: true\n      }],\n      'method-definition': {\n        pattern: /(\\bdef\\s+)\\w+(?:\\s*\\.\\s*\\w+)?/,\n        lookbehind: true,\n        inside: {\n          function: /\\b\\w+$/,\n          keyword: /^self\\b/,\n          'class-name': /^\\w+/,\n          punctuation: /\\./\n        }\n      }\n    });\n    Prism.languages.insertBefore('ruby', 'string', {\n      'string-literal': [{\n        pattern: RegExp(/%[qQiIwWs]?/.source + percentExpression),\n        greedy: true,\n        inside: {\n          interpolation: interpolation,\n          string: /[\\s\\S]+/\n        }\n      }, {\n        pattern: /(\"|')(?:#\\{[^}]+\\}|#(?!\\{)|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\#\\r\\n])*\\1/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation,\n          string: /[\\s\\S]+/\n        }\n      }, {\n        pattern: /<<[-~]?([a-z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?[\\t ]*\\1/i,\n        alias: 'heredoc-string',\n        greedy: true,\n        inside: {\n          delimiter: {\n            pattern: /^<<[-~]?[a-z_]\\w*|\\b[a-z_]\\w*$/i,\n            inside: {\n              symbol: /\\b\\w+/,\n              punctuation: /^<<[-~]?/\n            }\n          },\n          interpolation: interpolation,\n          string: /[\\s\\S]+/\n        }\n      }, {\n        pattern: /<<[-~]?'([a-z_]\\w*)'[\\r\\n](?:.*[\\r\\n])*?[\\t ]*\\1/i,\n        alias: 'heredoc-string',\n        greedy: true,\n        inside: {\n          delimiter: {\n            pattern: /^<<[-~]?'[a-z_]\\w*'|\\b[a-z_]\\w*$/i,\n            inside: {\n              symbol: /\\b\\w+/,\n              punctuation: /^<<[-~]?'|'$/\n            }\n          },\n          string: /[\\s\\S]+/\n        }\n      }],\n      'command-literal': [{\n        pattern: RegExp(/%x/.source + percentExpression),\n        greedy: true,\n        inside: {\n          interpolation: interpolation,\n          command: {\n            pattern: /[\\s\\S]+/,\n            alias: 'string'\n          }\n        }\n      }, {\n        pattern: /`(?:#\\{[^}]+\\}|#(?!\\{)|\\\\(?:\\r\\n|[\\s\\S])|[^\\\\`#\\r\\n])*`/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation,\n          command: {\n            pattern: /[\\s\\S]+/,\n            alias: 'string'\n          }\n        }\n      }]\n    });\n    delete Prism.languages.ruby.string;\n    Prism.languages.insertBefore('ruby', 'number', {\n      builtin: /\\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Fixnum|Float|Hash|IO|Integer|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|Stat|String|Struct|Symbol|TMS|Thread|ThreadGroup|Time|TrueClass)\\b/,\n      constant: /\\b[A-Z][A-Z0-9_]*(?:[?!]|\\b)/\n    });\n    Prism.languages.rb = Prism.languages.ruby;\n  })(Prism);\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$refractor$lang$clike"]],"~:properties",["^5",["punctuation","string","aliases","command","constant","operator","displayName","__esModule","regex","lookbehind","value","delimiter","variable","keyword","content","greedy","symbol","function","ruby","pattern","inside","alias","comment","builtin","interpolation","default","rb"]],"~:compiled-at",1676841365375,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$ruby.js\",\n\"lineCount\":8,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/refractor/lang/ruby.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$ruby\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = ruby;\\n\\nvar _clike = _interopRequireDefault(require(\\\"./clike.js\\\"));\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\n// @ts-nocheck\\nruby.displayName = 'ruby';\\nruby.aliases = ['rb'];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction ruby(Prism) {\\n  Prism.register(_clike.default)\\n  /**\\n   * Original by Samuel Flores\\n   *\\n   * Adds the following new token classes:\\n   *     constant, builtin, variable, symbol, regex\\n   */\\n  ;\\n\\n  (function (Prism) {\\n    Prism.languages.ruby = Prism.languages.extend('clike', {\\n      comment: {\\n        pattern: /#.*|^=begin\\\\s[\\\\s\\\\S]*?^=end/m,\\n        greedy: true\\n      },\\n      'class-name': {\\n        pattern: /(\\\\b(?:class|module)\\\\s+|\\\\bcatch\\\\s+\\\\()[\\\\w.\\\\\\\\]+|\\\\b[A-Z_]\\\\w*(?=\\\\s*\\\\.\\\\s*new\\\\b)/,\\n        lookbehind: true,\\n        inside: {\\n          punctuation: /[.\\\\\\\\]/\\n        }\\n      },\\n      keyword: /\\\\b(?:BEGIN|END|alias|and|begin|break|case|class|def|define_method|defined|do|each|else|elsif|end|ensure|extend|for|if|in|include|module|new|next|nil|not|or|prepend|private|protected|public|raise|redo|require|rescue|retry|return|self|super|then|throw|undef|unless|until|when|while|yield)\\\\b/,\\n      operator: /\\\\.{2,3}|&\\\\.|===|<?=>|[!=]?~|(?:&&|\\\\|\\\\||<<|>>|\\\\*\\\\*|[+\\\\-*/%<>!^&|=])=?|[?:]/,\\n      punctuation: /[(){}[\\\\].,;]/\\n    });\\n    Prism.languages.insertBefore('ruby', 'operator', {\\n      'double-colon': {\\n        pattern: /::/,\\n        alias: 'punctuation'\\n      }\\n    });\\n    var interpolation = {\\n      pattern: /((?:^|[^\\\\\\\\])(?:\\\\\\\\{2})*)#\\\\{(?:[^{}]|\\\\{[^{}]*\\\\})*\\\\}/,\\n      lookbehind: true,\\n      inside: {\\n        content: {\\n          pattern: /^(#\\\\{)[\\\\s\\\\S]+(?=\\\\}$)/,\\n          lookbehind: true,\\n          inside: Prism.languages.ruby\\n        },\\n        delimiter: {\\n          pattern: /^#\\\\{|\\\\}$/,\\n          alias: 'punctuation'\\n        }\\n      }\\n    };\\n    delete Prism.languages.ruby.function;\\n    var percentExpression = '(?:' + [/([^a-zA-Z0-9\\\\s{(\\\\[<=])(?:(?!\\\\1)[^\\\\\\\\]|\\\\\\\\[\\\\s\\\\S])*\\\\1/.source, /\\\\((?:[^()\\\\\\\\]|\\\\\\\\[\\\\s\\\\S]|\\\\((?:[^()\\\\\\\\]|\\\\\\\\[\\\\s\\\\S])*\\\\))*\\\\)/.source, /\\\\{(?:[^{}\\\\\\\\]|\\\\\\\\[\\\\s\\\\S]|\\\\{(?:[^{}\\\\\\\\]|\\\\\\\\[\\\\s\\\\S])*\\\\})*\\\\}/.source, /\\\\[(?:[^\\\\[\\\\]\\\\\\\\]|\\\\\\\\[\\\\s\\\\S]|\\\\[(?:[^\\\\[\\\\]\\\\\\\\]|\\\\\\\\[\\\\s\\\\S])*\\\\])*\\\\]/.source, /<(?:[^<>\\\\\\\\]|\\\\\\\\[\\\\s\\\\S]|<(?:[^<>\\\\\\\\]|\\\\\\\\[\\\\s\\\\S])*>)*>/.source].join('|') + ')';\\n    var symbolName = /(?:\\\"(?:\\\\\\\\.|[^\\\"\\\\\\\\\\\\r\\\\n])*\\\"|(?:\\\\b[a-zA-Z_]\\\\w*|[^\\\\s\\\\0-\\\\x7F]+)[?!]?|\\\\$.)/.source;\\n    Prism.languages.insertBefore('ruby', 'keyword', {\\n      'regex-literal': [{\\n        pattern: RegExp(/%r/.source + percentExpression + /[egimnosux]{0,6}/.source),\\n        greedy: true,\\n        inside: {\\n          interpolation: interpolation,\\n          regex: /[\\\\s\\\\S]+/\\n        }\\n      }, {\\n        pattern: /(^|[^/])\\\\/(?!\\\\/)(?:\\\\[[^\\\\r\\\\n\\\\]]+\\\\]|\\\\\\\\.|[^[/\\\\\\\\\\\\r\\\\n])+\\\\/[egimnosux]{0,6}(?=\\\\s*(?:$|[\\\\r\\\\n,.;})#]))/,\\n        lookbehind: true,\\n        greedy: true,\\n        inside: {\\n          interpolation: interpolation,\\n          regex: /[\\\\s\\\\S]+/\\n        }\\n      }],\\n      variable: /[@$]+[a-zA-Z_]\\\\w*(?:[?!]|\\\\b)/,\\n      symbol: [{\\n        pattern: RegExp(/(^|[^:]):/.source + symbolName),\\n        lookbehind: true,\\n        greedy: true\\n      }, {\\n        pattern: RegExp(/([\\\\r\\\\n{(,][ \\\\t]*)/.source + symbolName + /(?=:(?!:))/.source),\\n        lookbehind: true,\\n        greedy: true\\n      }],\\n      'method-definition': {\\n        pattern: /(\\\\bdef\\\\s+)\\\\w+(?:\\\\s*\\\\.\\\\s*\\\\w+)?/,\\n        lookbehind: true,\\n        inside: {\\n          function: /\\\\b\\\\w+$/,\\n          keyword: /^self\\\\b/,\\n          'class-name': /^\\\\w+/,\\n          punctuation: /\\\\./\\n        }\\n      }\\n    });\\n    Prism.languages.insertBefore('ruby', 'string', {\\n      'string-literal': [{\\n        pattern: RegExp(/%[qQiIwWs]?/.source + percentExpression),\\n        greedy: true,\\n        inside: {\\n          interpolation: interpolation,\\n          string: /[\\\\s\\\\S]+/\\n        }\\n      }, {\\n        pattern: /(\\\"|')(?:#\\\\{[^}]+\\\\}|#(?!\\\\{)|\\\\\\\\(?:\\\\r\\\\n|[\\\\s\\\\S])|(?!\\\\1)[^\\\\\\\\#\\\\r\\\\n])*\\\\1/,\\n        greedy: true,\\n        inside: {\\n          interpolation: interpolation,\\n          string: /[\\\\s\\\\S]+/\\n        }\\n      }, {\\n        pattern: /<<[-~]?([a-z_]\\\\w*)[\\\\r\\\\n](?:.*[\\\\r\\\\n])*?[\\\\t ]*\\\\1/i,\\n        alias: 'heredoc-string',\\n        greedy: true,\\n        inside: {\\n          delimiter: {\\n            pattern: /^<<[-~]?[a-z_]\\\\w*|\\\\b[a-z_]\\\\w*$/i,\\n            inside: {\\n              symbol: /\\\\b\\\\w+/,\\n              punctuation: /^<<[-~]?/\\n            }\\n          },\\n          interpolation: interpolation,\\n          string: /[\\\\s\\\\S]+/\\n        }\\n      }, {\\n        pattern: /<<[-~]?'([a-z_]\\\\w*)'[\\\\r\\\\n](?:.*[\\\\r\\\\n])*?[\\\\t ]*\\\\1/i,\\n        alias: 'heredoc-string',\\n        greedy: true,\\n        inside: {\\n          delimiter: {\\n            pattern: /^<<[-~]?'[a-z_]\\\\w*'|\\\\b[a-z_]\\\\w*$/i,\\n            inside: {\\n              symbol: /\\\\b\\\\w+/,\\n              punctuation: /^<<[-~]?'|'$/\\n            }\\n          },\\n          string: /[\\\\s\\\\S]+/\\n        }\\n      }],\\n      'command-literal': [{\\n        pattern: RegExp(/%x/.source + percentExpression),\\n        greedy: true,\\n        inside: {\\n          interpolation: interpolation,\\n          command: {\\n            pattern: /[\\\\s\\\\S]+/,\\n            alias: 'string'\\n          }\\n        }\\n      }, {\\n        pattern: /`(?:#\\\\{[^}]+\\\\}|#(?!\\\\{)|\\\\\\\\(?:\\\\r\\\\n|[\\\\s\\\\S])|[^\\\\\\\\`#\\\\r\\\\n])*`/,\\n        greedy: true,\\n        inside: {\\n          interpolation: interpolation,\\n          command: {\\n            pattern: /[\\\\s\\\\S]+/,\\n            alias: 'string'\\n          }\\n        }\\n      }]\\n    });\\n    delete Prism.languages.ruby.string;\\n    Prism.languages.insertBefore('ruby', 'number', {\\n      builtin: /\\\\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Fixnum|Float|Hash|IO|Integer|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|Stat|String|Struct|Symbol|TMS|Thread|ThreadGroup|Time|TrueClass)\\\\b/,\\n      constant: /\\\\b[A-Z][A-Z0-9_]*(?:[?!]|\\\\b)/\\n    });\\n    Prism.languages.rb = Prism.languages.ruby;\\n  })(Prism);\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"ruby\",\"Prism\",\"register\",\"_clike\",\"default\",\"languages\",\"extend\",\"comment\",\"pattern\",\"greedy\",\"lookbehind\",\"inside\",\"punctuation\",\"keyword\",\"operator\",\"insertBefore\",\"alias\",\"interpolation\",\"content\",\"delimiter\",\"function\",\"percentExpression\",\"source\",\"join\",\"symbolName\",\"RegExp\",\"regex\",\"variable\",\"symbol\",\"string\",\"command\",\"builtin\",\"constant\",\"rb\",\"Object\",\"defineProperty\",\"value\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"displayName\",\"aliases\"]\n}\n"]