["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/agda.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$agda=function(global,require,module,exports){function agda(Prism){Prism.languages.agda={comment:/\\{-[\\s\\S]*?(?:-\\}|$)|--.*/,string:{pattern:/\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,greedy:!0},punctuation:/[(){}⦃⦄.;@]/,\"class-name\":{pattern:/((?:data|record) +)\\S+/,lookbehind:!0},function:{pattern:/(^[ \\t]*)(?!\\s)[^:\\r\\n]+(?=:)/m,lookbehind:!0},operator:{pattern:/(^\\s*|\\s)(?:[=|:∀→λ\\\\?_]|->)(?=\\s)/,lookbehind:!0},keyword:/\\b(?:Set|abstract|constructor|data|eta-equality|field|forall|hiding|import|in|inductive|infix|infixl|infixr|instance|let|macro|module|mutual|no-eta-equality|open|overlap|pattern|postulate|primitive|private|public|quote|quoteContext|quoteGoal|quoteTerm|record|renaming|rewrite|syntax|tactic|unquote|unquoteDecl|unquoteDef|using|variable|where|with)\\b/}}\nObject.defineProperty(exports,\"__esModule\",{value:!0});exports.default=agda;agda.displayName=\"agda\";agda.aliases=[]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$agda\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = agda;\n// @ts-nocheck\nagda.displayName = 'agda';\nagda.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nfunction agda(Prism) {\n  ;\n\n  (function (Prism) {\n    Prism.languages.agda = {\n      comment: /\\{-[\\s\\S]*?(?:-\\}|$)|--.*/,\n      string: {\n        pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n        greedy: true\n      },\n      punctuation: /[(){}⦃⦄.;@]/,\n      'class-name': {\n        pattern: /((?:data|record) +)\\S+/,\n        lookbehind: true\n      },\n      function: {\n        pattern: /(^[ \\t]*)(?!\\s)[^:\\r\\n]+(?=:)/m,\n        lookbehind: true\n      },\n      operator: {\n        pattern: /(^\\s*|\\s)(?:[=|:∀→λ\\\\?_]|->)(?=\\s)/,\n        lookbehind: true\n      },\n      keyword: /\\b(?:Set|abstract|constructor|data|eta-equality|field|forall|hiding|import|in|inductive|infix|infixl|infixr|instance|let|macro|module|mutual|no-eta-equality|open|overlap|pattern|postulate|primitive|private|public|quote|quoteContext|quoteGoal|quoteTerm|record|renaming|rewrite|syntax|tactic|unquote|unquoteDecl|unquoteDef|using|variable|where|with)\\b/\n    };\n  })(Prism);\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["agda","punctuation","string","aliases","operator","displayName","__esModule","lookbehind","value","keyword","greedy","function","pattern","comment","default"]],"~:compiled-at",1676841365386,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$agda.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,uCAAA,CAA4D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAYpGC,QAASA,KAAI,CAACC,KAAD,CAAQ,CAyBhBA,KArBKC,CAAAA,SAAUF,CAAAA,IAAhB,CAAuB,CACrBG,QAAS,2BADY,CAErBC,OAAQ,CACNC,QAAS,qCADH,CAENC,OAAQ,CAAA,CAFF,CAFa,CAMrBC,YAAa,aANQ,CAOrB,aAAc,CACZF,QAAS,wBADG,CAEZG,WAAY,CAAA,CAFA,CAPO,CAWrBC,SAAU,CACRJ,QAAS,gCADD,CAERG,WAAY,CAAA,CAFJ,CAXW,CAerBE,SAAU,CACRL,QAAS,oCADD,CAERG,WAAY,CAAA,CAFJ,CAfW,CAmBrBG,QAAS,+VAnBY,CAJN;AATrBC,MAAOC,CAAAA,cAAP,CAAsBd,OAAtB,CAA+B,YAA/B,CAA6C,CAC3Ce,MAAO,CAAA,CADoC,CAA7C,CAGAf,QAAQgB,CAAAA,OAAR,CAAkBf,IAElBA,KAAKgB,CAAAA,WAAL,CAAmB,MACnBhB,KAAKiB,CAAAA,OAAL,CAAe,EATqF;\",\n\"sources\":[\"node_modules/refractor/lang/agda.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$agda\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = agda;\\n// @ts-nocheck\\nagda.displayName = 'agda';\\nagda.aliases = [];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction agda(Prism) {\\n  ;\\n\\n  (function (Prism) {\\n    Prism.languages.agda = {\\n      comment: /\\\\{-[\\\\s\\\\S]*?(?:-\\\\}|$)|--.*/,\\n      string: {\\n        pattern: /\\\"(?:\\\\\\\\(?:\\\\r\\\\n|[\\\\s\\\\S])|[^\\\\\\\\\\\\r\\\\n\\\"])*\\\"/,\\n        greedy: true\\n      },\\n      punctuation: /[(){}\\u2983\\u2984.;@]/,\\n      'class-name': {\\n        pattern: /((?:data|record) +)\\\\S+/,\\n        lookbehind: true\\n      },\\n      function: {\\n        pattern: /(^[ \\\\t]*)(?!\\\\s)[^:\\\\r\\\\n]+(?=:)/m,\\n        lookbehind: true\\n      },\\n      operator: {\\n        pattern: /(^\\\\s*|\\\\s)(?:[=|:\\u2200\\u2192\\u03bb\\\\\\\\?_]|->)(?=\\\\s)/,\\n        lookbehind: true\\n      },\\n      keyword: /\\\\b(?:Set|abstract|constructor|data|eta-equality|field|forall|hiding|import|in|inductive|infix|infixl|infixr|instance|let|macro|module|mutual|no-eta-equality|open|overlap|pattern|postulate|primitive|private|public|quote|quoteContext|quoteGoal|quoteTerm|record|renaming|rewrite|syntax|tactic|unquote|unquoteDecl|unquoteDef|using|variable|where|with)\\\\b/\\n    };\\n  })(Prism);\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"agda\",\"Prism\",\"languages\",\"comment\",\"string\",\"pattern\",\"greedy\",\"punctuation\",\"lookbehind\",\"function\",\"operator\",\"keyword\",\"Object\",\"defineProperty\",\"value\",\"default\",\"displayName\",\"aliases\"]\n}\n"]