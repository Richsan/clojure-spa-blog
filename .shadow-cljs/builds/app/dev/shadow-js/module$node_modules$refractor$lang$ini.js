["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/ini.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$ini=function(global,require,module,exports){function ini(Prism){Prism.languages.ini={comment:{pattern:/(^[ \\f\\t\\v]*)[#;][^\\n\\r]*/m,lookbehind:!0},section:{pattern:/(^[ \\f\\t\\v]*)\\[[^\\n\\r\\]]*\\]?/m,lookbehind:!0,inside:{\"section-name\":{pattern:/(^\\[[ \\f\\t\\v]*)[^ \\f\\t\\v\\]]+(?:[ \\f\\t\\v]+[^ \\f\\t\\v\\]]+)*/,lookbehind:!0,alias:\"selector\"},punctuation:/\\[|\\]/}},key:{pattern:/(^[ \\f\\t\\v]*)[^ \\f\\n\\r\\t\\v=]+(?:[ \\f\\t\\v]+[^ \\f\\n\\r\\t\\v=]+)*(?=[ \\f\\t\\v]*=)/m,lookbehind:!0,\nalias:\"attr-name\"},value:{pattern:/(=[ \\f\\t\\v]*)[^ \\f\\n\\r\\t\\v]+(?:[ \\f\\t\\v]+[^ \\f\\n\\r\\t\\v]+)*/,lookbehind:!0,alias:\"attr-value\",inside:{\"inner-value\":{pattern:/^(\"|').+(?=\\1$)/,lookbehind:!0}}},punctuation:/=/}}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=ini;ini.displayName=\"ini\";ini.aliases=[]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$ini\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = ini;\n// @ts-nocheck\nini.displayName = 'ini';\nini.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nfunction ini(Prism) {\n  Prism.languages.ini = {\n    /**\n     * The component mimics the behavior of the Win32 API parser.\n     *\n     * @see {@link https://github.com/PrismJS/prism/issues/2775#issuecomment-787477723}\n     */\n    comment: {\n      pattern: /(^[ \\f\\t\\v]*)[#;][^\\n\\r]*/m,\n      lookbehind: true\n    },\n    section: {\n      pattern: /(^[ \\f\\t\\v]*)\\[[^\\n\\r\\]]*\\]?/m,\n      lookbehind: true,\n      inside: {\n        'section-name': {\n          pattern: /(^\\[[ \\f\\t\\v]*)[^ \\f\\t\\v\\]]+(?:[ \\f\\t\\v]+[^ \\f\\t\\v\\]]+)*/,\n          lookbehind: true,\n          alias: 'selector'\n        },\n        punctuation: /\\[|\\]/\n      }\n    },\n    key: {\n      pattern: /(^[ \\f\\t\\v]*)[^ \\f\\n\\r\\t\\v=]+(?:[ \\f\\t\\v]+[^ \\f\\n\\r\\t\\v=]+)*(?=[ \\f\\t\\v]*=)/m,\n      lookbehind: true,\n      alias: 'attr-name'\n    },\n    value: {\n      pattern: /(=[ \\f\\t\\v]*)[^ \\f\\n\\r\\t\\v]+(?:[ \\f\\t\\v]+[^ \\f\\n\\r\\t\\v]+)*/,\n      lookbehind: true,\n      alias: 'attr-value',\n      inside: {\n        'inner-value': {\n          pattern: /^(\"|').+(?=\\1$)/,\n          lookbehind: true\n        }\n      }\n    },\n    punctuation: /=/\n  };\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["punctuation","aliases","displayName","key","__esModule","lookbehind","section","value","pattern","ini","inside","alias","comment","default"]],"~:compiled-at",1676841365362,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$ini.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,sCAAA,CAA2D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAYnGC,QAASA,IAAG,CAACC,KAAD,CAAQ,CAClBA,KAAMC,CAAAA,SAAUF,CAAAA,GAAhB,CAAsB,CAMpBG,QAAS,CACPC,QAAS,4BADF,CAEPC,WAAY,CAAA,CAFL,CANW,CAUpBC,QAAS,CACPF,QAAS,+BADF,CAEPC,WAAY,CAAA,CAFL,CAGPE,OAAQ,CACN,eAAgB,CACdH,QAAS,0DADK,CAEdC,WAAY,CAAA,CAFE,CAGdG,MAAO,UAHO,CADV,CAMNC,YAAa,OANP,CAHD,CAVW,CAsBpBC,IAAK,CACHN,QAAS,8EADN,CAEHC,WAAY,CAAA,CAFT;AAGHG,MAAO,WAHJ,CAtBe,CA2BpBG,MAAO,CACLP,QAAS,4DADJ,CAELC,WAAY,CAAA,CAFP,CAGLG,MAAO,YAHF,CAILD,OAAQ,CACN,cAAe,CACbH,QAAS,iBADI,CAEbC,WAAY,CAAA,CAFC,CADT,CAJH,CA3Ba,CAsCpBI,YAAa,GAtCO,CADJ,CATpBG,MAAOC,CAAAA,cAAP,CAAsBd,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CY,MAAO,CAAA,CADoC,CAA7C,CAGAZ,QAAQe,CAAAA,OAAR,CAAkBd,GAElBA,IAAIe,CAAAA,WAAJ,CAAkB,KAClBf,IAAIgB,CAAAA,OAAJ,CAAc,EATqF;\",\n\"sources\":[\"node_modules/refractor/lang/ini.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$ini\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = ini;\\n// @ts-nocheck\\nini.displayName = 'ini';\\nini.aliases = [];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction ini(Prism) {\\n  Prism.languages.ini = {\\n    /**\\n     * The component mimics the behavior of the Win32 API parser.\\n     *\\n     * @see {@link https://github.com/PrismJS/prism/issues/2775#issuecomment-787477723}\\n     */\\n    comment: {\\n      pattern: /(^[ \\\\f\\\\t\\\\v]*)[#;][^\\\\n\\\\r]*/m,\\n      lookbehind: true\\n    },\\n    section: {\\n      pattern: /(^[ \\\\f\\\\t\\\\v]*)\\\\[[^\\\\n\\\\r\\\\]]*\\\\]?/m,\\n      lookbehind: true,\\n      inside: {\\n        'section-name': {\\n          pattern: /(^\\\\[[ \\\\f\\\\t\\\\v]*)[^ \\\\f\\\\t\\\\v\\\\]]+(?:[ \\\\f\\\\t\\\\v]+[^ \\\\f\\\\t\\\\v\\\\]]+)*/,\\n          lookbehind: true,\\n          alias: 'selector'\\n        },\\n        punctuation: /\\\\[|\\\\]/\\n      }\\n    },\\n    key: {\\n      pattern: /(^[ \\\\f\\\\t\\\\v]*)[^ \\\\f\\\\n\\\\r\\\\t\\\\v=]+(?:[ \\\\f\\\\t\\\\v]+[^ \\\\f\\\\n\\\\r\\\\t\\\\v=]+)*(?=[ \\\\f\\\\t\\\\v]*=)/m,\\n      lookbehind: true,\\n      alias: 'attr-name'\\n    },\\n    value: {\\n      pattern: /(=[ \\\\f\\\\t\\\\v]*)[^ \\\\f\\\\n\\\\r\\\\t\\\\v]+(?:[ \\\\f\\\\t\\\\v]+[^ \\\\f\\\\n\\\\r\\\\t\\\\v]+)*/,\\n      lookbehind: true,\\n      alias: 'attr-value',\\n      inside: {\\n        'inner-value': {\\n          pattern: /^(\\\"|').+(?=\\\\1$)/,\\n          lookbehind: true\\n        }\\n      }\\n    },\\n    punctuation: /=/\\n  };\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"ini\",\"Prism\",\"languages\",\"comment\",\"pattern\",\"lookbehind\",\"section\",\"inside\",\"alias\",\"punctuation\",\"key\",\"value\",\"Object\",\"defineProperty\",\"default\",\"displayName\",\"aliases\"]\n}\n"]