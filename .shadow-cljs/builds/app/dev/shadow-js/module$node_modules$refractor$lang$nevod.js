["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/nevod.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$nevod=function(global,require,module,exports){function nevod(Prism){Prism.languages.nevod={comment:/\\/\\/.*|(?:\\/\\*[\\s\\S]*?(?:\\*\\/|$))/,string:{pattern:/(?:\"(?:\"\"|[^\"])*\"(?!\")|'(?:''|[^'])*'(?!'))!?\\*?/,greedy:!0,inside:{\"string-attrs\":/!$|!\\*$|\\*$/}},namespace:{pattern:/(@namespace\\s+)[a-zA-Z0-9\\-.]+(?=\\s*\\{)/,lookbehind:!0},pattern:{pattern:/(@pattern\\s+)?#?[a-zA-Z0-9\\-.]+(?:\\s*\\(\\s*(?:~\\s*)?[a-zA-Z0-9\\-.]+\\s*(?:,\\s*(?:~\\s*)?[a-zA-Z0-9\\-.]*)*\\))?(?=\\s*=)/,\nlookbehind:!0,inside:{\"pattern-name\":{pattern:/^#?[a-zA-Z0-9\\-.]+/,alias:\"class-name\"},fields:{pattern:/\\(.*\\)/,inside:{\"field-name\":{pattern:/[a-zA-Z0-9\\-.]+/,alias:\"variable\"},punctuation:/[,()]/,operator:{pattern:/~/,alias:\"field-hidden-mark\"}}}}},search:{pattern:/(@search\\s+|#)[a-zA-Z0-9\\-.]+(?:\\.\\*)?(?=\\s*;)/,alias:\"function\",lookbehind:!0},keyword:/@(?:having|inside|namespace|outside|pattern|require|search|where)\\b/,\"standard-pattern\":{pattern:/\\b(?:Alpha|AlphaNum|Any|Blank|End|LineBreak|Num|NumAlpha|Punct|Space|Start|Symbol|Word|WordBreak)\\b(?:\\([a-zA-Z0-9\\-.,\\s+]*\\))?/,\ninside:{\"standard-pattern-name\":{pattern:/^[a-zA-Z0-9\\-.]+/,alias:\"builtin\"},quantifier:{pattern:/\\b\\d+(?:\\s*\\+|\\s*-\\s*\\d+)?(?!\\w)/,alias:\"number\"},\"standard-pattern-attr\":{pattern:/[a-zA-Z0-9\\-.]+/,alias:\"builtin\"},punctuation:/[,()]/}},quantifier:{pattern:/\\b\\d+(?:\\s*\\+|\\s*-\\s*\\d+)?(?!\\w)/,alias:\"number\"},operator:[{pattern:/=/,alias:\"pattern-def\"},{pattern:/&/,alias:\"conjunction\"},{pattern:/~/,alias:\"exception\"},{pattern:/\\?/,alias:\"optionality\"},{pattern:/[[\\]]/,alias:\"repetition\"},{pattern:/[{}]/,\nalias:\"variation\"},{pattern:/[+_]/,alias:\"sequence\"},{pattern:/\\.{2,3}/,alias:\"span\"}],\"field-capture\":[{pattern:/([a-zA-Z0-9\\-.]+\\s*\\()\\s*[a-zA-Z0-9\\-.]+\\s*:\\s*[a-zA-Z0-9\\-.]+(?:\\s*,\\s*[a-zA-Z0-9\\-.]+\\s*:\\s*[a-zA-Z0-9\\-.]+)*(?=\\s*\\))/,lookbehind:!0,inside:{\"field-name\":{pattern:/[a-zA-Z0-9\\-.]+/,alias:\"variable\"},colon:/:/}},{pattern:/[a-zA-Z0-9\\-.]+\\s*:/,inside:{\"field-name\":{pattern:/[a-zA-Z0-9\\-.]+/,alias:\"variable\"},colon:/:/}}],punctuation:/[:;,()]/,name:/[a-zA-Z0-9\\-.]+/}}Object.defineProperty(exports,\n\"__esModule\",{value:!0});exports.default=nevod;nevod.displayName=\"nevod\";nevod.aliases=[]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$nevod\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = nevod;\n// @ts-nocheck\nnevod.displayName = 'nevod';\nnevod.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nfunction nevod(Prism) {\n  Prism.languages.nevod = {\n    comment: /\\/\\/.*|(?:\\/\\*[\\s\\S]*?(?:\\*\\/|$))/,\n    string: {\n      pattern: /(?:\"(?:\"\"|[^\"])*\"(?!\")|'(?:''|[^'])*'(?!'))!?\\*?/,\n      greedy: true,\n      inside: {\n        'string-attrs': /!$|!\\*$|\\*$/\n      }\n    },\n    namespace: {\n      pattern: /(@namespace\\s+)[a-zA-Z0-9\\-.]+(?=\\s*\\{)/,\n      lookbehind: true\n    },\n    pattern: {\n      pattern: /(@pattern\\s+)?#?[a-zA-Z0-9\\-.]+(?:\\s*\\(\\s*(?:~\\s*)?[a-zA-Z0-9\\-.]+\\s*(?:,\\s*(?:~\\s*)?[a-zA-Z0-9\\-.]*)*\\))?(?=\\s*=)/,\n      lookbehind: true,\n      inside: {\n        'pattern-name': {\n          pattern: /^#?[a-zA-Z0-9\\-.]+/,\n          alias: 'class-name'\n        },\n        fields: {\n          pattern: /\\(.*\\)/,\n          inside: {\n            'field-name': {\n              pattern: /[a-zA-Z0-9\\-.]+/,\n              alias: 'variable'\n            },\n            punctuation: /[,()]/,\n            operator: {\n              pattern: /~/,\n              alias: 'field-hidden-mark'\n            }\n          }\n        }\n      }\n    },\n    search: {\n      pattern: /(@search\\s+|#)[a-zA-Z0-9\\-.]+(?:\\.\\*)?(?=\\s*;)/,\n      alias: 'function',\n      lookbehind: true\n    },\n    keyword: /@(?:having|inside|namespace|outside|pattern|require|search|where)\\b/,\n    'standard-pattern': {\n      pattern: /\\b(?:Alpha|AlphaNum|Any|Blank|End|LineBreak|Num|NumAlpha|Punct|Space|Start|Symbol|Word|WordBreak)\\b(?:\\([a-zA-Z0-9\\-.,\\s+]*\\))?/,\n      inside: {\n        'standard-pattern-name': {\n          pattern: /^[a-zA-Z0-9\\-.]+/,\n          alias: 'builtin'\n        },\n        quantifier: {\n          pattern: /\\b\\d+(?:\\s*\\+|\\s*-\\s*\\d+)?(?!\\w)/,\n          alias: 'number'\n        },\n        'standard-pattern-attr': {\n          pattern: /[a-zA-Z0-9\\-.]+/,\n          alias: 'builtin'\n        },\n        punctuation: /[,()]/\n      }\n    },\n    quantifier: {\n      pattern: /\\b\\d+(?:\\s*\\+|\\s*-\\s*\\d+)?(?!\\w)/,\n      alias: 'number'\n    },\n    operator: [{\n      pattern: /=/,\n      alias: 'pattern-def'\n    }, {\n      pattern: /&/,\n      alias: 'conjunction'\n    }, {\n      pattern: /~/,\n      alias: 'exception'\n    }, {\n      pattern: /\\?/,\n      alias: 'optionality'\n    }, {\n      pattern: /[[\\]]/,\n      alias: 'repetition'\n    }, {\n      pattern: /[{}]/,\n      alias: 'variation'\n    }, {\n      pattern: /[+_]/,\n      alias: 'sequence'\n    }, {\n      pattern: /\\.{2,3}/,\n      alias: 'span'\n    }],\n    'field-capture': [{\n      pattern: /([a-zA-Z0-9\\-.]+\\s*\\()\\s*[a-zA-Z0-9\\-.]+\\s*:\\s*[a-zA-Z0-9\\-.]+(?:\\s*,\\s*[a-zA-Z0-9\\-.]+\\s*:\\s*[a-zA-Z0-9\\-.]+)*(?=\\s*\\))/,\n      lookbehind: true,\n      inside: {\n        'field-name': {\n          pattern: /[a-zA-Z0-9\\-.]+/,\n          alias: 'variable'\n        },\n        colon: /:/\n      }\n    }, {\n      pattern: /[a-zA-Z0-9\\-.]+\\s*:/,\n      inside: {\n        'field-name': {\n          pattern: /[a-zA-Z0-9\\-.]+/,\n          alias: 'variable'\n        },\n        colon: /:/\n      }\n    }],\n    punctuation: /[:;,()]/,\n    name: /[a-zA-Z0-9\\-.]+/\n  };\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["quantifier","punctuation","string","aliases","nevod","operator","colon","displayName","__esModule","lookbehind","name","value","keyword","greedy","pattern","fields","inside","alias","namespace","comment","search","default"]],"~:compiled-at",1676841365440,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$nevod.js\",\n\"lineCount\":5,\n\"mappings\":\"AAAAA,cAAA,CAAA,wCAAA,CAA6D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAYrGC,QAASA,MAAK,CAACC,KAAD,CAAQ,CACpBA,KAAMC,CAAAA,SAAUF,CAAAA,KAAhB,CAAwB,CACtBG,QAAS,mCADa,CAEtBC,OAAQ,CACNC,QAAS,kDADH,CAENC,OAAQ,CAAA,CAFF,CAGNC,OAAQ,CACN,eAAgB,aADV,CAHF,CAFc,CAStBC,UAAW,CACTH,QAAS,yCADA,CAETI,WAAY,CAAA,CAFH,CATW,CAatBJ,QAAS,CACPA,QAAS,oHADF;AAEPI,WAAY,CAAA,CAFL,CAGPF,OAAQ,CACN,eAAgB,CACdF,QAAS,oBADK,CAEdK,MAAO,YAFO,CADV,CAKNC,OAAQ,CACNN,QAAS,QADH,CAENE,OAAQ,CACN,aAAc,CACZF,QAAS,iBADG,CAEZK,MAAO,UAFK,CADR,CAKNE,YAAa,OALP,CAMNC,SAAU,CACRR,QAAS,GADD,CAERK,MAAO,mBAFC,CANJ,CAFF,CALF,CAHD,CAba,CAqCtBI,OAAQ,CACNT,QAAS,gDADH,CAENK,MAAO,UAFD,CAGND,WAAY,CAAA,CAHN,CArCc,CA0CtBM,QAAS,qEA1Ca,CA2CtB,mBAAoB,CAClBV,QAAS,iIADS;AAElBE,OAAQ,CACN,wBAAyB,CACvBF,QAAS,kBADc,CAEvBK,MAAO,SAFgB,CADnB,CAKNM,WAAY,CACVX,QAAS,kCADC,CAEVK,MAAO,QAFG,CALN,CASN,wBAAyB,CACvBL,QAAS,iBADc,CAEvBK,MAAO,SAFgB,CATnB,CAaNE,YAAa,OAbP,CAFU,CA3CE,CA6DtBI,WAAY,CACVX,QAAS,kCADC,CAEVK,MAAO,QAFG,CA7DU,CAiEtBG,SAAU,CAAC,CACTR,QAAS,GADA,CAETK,MAAO,aAFE,CAAD,CAGP,CACDL,QAAS,GADR,CAEDK,MAAO,aAFN,CAHO,CAMP,CACDL,QAAS,GADR,CAEDK,MAAO,WAFN,CANO,CASP,CACDL,QAAS,IADR,CAEDK,MAAO,aAFN,CATO,CAYP,CACDL,QAAS,OADR,CAEDK,MAAO,YAFN,CAZO,CAeP,CACDL,QAAS,MADR;AAEDK,MAAO,WAFN,CAfO,CAkBP,CACDL,QAAS,MADR,CAEDK,MAAO,UAFN,CAlBO,CAqBP,CACDL,QAAS,SADR,CAEDK,MAAO,MAFN,CArBO,CAjEY,CA0FtB,gBAAiB,CAAC,CAChBL,QAAS,0HADO,CAEhBI,WAAY,CAAA,CAFI,CAGhBF,OAAQ,CACN,aAAc,CACZF,QAAS,iBADG,CAEZK,MAAO,UAFK,CADR,CAKNO,MAAO,GALD,CAHQ,CAAD,CAUd,CACDZ,QAAS,qBADR,CAEDE,OAAQ,CACN,aAAc,CACZF,QAAS,iBADG,CAEZK,MAAO,UAFK,CADR,CAKNO,MAAO,GALD,CAFP,CAVc,CA1FK,CA8GtBL,YAAa,SA9GS,CA+GtBM,KAAM,iBA/GgB,CADJ,CATtBC,MAAOC,CAAAA,cAAP,CAAsBrB,OAAtB;AAA+B,YAA/B,CAA6C,CAC3CsB,MAAO,CAAA,CADoC,CAA7C,CAGAtB,QAAQuB,CAAAA,OAAR,CAAkBtB,KAElBA,MAAMuB,CAAAA,WAAN,CAAoB,OACpBvB,MAAMwB,CAAAA,OAAN,CAAgB,EATqF;\",\n\"sources\":[\"node_modules/refractor/lang/nevod.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$nevod\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = nevod;\\n// @ts-nocheck\\nnevod.displayName = 'nevod';\\nnevod.aliases = [];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction nevod(Prism) {\\n  Prism.languages.nevod = {\\n    comment: /\\\\/\\\\/.*|(?:\\\\/\\\\*[\\\\s\\\\S]*?(?:\\\\*\\\\/|$))/,\\n    string: {\\n      pattern: /(?:\\\"(?:\\\"\\\"|[^\\\"])*\\\"(?!\\\")|'(?:''|[^'])*'(?!'))!?\\\\*?/,\\n      greedy: true,\\n      inside: {\\n        'string-attrs': /!$|!\\\\*$|\\\\*$/\\n      }\\n    },\\n    namespace: {\\n      pattern: /(@namespace\\\\s+)[a-zA-Z0-9\\\\-.]+(?=\\\\s*\\\\{)/,\\n      lookbehind: true\\n    },\\n    pattern: {\\n      pattern: /(@pattern\\\\s+)?#?[a-zA-Z0-9\\\\-.]+(?:\\\\s*\\\\(\\\\s*(?:~\\\\s*)?[a-zA-Z0-9\\\\-.]+\\\\s*(?:,\\\\s*(?:~\\\\s*)?[a-zA-Z0-9\\\\-.]*)*\\\\))?(?=\\\\s*=)/,\\n      lookbehind: true,\\n      inside: {\\n        'pattern-name': {\\n          pattern: /^#?[a-zA-Z0-9\\\\-.]+/,\\n          alias: 'class-name'\\n        },\\n        fields: {\\n          pattern: /\\\\(.*\\\\)/,\\n          inside: {\\n            'field-name': {\\n              pattern: /[a-zA-Z0-9\\\\-.]+/,\\n              alias: 'variable'\\n            },\\n            punctuation: /[,()]/,\\n            operator: {\\n              pattern: /~/,\\n              alias: 'field-hidden-mark'\\n            }\\n          }\\n        }\\n      }\\n    },\\n    search: {\\n      pattern: /(@search\\\\s+|#)[a-zA-Z0-9\\\\-.]+(?:\\\\.\\\\*)?(?=\\\\s*;)/,\\n      alias: 'function',\\n      lookbehind: true\\n    },\\n    keyword: /@(?:having|inside|namespace|outside|pattern|require|search|where)\\\\b/,\\n    'standard-pattern': {\\n      pattern: /\\\\b(?:Alpha|AlphaNum|Any|Blank|End|LineBreak|Num|NumAlpha|Punct|Space|Start|Symbol|Word|WordBreak)\\\\b(?:\\\\([a-zA-Z0-9\\\\-.,\\\\s+]*\\\\))?/,\\n      inside: {\\n        'standard-pattern-name': {\\n          pattern: /^[a-zA-Z0-9\\\\-.]+/,\\n          alias: 'builtin'\\n        },\\n        quantifier: {\\n          pattern: /\\\\b\\\\d+(?:\\\\s*\\\\+|\\\\s*-\\\\s*\\\\d+)?(?!\\\\w)/,\\n          alias: 'number'\\n        },\\n        'standard-pattern-attr': {\\n          pattern: /[a-zA-Z0-9\\\\-.]+/,\\n          alias: 'builtin'\\n        },\\n        punctuation: /[,()]/\\n      }\\n    },\\n    quantifier: {\\n      pattern: /\\\\b\\\\d+(?:\\\\s*\\\\+|\\\\s*-\\\\s*\\\\d+)?(?!\\\\w)/,\\n      alias: 'number'\\n    },\\n    operator: [{\\n      pattern: /=/,\\n      alias: 'pattern-def'\\n    }, {\\n      pattern: /&/,\\n      alias: 'conjunction'\\n    }, {\\n      pattern: /~/,\\n      alias: 'exception'\\n    }, {\\n      pattern: /\\\\?/,\\n      alias: 'optionality'\\n    }, {\\n      pattern: /[[\\\\]]/,\\n      alias: 'repetition'\\n    }, {\\n      pattern: /[{}]/,\\n      alias: 'variation'\\n    }, {\\n      pattern: /[+_]/,\\n      alias: 'sequence'\\n    }, {\\n      pattern: /\\\\.{2,3}/,\\n      alias: 'span'\\n    }],\\n    'field-capture': [{\\n      pattern: /([a-zA-Z0-9\\\\-.]+\\\\s*\\\\()\\\\s*[a-zA-Z0-9\\\\-.]+\\\\s*:\\\\s*[a-zA-Z0-9\\\\-.]+(?:\\\\s*,\\\\s*[a-zA-Z0-9\\\\-.]+\\\\s*:\\\\s*[a-zA-Z0-9\\\\-.]+)*(?=\\\\s*\\\\))/,\\n      lookbehind: true,\\n      inside: {\\n        'field-name': {\\n          pattern: /[a-zA-Z0-9\\\\-.]+/,\\n          alias: 'variable'\\n        },\\n        colon: /:/\\n      }\\n    }, {\\n      pattern: /[a-zA-Z0-9\\\\-.]+\\\\s*:/,\\n      inside: {\\n        'field-name': {\\n          pattern: /[a-zA-Z0-9\\\\-.]+/,\\n          alias: 'variable'\\n        },\\n        colon: /:/\\n      }\\n    }],\\n    punctuation: /[:;,()]/,\\n    name: /[a-zA-Z0-9\\\\-.]+/\\n  };\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"nevod\",\"Prism\",\"languages\",\"comment\",\"string\",\"pattern\",\"greedy\",\"inside\",\"namespace\",\"lookbehind\",\"alias\",\"fields\",\"punctuation\",\"operator\",\"search\",\"keyword\",\"quantifier\",\"colon\",\"name\",\"Object\",\"defineProperty\",\"value\",\"default\",\"displayName\",\"aliases\"]\n}\n"]