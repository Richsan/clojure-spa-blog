["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/unist-util-stringify-position/lib/index.js"],"~:js","shadow$provide.module$node_modules$unist_util_stringify_position$lib$index=function(global,require,module,exports){function point$jscomp$0(point){return index(point&&point.line)+\":\"+index(point&&point.column)}function position(pos){return point$jscomp$0(pos&&pos.start)+\"-\"+point$jscomp$0(pos&&pos.end)}function index(value){return value&&\"number\"===typeof value?value:1}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.stringifyPosition=function(value){return value&&\"object\"===typeof value?\n\"position\"in value||\"type\"in value?position(value.position):\"start\"in value||\"end\"in value?position(value):\"line\"in value||\"column\"in value?point$jscomp$0(value):\"\":\"\"}}","~:source","shadow$provide[\"module$node_modules$unist_util_stringify_position$lib$index\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.stringifyPosition = stringifyPosition;\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Position | PositionLike | Point | PointLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nfunction stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return '';\n  } // Node.\n\n\n  if ('position' in value || 'type' in value) {\n    return position(value.position);\n  } // Position.\n\n\n  if ('start' in value || 'end' in value) {\n    return position(value);\n  } // Point.\n\n\n  if ('line' in value || 'column' in value) {\n    return point(value);\n  } // ?\n\n\n  return '';\n}\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\n\n\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column);\n}\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\n\n\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end);\n}\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\n\n\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1;\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["stringifyPosition","__esModule","value"]],"~:compiled-at",1676665867233,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$unist_util_stringify_position$lib$index.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,2DAAA,CAAgF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CA0ExHC,QAASA,eAAK,CAACA,KAAD,CAAQ,CACpB,MAAOC,MAAA,CAAMD,KAAN,EAAeA,KAAME,CAAAA,IAArB,CAAP,CAAoC,GAApC,CAA0CD,KAAA,CAAMD,KAAN,EAAeA,KAAMG,CAAAA,MAArB,CADtB,CAStBC,QAASA,SAAQ,CAACC,GAAD,CAAM,CACrB,MAAOL,eAAA,CAAMK,GAAN,EAAaA,GAAIC,CAAAA,KAAjB,CAAP,CAAiC,GAAjC,CAAuCN,cAAA,CAAMK,GAAN,EAAaA,GAAIE,CAAAA,GAAjB,CADlB,CASvBN,QAASA,MAAK,CAACO,KAAD,CAAQ,CACpB,MAAOA,MAAA,EAA0B,QAA1B,GAAS,MAAOA,MAAhB,CAAqCA,KAArC,CAA6C,CADhC,CAzFtBC,MAAOC,CAAAA,cAAP,CAAsBX,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CS,MAAO,CAAA,CADoC,CAA7C,CAGAT,QAAQY,CAAAA,iBAAR,CAsCAA,QAA0B,CAACH,KAAD,CAAQ,CAEhC,MAAKA,MAAL,EAA+B,QAA/B,GAAc,MAAOA,MAArB;AAKI,UAAJ,EAAkBA,MAAlB,EAA2B,MAA3B,EAAqCA,MAArC,CACSJ,QAAA,CAASI,KAAMJ,CAAAA,QAAf,CADT,CAKI,OAAJ,EAAeI,MAAf,EAAwB,KAAxB,EAAiCA,MAAjC,CACSJ,QAAA,CAASI,KAAT,CADT,CAKI,MAAJ,EAAcA,MAAd,EAAuB,QAAvB,EAAmCA,MAAnC,CACSR,cAAA,CAAMQ,KAAN,CADT,CAKO,EApBP,CACS,EAHuB,CA5CsF;\",\n\"sources\":[\"node_modules/unist-util-stringify-position/lib/index.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$unist_util_stringify_position$lib$index\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.stringifyPosition = stringifyPosition;\\n\\n/**\\n * @typedef {import('unist').Node} Node\\n * @typedef {import('unist').Point} Point\\n * @typedef {import('unist').Position} Position\\n */\\n\\n/**\\n * @typedef NodeLike\\n * @property {string} type\\n * @property {PositionLike | null | undefined} [position]\\n *\\n * @typedef PositionLike\\n * @property {PointLike | null | undefined} [start]\\n * @property {PointLike | null | undefined} [end]\\n *\\n * @typedef PointLike\\n * @property {number | null | undefined} [line]\\n * @property {number | null | undefined} [column]\\n * @property {number | null | undefined} [offset]\\n */\\n\\n/**\\n * Serialize the positional info of a point, position (start and end points),\\n * or node.\\n *\\n * @param {Node | NodeLike | Position | PositionLike | Point | PointLike | null | undefined} [value]\\n *   Node, position, or point.\\n * @returns {string}\\n *   Pretty printed positional info of a node (`string`).\\n *\\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\\n *   column, `s` for `start`, and `e` for end.\\n *   An empty string (`''`) is returned if the given value is neither `node`,\\n *   `position`, nor `point`.\\n */\\nfunction stringifyPosition(value) {\\n  // Nothing.\\n  if (!value || typeof value !== 'object') {\\n    return '';\\n  } // Node.\\n\\n\\n  if ('position' in value || 'type' in value) {\\n    return position(value.position);\\n  } // Position.\\n\\n\\n  if ('start' in value || 'end' in value) {\\n    return position(value);\\n  } // Point.\\n\\n\\n  if ('line' in value || 'column' in value) {\\n    return point(value);\\n  } // ?\\n\\n\\n  return '';\\n}\\n/**\\n * @param {Point | PointLike | null | undefined} point\\n * @returns {string}\\n */\\n\\n\\nfunction point(point) {\\n  return index(point && point.line) + ':' + index(point && point.column);\\n}\\n/**\\n * @param {Position | PositionLike | null | undefined} pos\\n * @returns {string}\\n */\\n\\n\\nfunction position(pos) {\\n  return point(pos && pos.start) + '-' + point(pos && pos.end);\\n}\\n/**\\n * @param {number | null | undefined} value\\n * @returns {number}\\n */\\n\\n\\nfunction index(value) {\\n  return value && typeof value === 'number' ? value : 1;\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"point\",\"index\",\"line\",\"column\",\"position\",\"pos\",\"start\",\"end\",\"value\",\"Object\",\"defineProperty\",\"stringifyPosition\"]\n}\n"]