["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mdast-util-gfm/lib/index.js"],"~:js","shadow$provide.module$node_modules$mdast_util_gfm$lib$index=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.gfmFromMarkdown=function(){return[_mdastUtilGfmAutolinkLiteral.gfmAutolinkLiteralFromMarkdown,(0,_mdastUtilGfmFootnote.gfmFootnoteFromMarkdown)(),_mdastUtilGfmStrikethrough.gfmStrikethroughFromMarkdown,_mdastUtilGfmTable.gfmTableFromMarkdown,_mdastUtilGfmTaskListItem.gfmTaskListItemFromMarkdown]};exports.gfmToMarkdown=function(options){return{extensions:[_mdastUtilGfmAutolinkLiteral.gfmAutolinkLiteralToMarkdown,\n(0,_mdastUtilGfmFootnote.gfmFootnoteToMarkdown)(),_mdastUtilGfmStrikethrough.gfmStrikethroughToMarkdown,(0,_mdastUtilGfmTable.gfmTableToMarkdown)(options),_mdastUtilGfmTaskListItem.gfmTaskListItemToMarkdown]}};var _mdastUtilGfmAutolinkLiteral=require(\"module$node_modules$mdast_util_gfm_autolink_literal$index\"),_mdastUtilGfmFootnote=require(\"module$node_modules$mdast_util_gfm_footnote$index\"),_mdastUtilGfmStrikethrough=require(\"module$node_modules$mdast_util_gfm_strikethrough$index\"),_mdastUtilGfmTable=\nrequire(\"module$node_modules$mdast_util_gfm_table$index\"),_mdastUtilGfmTaskListItem=require(\"module$node_modules$mdast_util_gfm_task_list_item$index\")}","~:source","shadow$provide[\"module$node_modules$mdast_util_gfm$lib$index\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.gfmFromMarkdown = gfmFromMarkdown;\nexports.gfmToMarkdown = gfmToMarkdown;\n\nvar _mdastUtilGfmAutolinkLiteral = require(\"mdast-util-gfm-autolink-literal\");\n\nvar _mdastUtilGfmFootnote = require(\"mdast-util-gfm-footnote\");\n\nvar _mdastUtilGfmStrikethrough = require(\"mdast-util-gfm-strikethrough\");\n\nvar _mdastUtilGfmTable = require(\"mdast-util-gfm-table\");\n\nvar _mdastUtilGfmTaskListItem = require(\"mdast-util-gfm-task-list-item\");\n\n/**\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\n/**\n * @typedef {import('mdast-util-gfm-table').Options} Options\n *   Configuration.\n */\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @returns {Array<FromMarkdownExtension>}\n *   Extension for `mdast-util-from-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nfunction gfmFromMarkdown() {\n  return [_mdastUtilGfmAutolinkLiteral.gfmAutolinkLiteralFromMarkdown, (0, _mdastUtilGfmFootnote.gfmFootnoteFromMarkdown)(), _mdastUtilGfmStrikethrough.gfmStrikethroughFromMarkdown, _mdastUtilGfmTable.gfmTableFromMarkdown, _mdastUtilGfmTaskListItem.gfmTaskListItemFromMarkdown];\n}\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\n\n\nfunction gfmToMarkdown(options) {\n  return {\n    extensions: [_mdastUtilGfmAutolinkLiteral.gfmAutolinkLiteralToMarkdown, (0, _mdastUtilGfmFootnote.gfmFootnoteToMarkdown)(), _mdastUtilGfmStrikethrough.gfmStrikethroughToMarkdown, (0, _mdastUtilGfmTable.gfmTableToMarkdown)(options), _mdastUtilGfmTaskListItem.gfmTaskListItemToMarkdown]\n  };\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$mdast_util_gfm_table$index","~$shadow.js","~$module$node_modules$mdast_util_gfm_footnote$index","~$module$node_modules$mdast_util_gfm_strikethrough$index","~$module$node_modules$mdast_util_gfm_task_list_item$index","~$module$node_modules$mdast_util_gfm_autolink_literal$index"]],"~:properties",["^5",["extensions","gfmToMarkdown","__esModule","gfmFromMarkdown","value"]],"~:compiled-at",1676841365345,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mdast_util_gfm$lib$index.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,CAAA,4CAAA,CAAiE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGzGC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,eAAR,CA+BAA,QAAwB,EAAG,CACzB,MAAO,CAACC,4BAA6BC,CAAAA,8BAA9B,CAA8D,GAAIC,qBAAsBC,CAAAA,uBAA1B,GAA9D,CAAoHC,0BAA2BC,CAAAA,4BAA/I,CAA6KC,kBAAmBC,CAAAA,oBAAhM,CAAsNC,yBAA0BC,CAAAA,2BAAhP,CADkB,CA9B3Bd,QAAQe,CAAAA,aAAR,CA6CAA,QAAsB,CAACC,OAAD,CAAU,CAC9B,MAAO,CACLC,WAAY,CAACZ,4BAA6Ba,CAAAA,4BAA9B;AAA4D,GAAIX,qBAAsBY,CAAAA,qBAA1B,GAA5D,CAAgHV,0BAA2BW,CAAAA,0BAA3I,CAAuK,GAAIT,kBAAmBU,CAAAA,kBAAvB,EAA2CL,OAA3C,CAAvK,CAA4NH,yBAA0BS,CAAAA,yBAAtP,CADP,CADuB,CA3ChC,KAAIjB,6BAA+BP,OAAA,CAAQ,2DAAR,CAAnC,CAEIS,sBAAwBT,OAAA,CAAQ,mDAAR,CAF5B,CAIIW,2BAA6BX,OAAA,CAAQ,wDAAR,CAJjC,CAMIa;AAAqBb,OAAA,CAAQ,gDAAR,CANzB,CAQIe,0BAA4Bf,OAAA,CAAQ,yDAAR,CAjByE;\",\n\"sources\":[\"node_modules/mdast-util-gfm/lib/index.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$mdast_util_gfm$lib$index\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.gfmFromMarkdown = gfmFromMarkdown;\\nexports.gfmToMarkdown = gfmToMarkdown;\\n\\nvar _mdastUtilGfmAutolinkLiteral = require(\\\"mdast-util-gfm-autolink-literal\\\");\\n\\nvar _mdastUtilGfmFootnote = require(\\\"mdast-util-gfm-footnote\\\");\\n\\nvar _mdastUtilGfmStrikethrough = require(\\\"mdast-util-gfm-strikethrough\\\");\\n\\nvar _mdastUtilGfmTable = require(\\\"mdast-util-gfm-table\\\");\\n\\nvar _mdastUtilGfmTaskListItem = require(\\\"mdast-util-gfm-task-list-item\\\");\\n\\n/**\\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\\n */\\n\\n/**\\n * @typedef {import('mdast-util-gfm-table').Options} Options\\n *   Configuration.\\n */\\n\\n/**\\n * Create an extension for `mdast-util-from-markdown` to enable GFM (autolink\\n * literals, footnotes, strikethrough, tables, tasklists).\\n *\\n * @returns {Array<FromMarkdownExtension>}\\n *   Extension for `mdast-util-from-markdown` to enable GFM (autolink literals,\\n *   footnotes, strikethrough, tables, tasklists).\\n */\\nfunction gfmFromMarkdown() {\\n  return [_mdastUtilGfmAutolinkLiteral.gfmAutolinkLiteralFromMarkdown, (0, _mdastUtilGfmFootnote.gfmFootnoteFromMarkdown)(), _mdastUtilGfmStrikethrough.gfmStrikethroughFromMarkdown, _mdastUtilGfmTable.gfmTableFromMarkdown, _mdastUtilGfmTaskListItem.gfmTaskListItemFromMarkdown];\\n}\\n/**\\n * Create an extension for `mdast-util-to-markdown` to enable GFM (autolink\\n * literals, footnotes, strikethrough, tables, tasklists).\\n *\\n * @param {Options | null | undefined} [options]\\n *   Configuration.\\n * @returns {ToMarkdownExtension}\\n *   Extension for `mdast-util-to-markdown` to enable GFM (autolink literals,\\n *   footnotes, strikethrough, tables, tasklists).\\n */\\n\\n\\nfunction gfmToMarkdown(options) {\\n  return {\\n    extensions: [_mdastUtilGfmAutolinkLiteral.gfmAutolinkLiteralToMarkdown, (0, _mdastUtilGfmFootnote.gfmFootnoteToMarkdown)(), _mdastUtilGfmStrikethrough.gfmStrikethroughToMarkdown, (0, _mdastUtilGfmTable.gfmTableToMarkdown)(options), _mdastUtilGfmTaskListItem.gfmTaskListItemToMarkdown]\\n  };\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"gfmFromMarkdown\",\"_mdastUtilGfmAutolinkLiteral\",\"gfmAutolinkLiteralFromMarkdown\",\"_mdastUtilGfmFootnote\",\"gfmFootnoteFromMarkdown\",\"_mdastUtilGfmStrikethrough\",\"gfmStrikethroughFromMarkdown\",\"_mdastUtilGfmTable\",\"gfmTableFromMarkdown\",\"_mdastUtilGfmTaskListItem\",\"gfmTaskListItemFromMarkdown\",\"gfmToMarkdown\",\"options\",\"extensions\",\"gfmAutolinkLiteralToMarkdown\",\"gfmFootnoteToMarkdown\",\"gfmStrikethroughToMarkdown\",\"gfmTableToMarkdown\",\"gfmTaskListItemToMarkdown\"]\n}\n"]