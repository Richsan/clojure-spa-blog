["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/rehype-highlight/lib/index.js"],"~:js","shadow$provide.module$node_modules$rehype_highlight$lib$index=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=function(options={}){const {aliases,languages,prefix,plainText,ignoreMissing,subset,detect}=options;let name=\"hljs\";aliases&&_lowlight.lowlight.registerAlias(aliases);if(languages){let key;for(key in languages)own.call(languages,key)&&_lowlight.lowlight.registerLanguage(key,languages[key])}prefix&&(options=prefix.indexOf(\"-\"),\nname=-1<options?prefix.slice(0,options):prefix);return(tree,file)=>{(0,_unistUtilVisit.visit)(tree,\"element\",(node,_,givenParent)=>{if(givenParent&&\"tagName\"in givenParent&&\"pre\"===givenParent.tagName&&\"code\"===node.tagName&&node.properties){a:{_=node.properties&&node.properties.className;let index=-1;if(Array.isArray(_))for(;++index<_.length;){const value=String(_[index]);if(\"no-highlight\"===value||\"nohighlight\"===value){_=!1;break a}if(\"lang-\"===value.slice(0,5)){_=value.slice(5);break a}if(\"language-\"===\nvalue.slice(0,9)){_=value.slice(9);break a}}_=void 0}if(!(!1===_||!_&&!detect||_&&plainText&&plainText.includes(_))){Array.isArray(node.properties.className)||(node.properties.className=[]);node.properties.className.includes(name)||node.properties.className.unshift(name);try{var result=_?_lowlight.lowlight.highlight(_,(0,_hastUtilToText.toText)(givenParent),{prefix}):_lowlight.lowlight.highlightAuto((0,_hastUtilToText.toText)(givenParent),{prefix,subset})}catch(error){ignoreMissing&&/Unknown language/.test(error.message)||\nfile.fail(error,node,\"rehype-highlight:missing-language\");return}!_&&result.data.language&&node.properties.className.push(\"language-\"+result.data.language);Array.isArray(result.children)&&0<result.children.length&&(node.children=result.children)}}})}};var _lowlight=require(\"module$node_modules$lowlight$index\"),_hastUtilToText=require(\"module$node_modules$hast_util_to_text$index\"),_unistUtilVisit=require(\"module$node_modules$unist_util_visit$index\");const own={}.hasOwnProperty}","~:source","shadow$provide[\"module$node_modules$rehype_highlight$lib$index\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = rehypeHighlight;\n\nvar _lowlight = require(\"lowlight\");\n\nvar _hastUtilToText = require(\"hast-util-to-text\");\n\nvar _unistUtilVisit = require(\"unist-util-visit\");\n\n/**\n * @typedef {import('lowlight').Root} LowlightRoot\n * @typedef {import('lowlight/lib/core.js').HighlightSyntax} HighlightSyntax\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n * @typedef {Root|Root['children'][number]} Node\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {string} [prefix='hljs-']\n *   Prefix to use before classes.\n * @property {boolean} [detect=false]\n *   Whether to detect the programming language on code without a language\n *   class.\n * @property {Array<string>} [subset]\n *   Scope of languages to check when auto-detecting (default: all languages).\n * @property {boolean} [ignoreMissing=false]\n *   Swallow errors for missing languages.\n *   By default, unregistered syntaxes throw an error when they are used.\n *   Pass `true` to swallow those errors and thus ignore code with unknown code\n *   languages.\n * @property {Array<string>} [plainText=[]]\n *   List of plain-text languages.\n *   Pass any languages you would like to be kept as plain-text instead of\n *   getting highlighted.\n * @property {Record<string, string|Array<string>>} [aliases={}]\n *   Register more aliases.\n *   Passed to `lowlight.registerAlias`.\n * @property {Record<string, HighlightSyntax>} [languages={}]\n *   Register more languages.\n *   Each key/value pair passed as arguments to `lowlight.registerLanguage`.\n */\nconst own = {}.hasOwnProperty;\n/**\n * Plugin to highlight the syntax of code with lowlight (`highlight.js`).\n *\n * @type {import('unified').Plugin<[Options?] | Array<void>, Root>}\n */\n\nfunction rehypeHighlight(options = {}) {\n  const {\n    aliases,\n    languages,\n    prefix,\n    plainText,\n    ignoreMissing,\n    subset,\n    detect\n  } = options;\n  let name = 'hljs';\n\n  if (aliases) {\n    _lowlight.lowlight.registerAlias(aliases);\n  }\n\n  if (languages) {\n    /** @type {string} */\n    let key;\n\n    for (key in languages) {\n      if (own.call(languages, key)) {\n        _lowlight.lowlight.registerLanguage(key, languages[key]);\n      }\n    }\n  }\n\n  if (prefix) {\n    const pos = prefix.indexOf('-');\n    name = pos > -1 ? prefix.slice(0, pos) : prefix;\n  }\n\n  return (tree, file) => {\n    // eslint-disable-next-line complexity\n    (0, _unistUtilVisit.visit)(tree, 'element', (node, _, givenParent) => {\n      const parent = givenParent;\n\n      if (!parent || !('tagName' in parent) || parent.tagName !== 'pre' || node.tagName !== 'code' || !node.properties) {\n        return;\n      }\n\n      const lang = language(node);\n\n      if (lang === false || !lang && !detect || lang && plainText && plainText.includes(lang)) {\n        return;\n      }\n\n      if (!Array.isArray(node.properties.className)) {\n        node.properties.className = [];\n      }\n\n      if (!node.properties.className.includes(name)) {\n        node.properties.className.unshift(name);\n      }\n      /** @type {LowlightRoot} */\n\n\n      let result;\n\n      try {\n        result = lang ? _lowlight.lowlight.highlight(lang, (0, _hastUtilToText.toText)(parent), {\n          prefix\n        }) : _lowlight.lowlight.highlightAuto((0, _hastUtilToText.toText)(parent), {\n          prefix,\n          subset\n        });\n      } catch (error) {\n        const exception = error;\n\n        if (!ignoreMissing || !/Unknown language/.test(exception.message)) {\n          file.fail(exception, node, 'rehype-highlight:missing-language');\n        }\n\n        return;\n      }\n\n      if (!lang && result.data.language) {\n        node.properties.className.push('language-' + result.data.language);\n      }\n\n      if (Array.isArray(result.children) && result.children.length > 0) {\n        node.children = result.children;\n      }\n    });\n  };\n}\n/**\n * Get the programming language of `node`.\n *\n * @param {Element} node\n * @returns {false|string|undefined}\n */\n\n\nfunction language(node) {\n  const className = node.properties && node.properties.className;\n  let index = -1;\n\n  if (!Array.isArray(className)) {\n    return;\n  }\n\n  while (++index < className.length) {\n    const value = String(className[index]);\n\n    if (value === 'no-highlight' || value === 'nohighlight') {\n      return false;\n    }\n\n    if (value.slice(0, 5) === 'lang-') {\n      return value.slice(5);\n    }\n\n    if (value.slice(0, 9) === 'language-') {\n      return value.slice(9);\n    }\n  }\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$lowlight$index","~$module$node_modules$unist_util_visit$index","~$module$node_modules$hast_util_to_text$index","~$shadow.js"]],"~:properties",["^5",["subset","prefix","className","children","__esModule","value","default"]],"~:compiled-at",1676671710263,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$rehype_highlight$lib$index.js\",\n\"lineCount\":4,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/rehype-highlight/lib/index.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$rehype_highlight$lib$index\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = rehypeHighlight;\\n\\nvar _lowlight = require(\\\"lowlight\\\");\\n\\nvar _hastUtilToText = require(\\\"hast-util-to-text\\\");\\n\\nvar _unistUtilVisit = require(\\\"unist-util-visit\\\");\\n\\n/**\\n * @typedef {import('lowlight').Root} LowlightRoot\\n * @typedef {import('lowlight/lib/core.js').HighlightSyntax} HighlightSyntax\\n * @typedef {import('hast').Root} Root\\n * @typedef {import('hast').Element} Element\\n * @typedef {Root|Root['children'][number]} Node\\n *\\n * @typedef Options\\n *   Configuration (optional).\\n * @property {string} [prefix='hljs-']\\n *   Prefix to use before classes.\\n * @property {boolean} [detect=false]\\n *   Whether to detect the programming language on code without a language\\n *   class.\\n * @property {Array<string>} [subset]\\n *   Scope of languages to check when auto-detecting (default: all languages).\\n * @property {boolean} [ignoreMissing=false]\\n *   Swallow errors for missing languages.\\n *   By default, unregistered syntaxes throw an error when they are used.\\n *   Pass `true` to swallow those errors and thus ignore code with unknown code\\n *   languages.\\n * @property {Array<string>} [plainText=[]]\\n *   List of plain-text languages.\\n *   Pass any languages you would like to be kept as plain-text instead of\\n *   getting highlighted.\\n * @property {Record<string, string|Array<string>>} [aliases={}]\\n *   Register more aliases.\\n *   Passed to `lowlight.registerAlias`.\\n * @property {Record<string, HighlightSyntax>} [languages={}]\\n *   Register more languages.\\n *   Each key/value pair passed as arguments to `lowlight.registerLanguage`.\\n */\\nconst own = {}.hasOwnProperty;\\n/**\\n * Plugin to highlight the syntax of code with lowlight (`highlight.js`).\\n *\\n * @type {import('unified').Plugin<[Options?] | Array<void>, Root>}\\n */\\n\\nfunction rehypeHighlight(options = {}) {\\n  const {\\n    aliases,\\n    languages,\\n    prefix,\\n    plainText,\\n    ignoreMissing,\\n    subset,\\n    detect\\n  } = options;\\n  let name = 'hljs';\\n\\n  if (aliases) {\\n    _lowlight.lowlight.registerAlias(aliases);\\n  }\\n\\n  if (languages) {\\n    /** @type {string} */\\n    let key;\\n\\n    for (key in languages) {\\n      if (own.call(languages, key)) {\\n        _lowlight.lowlight.registerLanguage(key, languages[key]);\\n      }\\n    }\\n  }\\n\\n  if (prefix) {\\n    const pos = prefix.indexOf('-');\\n    name = pos > -1 ? prefix.slice(0, pos) : prefix;\\n  }\\n\\n  return (tree, file) => {\\n    // eslint-disable-next-line complexity\\n    (0, _unistUtilVisit.visit)(tree, 'element', (node, _, givenParent) => {\\n      const parent = givenParent;\\n\\n      if (!parent || !('tagName' in parent) || parent.tagName !== 'pre' || node.tagName !== 'code' || !node.properties) {\\n        return;\\n      }\\n\\n      const lang = language(node);\\n\\n      if (lang === false || !lang && !detect || lang && plainText && plainText.includes(lang)) {\\n        return;\\n      }\\n\\n      if (!Array.isArray(node.properties.className)) {\\n        node.properties.className = [];\\n      }\\n\\n      if (!node.properties.className.includes(name)) {\\n        node.properties.className.unshift(name);\\n      }\\n      /** @type {LowlightRoot} */\\n\\n\\n      let result;\\n\\n      try {\\n        result = lang ? _lowlight.lowlight.highlight(lang, (0, _hastUtilToText.toText)(parent), {\\n          prefix\\n        }) : _lowlight.lowlight.highlightAuto((0, _hastUtilToText.toText)(parent), {\\n          prefix,\\n          subset\\n        });\\n      } catch (error) {\\n        const exception = error;\\n\\n        if (!ignoreMissing || !/Unknown language/.test(exception.message)) {\\n          file.fail(exception, node, 'rehype-highlight:missing-language');\\n        }\\n\\n        return;\\n      }\\n\\n      if (!lang && result.data.language) {\\n        node.properties.className.push('language-' + result.data.language);\\n      }\\n\\n      if (Array.isArray(result.children) && result.children.length > 0) {\\n        node.children = result.children;\\n      }\\n    });\\n  };\\n}\\n/**\\n * Get the programming language of `node`.\\n *\\n * @param {Element} node\\n * @returns {false|string|undefined}\\n */\\n\\n\\nfunction language(node) {\\n  const className = node.properties && node.properties.className;\\n  let index = -1;\\n\\n  if (!Array.isArray(className)) {\\n    return;\\n  }\\n\\n  while (++index < className.length) {\\n    const value = String(className[index]);\\n\\n    if (value === 'no-highlight' || value === 'nohighlight') {\\n      return false;\\n    }\\n\\n    if (value.slice(0, 5) === 'lang-') {\\n      return value.slice(5);\\n    }\\n\\n    if (value.slice(0, 9) === 'language-') {\\n      return value.slice(9);\\n    }\\n  }\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"default\",\"rehypeHighlight\",\"options\",\"aliases\",\"languages\",\"prefix\",\"plainText\",\"ignoreMissing\",\"subset\",\"detect\",\"name\",\"_lowlight\",\"lowlight\",\"registerAlias\",\"key\",\"own\",\"call\",\"registerLanguage\",\"pos\",\"indexOf\",\"slice\",\"tree\",\"file\",\"_unistUtilVisit\",\"visit\",\"node\",\"_\",\"givenParent\",\"tagName\",\"properties\",\"className\",\"index\",\"Array\",\"isArray\",\"length\",\"String\",\"lang\",\"includes\",\"unshift\",\"result\",\"highlight\",\"_hastUtilToText\",\"toText\",\"highlightAuto\",\"error\",\"test\",\"message\",\"fail\",\"data\",\"language\",\"push\",\"children\",\"hasOwnProperty\"]\n}\n"]