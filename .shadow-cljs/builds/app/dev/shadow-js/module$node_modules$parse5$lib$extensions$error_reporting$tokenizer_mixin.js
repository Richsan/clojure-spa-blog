["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/parse5/lib/extensions/error-reporting/tokenizer-mixin.js"],"~:js","shadow$provide.module$node_modules$parse5$lib$extensions$error_reporting$tokenizer_mixin=function(global,require,module,exports){global=require(\"module$node_modules$parse5$lib$extensions$error_reporting$mixin_base\");const ErrorReportingPreprocessorMixin=require(\"module$node_modules$parse5$lib$extensions$error_reporting$preprocessor_mixin\"),Mixin=require(\"module$node_modules$parse5$lib$utils$mixin\");class ErrorReportingTokenizerMixin extends global{constructor(tokenizer,opts){super(tokenizer,opts);\nthis.posTracker=Mixin.install(tokenizer.preprocessor,ErrorReportingPreprocessorMixin,opts).posTracker}}module.exports=ErrorReportingTokenizerMixin}","~:source","shadow$provide[\"module$node_modules$parse5$lib$extensions$error_reporting$tokenizer_mixin\"] = function(global,require,module,exports) {\n'use strict';\n\nconst ErrorReportingMixinBase = require('./mixin-base');\nconst ErrorReportingPreprocessorMixin = require('./preprocessor-mixin');\nconst Mixin = require('../../utils/mixin');\n\nclass ErrorReportingTokenizerMixin extends ErrorReportingMixinBase {\n    constructor(tokenizer, opts) {\n        super(tokenizer, opts);\n\n        const preprocessorMixin = Mixin.install(tokenizer.preprocessor, ErrorReportingPreprocessorMixin, opts);\n\n        this.posTracker = preprocessorMixin.posTracker;\n    }\n}\n\nmodule.exports = ErrorReportingTokenizerMixin;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$parse5$lib$extensions$error_reporting$preprocessor_mixin","~$module$node_modules$parse5$lib$utils$mixin","~$shadow.js","~$module$node_modules$parse5$lib$extensions$error_reporting$mixin_base"]],"~:properties",["^5",["posTracker"]],"~:compiled-at",1676667638416,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$parse5$lib$extensions$error_reporting$tokenizer_mixin.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,yEAAA,CAA8F,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGhIC,MAAAA,CAA0BH,OAAA,CAAQ,sEAAR,CAChC,OAAMI,gCAAkCJ,OAAA,CAAQ,8EAAR,CAAxC,CACMK,MAAQL,OAAA,CAAQ,4CAAR,CAEd,MAAMM,6BAAN,QAA2CH,OAA3C,CACII,WAAW,CAACC,SAAD,CAAYC,IAAZ,CAAkB,CACzB,KAAA,CAAMD,SAAN,CAAiBC,IAAjB,CAIA;IAAKC,CAAAA,UAAL,CAF0BL,KAAMM,CAAAA,OAANC,CAAcJ,SAAUK,CAAAA,YAAxBD,CAAsCR,+BAAtCQ,CAAuEH,IAAvEG,CAEUF,CAAAA,UALX,CADjC,CAUAT,MAAOC,CAAAA,OAAP,CAAiBI,4BAjBqH;\",\n\"sources\":[\"node_modules/parse5/lib/extensions/error-reporting/tokenizer-mixin.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$parse5$lib$extensions$error_reporting$tokenizer_mixin\\\"] = function(global,require,module,exports) {\\n'use strict';\\n\\nconst ErrorReportingMixinBase = require('./mixin-base');\\nconst ErrorReportingPreprocessorMixin = require('./preprocessor-mixin');\\nconst Mixin = require('../../utils/mixin');\\n\\nclass ErrorReportingTokenizerMixin extends ErrorReportingMixinBase {\\n    constructor(tokenizer, opts) {\\n        super(tokenizer, opts);\\n\\n        const preprocessorMixin = Mixin.install(tokenizer.preprocessor, ErrorReportingPreprocessorMixin, opts);\\n\\n        this.posTracker = preprocessorMixin.posTracker;\\n    }\\n}\\n\\nmodule.exports = ErrorReportingTokenizerMixin;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"ErrorReportingMixinBase\",\"ErrorReportingPreprocessorMixin\",\"Mixin\",\"ErrorReportingTokenizerMixin\",\"constructor\",\"tokenizer\",\"opts\",\"posTracker\",\"install\",\"preprocessorMixin\",\"preprocessor\"]\n}\n"]