["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/ebnf.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$ebnf=function(global,require,module,exports){function ebnf(Prism){Prism.languages.ebnf={comment:/\\(\\*[\\s\\S]*?\\*\\)/,string:{pattern:/\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,greedy:!0},special:{pattern:/\\?[^?\\r\\n]*\\?/,greedy:!0,alias:\"class-name\"},definition:{pattern:/^([\\t ]*)[a-z]\\w*(?:[ \\t]+[a-z]\\w*)*(?=\\s*=)/im,lookbehind:!0,alias:[\"rule\",\"keyword\"]},rule:/\\b[a-z]\\w*(?:[ \\t]+[a-z]\\w*)*\\b/i,punctuation:/\\([:/]|[:/]\\)|[.,;()[\\]{}]/,operator:/[-=|*/!]/}}Object.defineProperty(exports,\n\"__esModule\",{value:!0});exports.default=ebnf;ebnf.displayName=\"ebnf\";ebnf.aliases=[]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$ebnf\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = ebnf;\n// @ts-nocheck\nebnf.displayName = 'ebnf';\nebnf.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nfunction ebnf(Prism) {\n  Prism.languages.ebnf = {\n    comment: /\\(\\*[\\s\\S]*?\\*\\)/,\n    string: {\n      pattern: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\n      greedy: true\n    },\n    special: {\n      pattern: /\\?[^?\\r\\n]*\\?/,\n      greedy: true,\n      alias: 'class-name'\n    },\n    definition: {\n      pattern: /^([\\t ]*)[a-z]\\w*(?:[ \\t]+[a-z]\\w*)*(?=\\s*=)/im,\n      lookbehind: true,\n      alias: ['rule', 'keyword']\n    },\n    rule: /\\b[a-z]\\w*(?:[ \\t]+[a-z]\\w*)*\\b/i,\n    punctuation: /\\([:/]|[:/]\\)|[.,;()[\\]{}]/,\n    operator: /[-=|*/!]/\n  };\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["rule","punctuation","string","aliases","operator","displayName","__esModule","lookbehind","value","ebnf","special","greedy","definition","pattern","alias","comment","default"]],"~:compiled-at",1676841365406,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$ebnf.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,uCAAA,CAA4D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAYpGC,QAASA,KAAI,CAACC,KAAD,CAAQ,CACnBA,KAAMC,CAAAA,SAAUF,CAAAA,IAAhB,CAAuB,CACrBG,QAAS,kBADY,CAErBC,OAAQ,CACNC,QAAS,yBADH,CAENC,OAAQ,CAAA,CAFF,CAFa,CAMrBC,QAAS,CACPF,QAAS,eADF,CAEPC,OAAQ,CAAA,CAFD,CAGPE,MAAO,YAHA,CANY,CAWrBC,WAAY,CACVJ,QAAS,gDADC,CAEVK,WAAY,CAAA,CAFF,CAGVF,MAAO,CAAC,MAAD,CAAS,SAAT,CAHG,CAXS,CAgBrBG,KAAM,kCAhBe,CAiBrBC,YAAa,4BAjBQ,CAkBrBC,SAAU,UAlBW,CADJ,CATrBC,MAAOC,CAAAA,cAAP,CAAsBhB,OAAtB;AAA+B,YAA/B,CAA6C,CAC3CiB,MAAO,CAAA,CADoC,CAA7C,CAGAjB,QAAQkB,CAAAA,OAAR,CAAkBjB,IAElBA,KAAKkB,CAAAA,WAAL,CAAmB,MACnBlB,KAAKmB,CAAAA,OAAL,CAAe,EATqF;\",\n\"sources\":[\"node_modules/refractor/lang/ebnf.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$ebnf\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = ebnf;\\n// @ts-nocheck\\nebnf.displayName = 'ebnf';\\nebnf.aliases = [];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction ebnf(Prism) {\\n  Prism.languages.ebnf = {\\n    comment: /\\\\(\\\\*[\\\\s\\\\S]*?\\\\*\\\\)/,\\n    string: {\\n      pattern: /\\\"[^\\\"\\\\r\\\\n]*\\\"|'[^'\\\\r\\\\n]*'/,\\n      greedy: true\\n    },\\n    special: {\\n      pattern: /\\\\?[^?\\\\r\\\\n]*\\\\?/,\\n      greedy: true,\\n      alias: 'class-name'\\n    },\\n    definition: {\\n      pattern: /^([\\\\t ]*)[a-z]\\\\w*(?:[ \\\\t]+[a-z]\\\\w*)*(?=\\\\s*=)/im,\\n      lookbehind: true,\\n      alias: ['rule', 'keyword']\\n    },\\n    rule: /\\\\b[a-z]\\\\w*(?:[ \\\\t]+[a-z]\\\\w*)*\\\\b/i,\\n    punctuation: /\\\\([:/]|[:/]\\\\)|[.,;()[\\\\]{}]/,\\n    operator: /[-=|*/!]/\\n  };\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"ebnf\",\"Prism\",\"languages\",\"comment\",\"string\",\"pattern\",\"greedy\",\"special\",\"alias\",\"definition\",\"lookbehind\",\"rule\",\"punctuation\",\"operator\",\"Object\",\"defineProperty\",\"value\",\"default\",\"displayName\",\"aliases\"]\n}\n"]