["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/jsx.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$jsx=function(global,require,module,exports){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function jsx(Prism$jscomp$0){Prism$jscomp$0.register(_javascript.default);Prism$jscomp$0.register(_markup.default);(function(Prism){function re(source,flags){source=source.replace(/<S>/g,function(){return space}).replace(/<BRACES>/g,function(){return braces}).replace(/<SPREAD>/g,function(){return spread});return RegExp(source,\nflags)}var javascript=Prism.util.clone(Prism.languages.javascript),space=/(?:\\s|\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))\\*\\/)/.source,braces=/(?:\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])*\\})/.source,spread=/(?:\\{<S>*\\.{3}(?:[^{}]|<BRACES>)*\\})/.source;spread=re(spread).source;Prism.languages.jsx=Prism.languages.extend(\"markup\",javascript);Prism.languages.jsx.tag.pattern=re(/<\\/?(?:[\\w.:-]+(?:<S>+(?:[\\w.:$-]+(?:=(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s{'\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\\/?)?>/.source);\nPrism.languages.jsx.tag.inside.tag.pattern=/^<\\/?[^\\s>\\/]*/;Prism.languages.jsx.tag.inside[\"attr-value\"].pattern=/=(?!\\{)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s'\">]+)/;Prism.languages.jsx.tag.inside.tag.inside[\"class-name\"]=/^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/;Prism.languages.jsx.tag.inside.comment=javascript.comment;Prism.languages.insertBefore(\"inside\",\"attr-name\",{spread:{pattern:re(/<SPREAD>/.source),inside:Prism.languages.jsx}},Prism.languages.jsx.tag);Prism.languages.insertBefore(\"inside\",\n\"special-attr\",{script:{pattern:re(/=<BRACES>/.source),alias:\"language-javascript\",inside:{\"script-punctuation\":{pattern:/^=(?=\\{)/,alias:\"punctuation\"},rest:Prism.languages.jsx}}},Prism.languages.jsx.tag);var stringifyToken=function(token){return token?\"string\"===typeof token?token:\"string\"===typeof token.content?token.content:token.content.map(stringifyToken).join(\"\"):\"\"},walkTokens=function(tokens){for(var openedTags=[],i=0;i<tokens.length;i++){var token=tokens[i],notTagNorBrace=!1;\"string\"!==\ntypeof token&&(\"tag\"===token.type&&token.content[0]&&\"tag\"===token.content[0].type?\"\\x3c/\"===token.content[0].content[0].content?0<openedTags.length&&openedTags[openedTags.length-1].tagName===stringifyToken(token.content[0].content[1])&&openedTags.pop():\"/\\x3e\"!==token.content[token.content.length-1].content&&openedTags.push({tagName:stringifyToken(token.content[0].content[1]),openedBraces:0}):0<openedTags.length&&\"punctuation\"===token.type&&\"{\"===token.content?openedTags[openedTags.length-1].openedBraces++:\n0<openedTags.length&&0<openedTags[openedTags.length-1].openedBraces&&\"punctuation\"===token.type&&\"}\"===token.content?openedTags[openedTags.length-1].openedBraces--:notTagNorBrace=!0);(notTagNorBrace||\"string\"===typeof token)&&0<openedTags.length&&0===openedTags[openedTags.length-1].openedBraces&&(notTagNorBrace=stringifyToken(token),i<tokens.length-1&&(\"string\"===typeof tokens[i+1]||\"plain-text\"===tokens[i+1].type)&&(notTagNorBrace+=stringifyToken(tokens[i+1]),tokens.splice(i+1,1)),0<i&&(\"string\"===\ntypeof tokens[i-1]||\"plain-text\"===tokens[i-1].type)&&(notTagNorBrace=stringifyToken(tokens[i-1])+notTagNorBrace,tokens.splice(i-1,1),i--),tokens[i]=new Prism.Token(\"plain-text\",notTagNorBrace,null,notTagNorBrace));token.content&&\"string\"!==typeof token.content&&walkTokens(token.content)}};Prism.hooks.add(\"after-tokenize\",function(env){\"jsx\"!==env.language&&\"tsx\"!==env.language||walkTokens(env.tokens)})})(Prism$jscomp$0)}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=jsx;var _javascript=\n_interopRequireDefault(require(\"module$node_modules$refractor$lang$javascript\")),_markup=_interopRequireDefault(require(\"module$node_modules$refractor$lang$markup\"));jsx.displayName=\"jsx\";jsx.aliases=[]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$jsx\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = jsx;\n\nvar _javascript = _interopRequireDefault(require(\"./javascript.js\"));\n\nvar _markup = _interopRequireDefault(require(\"./markup.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// @ts-nocheck\njsx.displayName = 'jsx';\njsx.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nfunction jsx(Prism) {\n  Prism.register(_javascript.default);\n  Prism.register(_markup.default);\n\n  (function (Prism) {\n    var javascript = Prism.util.clone(Prism.languages.javascript);\n    var space = /(?:\\s|\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))\\*\\/)/.source;\n    var braces = /(?:\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])*\\})/.source;\n    var spread = /(?:\\{<S>*\\.{3}(?:[^{}]|<BRACES>)*\\})/.source;\n    /**\n     * @param {string} source\n     * @param {string} [flags]\n     */\n\n    function re(source, flags) {\n      source = source.replace(/<S>/g, function () {\n        return space;\n      }).replace(/<BRACES>/g, function () {\n        return braces;\n      }).replace(/<SPREAD>/g, function () {\n        return spread;\n      });\n      return RegExp(source, flags);\n    }\n\n    spread = re(spread).source;\n    Prism.languages.jsx = Prism.languages.extend('markup', javascript);\n    Prism.languages.jsx.tag.pattern = re(/<\\/?(?:[\\w.:-]+(?:<S>+(?:[\\w.:$-]+(?:=(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s{'\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\\/?)?>/.source);\n    Prism.languages.jsx.tag.inside['tag'].pattern = /^<\\/?[^\\s>\\/]*/;\n    Prism.languages.jsx.tag.inside['attr-value'].pattern = /=(?!\\{)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s'\">]+)/;\n    Prism.languages.jsx.tag.inside['tag'].inside['class-name'] = /^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/;\n    Prism.languages.jsx.tag.inside['comment'] = javascript['comment'];\n    Prism.languages.insertBefore('inside', 'attr-name', {\n      spread: {\n        pattern: re(/<SPREAD>/.source),\n        inside: Prism.languages.jsx\n      }\n    }, Prism.languages.jsx.tag);\n    Prism.languages.insertBefore('inside', 'special-attr', {\n      script: {\n        // Allow for two levels of nesting\n        pattern: re(/=<BRACES>/.source),\n        alias: 'language-javascript',\n        inside: {\n          'script-punctuation': {\n            pattern: /^=(?=\\{)/,\n            alias: 'punctuation'\n          },\n          rest: Prism.languages.jsx\n        }\n      }\n    }, Prism.languages.jsx.tag); // The following will handle plain text inside tags\n\n    var stringifyToken = function (token) {\n      if (!token) {\n        return '';\n      }\n\n      if (typeof token === 'string') {\n        return token;\n      }\n\n      if (typeof token.content === 'string') {\n        return token.content;\n      }\n\n      return token.content.map(stringifyToken).join('');\n    };\n\n    var walkTokens = function (tokens) {\n      var openedTags = [];\n\n      for (var i = 0; i < tokens.length; i++) {\n        var token = tokens[i];\n        var notTagNorBrace = false;\n\n        if (typeof token !== 'string') {\n          if (token.type === 'tag' && token.content[0] && token.content[0].type === 'tag') {\n            // We found a tag, now find its kind\n            if (token.content[0].content[0].content === '</') {\n              // Closing tag\n              if (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token.content[0].content[1])) {\n                // Pop matching opening tag\n                openedTags.pop();\n              }\n            } else {\n              if (token.content[token.content.length - 1].content === '/>') {// Autoclosed tag, ignore\n              } else {\n                // Opening tag\n                openedTags.push({\n                  tagName: stringifyToken(token.content[0].content[1]),\n                  openedBraces: 0\n                });\n              }\n            }\n          } else if (openedTags.length > 0 && token.type === 'punctuation' && token.content === '{') {\n            // Here we might have entered a JSX context inside a tag\n            openedTags[openedTags.length - 1].openedBraces++;\n          } else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token.type === 'punctuation' && token.content === '}') {\n            // Here we might have left a JSX context inside a tag\n            openedTags[openedTags.length - 1].openedBraces--;\n          } else {\n            notTagNorBrace = true;\n          }\n        }\n\n        if (notTagNorBrace || typeof token === 'string') {\n          if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {\n            // Here we are inside a tag, and not inside a JSX context.\n            // That's plain text: drop any tokens matched.\n            var plainText = stringifyToken(token); // And merge text with adjacent text\n\n            if (i < tokens.length - 1 && (typeof tokens[i + 1] === 'string' || tokens[i + 1].type === 'plain-text')) {\n              plainText += stringifyToken(tokens[i + 1]);\n              tokens.splice(i + 1, 1);\n            }\n\n            if (i > 0 && (typeof tokens[i - 1] === 'string' || tokens[i - 1].type === 'plain-text')) {\n              plainText = stringifyToken(tokens[i - 1]) + plainText;\n              tokens.splice(i - 1, 1);\n              i--;\n            }\n\n            tokens[i] = new Prism.Token('plain-text', plainText, null, plainText);\n          }\n        }\n\n        if (token.content && typeof token.content !== 'string') {\n          walkTokens(token.content);\n        }\n      }\n    };\n\n    Prism.hooks.add('after-tokenize', function (env) {\n      if (env.language !== 'jsx' && env.language !== 'tsx') {\n        return;\n      }\n\n      walkTokens(env.tokens);\n    });\n  })(Prism);\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$refractor$lang$markup","~$module$node_modules$refractor$lang$javascript","~$shadow.js"]],"~:properties",["^5",["aliases","displayName","__esModule","rest","jsx","value","script","pattern","tagName","inside","alias","openedBraces","default","spread"]],"~:compiled-at",1676841365455,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$jsx.js\",\n\"lineCount\":8,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/refractor/lang/jsx.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$jsx\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = jsx;\\n\\nvar _javascript = _interopRequireDefault(require(\\\"./javascript.js\\\"));\\n\\nvar _markup = _interopRequireDefault(require(\\\"./markup.js\\\"));\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\n// @ts-nocheck\\njsx.displayName = 'jsx';\\njsx.aliases = [];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction jsx(Prism) {\\n  Prism.register(_javascript.default);\\n  Prism.register(_markup.default);\\n\\n  (function (Prism) {\\n    var javascript = Prism.util.clone(Prism.languages.javascript);\\n    var space = /(?:\\\\s|\\\\/\\\\/.*(?!.)|\\\\/\\\\*(?:[^*]|\\\\*(?!\\\\/))\\\\*\\\\/)/.source;\\n    var braces = /(?:\\\\{(?:\\\\{(?:\\\\{[^{}]*\\\\}|[^{}])*\\\\}|[^{}])*\\\\})/.source;\\n    var spread = /(?:\\\\{<S>*\\\\.{3}(?:[^{}]|<BRACES>)*\\\\})/.source;\\n    /**\\n     * @param {string} source\\n     * @param {string} [flags]\\n     */\\n\\n    function re(source, flags) {\\n      source = source.replace(/<S>/g, function () {\\n        return space;\\n      }).replace(/<BRACES>/g, function () {\\n        return braces;\\n      }).replace(/<SPREAD>/g, function () {\\n        return spread;\\n      });\\n      return RegExp(source, flags);\\n    }\\n\\n    spread = re(spread).source;\\n    Prism.languages.jsx = Prism.languages.extend('markup', javascript);\\n    Prism.languages.jsx.tag.pattern = re(/<\\\\/?(?:[\\\\w.:-]+(?:<S>+(?:[\\\\w.:$-]+(?:=(?:\\\"(?:\\\\\\\\[\\\\s\\\\S]|[^\\\\\\\\\\\"])*\\\"|'(?:\\\\\\\\[\\\\s\\\\S]|[^\\\\\\\\'])*'|[^\\\\s{'\\\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\\\\/?)?>/.source);\\n    Prism.languages.jsx.tag.inside['tag'].pattern = /^<\\\\/?[^\\\\s>\\\\/]*/;\\n    Prism.languages.jsx.tag.inside['attr-value'].pattern = /=(?!\\\\{)(?:\\\"(?:\\\\\\\\[\\\\s\\\\S]|[^\\\\\\\\\\\"])*\\\"|'(?:\\\\\\\\[\\\\s\\\\S]|[^\\\\\\\\'])*'|[^\\\\s'\\\">]+)/;\\n    Prism.languages.jsx.tag.inside['tag'].inside['class-name'] = /^[A-Z]\\\\w*(?:\\\\.[A-Z]\\\\w*)*$/;\\n    Prism.languages.jsx.tag.inside['comment'] = javascript['comment'];\\n    Prism.languages.insertBefore('inside', 'attr-name', {\\n      spread: {\\n        pattern: re(/<SPREAD>/.source),\\n        inside: Prism.languages.jsx\\n      }\\n    }, Prism.languages.jsx.tag);\\n    Prism.languages.insertBefore('inside', 'special-attr', {\\n      script: {\\n        // Allow for two levels of nesting\\n        pattern: re(/=<BRACES>/.source),\\n        alias: 'language-javascript',\\n        inside: {\\n          'script-punctuation': {\\n            pattern: /^=(?=\\\\{)/,\\n            alias: 'punctuation'\\n          },\\n          rest: Prism.languages.jsx\\n        }\\n      }\\n    }, Prism.languages.jsx.tag); // The following will handle plain text inside tags\\n\\n    var stringifyToken = function (token) {\\n      if (!token) {\\n        return '';\\n      }\\n\\n      if (typeof token === 'string') {\\n        return token;\\n      }\\n\\n      if (typeof token.content === 'string') {\\n        return token.content;\\n      }\\n\\n      return token.content.map(stringifyToken).join('');\\n    };\\n\\n    var walkTokens = function (tokens) {\\n      var openedTags = [];\\n\\n      for (var i = 0; i < tokens.length; i++) {\\n        var token = tokens[i];\\n        var notTagNorBrace = false;\\n\\n        if (typeof token !== 'string') {\\n          if (token.type === 'tag' && token.content[0] && token.content[0].type === 'tag') {\\n            // We found a tag, now find its kind\\n            if (token.content[0].content[0].content === '</') {\\n              // Closing tag\\n              if (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token.content[0].content[1])) {\\n                // Pop matching opening tag\\n                openedTags.pop();\\n              }\\n            } else {\\n              if (token.content[token.content.length - 1].content === '/>') {// Autoclosed tag, ignore\\n              } else {\\n                // Opening tag\\n                openedTags.push({\\n                  tagName: stringifyToken(token.content[0].content[1]),\\n                  openedBraces: 0\\n                });\\n              }\\n            }\\n          } else if (openedTags.length > 0 && token.type === 'punctuation' && token.content === '{') {\\n            // Here we might have entered a JSX context inside a tag\\n            openedTags[openedTags.length - 1].openedBraces++;\\n          } else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token.type === 'punctuation' && token.content === '}') {\\n            // Here we might have left a JSX context inside a tag\\n            openedTags[openedTags.length - 1].openedBraces--;\\n          } else {\\n            notTagNorBrace = true;\\n          }\\n        }\\n\\n        if (notTagNorBrace || typeof token === 'string') {\\n          if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {\\n            // Here we are inside a tag, and not inside a JSX context.\\n            // That's plain text: drop any tokens matched.\\n            var plainText = stringifyToken(token); // And merge text with adjacent text\\n\\n            if (i < tokens.length - 1 && (typeof tokens[i + 1] === 'string' || tokens[i + 1].type === 'plain-text')) {\\n              plainText += stringifyToken(tokens[i + 1]);\\n              tokens.splice(i + 1, 1);\\n            }\\n\\n            if (i > 0 && (typeof tokens[i - 1] === 'string' || tokens[i - 1].type === 'plain-text')) {\\n              plainText = stringifyToken(tokens[i - 1]) + plainText;\\n              tokens.splice(i - 1, 1);\\n              i--;\\n            }\\n\\n            tokens[i] = new Prism.Token('plain-text', plainText, null, plainText);\\n          }\\n        }\\n\\n        if (token.content && typeof token.content !== 'string') {\\n          walkTokens(token.content);\\n        }\\n      }\\n    };\\n\\n    Prism.hooks.add('after-tokenize', function (env) {\\n      if (env.language !== 'jsx' && env.language !== 'tsx') {\\n        return;\\n      }\\n\\n      walkTokens(env.tokens);\\n    });\\n  })(Prism);\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"default\",\"jsx\",\"Prism\",\"register\",\"_javascript\",\"_markup\",\"re\",\"source\",\"flags\",\"replace\",\"space\",\"braces\",\"spread\",\"RegExp\",\"javascript\",\"util\",\"clone\",\"languages\",\"extend\",\"tag\",\"pattern\",\"inside\",\"insertBefore\",\"script\",\"alias\",\"rest\",\"stringifyToken\",\"token\",\"content\",\"map\",\"join\",\"walkTokens\",\"tokens\",\"openedTags\",\"i\",\"length\",\"notTagNorBrace\",\"type\",\"tagName\",\"pop\",\"push\",\"openedBraces\",\"plainText\",\"splice\",\"Token\",\"hooks\",\"add\",\"env\",\"language\",\"Object\",\"defineProperty\",\"value\",\"displayName\",\"aliases\"]\n}\n"]