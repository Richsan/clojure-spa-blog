["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/idris.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$idris=function(global,require,module,exports){function idris(Prism){Prism.register(_haskell.default);Prism.languages.idris=Prism.languages.extend(\"haskell\",{comment:{pattern:/(?:(?:--|\\|\\|\\|).*$|\\{-[\\s\\S]*?-\\})/m},keyword:/\\b(?:Type|case|class|codata|constructor|corecord|data|do|dsl|else|export|if|implementation|implicit|import|impossible|in|infix|infixl|infixr|instance|interface|let|module|mutual|namespace|of|parameters|partial|postulate|private|proof|public|quoteGoal|record|rewrite|syntax|then|total|using|where|with)\\b/,\nbuiltin:void 0});Prism.languages.insertBefore(\"idris\",\"keyword\",{\"import-statement\":{pattern:/(^\\s*import\\s+)(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*/m,lookbehind:!0,inside:{punctuation:/\\./}}});Prism.languages.idr=Prism.languages.idris}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=idris;var _haskell=function(obj){return obj&&obj.__esModule?obj:{default:obj}}(require(\"module$node_modules$refractor$lang$haskell\"));idris.displayName=\"idris\";idris.aliases=[\"idr\"]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$idris\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = idris;\n\nvar _haskell = _interopRequireDefault(require(\"./haskell.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// @ts-nocheck\nidris.displayName = 'idris';\nidris.aliases = ['idr'];\n/** @type {import('../core.js').Syntax} */\n\nfunction idris(Prism) {\n  Prism.register(_haskell.default);\n  Prism.languages.idris = Prism.languages.extend('haskell', {\n    comment: {\n      pattern: /(?:(?:--|\\|\\|\\|).*$|\\{-[\\s\\S]*?-\\})/m\n    },\n    keyword: /\\b(?:Type|case|class|codata|constructor|corecord|data|do|dsl|else|export|if|implementation|implicit|import|impossible|in|infix|infixl|infixr|instance|interface|let|module|mutual|namespace|of|parameters|partial|postulate|private|proof|public|quoteGoal|record|rewrite|syntax|then|total|using|where|with)\\b/,\n    builtin: undefined\n  });\n  Prism.languages.insertBefore('idris', 'keyword', {\n    'import-statement': {\n      pattern: /(^\\s*import\\s+)(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*/m,\n      lookbehind: true,\n      inside: {\n        punctuation: /\\./\n      }\n    }\n  });\n  Prism.languages.idr = Prism.languages.idris;\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$refractor$lang$haskell"]],"~:properties",["^5",["punctuation","aliases","displayName","__esModule","idris","lookbehind","value","keyword","pattern","inside","idr","comment","builtin","default"]],"~:compiled-at",1676841365423,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$idris.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,wCAAA,CAA6D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAiBrGC,QAASA,MAAK,CAACC,KAAD,CAAQ,CACpBA,KAAMC,CAAAA,QAAN,CAAeC,QAASC,CAAAA,OAAxB,CACAH,MAAMI,CAAAA,SAAUL,CAAAA,KAAhB,CAAwBC,KAAMI,CAAAA,SAAUC,CAAAA,MAAhB,CAAuB,SAAvB,CAAkC,CACxDC,QAAS,CACPC,QAAS,sCADF,CAD+C,CAIxDC,QAAS,iTAJ+C;AAKxDC,QAASC,IAAAA,EAL+C,CAAlC,CAOxBV,MAAMI,CAAAA,SAAUO,CAAAA,YAAhB,CAA6B,OAA7B,CAAsC,SAAtC,CAAiD,CAC/C,mBAAoB,CAClBJ,QAAS,mDADS,CAElBK,WAAY,CAAA,CAFM,CAGlBC,OAAQ,CACNC,YAAa,IADP,CAHU,CAD2B,CAAjD,CASAd,MAAMI,CAAAA,SAAUW,CAAAA,GAAhB,CAAsBf,KAAMI,CAAAA,SAAUL,CAAAA,KAlBlB,CAdtBiB,MAAOC,CAAAA,cAAP,CAAsBnB,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CoB,MAAO,CAAA,CADoC,CAA7C,CAGApB,QAAQK,CAAAA,OAAR,CAAkBJ,KAElB,KAAIG,SAEJiB,QAA+B,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAIC,CAAAA,UAAX,CAAwBD,GAAxB,CAA8B,CAAEjB,QAASiB,GAAX,CAAvC,CAFtB,CAAuBxB,OAAA,CAAQ,4CAAR,CAAvB,CAKfG,MAAMuB,CAAAA,WAAN,CAAoB,OACpBvB,MAAMwB,CAAAA,OAAN,CAAgB,CAAC,KAAD,CAdqF;\",\n\"sources\":[\"node_modules/refractor/lang/idris.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$idris\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = idris;\\n\\nvar _haskell = _interopRequireDefault(require(\\\"./haskell.js\\\"));\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\n// @ts-nocheck\\nidris.displayName = 'idris';\\nidris.aliases = ['idr'];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction idris(Prism) {\\n  Prism.register(_haskell.default);\\n  Prism.languages.idris = Prism.languages.extend('haskell', {\\n    comment: {\\n      pattern: /(?:(?:--|\\\\|\\\\|\\\\|).*$|\\\\{-[\\\\s\\\\S]*?-\\\\})/m\\n    },\\n    keyword: /\\\\b(?:Type|case|class|codata|constructor|corecord|data|do|dsl|else|export|if|implementation|implicit|import|impossible|in|infix|infixl|infixr|instance|interface|let|module|mutual|namespace|of|parameters|partial|postulate|private|proof|public|quoteGoal|record|rewrite|syntax|then|total|using|where|with)\\\\b/,\\n    builtin: undefined\\n  });\\n  Prism.languages.insertBefore('idris', 'keyword', {\\n    'import-statement': {\\n      pattern: /(^\\\\s*import\\\\s+)(?:[A-Z][\\\\w']*)(?:\\\\.[A-Z][\\\\w']*)*/m,\\n      lookbehind: true,\\n      inside: {\\n        punctuation: /\\\\./\\n      }\\n    }\\n  });\\n  Prism.languages.idr = Prism.languages.idris;\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"idris\",\"Prism\",\"register\",\"_haskell\",\"default\",\"languages\",\"extend\",\"comment\",\"pattern\",\"keyword\",\"builtin\",\"undefined\",\"insertBefore\",\"lookbehind\",\"inside\",\"punctuation\",\"idr\",\"Object\",\"defineProperty\",\"value\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"displayName\",\"aliases\"]\n}\n"]