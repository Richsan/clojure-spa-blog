["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/mizar.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$mizar=function(global,require,module,exports){function mizar(Prism){Prism.languages.mizar={comment:/::.+/,keyword:/@proof\\b|\\b(?:according|aggregate|all|and|antonym|are|as|associativity|assume|asymmetry|attr|be|begin|being|by|canceled|case|cases|clusters?|coherence|commutativity|compatibility|connectedness|consider|consistency|constructors|contradiction|correctness|def|deffunc|define|definitions?|defpred|do|does|end|environ|equals|ex|exactly|existence|for|from|func|given|hence|hereby|holds|idempotence|identity|iff?|implies|involutiveness|irreflexivity|is|it|let|means|mode|non|not|notations?|now|of|or|otherwise|over|per|pred|prefix|projectivity|proof|provided|qua|reconsider|redefine|reduce|reducibility|reflexivity|registrations?|requirements|reserve|sch|schemes?|section|selector|set|sethood|st|struct|such|suppose|symmetry|synonym|take|that|the|then|theorems?|thesis|thus|to|transitivity|uniqueness|vocabular(?:ies|y)|when|where|with|wrt)\\b/,\nparameter:{pattern:/\\$(?:10|\\d)/,alias:\"variable\"},variable:/\\b\\w+(?=:)/,number:/(?:\\b|-)\\d+\\b/,operator:/\\.\\.\\.|->|&|\\.?=/,punctuation:/\\(#|#\\)|[,:;\\[\\](){}]/}}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=mizar;mizar.displayName=\"mizar\";mizar.aliases=[]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$mizar\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = mizar;\n// @ts-nocheck\nmizar.displayName = 'mizar';\nmizar.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nfunction mizar(Prism) {\n  Prism.languages.mizar = {\n    comment: /::.+/,\n    keyword: /@proof\\b|\\b(?:according|aggregate|all|and|antonym|are|as|associativity|assume|asymmetry|attr|be|begin|being|by|canceled|case|cases|clusters?|coherence|commutativity|compatibility|connectedness|consider|consistency|constructors|contradiction|correctness|def|deffunc|define|definitions?|defpred|do|does|end|environ|equals|ex|exactly|existence|for|from|func|given|hence|hereby|holds|idempotence|identity|iff?|implies|involutiveness|irreflexivity|is|it|let|means|mode|non|not|notations?|now|of|or|otherwise|over|per|pred|prefix|projectivity|proof|provided|qua|reconsider|redefine|reduce|reducibility|reflexivity|registrations?|requirements|reserve|sch|schemes?|section|selector|set|sethood|st|struct|such|suppose|symmetry|synonym|take|that|the|then|theorems?|thesis|thus|to|transitivity|uniqueness|vocabular(?:ies|y)|when|where|with|wrt)\\b/,\n    parameter: {\n      pattern: /\\$(?:10|\\d)/,\n      alias: 'variable'\n    },\n    variable: /\\b\\w+(?=:)/,\n    number: /(?:\\b|-)\\d+\\b/,\n    operator: /\\.\\.\\.|->|&|\\.?=/,\n    punctuation: /\\(#|#\\)|[,:;\\[\\](){}]/\n  };\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["punctuation","parameter","aliases","operator","displayName","__esModule","value","variable","keyword","number","pattern","mizar","alias","comment","default"]],"~:compiled-at",1676841365437,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$mizar.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,wCAAA,CAA6D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAYrGC,QAASA,MAAK,CAACC,KAAD,CAAQ,CACpBA,KAAMC,CAAAA,SAAUF,CAAAA,KAAhB,CAAwB,CACtBG,QAAS,MADa,CAEtBC,QAAS,q0BAFa;AAGtBC,UAAW,CACTC,QAAS,aADA,CAETC,MAAO,UAFE,CAHW,CAOtBC,SAAU,YAPY,CAQtBC,OAAQ,eARc,CAStBC,SAAU,kBATY,CAUtBC,YAAa,uBAVS,CADJ,CATtBC,MAAOC,CAAAA,cAAP,CAAsBd,OAAtB,CAA+B,YAA/B,CAA6C,CAC3Ce,MAAO,CAAA,CADoC,CAA7C,CAGAf,QAAQgB,CAAAA,OAAR,CAAkBf,KAElBA,MAAMgB,CAAAA,WAAN,CAAoB,OACpBhB,MAAMiB,CAAAA,OAAN,CAAgB,EATqF;\",\n\"sources\":[\"node_modules/refractor/lang/mizar.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$mizar\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = mizar;\\n// @ts-nocheck\\nmizar.displayName = 'mizar';\\nmizar.aliases = [];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction mizar(Prism) {\\n  Prism.languages.mizar = {\\n    comment: /::.+/,\\n    keyword: /@proof\\\\b|\\\\b(?:according|aggregate|all|and|antonym|are|as|associativity|assume|asymmetry|attr|be|begin|being|by|canceled|case|cases|clusters?|coherence|commutativity|compatibility|connectedness|consider|consistency|constructors|contradiction|correctness|def|deffunc|define|definitions?|defpred|do|does|end|environ|equals|ex|exactly|existence|for|from|func|given|hence|hereby|holds|idempotence|identity|iff?|implies|involutiveness|irreflexivity|is|it|let|means|mode|non|not|notations?|now|of|or|otherwise|over|per|pred|prefix|projectivity|proof|provided|qua|reconsider|redefine|reduce|reducibility|reflexivity|registrations?|requirements|reserve|sch|schemes?|section|selector|set|sethood|st|struct|such|suppose|symmetry|synonym|take|that|the|then|theorems?|thesis|thus|to|transitivity|uniqueness|vocabular(?:ies|y)|when|where|with|wrt)\\\\b/,\\n    parameter: {\\n      pattern: /\\\\$(?:10|\\\\d)/,\\n      alias: 'variable'\\n    },\\n    variable: /\\\\b\\\\w+(?=:)/,\\n    number: /(?:\\\\b|-)\\\\d+\\\\b/,\\n    operator: /\\\\.\\\\.\\\\.|->|&|\\\\.?=/,\\n    punctuation: /\\\\(#|#\\\\)|[,:;\\\\[\\\\](){}]/\\n  };\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"mizar\",\"Prism\",\"languages\",\"comment\",\"keyword\",\"parameter\",\"pattern\",\"alias\",\"variable\",\"number\",\"operator\",\"punctuation\",\"Object\",\"defineProperty\",\"value\",\"default\",\"displayName\",\"aliases\"]\n}\n"]