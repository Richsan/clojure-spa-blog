["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/firestore-security-rules.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$firestore_security_rules=function(global,require,module,exports){function firestoreSecurityRules(Prism){Prism.register(_clike.default);Prism.languages[\"firestore-security-rules\"]=Prism.languages.extend(\"clike\",{comment:/\\/\\/.*/,keyword:/\\b(?:allow|function|if|match|null|return|rules_version|service)\\b/,operator:/&&|\\|\\||[<>!=]=?|[-+*/%]|\\b(?:in|is)\\b/});delete Prism.languages[\"firestore-security-rules\"][\"class-name\"];Prism.languages.insertBefore(\"firestore-security-rules\",\n\"keyword\",{path:{pattern:/(^|[\\s(),])(?:\\/(?:[\\w\\xA0-\\uFFFF]+|\\{[\\w\\xA0-\\uFFFF]+(?:=\\*\\*)?\\}|\\$\\([\\w\\xA0-\\uFFFF.]+\\)))+/,lookbehind:!0,greedy:!0,inside:{variable:{pattern:/\\{[\\w\\xA0-\\uFFFF]+(?:=\\*\\*)?\\}|\\$\\([\\w\\xA0-\\uFFFF.]+\\)/,inside:{operator:/=/,keyword:/\\*\\*/,punctuation:/[.$(){}]/}},punctuation:/\\//}},method:{pattern:/(\\ballow\\s+)[a-z]+(?:\\s*,\\s*[a-z]+)*(?=\\s*[:;])/,lookbehind:!0,alias:\"builtin\",inside:{punctuation:/,/}}})}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=\nfirestoreSecurityRules;var _clike=function(obj){return obj&&obj.__esModule?obj:{default:obj}}(require(\"module$node_modules$refractor$lang$clike\"));firestoreSecurityRules.displayName=\"firestore-security-rules\";firestoreSecurityRules.aliases=[]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$firestore_security_rules\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = firestoreSecurityRules;\n\nvar _clike = _interopRequireDefault(require(\"./clike.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// @ts-nocheck\nfirestoreSecurityRules.displayName = 'firestore-security-rules';\nfirestoreSecurityRules.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nfunction firestoreSecurityRules(Prism) {\n  Prism.register(_clike.default);\n  Prism.languages['firestore-security-rules'] = Prism.languages.extend('clike', {\n    comment: /\\/\\/.*/,\n    keyword: /\\b(?:allow|function|if|match|null|return|rules_version|service)\\b/,\n    operator: /&&|\\|\\||[<>!=]=?|[-+*/%]|\\b(?:in|is)\\b/\n  });\n  delete Prism.languages['firestore-security-rules']['class-name'];\n  Prism.languages.insertBefore('firestore-security-rules', 'keyword', {\n    path: {\n      pattern: /(^|[\\s(),])(?:\\/(?:[\\w\\xA0-\\uFFFF]+|\\{[\\w\\xA0-\\uFFFF]+(?:=\\*\\*)?\\}|\\$\\([\\w\\xA0-\\uFFFF.]+\\)))+/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        variable: {\n          pattern: /\\{[\\w\\xA0-\\uFFFF]+(?:=\\*\\*)?\\}|\\$\\([\\w\\xA0-\\uFFFF.]+\\)/,\n          inside: {\n            operator: /=/,\n            keyword: /\\*\\*/,\n            punctuation: /[.$(){}]/\n          }\n        },\n        punctuation: /\\//\n      }\n    },\n    method: {\n      // to make the pattern shorter, the actual method names are omitted\n      pattern: /(\\ballow\\s+)[a-z]+(?:\\s*,\\s*[a-z]+)*(?=\\s*[:;])/,\n      lookbehind: true,\n      alias: 'builtin',\n      inside: {\n        punctuation: /,/\n      }\n    }\n  });\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$refractor$lang$clike"]],"~:properties",["^5",["punctuation","aliases","operator","displayName","method","__esModule","path","lookbehind","value","variable","keyword","greedy","pattern","inside","alias","comment","default"]],"~:compiled-at",1676841365411,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$firestore_security_rules.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,CAAA,2DAAA,CAAgF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAiBxHC,QAASA,uBAAsB,CAACC,KAAD,CAAQ,CACrCA,KAAMC,CAAAA,QAAN,CAAeC,MAAOC,CAAAA,OAAtB,CACAH,MAAMI,CAAAA,SAAN,CAAgB,0BAAhB,CAAA,CAA8CJ,KAAMI,CAAAA,SAAUC,CAAAA,MAAhB,CAAuB,OAAvB,CAAgC,CAC5EC,QAAS,QADmE,CAE5EC,QAAS,mEAFmE,CAG5EC,SAAU,wCAHkE,CAAhC,CAK9C,QAAOR,KAAMI,CAAAA,SAAN,CAAgB,0BAAhB,CAAA,CAA4C,YAA5C,CACPJ,MAAMI,CAAAA,SAAUK,CAAAA,YAAhB,CAA6B,0BAA7B;AAAyD,SAAzD,CAAoE,CAClEC,KAAM,CACJC,QAAS,+FADL,CAEJC,WAAY,CAAA,CAFR,CAGJC,OAAQ,CAAA,CAHJ,CAIJC,OAAQ,CACNC,SAAU,CACRJ,QAAS,wDADD,CAERG,OAAQ,CACNN,SAAU,GADJ,CAEND,QAAS,MAFH,CAGNS,YAAa,UAHP,CAFA,CADJ,CASNA,YAAa,IATP,CAJJ,CAD4D,CAiBlEC,OAAQ,CAENN,QAAS,iDAFH,CAGNC,WAAY,CAAA,CAHN,CAINM,MAAO,SAJD,CAKNJ,OAAQ,CACNE,YAAa,GADP,CALF,CAjB0D,CAApE,CARqC,CAdvCG,MAAOC,CAAAA,cAAP,CAAsBtB,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CuB,MAAO,CAAA,CADoC,CAA7C,CAGAvB,QAAQK,CAAAA,OAAR;AAAkBJ,sBAElB,KAAIG,OAEJoB,QAA+B,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAIC,CAAAA,UAAX,CAAwBD,GAAxB,CAA8B,CAAEpB,QAASoB,GAAX,CAAvC,CAFxB,CAAuB3B,OAAA,CAAQ,0CAAR,CAAvB,CAKbG,uBAAuB0B,CAAAA,WAAvB,CAAqC,0BACrC1B,uBAAuB2B,CAAAA,OAAvB,CAAiC,EAduF;\",\n\"sources\":[\"node_modules/refractor/lang/firestore-security-rules.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$firestore_security_rules\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = firestoreSecurityRules;\\n\\nvar _clike = _interopRequireDefault(require(\\\"./clike.js\\\"));\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\n// @ts-nocheck\\nfirestoreSecurityRules.displayName = 'firestore-security-rules';\\nfirestoreSecurityRules.aliases = [];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction firestoreSecurityRules(Prism) {\\n  Prism.register(_clike.default);\\n  Prism.languages['firestore-security-rules'] = Prism.languages.extend('clike', {\\n    comment: /\\\\/\\\\/.*/,\\n    keyword: /\\\\b(?:allow|function|if|match|null|return|rules_version|service)\\\\b/,\\n    operator: /&&|\\\\|\\\\||[<>!=]=?|[-+*/%]|\\\\b(?:in|is)\\\\b/\\n  });\\n  delete Prism.languages['firestore-security-rules']['class-name'];\\n  Prism.languages.insertBefore('firestore-security-rules', 'keyword', {\\n    path: {\\n      pattern: /(^|[\\\\s(),])(?:\\\\/(?:[\\\\w\\\\xA0-\\\\uFFFF]+|\\\\{[\\\\w\\\\xA0-\\\\uFFFF]+(?:=\\\\*\\\\*)?\\\\}|\\\\$\\\\([\\\\w\\\\xA0-\\\\uFFFF.]+\\\\)))+/,\\n      lookbehind: true,\\n      greedy: true,\\n      inside: {\\n        variable: {\\n          pattern: /\\\\{[\\\\w\\\\xA0-\\\\uFFFF]+(?:=\\\\*\\\\*)?\\\\}|\\\\$\\\\([\\\\w\\\\xA0-\\\\uFFFF.]+\\\\)/,\\n          inside: {\\n            operator: /=/,\\n            keyword: /\\\\*\\\\*/,\\n            punctuation: /[.$(){}]/\\n          }\\n        },\\n        punctuation: /\\\\//\\n      }\\n    },\\n    method: {\\n      // to make the pattern shorter, the actual method names are omitted\\n      pattern: /(\\\\ballow\\\\s+)[a-z]+(?:\\\\s*,\\\\s*[a-z]+)*(?=\\\\s*[:;])/,\\n      lookbehind: true,\\n      alias: 'builtin',\\n      inside: {\\n        punctuation: /,/\\n      }\\n    }\\n  });\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"firestoreSecurityRules\",\"Prism\",\"register\",\"_clike\",\"default\",\"languages\",\"extend\",\"comment\",\"keyword\",\"operator\",\"insertBefore\",\"path\",\"pattern\",\"lookbehind\",\"greedy\",\"inside\",\"variable\",\"punctuation\",\"method\",\"alias\",\"Object\",\"defineProperty\",\"value\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"displayName\",\"aliases\"]\n}\n"]