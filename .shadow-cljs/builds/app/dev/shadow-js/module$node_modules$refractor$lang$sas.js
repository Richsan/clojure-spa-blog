["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/sas.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$sas=function(global,require,module,exports){function sas(Prism$jscomp$0){(function(Prism){var stringPattern=/(?:\"(?:\"\"|[^\"])*\"(?!\")|'(?:''|[^'])*'(?!'))/.source,number=/\\b(?:\\d[\\da-f]*x|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i,numericConstant={pattern:RegExp(stringPattern+\"[bx]\"),alias:\"number\"},macroVariable={pattern:/&[a-z_]\\w*/i},macroKeyword={pattern:/((?:^|\\s|=|\\())%(?:ABORT|BY|CMS|COPY|DISPLAY|DO|ELSE|END|EVAL|GLOBAL|GO|GOTO|IF|INC|INCLUDE|INDEX|INPUT|KTRIM|LENGTH|LET|LIST|LOCAL|PUT|QKTRIM|QSCAN|QSUBSTR|QSYSFUNC|QUPCASE|RETURN|RUN|SCAN|SUBSTR|SUPERQ|SYMDEL|SYMEXIST|SYMGLOBL|SYMLOCAL|SYSCALL|SYSEVALF|SYSEXEC|SYSFUNC|SYSGET|SYSRPUT|THEN|TO|TSO|UNQUOTE|UNTIL|UPCASE|WHILE|WINDOW)\\b/i,\nlookbehind:!0,alias:\"keyword\"},step={pattern:/(^|\\s)(?:proc\\s+\\w+|data(?!=)|quit|run)\\b/i,alias:\"keyword\",lookbehind:!0},comment=[/\\/\\*[\\s\\S]*?\\*\\//,{pattern:/(^[ \\t]*|;\\s*)\\*[^;]*;/m,lookbehind:!0}],string={pattern:RegExp(stringPattern),greedy:!0},punctuation=/[$%@.(){}\\[\\];,\\\\]/,func={pattern:/%?\\b\\w+(?=\\()/,alias:\"keyword\"},args={function:func,\"arg-value\":{pattern:/(=\\s*)[A-Z\\.]+/i,lookbehind:!0},operator:/=/,\"macro-variable\":macroVariable,arg:{pattern:/[A-Z]+/i,alias:\"keyword\"},number,\"numeric-constant\":numericConstant,\npunctuation,string},format={pattern:/\\b(?:format|put)\\b=?[\\w'$.]+/i,inside:{keyword:/^(?:format|put)(?==)/i,equals:/=/,format:{pattern:/(?:\\w|\\$\\d)+\\.\\d?/,alias:\"number\"}}},altformat={pattern:/\\b(?:format|put)\\s+[\\w']+(?:\\s+[$.\\w]+)+(?=;)/i,inside:{keyword:/^(?:format|put)/i,format:{pattern:/[\\w$]+\\.\\d?/,alias:\"number\"}}},globalStatements={pattern:/((?:^|\\s)=?)(?:catname|checkpoint execute_always|dm|endsas|filename|footnote|%include|libname|%list|lock|missing|options|page|resetline|%run|sasfile|skip|sysecho|title\\d?)\\b/i,\nlookbehind:!0,alias:\"keyword\"},submitStatement={pattern:/(^|\\s)(?:submit(?:\\s+(?:load|norun|parseonly))?|endsubmit)\\b/i,lookbehind:!0,alias:\"keyword\"},actionSets=/aStore|accessControl|aggregation|audio|autotune|bayesianNetClassifier|bioMedImage|boolRule|builtins|cardinality|cdm|clustering|conditionalRandomFields|configuration|copula|countreg|dataDiscovery|dataPreprocess|dataSciencePilot|dataStep|decisionTree|deduplication|deepLearn|deepNeural|deepRnn|ds2|ecm|entityRes|espCluster|explainModel|factmac|fastKnn|fcmpact|fedSql|freqTab|gVarCluster|gam|gleam|graphSemiSupLearn|hiddenMarkovModel|hyperGroup|ica|image|iml|kernalPca|langModel|ldaTopic|loadStreams|mbc|mixed|mlTools|modelPublishing|network|neuralNet|nmf|nonParametricBayes|nonlinear|optNetwork|optimization|panel|pca|percentile|phreg|pls|qkb|qlim|quantreg|recommend|regression|reinforcementLearn|robustPca|ruleMining|sampling|sandwich|sccasl|search(?:Analytics)?|sentimentAnalysis|sequence|session(?:Prop)?|severity|simSystem|simple|smartData|sparkEmbeddedProcess|sparseML|spatialreg|spc|stabilityMonitoring|svDataDescription|svm|table|text(?:Filters|Frequency|Mining|Parse|Rule(?:Develop|Score)|Topic|Util)|timeData|transpose|tsInfo|tsReconcile|uniTimeSeries|varReduce/.source,\ncasActions={pattern:RegExp(/(^|\\s)(?:action\\s+)?(?:<act>)\\.[a-z]+\\b[^;]+/.source.replace(/<act>/g,function(){return actionSets}),\"i\"),lookbehind:!0,inside:{keyword:RegExp(/(?:<act>)\\.[a-z]+\\b/.source.replace(/<act>/g,function(){return actionSets}),\"i\"),action:{pattern:/(?:action)/i,alias:\"keyword\"},comment,function:func,\"arg-value\":args[\"arg-value\"],operator:args.operator,argument:args.arg,number,\"numeric-constant\":numericConstant,punctuation,string}},keywords={pattern:/((?:^|\\s)=?)(?:after|analysis|and|array|barchart|barwidth|begingraph|by|call|cas|cbarline|cfill|class(?:lev)?|close|column|computed?|contains|continue|data(?==)|define|delete|describe|document|do\\s+over|do|dol|drop|dul|else|end(?:comp|source)?|entryTitle|eval(?:uate)?|exec(?:ute)?|exit|file(?:name)?|fill(?:attrs)?|flist|fnc|function(?:list)?|global|goto|group(?:by)?|headline|headskip|histogram|if|infile|keep|keylabel|keyword|label|layout|leave|legendlabel|length|libname|loadactionset|merge|midpoints|_?null_|name|noobs|nowd|ods|options|or|otherwise|out(?:put)?|over(?:lay)?|plot|print|put|raise|ranexp|rannor|rbreak|retain|return|select|session|sessref|set|source|statgraph|sum|summarize|table|temp|terminate|then\\s+do|then|title\\d?|to|var|when|where|xaxisopts|y2axisopts|yaxisopts)\\b/i,\nlookbehind:!0};Prism.languages.sas={datalines:{pattern:/^([ \\t]*)(?:cards|(?:data)?lines);[\\s\\S]+?^[ \\t]*;/im,lookbehind:!0,alias:\"string\",inside:{keyword:{pattern:/^(?:cards|(?:data)?lines)/i},punctuation:/;/}},\"proc-sql\":{pattern:/(^proc\\s+(?:fed)?sql(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|data|quit|run);|(?![\\s\\S]))/im,lookbehind:!0,inside:{sql:{pattern:RegExp(/^[ \\t]*(?:select|alter\\s+table|(?:create|describe|drop)\\s+(?:index|table(?:\\s+constraints)?|view)|create\\s+unique\\s+index|insert\\s+into|update)(?:<str>|[^;\"'])+;/.source.replace(/<str>/g,\nfunction(){return stringPattern}),\"im\"),alias:\"language-sql\",inside:Prism.languages.sql},\"global-statements\":globalStatements,\"sql-statements\":{pattern:/(^|\\s)(?:disconnect\\s+from|begin|commit|exec(?:ute)?|reset|rollback|validate)\\b/i,lookbehind:!0,alias:\"keyword\"},number,\"numeric-constant\":numericConstant,punctuation,string}},\"proc-groovy\":{pattern:/(^proc\\s+groovy(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|data|quit|run);|(?![\\s\\S]))/im,lookbehind:!0,inside:{comment,groovy:{pattern:RegExp(/(^[ \\t]*submit(?:\\s+(?:load|norun|parseonly))?)(?:<str>|[^\"'])+?(?=endsubmit;)/.source.replace(/<str>/g,\nfunction(){return stringPattern}),\"im\"),lookbehind:!0,alias:\"language-groovy\",inside:Prism.languages.groovy},keyword:keywords,\"submit-statement\":submitStatement,\"global-statements\":globalStatements,number,\"numeric-constant\":numericConstant,punctuation,string}},\"proc-lua\":{pattern:/(^proc\\s+lua(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|data|quit|run);|(?![\\s\\S]))/im,lookbehind:!0,inside:{comment,lua:{pattern:RegExp(/(^[ \\t]*submit(?:\\s+(?:load|norun|parseonly))?)(?:<str>|[^\"'])+?(?=endsubmit;)/.source.replace(/<str>/g,\nfunction(){return stringPattern}),\"im\"),lookbehind:!0,alias:\"language-lua\",inside:Prism.languages.lua},keyword:keywords,\"submit-statement\":submitStatement,\"global-statements\":globalStatements,number,\"numeric-constant\":numericConstant,punctuation,string}},\"proc-cas\":{pattern:/(^proc\\s+cas(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|quit|data);|(?![\\s\\S]))/im,lookbehind:!0,inside:{comment,\"statement-var\":{pattern:/((?:^|\\s)=?)saveresult\\s[^;]+/im,lookbehind:!0,inside:{statement:{pattern:/^saveresult\\s+\\S+/i,\ninside:{keyword:/^(?:saveresult)/i}},rest:args}},\"cas-actions\":casActions,statement:{pattern:/((?:^|\\s)=?)(?:default|(?:un)?set|on|output|upload)[^;]+/im,lookbehind:!0,inside:args},step,keyword:keywords,function:func,format,altformat,\"global-statements\":globalStatements,number,\"numeric-constant\":numericConstant,punctuation,string}},\"proc-args\":{pattern:RegExp(/(^proc\\s+\\w+\\s+)(?!\\s)(?:[^;\"']|<str>)+;/.source.replace(/<str>/g,function(){return stringPattern}),\"im\"),lookbehind:!0,inside:args},\"macro-keyword\":macroKeyword,\n\"macro-variable\":macroVariable,\"macro-string-functions\":{pattern:/((?:^|\\s|=))%(?:BQUOTE|NRBQUOTE|NRQUOTE|NRSTR|QUOTE|STR)\\(.*?(?:[^%]\\))/i,lookbehind:!0,inside:{function:{pattern:/%(?:BQUOTE|NRBQUOTE|NRQUOTE|NRSTR|QUOTE|STR)/i,alias:\"keyword\"},\"macro-keyword\":macroKeyword,\"macro-variable\":macroVariable,\"escaped-char\":{pattern:/%['\"()<>=¬^~;,#]/},punctuation}},\"macro-declaration\":{pattern:/^%macro[^;]+(?=;)/im,inside:{keyword:/%macro/i}},\"macro-end\":{pattern:/^%mend[^;]+(?=;)/im,inside:{keyword:/%mend/i}},\nmacro:{pattern:/%_\\w+(?=\\()/,alias:\"keyword\"},input:{pattern:/\\binput\\s[-\\w\\s/*.$&]+;/i,inside:{input:{alias:\"keyword\",pattern:/^input/i},comment,number,\"numeric-constant\":numericConstant}},\"options-args\":{pattern:/(^options)[-'\"|/\\\\<>*+=:()\\w\\s]*(?=;)/im,lookbehind:!0,inside:args},\"cas-actions\":casActions,comment,function:func,format,altformat,\"numeric-constant\":numericConstant,datetime:{pattern:RegExp(stringPattern+\"(?:dt?|t)\"),alias:\"number\"},string,step,keyword:keywords,\"operator-keyword\":{pattern:/\\b(?:eq|ge|gt|in|le|lt|ne|not)\\b/i,\nalias:\"operator\"},number,operator:/\\*\\*?|\\|\\|?|!!?|¦¦?|<[>=]?|>[<=]?|[-+\\/=&]|[~¬^]=?/,punctuation}})(Prism$jscomp$0)}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=sas;sas.displayName=\"sas\";sas.aliases=[]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$sas\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = sas;\n// @ts-nocheck\nsas.displayName = 'sas';\nsas.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nfunction sas(Prism) {\n  ;\n\n  (function (Prism) {\n    var stringPattern = /(?:\"(?:\"\"|[^\"])*\"(?!\")|'(?:''|[^'])*'(?!'))/.source;\n    var number = /\\b(?:\\d[\\da-f]*x|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i;\n    var numericConstant = {\n      pattern: RegExp(stringPattern + '[bx]'),\n      alias: 'number'\n    };\n    var macroVariable = {\n      pattern: /&[a-z_]\\w*/i\n    };\n    var macroKeyword = {\n      pattern: /((?:^|\\s|=|\\())%(?:ABORT|BY|CMS|COPY|DISPLAY|DO|ELSE|END|EVAL|GLOBAL|GO|GOTO|IF|INC|INCLUDE|INDEX|INPUT|KTRIM|LENGTH|LET|LIST|LOCAL|PUT|QKTRIM|QSCAN|QSUBSTR|QSYSFUNC|QUPCASE|RETURN|RUN|SCAN|SUBSTR|SUPERQ|SYMDEL|SYMEXIST|SYMGLOBL|SYMLOCAL|SYSCALL|SYSEVALF|SYSEXEC|SYSFUNC|SYSGET|SYSRPUT|THEN|TO|TSO|UNQUOTE|UNTIL|UPCASE|WHILE|WINDOW)\\b/i,\n      lookbehind: true,\n      alias: 'keyword'\n    };\n    var step = {\n      pattern: /(^|\\s)(?:proc\\s+\\w+|data(?!=)|quit|run)\\b/i,\n      alias: 'keyword',\n      lookbehind: true\n    };\n    var comment = [/\\/\\*[\\s\\S]*?\\*\\//, {\n      pattern: /(^[ \\t]*|;\\s*)\\*[^;]*;/m,\n      lookbehind: true\n    }];\n    var string = {\n      pattern: RegExp(stringPattern),\n      greedy: true\n    };\n    var punctuation = /[$%@.(){}\\[\\];,\\\\]/;\n    var func = {\n      pattern: /%?\\b\\w+(?=\\()/,\n      alias: 'keyword'\n    };\n    var args = {\n      function: func,\n      'arg-value': {\n        pattern: /(=\\s*)[A-Z\\.]+/i,\n        lookbehind: true\n      },\n      operator: /=/,\n      'macro-variable': macroVariable,\n      arg: {\n        pattern: /[A-Z]+/i,\n        alias: 'keyword'\n      },\n      number: number,\n      'numeric-constant': numericConstant,\n      punctuation: punctuation,\n      string: string\n    };\n    var format = {\n      pattern: /\\b(?:format|put)\\b=?[\\w'$.]+/i,\n      inside: {\n        keyword: /^(?:format|put)(?==)/i,\n        equals: /=/,\n        format: {\n          pattern: /(?:\\w|\\$\\d)+\\.\\d?/,\n          alias: 'number'\n        }\n      }\n    };\n    var altformat = {\n      pattern: /\\b(?:format|put)\\s+[\\w']+(?:\\s+[$.\\w]+)+(?=;)/i,\n      inside: {\n        keyword: /^(?:format|put)/i,\n        format: {\n          pattern: /[\\w$]+\\.\\d?/,\n          alias: 'number'\n        }\n      }\n    };\n    var globalStatements = {\n      pattern: /((?:^|\\s)=?)(?:catname|checkpoint execute_always|dm|endsas|filename|footnote|%include|libname|%list|lock|missing|options|page|resetline|%run|sasfile|skip|sysecho|title\\d?)\\b/i,\n      lookbehind: true,\n      alias: 'keyword'\n    };\n    var submitStatement = {\n      pattern: /(^|\\s)(?:submit(?:\\s+(?:load|norun|parseonly))?|endsubmit)\\b/i,\n      lookbehind: true,\n      alias: 'keyword'\n    };\n    var actionSets = /aStore|accessControl|aggregation|audio|autotune|bayesianNetClassifier|bioMedImage|boolRule|builtins|cardinality|cdm|clustering|conditionalRandomFields|configuration|copula|countreg|dataDiscovery|dataPreprocess|dataSciencePilot|dataStep|decisionTree|deduplication|deepLearn|deepNeural|deepRnn|ds2|ecm|entityRes|espCluster|explainModel|factmac|fastKnn|fcmpact|fedSql|freqTab|gVarCluster|gam|gleam|graphSemiSupLearn|hiddenMarkovModel|hyperGroup|ica|image|iml|kernalPca|langModel|ldaTopic|loadStreams|mbc|mixed|mlTools|modelPublishing|network|neuralNet|nmf|nonParametricBayes|nonlinear|optNetwork|optimization|panel|pca|percentile|phreg|pls|qkb|qlim|quantreg|recommend|regression|reinforcementLearn|robustPca|ruleMining|sampling|sandwich|sccasl|search(?:Analytics)?|sentimentAnalysis|sequence|session(?:Prop)?|severity|simSystem|simple|smartData|sparkEmbeddedProcess|sparseML|spatialreg|spc|stabilityMonitoring|svDataDescription|svm|table|text(?:Filters|Frequency|Mining|Parse|Rule(?:Develop|Score)|Topic|Util)|timeData|transpose|tsInfo|tsReconcile|uniTimeSeries|varReduce/.source;\n    var casActions = {\n      pattern: RegExp(/(^|\\s)(?:action\\s+)?(?:<act>)\\.[a-z]+\\b[^;]+/.source.replace(/<act>/g, function () {\n        return actionSets;\n      }), 'i'),\n      lookbehind: true,\n      inside: {\n        keyword: RegExp(/(?:<act>)\\.[a-z]+\\b/.source.replace(/<act>/g, function () {\n          return actionSets;\n        }), 'i'),\n        action: {\n          pattern: /(?:action)/i,\n          alias: 'keyword'\n        },\n        comment: comment,\n        function: func,\n        'arg-value': args['arg-value'],\n        operator: args.operator,\n        argument: args.arg,\n        number: number,\n        'numeric-constant': numericConstant,\n        punctuation: punctuation,\n        string: string\n      }\n    };\n    var keywords = {\n      pattern: /((?:^|\\s)=?)(?:after|analysis|and|array|barchart|barwidth|begingraph|by|call|cas|cbarline|cfill|class(?:lev)?|close|column|computed?|contains|continue|data(?==)|define|delete|describe|document|do\\s+over|do|dol|drop|dul|else|end(?:comp|source)?|entryTitle|eval(?:uate)?|exec(?:ute)?|exit|file(?:name)?|fill(?:attrs)?|flist|fnc|function(?:list)?|global|goto|group(?:by)?|headline|headskip|histogram|if|infile|keep|keylabel|keyword|label|layout|leave|legendlabel|length|libname|loadactionset|merge|midpoints|_?null_|name|noobs|nowd|ods|options|or|otherwise|out(?:put)?|over(?:lay)?|plot|print|put|raise|ranexp|rannor|rbreak|retain|return|select|session|sessref|set|source|statgraph|sum|summarize|table|temp|terminate|then\\s+do|then|title\\d?|to|var|when|where|xaxisopts|y2axisopts|yaxisopts)\\b/i,\n      lookbehind: true\n    };\n    Prism.languages.sas = {\n      datalines: {\n        pattern: /^([ \\t]*)(?:cards|(?:data)?lines);[\\s\\S]+?^[ \\t]*;/im,\n        lookbehind: true,\n        alias: 'string',\n        inside: {\n          keyword: {\n            pattern: /^(?:cards|(?:data)?lines)/i\n          },\n          punctuation: /;/\n        }\n      },\n      'proc-sql': {\n        pattern: /(^proc\\s+(?:fed)?sql(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|data|quit|run);|(?![\\s\\S]))/im,\n        lookbehind: true,\n        inside: {\n          sql: {\n            pattern: RegExp(/^[ \\t]*(?:select|alter\\s+table|(?:create|describe|drop)\\s+(?:index|table(?:\\s+constraints)?|view)|create\\s+unique\\s+index|insert\\s+into|update)(?:<str>|[^;\"'])+;/.source.replace(/<str>/g, function () {\n              return stringPattern;\n            }), 'im'),\n            alias: 'language-sql',\n            inside: Prism.languages.sql\n          },\n          'global-statements': globalStatements,\n          'sql-statements': {\n            pattern: /(^|\\s)(?:disconnect\\s+from|begin|commit|exec(?:ute)?|reset|rollback|validate)\\b/i,\n            lookbehind: true,\n            alias: 'keyword'\n          },\n          number: number,\n          'numeric-constant': numericConstant,\n          punctuation: punctuation,\n          string: string\n        }\n      },\n      'proc-groovy': {\n        pattern: /(^proc\\s+groovy(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|data|quit|run);|(?![\\s\\S]))/im,\n        lookbehind: true,\n        inside: {\n          comment: comment,\n          groovy: {\n            pattern: RegExp(/(^[ \\t]*submit(?:\\s+(?:load|norun|parseonly))?)(?:<str>|[^\"'])+?(?=endsubmit;)/.source.replace(/<str>/g, function () {\n              return stringPattern;\n            }), 'im'),\n            lookbehind: true,\n            alias: 'language-groovy',\n            inside: Prism.languages.groovy\n          },\n          keyword: keywords,\n          'submit-statement': submitStatement,\n          'global-statements': globalStatements,\n          number: number,\n          'numeric-constant': numericConstant,\n          punctuation: punctuation,\n          string: string\n        }\n      },\n      'proc-lua': {\n        pattern: /(^proc\\s+lua(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|data|quit|run);|(?![\\s\\S]))/im,\n        lookbehind: true,\n        inside: {\n          comment: comment,\n          lua: {\n            pattern: RegExp(/(^[ \\t]*submit(?:\\s+(?:load|norun|parseonly))?)(?:<str>|[^\"'])+?(?=endsubmit;)/.source.replace(/<str>/g, function () {\n              return stringPattern;\n            }), 'im'),\n            lookbehind: true,\n            alias: 'language-lua',\n            inside: Prism.languages.lua\n          },\n          keyword: keywords,\n          'submit-statement': submitStatement,\n          'global-statements': globalStatements,\n          number: number,\n          'numeric-constant': numericConstant,\n          punctuation: punctuation,\n          string: string\n        }\n      },\n      'proc-cas': {\n        pattern: /(^proc\\s+cas(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|quit|data);|(?![\\s\\S]))/im,\n        lookbehind: true,\n        inside: {\n          comment: comment,\n          'statement-var': {\n            pattern: /((?:^|\\s)=?)saveresult\\s[^;]+/im,\n            lookbehind: true,\n            inside: {\n              statement: {\n                pattern: /^saveresult\\s+\\S+/i,\n                inside: {\n                  keyword: /^(?:saveresult)/i\n                }\n              },\n              rest: args\n            }\n          },\n          'cas-actions': casActions,\n          statement: {\n            pattern: /((?:^|\\s)=?)(?:default|(?:un)?set|on|output|upload)[^;]+/im,\n            lookbehind: true,\n            inside: args\n          },\n          step: step,\n          keyword: keywords,\n          function: func,\n          format: format,\n          altformat: altformat,\n          'global-statements': globalStatements,\n          number: number,\n          'numeric-constant': numericConstant,\n          punctuation: punctuation,\n          string: string\n        }\n      },\n      'proc-args': {\n        pattern: RegExp(/(^proc\\s+\\w+\\s+)(?!\\s)(?:[^;\"']|<str>)+;/.source.replace(/<str>/g, function () {\n          return stringPattern;\n        }), 'im'),\n        lookbehind: true,\n        inside: args\n      },\n\n      /*Special keywords within macros*/\n      'macro-keyword': macroKeyword,\n      'macro-variable': macroVariable,\n      'macro-string-functions': {\n        pattern: /((?:^|\\s|=))%(?:BQUOTE|NRBQUOTE|NRQUOTE|NRSTR|QUOTE|STR)\\(.*?(?:[^%]\\))/i,\n        lookbehind: true,\n        inside: {\n          function: {\n            pattern: /%(?:BQUOTE|NRBQUOTE|NRQUOTE|NRSTR|QUOTE|STR)/i,\n            alias: 'keyword'\n          },\n          'macro-keyword': macroKeyword,\n          'macro-variable': macroVariable,\n          'escaped-char': {\n            pattern: /%['\"()<>=¬^~;,#]/\n          },\n          punctuation: punctuation\n        }\n      },\n      'macro-declaration': {\n        pattern: /^%macro[^;]+(?=;)/im,\n        inside: {\n          keyword: /%macro/i\n        }\n      },\n      'macro-end': {\n        pattern: /^%mend[^;]+(?=;)/im,\n        inside: {\n          keyword: /%mend/i\n        }\n      },\n\n      /*%_zscore(headcir, _lhc, _mhc, _shc, headcz, headcpct, _Fheadcz); */\n      macro: {\n        pattern: /%_\\w+(?=\\()/,\n        alias: 'keyword'\n      },\n      input: {\n        pattern: /\\binput\\s[-\\w\\s/*.$&]+;/i,\n        inside: {\n          input: {\n            alias: 'keyword',\n            pattern: /^input/i\n          },\n          comment: comment,\n          number: number,\n          'numeric-constant': numericConstant\n        }\n      },\n      'options-args': {\n        pattern: /(^options)[-'\"|/\\\\<>*+=:()\\w\\s]*(?=;)/im,\n        lookbehind: true,\n        inside: args\n      },\n      'cas-actions': casActions,\n      comment: comment,\n      function: func,\n      format: format,\n      altformat: altformat,\n      'numeric-constant': numericConstant,\n      datetime: {\n        // '1jan2013'd, '9:25:19pm't, '18jan2003:9:27:05am'dt\n        pattern: RegExp(stringPattern + '(?:dt?|t)'),\n        alias: 'number'\n      },\n      string: string,\n      step: step,\n      keyword: keywords,\n      // In SAS Studio syntax highlighting, these operators are styled like keywords\n      'operator-keyword': {\n        pattern: /\\b(?:eq|ge|gt|in|le|lt|ne|not)\\b/i,\n        alias: 'operator'\n      },\n      // Decimal (1.2e23), hexadecimal (0c1x)\n      number: number,\n      operator: /\\*\\*?|\\|\\|?|!!?|¦¦?|<[>=]?|>[<=]?|[-+\\/=&]|[~¬^]=?/,\n      punctuation: punctuation\n    };\n  })(Prism);\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["punctuation","string","aliases","arg","operator","displayName","__esModule","datalines","rest","groovy","sas","lookbehind","value","keyword","action","number","statement","greedy","datetime","function","lua","input","pattern","argument","inside","altformat","alias","comment","sql","default","equals","macro","format","step"]],"~:compiled-at",1676841365459,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$sas.js\",\n\"lineCount\":13,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/refractor/lang/sas.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$sas\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = sas;\\n// @ts-nocheck\\nsas.displayName = 'sas';\\nsas.aliases = [];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction sas(Prism) {\\n  ;\\n\\n  (function (Prism) {\\n    var stringPattern = /(?:\\\"(?:\\\"\\\"|[^\\\"])*\\\"(?!\\\")|'(?:''|[^'])*'(?!'))/.source;\\n    var number = /\\\\b(?:\\\\d[\\\\da-f]*x|\\\\d+(?:\\\\.\\\\d+)?(?:e[+-]?\\\\d+)?)\\\\b/i;\\n    var numericConstant = {\\n      pattern: RegExp(stringPattern + '[bx]'),\\n      alias: 'number'\\n    };\\n    var macroVariable = {\\n      pattern: /&[a-z_]\\\\w*/i\\n    };\\n    var macroKeyword = {\\n      pattern: /((?:^|\\\\s|=|\\\\())%(?:ABORT|BY|CMS|COPY|DISPLAY|DO|ELSE|END|EVAL|GLOBAL|GO|GOTO|IF|INC|INCLUDE|INDEX|INPUT|KTRIM|LENGTH|LET|LIST|LOCAL|PUT|QKTRIM|QSCAN|QSUBSTR|QSYSFUNC|QUPCASE|RETURN|RUN|SCAN|SUBSTR|SUPERQ|SYMDEL|SYMEXIST|SYMGLOBL|SYMLOCAL|SYSCALL|SYSEVALF|SYSEXEC|SYSFUNC|SYSGET|SYSRPUT|THEN|TO|TSO|UNQUOTE|UNTIL|UPCASE|WHILE|WINDOW)\\\\b/i,\\n      lookbehind: true,\\n      alias: 'keyword'\\n    };\\n    var step = {\\n      pattern: /(^|\\\\s)(?:proc\\\\s+\\\\w+|data(?!=)|quit|run)\\\\b/i,\\n      alias: 'keyword',\\n      lookbehind: true\\n    };\\n    var comment = [/\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\//, {\\n      pattern: /(^[ \\\\t]*|;\\\\s*)\\\\*[^;]*;/m,\\n      lookbehind: true\\n    }];\\n    var string = {\\n      pattern: RegExp(stringPattern),\\n      greedy: true\\n    };\\n    var punctuation = /[$%@.(){}\\\\[\\\\];,\\\\\\\\]/;\\n    var func = {\\n      pattern: /%?\\\\b\\\\w+(?=\\\\()/,\\n      alias: 'keyword'\\n    };\\n    var args = {\\n      function: func,\\n      'arg-value': {\\n        pattern: /(=\\\\s*)[A-Z\\\\.]+/i,\\n        lookbehind: true\\n      },\\n      operator: /=/,\\n      'macro-variable': macroVariable,\\n      arg: {\\n        pattern: /[A-Z]+/i,\\n        alias: 'keyword'\\n      },\\n      number: number,\\n      'numeric-constant': numericConstant,\\n      punctuation: punctuation,\\n      string: string\\n    };\\n    var format = {\\n      pattern: /\\\\b(?:format|put)\\\\b=?[\\\\w'$.]+/i,\\n      inside: {\\n        keyword: /^(?:format|put)(?==)/i,\\n        equals: /=/,\\n        format: {\\n          pattern: /(?:\\\\w|\\\\$\\\\d)+\\\\.\\\\d?/,\\n          alias: 'number'\\n        }\\n      }\\n    };\\n    var altformat = {\\n      pattern: /\\\\b(?:format|put)\\\\s+[\\\\w']+(?:\\\\s+[$.\\\\w]+)+(?=;)/i,\\n      inside: {\\n        keyword: /^(?:format|put)/i,\\n        format: {\\n          pattern: /[\\\\w$]+\\\\.\\\\d?/,\\n          alias: 'number'\\n        }\\n      }\\n    };\\n    var globalStatements = {\\n      pattern: /((?:^|\\\\s)=?)(?:catname|checkpoint execute_always|dm|endsas|filename|footnote|%include|libname|%list|lock|missing|options|page|resetline|%run|sasfile|skip|sysecho|title\\\\d?)\\\\b/i,\\n      lookbehind: true,\\n      alias: 'keyword'\\n    };\\n    var submitStatement = {\\n      pattern: /(^|\\\\s)(?:submit(?:\\\\s+(?:load|norun|parseonly))?|endsubmit)\\\\b/i,\\n      lookbehind: true,\\n      alias: 'keyword'\\n    };\\n    var actionSets = /aStore|accessControl|aggregation|audio|autotune|bayesianNetClassifier|bioMedImage|boolRule|builtins|cardinality|cdm|clustering|conditionalRandomFields|configuration|copula|countreg|dataDiscovery|dataPreprocess|dataSciencePilot|dataStep|decisionTree|deduplication|deepLearn|deepNeural|deepRnn|ds2|ecm|entityRes|espCluster|explainModel|factmac|fastKnn|fcmpact|fedSql|freqTab|gVarCluster|gam|gleam|graphSemiSupLearn|hiddenMarkovModel|hyperGroup|ica|image|iml|kernalPca|langModel|ldaTopic|loadStreams|mbc|mixed|mlTools|modelPublishing|network|neuralNet|nmf|nonParametricBayes|nonlinear|optNetwork|optimization|panel|pca|percentile|phreg|pls|qkb|qlim|quantreg|recommend|regression|reinforcementLearn|robustPca|ruleMining|sampling|sandwich|sccasl|search(?:Analytics)?|sentimentAnalysis|sequence|session(?:Prop)?|severity|simSystem|simple|smartData|sparkEmbeddedProcess|sparseML|spatialreg|spc|stabilityMonitoring|svDataDescription|svm|table|text(?:Filters|Frequency|Mining|Parse|Rule(?:Develop|Score)|Topic|Util)|timeData|transpose|tsInfo|tsReconcile|uniTimeSeries|varReduce/.source;\\n    var casActions = {\\n      pattern: RegExp(/(^|\\\\s)(?:action\\\\s+)?(?:<act>)\\\\.[a-z]+\\\\b[^;]+/.source.replace(/<act>/g, function () {\\n        return actionSets;\\n      }), 'i'),\\n      lookbehind: true,\\n      inside: {\\n        keyword: RegExp(/(?:<act>)\\\\.[a-z]+\\\\b/.source.replace(/<act>/g, function () {\\n          return actionSets;\\n        }), 'i'),\\n        action: {\\n          pattern: /(?:action)/i,\\n          alias: 'keyword'\\n        },\\n        comment: comment,\\n        function: func,\\n        'arg-value': args['arg-value'],\\n        operator: args.operator,\\n        argument: args.arg,\\n        number: number,\\n        'numeric-constant': numericConstant,\\n        punctuation: punctuation,\\n        string: string\\n      }\\n    };\\n    var keywords = {\\n      pattern: /((?:^|\\\\s)=?)(?:after|analysis|and|array|barchart|barwidth|begingraph|by|call|cas|cbarline|cfill|class(?:lev)?|close|column|computed?|contains|continue|data(?==)|define|delete|describe|document|do\\\\s+over|do|dol|drop|dul|else|end(?:comp|source)?|entryTitle|eval(?:uate)?|exec(?:ute)?|exit|file(?:name)?|fill(?:attrs)?|flist|fnc|function(?:list)?|global|goto|group(?:by)?|headline|headskip|histogram|if|infile|keep|keylabel|keyword|label|layout|leave|legendlabel|length|libname|loadactionset|merge|midpoints|_?null_|name|noobs|nowd|ods|options|or|otherwise|out(?:put)?|over(?:lay)?|plot|print|put|raise|ranexp|rannor|rbreak|retain|return|select|session|sessref|set|source|statgraph|sum|summarize|table|temp|terminate|then\\\\s+do|then|title\\\\d?|to|var|when|where|xaxisopts|y2axisopts|yaxisopts)\\\\b/i,\\n      lookbehind: true\\n    };\\n    Prism.languages.sas = {\\n      datalines: {\\n        pattern: /^([ \\\\t]*)(?:cards|(?:data)?lines);[\\\\s\\\\S]+?^[ \\\\t]*;/im,\\n        lookbehind: true,\\n        alias: 'string',\\n        inside: {\\n          keyword: {\\n            pattern: /^(?:cards|(?:data)?lines)/i\\n          },\\n          punctuation: /;/\\n        }\\n      },\\n      'proc-sql': {\\n        pattern: /(^proc\\\\s+(?:fed)?sql(?:\\\\s+[\\\\w|=]+)?;)[\\\\s\\\\S]+?(?=^(?:proc\\\\s+\\\\w+|data|quit|run);|(?![\\\\s\\\\S]))/im,\\n        lookbehind: true,\\n        inside: {\\n          sql: {\\n            pattern: RegExp(/^[ \\\\t]*(?:select|alter\\\\s+table|(?:create|describe|drop)\\\\s+(?:index|table(?:\\\\s+constraints)?|view)|create\\\\s+unique\\\\s+index|insert\\\\s+into|update)(?:<str>|[^;\\\"'])+;/.source.replace(/<str>/g, function () {\\n              return stringPattern;\\n            }), 'im'),\\n            alias: 'language-sql',\\n            inside: Prism.languages.sql\\n          },\\n          'global-statements': globalStatements,\\n          'sql-statements': {\\n            pattern: /(^|\\\\s)(?:disconnect\\\\s+from|begin|commit|exec(?:ute)?|reset|rollback|validate)\\\\b/i,\\n            lookbehind: true,\\n            alias: 'keyword'\\n          },\\n          number: number,\\n          'numeric-constant': numericConstant,\\n          punctuation: punctuation,\\n          string: string\\n        }\\n      },\\n      'proc-groovy': {\\n        pattern: /(^proc\\\\s+groovy(?:\\\\s+[\\\\w|=]+)?;)[\\\\s\\\\S]+?(?=^(?:proc\\\\s+\\\\w+|data|quit|run);|(?![\\\\s\\\\S]))/im,\\n        lookbehind: true,\\n        inside: {\\n          comment: comment,\\n          groovy: {\\n            pattern: RegExp(/(^[ \\\\t]*submit(?:\\\\s+(?:load|norun|parseonly))?)(?:<str>|[^\\\"'])+?(?=endsubmit;)/.source.replace(/<str>/g, function () {\\n              return stringPattern;\\n            }), 'im'),\\n            lookbehind: true,\\n            alias: 'language-groovy',\\n            inside: Prism.languages.groovy\\n          },\\n          keyword: keywords,\\n          'submit-statement': submitStatement,\\n          'global-statements': globalStatements,\\n          number: number,\\n          'numeric-constant': numericConstant,\\n          punctuation: punctuation,\\n          string: string\\n        }\\n      },\\n      'proc-lua': {\\n        pattern: /(^proc\\\\s+lua(?:\\\\s+[\\\\w|=]+)?;)[\\\\s\\\\S]+?(?=^(?:proc\\\\s+\\\\w+|data|quit|run);|(?![\\\\s\\\\S]))/im,\\n        lookbehind: true,\\n        inside: {\\n          comment: comment,\\n          lua: {\\n            pattern: RegExp(/(^[ \\\\t]*submit(?:\\\\s+(?:load|norun|parseonly))?)(?:<str>|[^\\\"'])+?(?=endsubmit;)/.source.replace(/<str>/g, function () {\\n              return stringPattern;\\n            }), 'im'),\\n            lookbehind: true,\\n            alias: 'language-lua',\\n            inside: Prism.languages.lua\\n          },\\n          keyword: keywords,\\n          'submit-statement': submitStatement,\\n          'global-statements': globalStatements,\\n          number: number,\\n          'numeric-constant': numericConstant,\\n          punctuation: punctuation,\\n          string: string\\n        }\\n      },\\n      'proc-cas': {\\n        pattern: /(^proc\\\\s+cas(?:\\\\s+[\\\\w|=]+)?;)[\\\\s\\\\S]+?(?=^(?:proc\\\\s+\\\\w+|quit|data);|(?![\\\\s\\\\S]))/im,\\n        lookbehind: true,\\n        inside: {\\n          comment: comment,\\n          'statement-var': {\\n            pattern: /((?:^|\\\\s)=?)saveresult\\\\s[^;]+/im,\\n            lookbehind: true,\\n            inside: {\\n              statement: {\\n                pattern: /^saveresult\\\\s+\\\\S+/i,\\n                inside: {\\n                  keyword: /^(?:saveresult)/i\\n                }\\n              },\\n              rest: args\\n            }\\n          },\\n          'cas-actions': casActions,\\n          statement: {\\n            pattern: /((?:^|\\\\s)=?)(?:default|(?:un)?set|on|output|upload)[^;]+/im,\\n            lookbehind: true,\\n            inside: args\\n          },\\n          step: step,\\n          keyword: keywords,\\n          function: func,\\n          format: format,\\n          altformat: altformat,\\n          'global-statements': globalStatements,\\n          number: number,\\n          'numeric-constant': numericConstant,\\n          punctuation: punctuation,\\n          string: string\\n        }\\n      },\\n      'proc-args': {\\n        pattern: RegExp(/(^proc\\\\s+\\\\w+\\\\s+)(?!\\\\s)(?:[^;\\\"']|<str>)+;/.source.replace(/<str>/g, function () {\\n          return stringPattern;\\n        }), 'im'),\\n        lookbehind: true,\\n        inside: args\\n      },\\n\\n      /*Special keywords within macros*/\\n      'macro-keyword': macroKeyword,\\n      'macro-variable': macroVariable,\\n      'macro-string-functions': {\\n        pattern: /((?:^|\\\\s|=))%(?:BQUOTE|NRBQUOTE|NRQUOTE|NRSTR|QUOTE|STR)\\\\(.*?(?:[^%]\\\\))/i,\\n        lookbehind: true,\\n        inside: {\\n          function: {\\n            pattern: /%(?:BQUOTE|NRBQUOTE|NRQUOTE|NRSTR|QUOTE|STR)/i,\\n            alias: 'keyword'\\n          },\\n          'macro-keyword': macroKeyword,\\n          'macro-variable': macroVariable,\\n          'escaped-char': {\\n            pattern: /%['\\\"()<>=\\u00ac^~;,#]/\\n          },\\n          punctuation: punctuation\\n        }\\n      },\\n      'macro-declaration': {\\n        pattern: /^%macro[^;]+(?=;)/im,\\n        inside: {\\n          keyword: /%macro/i\\n        }\\n      },\\n      'macro-end': {\\n        pattern: /^%mend[^;]+(?=;)/im,\\n        inside: {\\n          keyword: /%mend/i\\n        }\\n      },\\n\\n      /*%_zscore(headcir, _lhc, _mhc, _shc, headcz, headcpct, _Fheadcz); */\\n      macro: {\\n        pattern: /%_\\\\w+(?=\\\\()/,\\n        alias: 'keyword'\\n      },\\n      input: {\\n        pattern: /\\\\binput\\\\s[-\\\\w\\\\s/*.$&]+;/i,\\n        inside: {\\n          input: {\\n            alias: 'keyword',\\n            pattern: /^input/i\\n          },\\n          comment: comment,\\n          number: number,\\n          'numeric-constant': numericConstant\\n        }\\n      },\\n      'options-args': {\\n        pattern: /(^options)[-'\\\"|/\\\\\\\\<>*+=:()\\\\w\\\\s]*(?=;)/im,\\n        lookbehind: true,\\n        inside: args\\n      },\\n      'cas-actions': casActions,\\n      comment: comment,\\n      function: func,\\n      format: format,\\n      altformat: altformat,\\n      'numeric-constant': numericConstant,\\n      datetime: {\\n        // '1jan2013'd, '9:25:19pm't, '18jan2003:9:27:05am'dt\\n        pattern: RegExp(stringPattern + '(?:dt?|t)'),\\n        alias: 'number'\\n      },\\n      string: string,\\n      step: step,\\n      keyword: keywords,\\n      // In SAS Studio syntax highlighting, these operators are styled like keywords\\n      'operator-keyword': {\\n        pattern: /\\\\b(?:eq|ge|gt|in|le|lt|ne|not)\\\\b/i,\\n        alias: 'operator'\\n      },\\n      // Decimal (1.2e23), hexadecimal (0c1x)\\n      number: number,\\n      operator: /\\\\*\\\\*?|\\\\|\\\\|?|!!?|\\u00a6\\u00a6?|<[>=]?|>[<=]?|[-+\\\\/=&]|[~\\u00ac^]=?/,\\n      punctuation: punctuation\\n    };\\n  })(Prism);\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"sas\",\"Prism\",\"stringPattern\",\"source\",\"number\",\"numericConstant\",\"pattern\",\"RegExp\",\"alias\",\"macroVariable\",\"macroKeyword\",\"lookbehind\",\"step\",\"comment\",\"string\",\"greedy\",\"punctuation\",\"func\",\"args\",\"function\",\"operator\",\"arg\",\"format\",\"inside\",\"keyword\",\"equals\",\"altformat\",\"globalStatements\",\"submitStatement\",\"actionSets\",\"casActions\",\"replace\",\"action\",\"argument\",\"keywords\",\"languages\",\"datalines\",\"sql\",\"groovy\",\"lua\",\"statement\",\"rest\",\"macro\",\"input\",\"datetime\",\"Object\",\"defineProperty\",\"value\",\"default\",\"displayName\",\"aliases\"]\n}\n"]