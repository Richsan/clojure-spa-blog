["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/kotlin.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$kotlin=function(global,require,module,exports){function kotlin(Prism){Prism.register(_clike.default);Prism.languages.kotlin=Prism.languages.extend(\"clike\",{keyword:{pattern:/(^|[^.])\\b(?:abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|to|try|typealias|val|var|vararg|when|where|while)\\b/,\nlookbehind:!0},function:[{pattern:/(?:`[^\\r\\n`]+`|\\b\\w+)(?=\\s*\\()/,greedy:!0},{pattern:/(\\.)(?:`[^\\r\\n`]+`|\\w+)(?=\\s*\\{)/,lookbehind:!0,greedy:!0}],number:/\\b(?:0[xX][\\da-fA-F]+(?:_[\\da-fA-F]+)*|0[bB][01]+(?:_[01]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?[fFL]?)\\b/,operator:/\\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\\/*%<>]=?|[?:]:?|\\.\\.|&&|\\|\\||\\b(?:and|inv|or|shl|shr|ushr|xor)\\b/});delete Prism.languages.kotlin[\"class-name\"];var interpolationInside={\"interpolation-punctuation\":{pattern:/^\\$\\{?|\\}$/,\nalias:\"punctuation\"},expression:{pattern:/[\\s\\S]+/,inside:Prism.languages.kotlin}};Prism.languages.insertBefore(\"kotlin\",\"string\",{\"string-literal\":[{pattern:/\"\"\"(?:[^$]|\\$(?:(?!\\{)|\\{[^{}]*\\}))*?\"\"\"/,alias:\"multiline\",inside:{interpolation:{pattern:/\\$(?:[a-z_]\\w*|\\{[^{}]*\\})/i,inside:interpolationInside},string:/[\\s\\S]+/}},{pattern:/\"(?:[^\"\\\\\\r\\n$]|\\\\.|\\$(?:(?!\\{)|\\{[^{}]*\\}))*\"/,alias:\"singleline\",inside:{interpolation:{pattern:/((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:[a-z_]\\w*|\\{[^{}]*\\})/i,lookbehind:!0,\ninside:interpolationInside},string:/[\\s\\S]+/}}],char:{pattern:/'(?:[^'\\\\\\r\\n]|\\\\(?:.|u[a-fA-F0-9]{0,4}))'/,greedy:!0}});delete Prism.languages.kotlin.string;Prism.languages.insertBefore(\"kotlin\",\"keyword\",{annotation:{pattern:/\\B@(?:\\w+:)?(?:[A-Z]\\w*|\\[[^\\]]+\\])/,alias:\"builtin\"}});Prism.languages.insertBefore(\"kotlin\",\"function\",{label:{pattern:/\\b\\w+@|@\\w+\\b/,alias:\"symbol\"}});Prism.languages.kt=Prism.languages.kotlin;Prism.languages.kts=Prism.languages.kotlin}Object.defineProperty(exports,\"__esModule\",\n{value:!0});exports.default=kotlin;var _clike=function(obj){return obj&&obj.__esModule?obj:{default:obj}}(require(\"module$node_modules$refractor$lang$clike\"));kotlin.displayName=\"kotlin\";kotlin.aliases=[\"kt\",\"kts\"]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$kotlin\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = kotlin;\n\nvar _clike = _interopRequireDefault(require(\"./clike.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// @ts-nocheck\nkotlin.displayName = 'kotlin';\nkotlin.aliases = ['kt', 'kts'];\n/** @type {import('../core.js').Syntax} */\n\nfunction kotlin(Prism) {\n  Prism.register(_clike.default);\n\n  (function (Prism) {\n    Prism.languages.kotlin = Prism.languages.extend('clike', {\n      keyword: {\n        // The lookbehind prevents wrong highlighting of e.g. kotlin.properties.get\n        pattern: /(^|[^.])\\b(?:abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|to|try|typealias|val|var|vararg|when|where|while)\\b/,\n        lookbehind: true\n      },\n      function: [{\n        pattern: /(?:`[^\\r\\n`]+`|\\b\\w+)(?=\\s*\\()/,\n        greedy: true\n      }, {\n        pattern: /(\\.)(?:`[^\\r\\n`]+`|\\w+)(?=\\s*\\{)/,\n        lookbehind: true,\n        greedy: true\n      }],\n      number: /\\b(?:0[xX][\\da-fA-F]+(?:_[\\da-fA-F]+)*|0[bB][01]+(?:_[01]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?[fFL]?)\\b/,\n      operator: /\\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\\/*%<>]=?|[?:]:?|\\.\\.|&&|\\|\\||\\b(?:and|inv|or|shl|shr|ushr|xor)\\b/\n    });\n    delete Prism.languages.kotlin['class-name'];\n    var interpolationInside = {\n      'interpolation-punctuation': {\n        pattern: /^\\$\\{?|\\}$/,\n        alias: 'punctuation'\n      },\n      expression: {\n        pattern: /[\\s\\S]+/,\n        inside: Prism.languages.kotlin\n      }\n    };\n    Prism.languages.insertBefore('kotlin', 'string', {\n      // https://kotlinlang.org/spec/expressions.html#string-interpolation-expressions\n      'string-literal': [{\n        pattern: /\"\"\"(?:[^$]|\\$(?:(?!\\{)|\\{[^{}]*\\}))*?\"\"\"/,\n        alias: 'multiline',\n        inside: {\n          interpolation: {\n            pattern: /\\$(?:[a-z_]\\w*|\\{[^{}]*\\})/i,\n            inside: interpolationInside\n          },\n          string: /[\\s\\S]+/\n        }\n      }, {\n        pattern: /\"(?:[^\"\\\\\\r\\n$]|\\\\.|\\$(?:(?!\\{)|\\{[^{}]*\\}))*\"/,\n        alias: 'singleline',\n        inside: {\n          interpolation: {\n            pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:[a-z_]\\w*|\\{[^{}]*\\})/i,\n            lookbehind: true,\n            inside: interpolationInside\n          },\n          string: /[\\s\\S]+/\n        }\n      }],\n      char: {\n        // https://kotlinlang.org/spec/expressions.html#character-literals\n        pattern: /'(?:[^'\\\\\\r\\n]|\\\\(?:.|u[a-fA-F0-9]{0,4}))'/,\n        greedy: true\n      }\n    });\n    delete Prism.languages.kotlin['string'];\n    Prism.languages.insertBefore('kotlin', 'keyword', {\n      annotation: {\n        pattern: /\\B@(?:\\w+:)?(?:[A-Z]\\w*|\\[[^\\]]+\\])/,\n        alias: 'builtin'\n      }\n    });\n    Prism.languages.insertBefore('kotlin', 'function', {\n      label: {\n        pattern: /\\b\\w+@|@\\w+\\b/,\n        alias: 'symbol'\n      }\n    });\n    Prism.languages.kt = Prism.languages.kotlin;\n    Prism.languages.kts = Prism.languages.kotlin;\n  })(Prism);\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$refractor$lang$clike"]],"~:properties",["^5",["kotlin","string","aliases","operator","displayName","label","__esModule","expression","lookbehind","value","char","keyword","number","greedy","function","pattern","inside","annotation","kt","alias","kts","interpolation","default"]],"~:compiled-at",1676841365365,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$kotlin.js\",\n\"lineCount\":5,\n\"mappings\":\"AAAAA,cAAA,CAAA,yCAAA,CAA8D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAiBtGC,QAASA,OAAM,CAACC,KAAD,CAAQ,CACrBA,KAAMC,CAAAA,QAAN,CAAeC,MAAOC,CAAAA,OAAtB,CA4EGH,MAzEKI,CAAAA,SAAUL,CAAAA,MAAhB,CAyECC,KAzE8BI,CAAAA,SAAUC,CAAAA,MAAhB,CAAuB,OAAvB,CAAgC,CACvDC,QAAS,CAEPC,QAAS,0bAFF;AAGPC,WAAY,CAAA,CAHL,CAD8C,CAMvDC,SAAU,CAAC,CACTF,QAAS,gCADA,CAETG,OAAQ,CAAA,CAFC,CAAD,CAGP,CACDH,QAAS,kCADR,CAEDC,WAAY,CAAA,CAFX,CAGDE,OAAQ,CAAA,CAHP,CAHO,CAN6C,CAcvDC,OAAQ,iIAd+C,CAevDC,SAAU,sGAf6C,CAAhC,CAiBzB,QAwDCZ,KAxDYI,CAAAA,SAAUL,CAAAA,MAAhB,CAAuB,YAAvB,CACP,KAAIc,oBAAsB,CACxB,4BAA6B,CAC3BN,QAAS,YADkB;AAE3BO,MAAO,aAFoB,CADL,CAKxBC,WAAY,CACVR,QAAS,SADC,CAEVS,OAgDHhB,KAhDiBI,CAAAA,SAAUL,CAAAA,MAFd,CALY,CAuDzBC,MA7CKI,CAAAA,SAAUa,CAAAA,YAAhB,CAA6B,QAA7B,CAAuC,QAAvC,CAAiD,CAE/C,iBAAkB,CAAC,CACjBV,QAAS,0CADQ,CAEjBO,MAAO,WAFU,CAGjBE,OAAQ,CACNE,cAAe,CACbX,QAAS,6BADI,CAEbS,OAAQH,mBAFK,CADT,CAKNM,OAAQ,SALF,CAHS,CAAD,CAUf,CACDZ,QAAS,gDADR,CAEDO,MAAO,YAFN,CAGDE,OAAQ,CACNE,cAAe,CACbX,QAAS,oDADI,CAEbC,WAAY,CAAA,CAFC;AAGbQ,OAAQH,mBAHK,CADT,CAMNM,OAAQ,SANF,CAHP,CAVe,CAF6B,CAwB/CC,KAAM,CAEJb,QAAS,4CAFL,CAGJG,OAAQ,CAAA,CAHJ,CAxByC,CAAjD,CA8BA,QAeCV,KAfYI,CAAAA,SAAUL,CAAAA,MAAhB,CAAA,MAeNC,MAdKI,CAAAA,SAAUa,CAAAA,YAAhB,CAA6B,QAA7B,CAAuC,SAAvC,CAAkD,CAChDI,WAAY,CACVd,QAAS,qCADC,CAEVO,MAAO,SAFG,CADoC,CAAlD,CAcCd,MARKI,CAAAA,SAAUa,CAAAA,YAAhB,CAA6B,QAA7B,CAAuC,UAAvC,CAAmD,CACjDK,MAAO,CACLf,QAAS,eADJ,CAELO,MAAO,QAFF,CAD0C,CAAnD,CAQCd,MAFKI,CAAAA,SAAUmB,CAAAA,EAAhB,CAECvB,KAF0BI,CAAAA,SAAUL,CAAAA,MAEpCC,MADKI,CAAAA,SAAUoB,CAAAA,GAAhB,CACCxB,KAD2BI,CAAAA,SAAUL,CAAAA,MA5EnB,CAdvB0B,MAAOC,CAAAA,cAAP,CAAsB5B,OAAtB,CAA+B,YAA/B;AAA6C,CAC3C6B,MAAO,CAAA,CADoC,CAA7C,CAGA7B,QAAQK,CAAAA,OAAR,CAAkBJ,MAElB,KAAIG,OAEJ0B,QAA+B,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAIC,CAAAA,UAAX,CAAwBD,GAAxB,CAA8B,CAAE1B,QAAS0B,GAAX,CAAvC,CAFxB,CAAuBjC,OAAA,CAAQ,0CAAR,CAAvB,CAKbG,OAAOgC,CAAAA,WAAP,CAAqB,QACrBhC,OAAOiC,CAAAA,OAAP,CAAiB,CAAC,IAAD,CAAO,KAAP,CAdqF;\",\n\"sources\":[\"node_modules/refractor/lang/kotlin.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$kotlin\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = kotlin;\\n\\nvar _clike = _interopRequireDefault(require(\\\"./clike.js\\\"));\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\n// @ts-nocheck\\nkotlin.displayName = 'kotlin';\\nkotlin.aliases = ['kt', 'kts'];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction kotlin(Prism) {\\n  Prism.register(_clike.default);\\n\\n  (function (Prism) {\\n    Prism.languages.kotlin = Prism.languages.extend('clike', {\\n      keyword: {\\n        // The lookbehind prevents wrong highlighting of e.g. kotlin.properties.get\\n        pattern: /(^|[^.])\\\\b(?:abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|to|try|typealias|val|var|vararg|when|where|while)\\\\b/,\\n        lookbehind: true\\n      },\\n      function: [{\\n        pattern: /(?:`[^\\\\r\\\\n`]+`|\\\\b\\\\w+)(?=\\\\s*\\\\()/,\\n        greedy: true\\n      }, {\\n        pattern: /(\\\\.)(?:`[^\\\\r\\\\n`]+`|\\\\w+)(?=\\\\s*\\\\{)/,\\n        lookbehind: true,\\n        greedy: true\\n      }],\\n      number: /\\\\b(?:0[xX][\\\\da-fA-F]+(?:_[\\\\da-fA-F]+)*|0[bB][01]+(?:_[01]+)*|\\\\d+(?:_\\\\d+)*(?:\\\\.\\\\d+(?:_\\\\d+)*)?(?:[eE][+-]?\\\\d+(?:_\\\\d+)*)?[fFL]?)\\\\b/,\\n      operator: /\\\\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\\\\/*%<>]=?|[?:]:?|\\\\.\\\\.|&&|\\\\|\\\\||\\\\b(?:and|inv|or|shl|shr|ushr|xor)\\\\b/\\n    });\\n    delete Prism.languages.kotlin['class-name'];\\n    var interpolationInside = {\\n      'interpolation-punctuation': {\\n        pattern: /^\\\\$\\\\{?|\\\\}$/,\\n        alias: 'punctuation'\\n      },\\n      expression: {\\n        pattern: /[\\\\s\\\\S]+/,\\n        inside: Prism.languages.kotlin\\n      }\\n    };\\n    Prism.languages.insertBefore('kotlin', 'string', {\\n      // https://kotlinlang.org/spec/expressions.html#string-interpolation-expressions\\n      'string-literal': [{\\n        pattern: /\\\"\\\"\\\"(?:[^$]|\\\\$(?:(?!\\\\{)|\\\\{[^{}]*\\\\}))*?\\\"\\\"\\\"/,\\n        alias: 'multiline',\\n        inside: {\\n          interpolation: {\\n            pattern: /\\\\$(?:[a-z_]\\\\w*|\\\\{[^{}]*\\\\})/i,\\n            inside: interpolationInside\\n          },\\n          string: /[\\\\s\\\\S]+/\\n        }\\n      }, {\\n        pattern: /\\\"(?:[^\\\"\\\\\\\\\\\\r\\\\n$]|\\\\\\\\.|\\\\$(?:(?!\\\\{)|\\\\{[^{}]*\\\\}))*\\\"/,\\n        alias: 'singleline',\\n        inside: {\\n          interpolation: {\\n            pattern: /((?:^|[^\\\\\\\\])(?:\\\\\\\\{2})*)\\\\$(?:[a-z_]\\\\w*|\\\\{[^{}]*\\\\})/i,\\n            lookbehind: true,\\n            inside: interpolationInside\\n          },\\n          string: /[\\\\s\\\\S]+/\\n        }\\n      }],\\n      char: {\\n        // https://kotlinlang.org/spec/expressions.html#character-literals\\n        pattern: /'(?:[^'\\\\\\\\\\\\r\\\\n]|\\\\\\\\(?:.|u[a-fA-F0-9]{0,4}))'/,\\n        greedy: true\\n      }\\n    });\\n    delete Prism.languages.kotlin['string'];\\n    Prism.languages.insertBefore('kotlin', 'keyword', {\\n      annotation: {\\n        pattern: /\\\\B@(?:\\\\w+:)?(?:[A-Z]\\\\w*|\\\\[[^\\\\]]+\\\\])/,\\n        alias: 'builtin'\\n      }\\n    });\\n    Prism.languages.insertBefore('kotlin', 'function', {\\n      label: {\\n        pattern: /\\\\b\\\\w+@|@\\\\w+\\\\b/,\\n        alias: 'symbol'\\n      }\\n    });\\n    Prism.languages.kt = Prism.languages.kotlin;\\n    Prism.languages.kts = Prism.languages.kotlin;\\n  })(Prism);\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"kotlin\",\"Prism\",\"register\",\"_clike\",\"default\",\"languages\",\"extend\",\"keyword\",\"pattern\",\"lookbehind\",\"function\",\"greedy\",\"number\",\"operator\",\"interpolationInside\",\"alias\",\"expression\",\"inside\",\"insertBefore\",\"interpolation\",\"string\",\"char\",\"annotation\",\"label\",\"kt\",\"kts\",\"Object\",\"defineProperty\",\"value\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"displayName\",\"aliases\"]\n}\n"]