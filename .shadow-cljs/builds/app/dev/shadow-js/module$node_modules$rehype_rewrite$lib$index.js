["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/rehype-rewrite/lib/index.js"],"~:js","shadow$provide.module$node_modules$rehype_rewrite$lib$index=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=exports.getCodeString=void 0;var _unistUtilVisit=require(\"module$node_modules$unist_util_visit$index\"),_hastUtilSelect=require(\"module$node_modules$hast_util_select$index\");const getCodeString=(data=[],code=\"\")=>{data.forEach(node=>{\"text\"===node.type?code+=node.value:\"element\"===node.type&&node.children&&Array.isArray(node.children)&&\n(code+=getCodeString(node.children))});return code};exports.getCodeString=getCodeString;exports.default=options=>{const {selector,rewrite}=options||{};return tree=>{if(rewrite&&\"function\"===typeof rewrite)if(selector&&\"string\"===typeof selector){const selected=(0,_hastUtilSelect.selectAll)(selector,tree);selected&&0<selected.length&&(0,_unistUtilVisit.visit)(tree,selected,(node,index,parent)=>{rewrite(node,index,parent)})}else(0,_unistUtilVisit.visit)(tree,(node,index,parent)=>{rewrite(node,index,\nparent)})}}}","~:source","shadow$provide[\"module$node_modules$rehype_rewrite$lib$index\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.getCodeString = void 0;\n\nvar _unistUtilVisit = require(\"unist-util-visit\");\n\nvar _hastUtilSelect = require(\"hast-util-select\");\n\n/** Get the node tree source code string */\nconst getCodeString = (data = [], code = '') => {\n  data.forEach(node => {\n    if (node.type === 'text') {\n      code += node.value;\n    } else if (node.type === 'element' && node.children && Array.isArray(node.children)) {\n      code += getCodeString(node.children);\n    }\n  });\n  return code;\n};\n\nexports.getCodeString = getCodeString;\n\nconst remarkRewrite = options => {\n  const {\n    selector,\n    rewrite\n  } = options || {};\n  return tree => {\n    if (!rewrite || typeof rewrite !== 'function') return;\n\n    if (selector && typeof selector === 'string') {\n      const selected = (0, _hastUtilSelect.selectAll)(selector, tree);\n\n      if (selected && selected.length > 0) {\n        (0, _unistUtilVisit.visit)(tree, selected, (node, index, parent) => {\n          rewrite(node, index, parent);\n        });\n      }\n\n      return;\n    }\n\n    (0, _unistUtilVisit.visit)(tree, (node, index, parent) => {\n      rewrite(node, index, parent);\n    });\n  };\n};\n\nvar _default = remarkRewrite;\nexports.default = _default;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$unist_util_visit$index","~$module$node_modules$hast_util_select$index","~$shadow.js"]],"~:properties",["^5",["__esModule","getCodeString","value","default"]],"~:compiled-at",1676841365503,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$rehype_rewrite$lib$index.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,CAAA,4CAAA,CAAiE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGzGC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,OAAR,CAAkBJ,OAAQK,CAAAA,aAA1B,CAA0C,IAAK,EAE/C,KAAIC,gBAAkBR,OAAA,CAAQ,4CAAR,CAAtB,CAEIS,gBAAkBT,OAAA,CAAQ,4CAAR,CAGtB,OAAMO,cAAgB,CAACG,IAAA,CAAO,EAAR,CAAYC,IAAA,CAAO,EAAnB,CAAAJ,EAA0B,CAC9CG,IAAKE,CAAAA,OAAL,CAAaC,IAAA,EAAQ,CACD,MAAlB,GAAIA,IAAKC,CAAAA,IAAT,CACEH,IADF,EACUE,IAAKR,CAAAA,KADf,CAEyB,SAFzB,GAEWQ,IAAKC,CAAAA,IAFhB,EAEsCD,IAAKE,CAAAA,QAF3C,EAEuDC,KAAMC,CAAAA,OAAN,CAAcJ,IAAKE,CAAAA,QAAnB,CAFvD;CAGEJ,IAHF,EAGUJ,aAAA,CAAcM,IAAKE,CAAAA,QAAnB,CAHV,CADmB,CAArB,CAOA,OAAOJ,KARuC,CAWhDT,QAAQK,CAAAA,aAAR,CAAwBA,aA6BxBL,QAAQI,CAAAA,OAAR,CA3BsBY,OAAAC,EAAW,CAC/B,MAAM,CACJC,QADI,CAEJC,OAFI,CAAA,CAGFH,OAHE,EAGS,EACf,OAAOI,KAAA,EAAQ,CACb,GAAKD,OAAL,EAAmC,UAAnC,GAAgB,MAAOA,QAAvB,CAEA,GAAID,QAAJ,EAAoC,QAApC,GAAgB,MAAOA,SAAvB,CAA8C,CAC5C,MAAMG,SAAW,GAAId,eAAgBe,CAAAA,SAApB,EAA+BJ,QAA/B,CAAyCE,IAAzC,CAEbC,SAAJ,EAAkC,CAAlC,CAAgBA,QAASE,CAAAA,MAAzB,EACE,GAAIjB,eAAgBkB,CAAAA,KAApB,EAA2BJ,IAA3B,CAAiCC,QAAjC,CAA2C,CAACV,IAAD,CAAOc,KAAP,CAAcC,MAAd,CAAA,EAAyB,CAClEP,OAAA,CAAQR,IAAR,CAAcc,KAAd,CAAqBC,MAArB,CADkE,CAApE,CAJ0C,CAA9C,IAYA,GAAIpB,eAAgBkB,CAAAA,KAApB,EAA2BJ,IAA3B,CAAiC,CAACT,IAAD,CAAOc,KAAP,CAAcC,MAAd,CAAA,EAAyB,CACxDP,OAAA,CAAQR,IAAR,CAAcc,KAAd;AAAqBC,MAArB,CADwD,CAA1D,CAfa,CALgB,CA1BwE;\",\n\"sources\":[\"node_modules/rehype-rewrite/lib/index.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$rehype_rewrite$lib$index\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = exports.getCodeString = void 0;\\n\\nvar _unistUtilVisit = require(\\\"unist-util-visit\\\");\\n\\nvar _hastUtilSelect = require(\\\"hast-util-select\\\");\\n\\n/** Get the node tree source code string */\\nconst getCodeString = (data = [], code = '') => {\\n  data.forEach(node => {\\n    if (node.type === 'text') {\\n      code += node.value;\\n    } else if (node.type === 'element' && node.children && Array.isArray(node.children)) {\\n      code += getCodeString(node.children);\\n    }\\n  });\\n  return code;\\n};\\n\\nexports.getCodeString = getCodeString;\\n\\nconst remarkRewrite = options => {\\n  const {\\n    selector,\\n    rewrite\\n  } = options || {};\\n  return tree => {\\n    if (!rewrite || typeof rewrite !== 'function') return;\\n\\n    if (selector && typeof selector === 'string') {\\n      const selected = (0, _hastUtilSelect.selectAll)(selector, tree);\\n\\n      if (selected && selected.length > 0) {\\n        (0, _unistUtilVisit.visit)(tree, selected, (node, index, parent) => {\\n          rewrite(node, index, parent);\\n        });\\n      }\\n\\n      return;\\n    }\\n\\n    (0, _unistUtilVisit.visit)(tree, (node, index, parent) => {\\n      rewrite(node, index, parent);\\n    });\\n  };\\n};\\n\\nvar _default = remarkRewrite;\\nexports.default = _default;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"default\",\"getCodeString\",\"_unistUtilVisit\",\"_hastUtilSelect\",\"data\",\"code\",\"forEach\",\"node\",\"type\",\"children\",\"Array\",\"isArray\",\"options\",\"remarkRewrite\",\"selector\",\"rewrite\",\"tree\",\"selected\",\"selectAll\",\"length\",\"visit\",\"index\",\"parent\"]\n}\n"]