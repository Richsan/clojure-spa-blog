["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mdast-util-to-hast/lib/footer.js"],"~:js","shadow$provide.module$node_modules$mdast_util_to_hast$lib$footer=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.footer=function(state){const listItems=[];let index=-1;for(;++index<state.footnoteOrder.length;){const def=state.footnoteById[state.footnoteOrder[index]];if(!def)continue;var content=state.all(def),id=String(def.identifier).toUpperCase();const safeId=(0,_micromarkUtilSanitizeUri.normalizeUri)(id.toLowerCase());var referenceIndex=0;\nconst backReferences=[];for(;++referenceIndex<=state.footnoteCounts[id];){const backReference={type:\"element\",tagName:\"a\",properties:{href:\"#\"+state.clobberPrefix+\"fnref-\"+safeId+(1<referenceIndex?\"-\"+referenceIndex:\"\"),dataFootnoteBackref:!0,className:[\"data-footnote-backref\"],ariaLabel:state.footnoteBackLabel},children:[{type:\"text\",value:\"↩\"}]};1<referenceIndex&&backReference.children.push({type:\"element\",tagName:\"sup\",children:[{type:\"text\",value:String(referenceIndex)}]});0<backReferences.length&&\nbackReferences.push({type:\"text\",value:\" \"});backReferences.push(backReference)}(id=content[content.length-1])&&\"element\"===id.type&&\"p\"===id.tagName?((referenceIndex=id.children[id.children.length-1])&&\"text\"===referenceIndex.type?referenceIndex.value+=\" \":id.children.push({type:\"text\",value:\" \"}),id.children.push(...backReferences)):content.push(...backReferences);content={type:\"element\",tagName:\"li\",properties:{id:state.clobberPrefix+\"fn-\"+safeId},children:state.wrap(content,!0)};state.patch(def,\ncontent);listItems.push(content)}if(0!==listItems.length)return{type:\"element\",tagName:\"section\",properties:{dataFootnotes:!0,className:[\"footnotes\"]},children:[{type:\"element\",tagName:state.footnoteLabelTagName,properties:{...JSON.parse(JSON.stringify(state.footnoteLabelProperties)),id:\"footnote-label\"},children:[{type:\"text\",value:state.footnoteLabel}]},{type:\"text\",value:\"\\n\"},{type:\"element\",tagName:\"ol\",properties:{},children:state.wrap(listItems,!0)},{type:\"text\",value:\"\\n\"}]}};var _micromarkUtilSanitizeUri=\nrequire(\"module$node_modules$micromark_util_sanitize_uri$index\")}","~:source","shadow$provide[\"module$node_modules$mdast_util_to_hast$lib$footer\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.footer = footer;\n\nvar _micromarkUtilSanitizeUri = require(\"micromark-util-sanitize-uri\");\n\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\nfunction footer(state) {\n  /** @type {Array<ElementContent>} */\n  const listItems = [];\n  let index = -1;\n\n  while (++index < state.footnoteOrder.length) {\n    const def = state.footnoteById[state.footnoteOrder[index]];\n\n    if (!def) {\n      continue;\n    }\n\n    const content = state.all(def);\n    const id = String(def.identifier).toUpperCase();\n    const safeId = (0, _micromarkUtilSanitizeUri.normalizeUri)(id.toLowerCase());\n    let referenceIndex = 0;\n    /** @type {Array<ElementContent>} */\n\n    const backReferences = [];\n\n    while (++referenceIndex <= state.footnoteCounts[id]) {\n      /** @type {Element} */\n      const backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href: '#' + state.clobberPrefix + 'fnref-' + safeId + (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: state.footnoteBackLabel\n        },\n        children: [{\n          type: 'text',\n          value: '↩'\n        }]\n      };\n\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{\n            type: 'text',\n            value: String(referenceIndex)\n          }]\n        });\n      }\n\n      if (backReferences.length > 0) {\n        backReferences.push({\n          type: 'text',\n          value: ' '\n        });\n      }\n\n      backReferences.push(backReference);\n    }\n\n    const tail = content[content.length - 1];\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1];\n\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' ';\n      } else {\n        tail.children.push({\n          type: 'text',\n          value: ' '\n        });\n      }\n\n      tail.children.push(...backReferences);\n    } else {\n      content.push(...backReferences);\n    }\n    /** @type {Element} */\n\n\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {\n        id: state.clobberPrefix + 'fn-' + safeId\n      },\n      children: state.wrap(content, true)\n    };\n    state.patch(def, listItem);\n    listItems.push(listItem);\n  }\n\n  if (listItems.length === 0) {\n    return;\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {\n      dataFootnotes: true,\n      className: ['footnotes']\n    },\n    children: [{\n      type: 'element',\n      tagName: state.footnoteLabelTagName,\n      properties: { // To do: use structured clone.\n        ...JSON.parse(JSON.stringify(state.footnoteLabelProperties)),\n        id: 'footnote-label'\n      },\n      children: [{\n        type: 'text',\n        value: state.footnoteLabel\n      }]\n    }, {\n      type: 'text',\n      value: '\\n'\n    }, {\n      type: 'element',\n      tagName: 'ol',\n      properties: {},\n      children: state.wrap(listItems, true)\n    }, {\n      type: 'text',\n      value: '\\n'\n    }]\n  };\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$micromark_util_sanitize_uri$index"]],"~:properties",["^5",["properties","className","children","__esModule","dataFootnoteBackref","id","footer","dataFootnotes","ariaLabel","href","value","type","tagName"]],"~:compiled-at",1676665867323,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mdast_util_to_hast$lib$footer.js\",\n\"lineCount\":5,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/mdast-util-to-hast/lib/footer.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$mdast_util_to_hast$lib$footer\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.footer = footer;\\n\\nvar _micromarkUtilSanitizeUri = require(\\\"micromark-util-sanitize-uri\\\");\\n\\n/**\\n * @typedef {import('hast').Element} Element\\n * @typedef {import('hast').ElementContent} ElementContent\\n *\\n * @typedef {import('./state.js').State} State\\n */\\n\\n/**\\n * Generate a hast footer for called footnote definitions.\\n *\\n * @param {State} state\\n *   Info passed around.\\n * @returns {Element | undefined}\\n *   `section` element or `undefined`.\\n */\\nfunction footer(state) {\\n  /** @type {Array<ElementContent>} */\\n  const listItems = [];\\n  let index = -1;\\n\\n  while (++index < state.footnoteOrder.length) {\\n    const def = state.footnoteById[state.footnoteOrder[index]];\\n\\n    if (!def) {\\n      continue;\\n    }\\n\\n    const content = state.all(def);\\n    const id = String(def.identifier).toUpperCase();\\n    const safeId = (0, _micromarkUtilSanitizeUri.normalizeUri)(id.toLowerCase());\\n    let referenceIndex = 0;\\n    /** @type {Array<ElementContent>} */\\n\\n    const backReferences = [];\\n\\n    while (++referenceIndex <= state.footnoteCounts[id]) {\\n      /** @type {Element} */\\n      const backReference = {\\n        type: 'element',\\n        tagName: 'a',\\n        properties: {\\n          href: '#' + state.clobberPrefix + 'fnref-' + safeId + (referenceIndex > 1 ? '-' + referenceIndex : ''),\\n          dataFootnoteBackref: true,\\n          className: ['data-footnote-backref'],\\n          ariaLabel: state.footnoteBackLabel\\n        },\\n        children: [{\\n          type: 'text',\\n          value: '\\u21a9'\\n        }]\\n      };\\n\\n      if (referenceIndex > 1) {\\n        backReference.children.push({\\n          type: 'element',\\n          tagName: 'sup',\\n          children: [{\\n            type: 'text',\\n            value: String(referenceIndex)\\n          }]\\n        });\\n      }\\n\\n      if (backReferences.length > 0) {\\n        backReferences.push({\\n          type: 'text',\\n          value: ' '\\n        });\\n      }\\n\\n      backReferences.push(backReference);\\n    }\\n\\n    const tail = content[content.length - 1];\\n\\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\\n      const tailTail = tail.children[tail.children.length - 1];\\n\\n      if (tailTail && tailTail.type === 'text') {\\n        tailTail.value += ' ';\\n      } else {\\n        tail.children.push({\\n          type: 'text',\\n          value: ' '\\n        });\\n      }\\n\\n      tail.children.push(...backReferences);\\n    } else {\\n      content.push(...backReferences);\\n    }\\n    /** @type {Element} */\\n\\n\\n    const listItem = {\\n      type: 'element',\\n      tagName: 'li',\\n      properties: {\\n        id: state.clobberPrefix + 'fn-' + safeId\\n      },\\n      children: state.wrap(content, true)\\n    };\\n    state.patch(def, listItem);\\n    listItems.push(listItem);\\n  }\\n\\n  if (listItems.length === 0) {\\n    return;\\n  }\\n\\n  return {\\n    type: 'element',\\n    tagName: 'section',\\n    properties: {\\n      dataFootnotes: true,\\n      className: ['footnotes']\\n    },\\n    children: [{\\n      type: 'element',\\n      tagName: state.footnoteLabelTagName,\\n      properties: { // To do: use structured clone.\\n        ...JSON.parse(JSON.stringify(state.footnoteLabelProperties)),\\n        id: 'footnote-label'\\n      },\\n      children: [{\\n        type: 'text',\\n        value: state.footnoteLabel\\n      }]\\n    }, {\\n      type: 'text',\\n      value: '\\\\n'\\n    }, {\\n      type: 'element',\\n      tagName: 'ol',\\n      properties: {},\\n      children: state.wrap(listItems, true)\\n    }, {\\n      type: 'text',\\n      value: '\\\\n'\\n    }]\\n  };\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"footer\",\"state\",\"listItems\",\"index\",\"footnoteOrder\",\"length\",\"def\",\"footnoteById\",\"content\",\"all\",\"id\",\"String\",\"identifier\",\"toUpperCase\",\"safeId\",\"_micromarkUtilSanitizeUri\",\"normalizeUri\",\"toLowerCase\",\"referenceIndex\",\"backReferences\",\"footnoteCounts\",\"backReference\",\"type\",\"tagName\",\"properties\",\"href\",\"clobberPrefix\",\"dataFootnoteBackref\",\"className\",\"ariaLabel\",\"footnoteBackLabel\",\"children\",\"push\",\"tail\",\"tailTail\",\"listItem\",\"wrap\",\"patch\",\"dataFootnotes\",\"footnoteLabelTagName\",\"JSON\",\"parse\",\"stringify\",\"footnoteLabelProperties\",\"footnoteLabel\"]\n}\n"]