["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/parse5/lib/extensions/position-tracking/preprocessor-mixin.js"],"~:js","shadow$provide.module$node_modules$parse5$lib$extensions$position_tracking$preprocessor_mixin=function(global,require,module,exports){global=require(\"module$node_modules$parse5$lib$utils$mixin\");class PositionTrackingPreprocessorMixin extends global{constructor(preprocessor){super(preprocessor);this.preprocessor=preprocessor;this.isEol=!1;this.col=this.offset=this.droppedBufferSize=this.lineStartPos=0;this.line=1}_getOverriddenMethods(mxn,orig){return{advance(){const pos=this.pos+1,ch=this.html[pos];\nmxn.isEol&&(mxn.isEol=!1,mxn.line++,mxn.lineStartPos=pos);if(\"\\n\"===ch||\"\\r\"===ch&&\"\\n\"!==this.html[pos+1])mxn.isEol=!0;mxn.col=pos-mxn.lineStartPos+1;mxn.offset=mxn.droppedBufferSize+pos;return orig.advance.call(this)},retreat(){orig.retreat.call(this);mxn.isEol=!1;mxn.col=this.pos-mxn.lineStartPos+1},dropParsedChunk(){var prevPos=this.pos;orig.dropParsedChunk.call(this);prevPos-=this.pos;mxn.lineStartPos-=prevPos;mxn.droppedBufferSize+=prevPos;mxn.offset=mxn.droppedBufferSize+this.pos}}}}module.exports=\nPositionTrackingPreprocessorMixin}","~:source","shadow$provide[\"module$node_modules$parse5$lib$extensions$position_tracking$preprocessor_mixin\"] = function(global,require,module,exports) {\n'use strict';\n\nconst Mixin = require('../../utils/mixin');\n\nclass PositionTrackingPreprocessorMixin extends Mixin {\n    constructor(preprocessor) {\n        super(preprocessor);\n\n        this.preprocessor = preprocessor;\n        this.isEol = false;\n        this.lineStartPos = 0;\n        this.droppedBufferSize = 0;\n\n        this.offset = 0;\n        this.col = 0;\n        this.line = 1;\n    }\n\n    _getOverriddenMethods(mxn, orig) {\n        return {\n            advance() {\n                const pos = this.pos + 1;\n                const ch = this.html[pos];\n\n                //NOTE: LF should be in the last column of the line\n                if (mxn.isEol) {\n                    mxn.isEol = false;\n                    mxn.line++;\n                    mxn.lineStartPos = pos;\n                }\n\n                if (ch === '\\n' || (ch === '\\r' && this.html[pos + 1] !== '\\n')) {\n                    mxn.isEol = true;\n                }\n\n                mxn.col = pos - mxn.lineStartPos + 1;\n                mxn.offset = mxn.droppedBufferSize + pos;\n\n                return orig.advance.call(this);\n            },\n\n            retreat() {\n                orig.retreat.call(this);\n\n                mxn.isEol = false;\n                mxn.col = this.pos - mxn.lineStartPos + 1;\n            },\n\n            dropParsedChunk() {\n                const prevPos = this.pos;\n\n                orig.dropParsedChunk.call(this);\n\n                const reduction = prevPos - this.pos;\n\n                mxn.lineStartPos -= reduction;\n                mxn.droppedBufferSize += reduction;\n                mxn.offset = mxn.droppedBufferSize + this.pos;\n            }\n        };\n    }\n}\n\nmodule.exports = PositionTrackingPreprocessorMixin;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$parse5$lib$utils$mixin","~$shadow.js"]],"~:properties",["^5",["offset","isEol","preprocessor","lineStartPos","col","line","droppedBufferSize"]],"~:compiled-at",1676667638408,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$parse5$lib$extensions$position_tracking$preprocessor_mixin.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,CAAA,8EAAA,CAAmG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGrIC,MAAAA,CAAQH,OAAA,CAAQ,4CAAR,CAEd,MAAMI,kCAAN,QAAgDD,OAAhD,CACIE,WAAW,CAACC,YAAD,CAAe,CACtB,KAAA,CAAMA,YAAN,CAEA,KAAKA,CAAAA,YAAL,CAAoBA,YACpB,KAAKC,CAAAA,KAAL,CAAa,CAAA,CAKb,KAAKC,CAAAA,GAAL,CADA,IAAKC,CAAAA,MACL,CAHA,IAAKC,CAAAA,iBAGL,CAJA,IAAKC,CAAAA,YAIL,CAJoB,CAKpB,KAAKC,CAAAA,IAAL,CAAY,CAVU,CAa1BC,qBAAqB,CAACC,GAAD,CAAMC,IAAN,CAAY,CAC7B,MAAO,CACHC,OAAO,EAAG,CACN,MAAMC,IAAM,IAAKA,CAAAA,GAAXA,CAAiB,CAAvB,CACMC,GAAK,IAAKC,CAAAA,IAAL,CAAUF,GAAV,CAGPH;GAAIP,CAAAA,KAAR,GACIO,GAAIP,CAAAA,KAEJ,CAFY,CAAA,CAEZ,CADAO,GAAIF,CAAAA,IAAJ,EACA,CAAAE,GAAIH,CAAAA,YAAJ,CAAmBM,GAHvB,CAMA,IAAW,IAAX,GAAIC,EAAJ,EAA2B,IAA3B,GAAoBA,EAApB,EAA0D,IAA1D,GAAmC,IAAKC,CAAAA,IAAL,CAAUF,GAAV,CAAgB,CAAhB,CAAnC,CACIH,GAAIP,CAAAA,KAAJ,CAAY,CAAA,CAGhBO,IAAIN,CAAAA,GAAJ,CAAUS,GAAV,CAAgBH,GAAIH,CAAAA,YAApB,CAAmC,CACnCG,IAAIL,CAAAA,MAAJ,CAAaK,GAAIJ,CAAAA,iBAAjB,CAAqCO,GAErC,OAAOF,KAAKC,CAAAA,OAAQI,CAAAA,IAAb,CAAkB,IAAlB,CAlBD,CADP,CAsBHC,OAAO,EAAG,CACNN,IAAKM,CAAAA,OAAQD,CAAAA,IAAb,CAAkB,IAAlB,CAEAN,IAAIP,CAAAA,KAAJ,CAAY,CAAA,CACZO,IAAIN,CAAAA,GAAJ,CAAU,IAAKS,CAAAA,GAAf,CAAqBH,GAAIH,CAAAA,YAAzB,CAAwC,CAJlC,CAtBP,CA6BHW,eAAe,EAAG,CACd,IAAMC,QAAU,IAAKN,CAAAA,GAErBF,KAAKO,CAAAA,eAAgBF,CAAAA,IAArB,CAA0B,IAA1B,CAEkBG,QAAZC,EAAsB,IAAKP,CAAAA,GAEjCH,IAAIH,CAAAA,YAAJ,EAAoBa,OACpBV,IAAIJ,CAAAA,iBAAJ,EAAyBc,OACzBV,IAAIL,CAAAA,MAAJ,CAAaK,GAAIJ,CAAAA,iBAAjB,CAAqC,IAAKO,CAAAA,GAT5B,CA7Bf,CADsB,CAdrC,CA2DAhB,MAAOC,CAAAA,OAAP;AAAiBE,iCAhE0H;\",\n\"sources\":[\"node_modules/parse5/lib/extensions/position-tracking/preprocessor-mixin.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$parse5$lib$extensions$position_tracking$preprocessor_mixin\\\"] = function(global,require,module,exports) {\\n'use strict';\\n\\nconst Mixin = require('../../utils/mixin');\\n\\nclass PositionTrackingPreprocessorMixin extends Mixin {\\n    constructor(preprocessor) {\\n        super(preprocessor);\\n\\n        this.preprocessor = preprocessor;\\n        this.isEol = false;\\n        this.lineStartPos = 0;\\n        this.droppedBufferSize = 0;\\n\\n        this.offset = 0;\\n        this.col = 0;\\n        this.line = 1;\\n    }\\n\\n    _getOverriddenMethods(mxn, orig) {\\n        return {\\n            advance() {\\n                const pos = this.pos + 1;\\n                const ch = this.html[pos];\\n\\n                //NOTE: LF should be in the last column of the line\\n                if (mxn.isEol) {\\n                    mxn.isEol = false;\\n                    mxn.line++;\\n                    mxn.lineStartPos = pos;\\n                }\\n\\n                if (ch === '\\\\n' || (ch === '\\\\r' && this.html[pos + 1] !== '\\\\n')) {\\n                    mxn.isEol = true;\\n                }\\n\\n                mxn.col = pos - mxn.lineStartPos + 1;\\n                mxn.offset = mxn.droppedBufferSize + pos;\\n\\n                return orig.advance.call(this);\\n            },\\n\\n            retreat() {\\n                orig.retreat.call(this);\\n\\n                mxn.isEol = false;\\n                mxn.col = this.pos - mxn.lineStartPos + 1;\\n            },\\n\\n            dropParsedChunk() {\\n                const prevPos = this.pos;\\n\\n                orig.dropParsedChunk.call(this);\\n\\n                const reduction = prevPos - this.pos;\\n\\n                mxn.lineStartPos -= reduction;\\n                mxn.droppedBufferSize += reduction;\\n                mxn.offset = mxn.droppedBufferSize + this.pos;\\n            }\\n        };\\n    }\\n}\\n\\nmodule.exports = PositionTrackingPreprocessorMixin;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Mixin\",\"PositionTrackingPreprocessorMixin\",\"constructor\",\"preprocessor\",\"isEol\",\"col\",\"offset\",\"droppedBufferSize\",\"lineStartPos\",\"line\",\"_getOverriddenMethods\",\"mxn\",\"orig\",\"advance\",\"pos\",\"ch\",\"html\",\"call\",\"retreat\",\"dropParsedChunk\",\"prevPos\",\"reduction\"]\n}\n"]