["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/arturo.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$arturo=function(global,require,module,exports){function arturo(Prism$jscomp$0){(function(Prism){var createLanguageString=function(lang,pattern){return{pattern:RegExp(/\\{!/.source+\"(?:\"+(pattern||lang)+\")\"+/$[\\s\\S]*\\}/.source,\"m\"),greedy:!0,inside:{embedded:{pattern:/(^\\{!\\w+\\b)[\\s\\S]+(?=\\}$)/,lookbehind:!0,alias:\"language-\"+lang,inside:Prism.languages[lang]},string:/[\\s\\S]+/}}};Prism.languages.arturo={comment:{pattern:/;.*/,greedy:!0},character:{pattern:/`.`/,\nalias:\"char\",greedy:!0},number:{pattern:/\\b\\d+(?:\\.\\d+(?:\\.\\d+(?:-[\\w+-]+)?)?)?\\b/},string:{pattern:/\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"/,greedy:!0},regex:{pattern:/\\{\\/.*?\\/\\}/,greedy:!0},\"html-string\":createLanguageString(\"html\"),\"css-string\":createLanguageString(\"css\"),\"js-string\":createLanguageString(\"js\"),\"md-string\":createLanguageString(\"md\"),\"sql-string\":createLanguageString(\"sql\"),\"sh-string\":createLanguageString(\"shell\",\"sh\"),multistring:{pattern:/».*|\\{:[\\s\\S]*?:\\}|\\{[\\s\\S]*?\\}|^-{6}$[\\s\\S]*/m,alias:\"string\",\ngreedy:!0},label:{pattern:/\\w+\\b\\??:/,alias:\"property\"},literal:{pattern:/'(?:\\w+\\b\\??:?)/,alias:\"constant\"},type:{pattern:/:(?:\\w+\\b\\??:?)/,alias:\"class-name\"},color:/#\\w+/,predicate:{pattern:/\\b(?:all|and|any|ascii|attr|attribute|attributeLabel|binary|block|char|contains|database|date|dictionary|empty|equal|even|every|exists|false|floating|function|greater|greaterOrEqual|if|in|inline|integer|is|key|label|leap|less|lessOrEqual|literal|logical|lower|nand|negative|nor|not|notEqual|null|numeric|odd|or|path|pathLabel|positive|prefix|prime|regex|same|set|some|sorted|standalone|string|subset|suffix|superset|symbol|symbolLiteral|true|try|type|unless|upper|when|whitespace|word|xnor|xor|zero)\\?/,\nalias:\"keyword\"},\"builtin-function\":{pattern:/\\b(?:abs|acos|acosh|acsec|acsech|actan|actanh|add|after|alert|alias|and|angle|append|arg|args|arity|array|as|asec|asech|asin|asinh|atan|atan2|atanh|attr|attrs|average|before|benchmark|blend|break|call|capitalize|case|ceil|chop|clear|clip|close|color|combine|conj|continue|copy|cos|cosh|crc|csec|csech|ctan|ctanh|cursor|darken|dec|decode|define|delete|desaturate|deviation|dialog|dictionary|difference|digest|digits|div|do|download|drop|dup|e|else|empty|encode|ensure|env|escape|execute|exit|exp|extend|extract|factors|fdiv|filter|first|flatten|floor|fold|from|function|gamma|gcd|get|goto|hash|hypot|if|inc|indent|index|infinity|info|input|insert|inspect|intersection|invert|jaro|join|keys|kurtosis|last|let|levenshtein|lighten|list|ln|log|loop|lower|mail|map|match|max|median|min|mod|module|mul|nand|neg|new|nor|normalize|not|now|null|open|or|outdent|pad|palette|panic|path|pause|permissions|permutate|pi|pop|popup|pow|powerset|powmod|prefix|print|prints|process|product|query|random|range|read|relative|remove|rename|render|repeat|replace|request|return|reverse|round|sample|saturate|script|sec|sech|select|serve|set|shl|shr|shuffle|sin|sinh|size|skewness|slice|sort|spin|split|sqrt|squeeze|stack|strip|sub|suffix|sum|switch|symbols|symlink|sys|take|tan|tanh|terminal|terminate|to|truncate|try|type|unclip|union|unique|unless|until|unzip|upper|values|var|variance|volume|webview|while|with|wordwrap|write|xnor|xor|zip)\\b/,\nalias:\"keyword\"},sugar:{pattern:/->|=>|\\||::/,alias:\"operator\"},punctuation:/[()[\\],]/,symbol:{pattern:/<:|-:|ø|@|#|\\+|\\||\\*|\\$|---|-|%|\\/|\\.\\.|\\^|~|=|<|>|\\\\/},boolean:{pattern:/\\b(?:false|maybe|true)\\b/}};Prism.languages.art=Prism.languages.arturo})(Prism$jscomp$0)}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=arturo;arturo.displayName=\"arturo\";arturo.aliases=[\"art\"]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$arturo\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = arturo;\n// @ts-nocheck\narturo.displayName = 'arturo';\narturo.aliases = ['art'];\n/** @type {import('../core.js').Syntax} */\n\nfunction arturo(Prism) {\n  ;\n\n  (function (Prism) {\n    /**\n     * @param {string} lang\n     * @param {string} pattern\n     */\n    var createLanguageString = function (lang, pattern) {\n      return {\n        pattern: RegExp(/\\{!/.source + '(?:' + (pattern || lang) + ')' + /$[\\s\\S]*\\}/.source, 'm'),\n        greedy: true,\n        inside: {\n          embedded: {\n            pattern: /(^\\{!\\w+\\b)[\\s\\S]+(?=\\}$)/,\n            lookbehind: true,\n            alias: 'language-' + lang,\n            inside: Prism.languages[lang]\n          },\n          string: /[\\s\\S]+/\n        }\n      };\n    };\n\n    Prism.languages.arturo = {\n      comment: {\n        pattern: /;.*/,\n        greedy: true\n      },\n      character: {\n        pattern: /`.`/,\n        alias: 'char',\n        greedy: true\n      },\n      number: {\n        pattern: /\\b\\d+(?:\\.\\d+(?:\\.\\d+(?:-[\\w+-]+)?)?)?\\b/\n      },\n      string: {\n        pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"/,\n        greedy: true\n      },\n      regex: {\n        pattern: /\\{\\/.*?\\/\\}/,\n        greedy: true\n      },\n      'html-string': createLanguageString('html'),\n      'css-string': createLanguageString('css'),\n      'js-string': createLanguageString('js'),\n      'md-string': createLanguageString('md'),\n      'sql-string': createLanguageString('sql'),\n      'sh-string': createLanguageString('shell', 'sh'),\n      multistring: {\n        pattern: /».*|\\{:[\\s\\S]*?:\\}|\\{[\\s\\S]*?\\}|^-{6}$[\\s\\S]*/m,\n        alias: 'string',\n        greedy: true\n      },\n      label: {\n        pattern: /\\w+\\b\\??:/,\n        alias: 'property'\n      },\n      literal: {\n        pattern: /'(?:\\w+\\b\\??:?)/,\n        alias: 'constant'\n      },\n      type: {\n        pattern: /:(?:\\w+\\b\\??:?)/,\n        alias: 'class-name'\n      },\n      color: /#\\w+/,\n      predicate: {\n        pattern: /\\b(?:all|and|any|ascii|attr|attribute|attributeLabel|binary|block|char|contains|database|date|dictionary|empty|equal|even|every|exists|false|floating|function|greater|greaterOrEqual|if|in|inline|integer|is|key|label|leap|less|lessOrEqual|literal|logical|lower|nand|negative|nor|not|notEqual|null|numeric|odd|or|path|pathLabel|positive|prefix|prime|regex|same|set|some|sorted|standalone|string|subset|suffix|superset|symbol|symbolLiteral|true|try|type|unless|upper|when|whitespace|word|xnor|xor|zero)\\?/,\n        alias: 'keyword'\n      },\n      'builtin-function': {\n        pattern: /\\b(?:abs|acos|acosh|acsec|acsech|actan|actanh|add|after|alert|alias|and|angle|append|arg|args|arity|array|as|asec|asech|asin|asinh|atan|atan2|atanh|attr|attrs|average|before|benchmark|blend|break|call|capitalize|case|ceil|chop|clear|clip|close|color|combine|conj|continue|copy|cos|cosh|crc|csec|csech|ctan|ctanh|cursor|darken|dec|decode|define|delete|desaturate|deviation|dialog|dictionary|difference|digest|digits|div|do|download|drop|dup|e|else|empty|encode|ensure|env|escape|execute|exit|exp|extend|extract|factors|fdiv|filter|first|flatten|floor|fold|from|function|gamma|gcd|get|goto|hash|hypot|if|inc|indent|index|infinity|info|input|insert|inspect|intersection|invert|jaro|join|keys|kurtosis|last|let|levenshtein|lighten|list|ln|log|loop|lower|mail|map|match|max|median|min|mod|module|mul|nand|neg|new|nor|normalize|not|now|null|open|or|outdent|pad|palette|panic|path|pause|permissions|permutate|pi|pop|popup|pow|powerset|powmod|prefix|print|prints|process|product|query|random|range|read|relative|remove|rename|render|repeat|replace|request|return|reverse|round|sample|saturate|script|sec|sech|select|serve|set|shl|shr|shuffle|sin|sinh|size|skewness|slice|sort|spin|split|sqrt|squeeze|stack|strip|sub|suffix|sum|switch|symbols|symlink|sys|take|tan|tanh|terminal|terminate|to|truncate|try|type|unclip|union|unique|unless|until|unzip|upper|values|var|variance|volume|webview|while|with|wordwrap|write|xnor|xor|zip)\\b/,\n        alias: 'keyword'\n      },\n      sugar: {\n        pattern: /->|=>|\\||::/,\n        alias: 'operator'\n      },\n      punctuation: /[()[\\],]/,\n      symbol: {\n        pattern: /<:|-:|ø|@|#|\\+|\\||\\*|\\$|---|-|%|\\/|\\.\\.|\\^|~|=|<|>|\\\\/\n      },\n      boolean: {\n        pattern: /\\b(?:false|maybe|true)\\b/\n      }\n    };\n    Prism.languages.art = Prism.languages['arturo'];\n  })(Prism);\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["boolean","punctuation","string","aliases","sugar","displayName","label","__esModule","regex","lookbehind","multistring","value","character","number","greedy","symbol","pattern","type","inside","predicate","alias","comment","arturo","art","color","default","literal","embedded"]],"~:compiled-at",1676841365390,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$arturo.js\",\n\"lineCount\":5,\n\"mappings\":\"AAAAA,cAAA,CAAA,yCAAA,CAA8D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAYtGC,QAASA,OAAM,CAACC,cAAD,CAAQ,CAGpB,SAAS,CAACA,KAAD,CAAQ,CAKhB,IAAIC,qBAAuBA,QAAS,CAACC,IAAD,CAAOC,OAAP,CAAgB,CAClD,MAAO,CACLA,QAASC,MAAA,CAAO,KAAMC,CAAAA,MAAb,CAAsB,KAAtB,EAA+BF,OAA/B,EAA0CD,IAA1C,EAAkD,GAAlD,CAAwD,YAAaG,CAAAA,MAArE,CAA6E,GAA7E,CADJ,CAELC,OAAQ,CAAA,CAFH,CAGLC,OAAQ,CACNC,SAAU,CACRL,QAAS,2BADD,CAERM,WAAY,CAAA,CAFJ,CAGRC,MAAO,WAAPA,CAAqBR,IAHb,CAIRK,OAAQP,KAAMW,CAAAA,SAAN,CAAgBT,IAAhB,CAJA,CADJ,CAONU,OAAQ,SAPF,CAHH,CAD2C,CAgBpDZ,MAAMW,CAAAA,SAAUZ,CAAAA,MAAhB,CAAyB,CACvBc,QAAS,CACPV,QAAS,KADF,CAEPG,OAAQ,CAAA,CAFD,CADc,CAKvBQ,UAAW,CACTX,QAAS,KADA;AAETO,MAAO,MAFE,CAGTJ,OAAQ,CAAA,CAHC,CALY,CAUvBS,OAAQ,CACNZ,QAAS,0CADH,CAVe,CAavBS,OAAQ,CACNT,QAAS,uBADH,CAENG,OAAQ,CAAA,CAFF,CAbe,CAiBvBU,MAAO,CACLb,QAAS,aADJ,CAELG,OAAQ,CAAA,CAFH,CAjBgB,CAqBvB,cAAeL,oBAAA,CAAqB,MAArB,CArBQ,CAsBvB,aAAcA,oBAAA,CAAqB,KAArB,CAtBS,CAuBvB,YAAaA,oBAAA,CAAqB,IAArB,CAvBU,CAwBvB,YAAaA,oBAAA,CAAqB,IAArB,CAxBU,CAyBvB,aAAcA,oBAAA,CAAqB,KAArB,CAzBS,CA0BvB,YAAaA,oBAAA,CAAqB,OAArB,CAA8B,IAA9B,CA1BU,CA2BvBgB,YAAa,CACXd,QAAS,gDADE,CAEXO,MAAO,QAFI;AAGXJ,OAAQ,CAAA,CAHG,CA3BU,CAgCvBY,MAAO,CACLf,QAAS,WADJ,CAELO,MAAO,UAFF,CAhCgB,CAoCvBS,QAAS,CACPhB,QAAS,iBADF,CAEPO,MAAO,UAFA,CApCc,CAwCvBU,KAAM,CACJjB,QAAS,iBADL,CAEJO,MAAO,YAFH,CAxCiB,CA4CvBW,MAAO,MA5CgB,CA6CvBC,UAAW,CACTnB,QAAS,ufADA;AAETO,MAAO,SAFE,CA7CY,CAiDvB,mBAAoB,CAClBP,QAAS,+4CADS;AAElBO,MAAO,SAFW,CAjDG,CAqDvBa,MAAO,CACLpB,QAAS,aADJ,CAELO,MAAO,UAFF,CArDgB,CAyDvBc,YAAa,UAzDU,CA0DvBC,OAAQ,CACNtB,QAAS,uDADH,CA1De,CA6DvBuB,QAAS,CACPvB,QAAS,0BADF,CA7Dc,CAiEzBH,MAAMW,CAAAA,SAAUgB,CAAAA,GAAhB,CAAsB3B,KAAMW,CAAAA,SAAN,CAAA,MAtFN,CAAjB,CAAD,CAuFGX,cAvFH,CAHqB,CATvB4B,MAAOC,CAAAA,cAAP,CAAsB/B,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CgC,MAAO,CAAA,CADoC,CAA7C,CAGAhC,QAAQiC,CAAAA,OAAR,CAAkBhC,MAElBA,OAAOiC,CAAAA,WAAP,CAAqB,QACrBjC,OAAOkC,CAAAA,OAAP,CAAiB,CAAC,KAAD,CATqF;\",\n\"sources\":[\"node_modules/refractor/lang/arturo.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$arturo\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = arturo;\\n// @ts-nocheck\\narturo.displayName = 'arturo';\\narturo.aliases = ['art'];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction arturo(Prism) {\\n  ;\\n\\n  (function (Prism) {\\n    /**\\n     * @param {string} lang\\n     * @param {string} pattern\\n     */\\n    var createLanguageString = function (lang, pattern) {\\n      return {\\n        pattern: RegExp(/\\\\{!/.source + '(?:' + (pattern || lang) + ')' + /$[\\\\s\\\\S]*\\\\}/.source, 'm'),\\n        greedy: true,\\n        inside: {\\n          embedded: {\\n            pattern: /(^\\\\{!\\\\w+\\\\b)[\\\\s\\\\S]+(?=\\\\}$)/,\\n            lookbehind: true,\\n            alias: 'language-' + lang,\\n            inside: Prism.languages[lang]\\n          },\\n          string: /[\\\\s\\\\S]+/\\n        }\\n      };\\n    };\\n\\n    Prism.languages.arturo = {\\n      comment: {\\n        pattern: /;.*/,\\n        greedy: true\\n      },\\n      character: {\\n        pattern: /`.`/,\\n        alias: 'char',\\n        greedy: true\\n      },\\n      number: {\\n        pattern: /\\\\b\\\\d+(?:\\\\.\\\\d+(?:\\\\.\\\\d+(?:-[\\\\w+-]+)?)?)?\\\\b/\\n      },\\n      string: {\\n        pattern: /\\\"(?:[^\\\"\\\\\\\\\\\\r\\\\n]|\\\\\\\\.)*\\\"/,\\n        greedy: true\\n      },\\n      regex: {\\n        pattern: /\\\\{\\\\/.*?\\\\/\\\\}/,\\n        greedy: true\\n      },\\n      'html-string': createLanguageString('html'),\\n      'css-string': createLanguageString('css'),\\n      'js-string': createLanguageString('js'),\\n      'md-string': createLanguageString('md'),\\n      'sql-string': createLanguageString('sql'),\\n      'sh-string': createLanguageString('shell', 'sh'),\\n      multistring: {\\n        pattern: /\\u00bb.*|\\\\{:[\\\\s\\\\S]*?:\\\\}|\\\\{[\\\\s\\\\S]*?\\\\}|^-{6}$[\\\\s\\\\S]*/m,\\n        alias: 'string',\\n        greedy: true\\n      },\\n      label: {\\n        pattern: /\\\\w+\\\\b\\\\??:/,\\n        alias: 'property'\\n      },\\n      literal: {\\n        pattern: /'(?:\\\\w+\\\\b\\\\??:?)/,\\n        alias: 'constant'\\n      },\\n      type: {\\n        pattern: /:(?:\\\\w+\\\\b\\\\??:?)/,\\n        alias: 'class-name'\\n      },\\n      color: /#\\\\w+/,\\n      predicate: {\\n        pattern: /\\\\b(?:all|and|any|ascii|attr|attribute|attributeLabel|binary|block|char|contains|database|date|dictionary|empty|equal|even|every|exists|false|floating|function|greater|greaterOrEqual|if|in|inline|integer|is|key|label|leap|less|lessOrEqual|literal|logical|lower|nand|negative|nor|not|notEqual|null|numeric|odd|or|path|pathLabel|positive|prefix|prime|regex|same|set|some|sorted|standalone|string|subset|suffix|superset|symbol|symbolLiteral|true|try|type|unless|upper|when|whitespace|word|xnor|xor|zero)\\\\?/,\\n        alias: 'keyword'\\n      },\\n      'builtin-function': {\\n        pattern: /\\\\b(?:abs|acos|acosh|acsec|acsech|actan|actanh|add|after|alert|alias|and|angle|append|arg|args|arity|array|as|asec|asech|asin|asinh|atan|atan2|atanh|attr|attrs|average|before|benchmark|blend|break|call|capitalize|case|ceil|chop|clear|clip|close|color|combine|conj|continue|copy|cos|cosh|crc|csec|csech|ctan|ctanh|cursor|darken|dec|decode|define|delete|desaturate|deviation|dialog|dictionary|difference|digest|digits|div|do|download|drop|dup|e|else|empty|encode|ensure|env|escape|execute|exit|exp|extend|extract|factors|fdiv|filter|first|flatten|floor|fold|from|function|gamma|gcd|get|goto|hash|hypot|if|inc|indent|index|infinity|info|input|insert|inspect|intersection|invert|jaro|join|keys|kurtosis|last|let|levenshtein|lighten|list|ln|log|loop|lower|mail|map|match|max|median|min|mod|module|mul|nand|neg|new|nor|normalize|not|now|null|open|or|outdent|pad|palette|panic|path|pause|permissions|permutate|pi|pop|popup|pow|powerset|powmod|prefix|print|prints|process|product|query|random|range|read|relative|remove|rename|render|repeat|replace|request|return|reverse|round|sample|saturate|script|sec|sech|select|serve|set|shl|shr|shuffle|sin|sinh|size|skewness|slice|sort|spin|split|sqrt|squeeze|stack|strip|sub|suffix|sum|switch|symbols|symlink|sys|take|tan|tanh|terminal|terminate|to|truncate|try|type|unclip|union|unique|unless|until|unzip|upper|values|var|variance|volume|webview|while|with|wordwrap|write|xnor|xor|zip)\\\\b/,\\n        alias: 'keyword'\\n      },\\n      sugar: {\\n        pattern: /->|=>|\\\\||::/,\\n        alias: 'operator'\\n      },\\n      punctuation: /[()[\\\\],]/,\\n      symbol: {\\n        pattern: /<:|-:|\\u00f8|@|#|\\\\+|\\\\||\\\\*|\\\\$|---|-|%|\\\\/|\\\\.\\\\.|\\\\^|~|=|<|>|\\\\\\\\/\\n      },\\n      boolean: {\\n        pattern: /\\\\b(?:false|maybe|true)\\\\b/\\n      }\\n    };\\n    Prism.languages.art = Prism.languages['arturo'];\\n  })(Prism);\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"arturo\",\"Prism\",\"createLanguageString\",\"lang\",\"pattern\",\"RegExp\",\"source\",\"greedy\",\"inside\",\"embedded\",\"lookbehind\",\"alias\",\"languages\",\"string\",\"comment\",\"character\",\"number\",\"regex\",\"multistring\",\"label\",\"literal\",\"type\",\"color\",\"predicate\",\"sugar\",\"punctuation\",\"symbol\",\"boolean\",\"art\",\"Object\",\"defineProperty\",\"value\",\"default\",\"displayName\",\"aliases\"]\n}\n"]