["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/property-information/lib/util/merge.js"],"~:js","shadow$provide.module$node_modules$property_information$lib$util$merge=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.merge=function(definitions,space){const property={},normal={};let index=-1;for(;++index<definitions.length;)Object.assign(property,definitions[index].property),Object.assign(normal,definitions[index].normal);return new _schema.Schema(property,normal,space)};var _schema=require(\"module$node_modules$property_information$lib$util$schema\")}","~:source","shadow$provide[\"module$node_modules$property_information$lib$util$merge\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.merge = merge;\n\nvar _schema = require(\"./schema.js\");\n\n/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nfunction merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {};\n  /** @type {Normal} */\n\n  const normal = {};\n  let index = -1;\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property);\n    Object.assign(normal, definitions[index].normal);\n  }\n\n  return new _schema.Schema(property, normal, space);\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$property_information$lib$util$schema"]],"~:properties",["^5",["__esModule","value","merge"]],"~:compiled-at",1676665867324,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$property_information$lib$util$merge.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAA,uDAAA,CAA4E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGpHC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,KAAR,CAcAA,QAAc,CAACC,WAAD,CAAcC,KAAd,CAAqB,CAEjC,MAAMC,SAAW,EAAjB,CAGMC,OAAS,EACf,KAAIC,MAAQ,CAAC,CAEb,KAAA,CAAO,EAAEA,KAAT,CAAiBJ,WAAYK,CAAAA,MAA7B,CAAA,CACET,MAAOU,CAAAA,MAAP,CAAcJ,QAAd,CAAwBF,WAAA,CAAYI,KAAZ,CAAmBF,CAAAA,QAA3C,CACA,CAAAN,MAAOU,CAAAA,MAAP,CAAcH,MAAd,CAAsBH,WAAA,CAAYI,KAAZ,CAAmBD,CAAAA,MAAzC,CAGF,OAAO,KAAII,OAAQC,CAAAA,MAAZ,CAAmBN,QAAnB,CAA6BC,MAA7B,CAAqCF,KAArC,CAb0B,CAZnC,KAAIM,QAAUd,OAAA,CAAQ,0DAAR,CARsG;\",\n\"sources\":[\"node_modules/property-information/lib/util/merge.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$property_information$lib$util$merge\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.merge = merge;\\n\\nvar _schema = require(\\\"./schema.js\\\");\\n\\n/**\\n * @typedef {import('./schema.js').Properties} Properties\\n * @typedef {import('./schema.js').Normal} Normal\\n */\\n\\n/**\\n * @param {Schema[]} definitions\\n * @param {string} [space]\\n * @returns {Schema}\\n */\\nfunction merge(definitions, space) {\\n  /** @type {Properties} */\\n  const property = {};\\n  /** @type {Normal} */\\n\\n  const normal = {};\\n  let index = -1;\\n\\n  while (++index < definitions.length) {\\n    Object.assign(property, definitions[index].property);\\n    Object.assign(normal, definitions[index].normal);\\n  }\\n\\n  return new _schema.Schema(property, normal, space);\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"merge\",\"definitions\",\"space\",\"property\",\"normal\",\"index\",\"length\",\"assign\",\"_schema\",\"Schema\"]\n}\n"]