["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/haxe.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$haxe=function(global,require,module,exports){function haxe(Prism){Prism.register(_clike.default);Prism.languages.haxe=Prism.languages.extend(\"clike\",{string:{pattern:/\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"/,greedy:!0},\"class-name\":[{pattern:/(\\b(?:abstract|class|enum|extends|implements|interface|new|typedef)\\s+)[A-Z_]\\w*/,lookbehind:!0},/\\b[A-Z]\\w*/],keyword:/\\bthis\\b|\\b(?:abstract|as|break|case|cast|catch|class|continue|default|do|dynamic|else|enum|extends|extern|final|for|from|function|if|implements|import|in|inline|interface|macro|new|null|operator|overload|override|package|private|public|return|static|super|switch|throw|to|try|typedef|untyped|using|var|while)(?!\\.)\\b/,\nfunction:{pattern:/\\b[a-z_]\\w*(?=\\s*(?:<[^<>]*>\\s*)?\\()/i,greedy:!0},operator:/\\.{3}|\\+\\+|--|&&|\\|\\||->|=>|(?:<<?|>{1,3}|[-+*/%!=&|^])=?|[?:~]/});Prism.languages.insertBefore(\"haxe\",\"string\",{\"string-interpolation\":{pattern:/'(?:[^'\\\\]|\\\\[\\s\\S])*'/,greedy:!0,inside:{interpolation:{pattern:/(^|[^\\\\])\\$(?:\\w+|\\{[^{}]+\\})/,lookbehind:!0,inside:{\"interpolation-punctuation\":{pattern:/^\\$\\{?|\\}$/,alias:\"punctuation\"},expression:{pattern:/[\\s\\S]+/,inside:Prism.languages.haxe}}},string:/[\\s\\S]+/}}});Prism.languages.insertBefore(\"haxe\",\n\"class-name\",{regex:{pattern:/~\\/(?:[^\\/\\\\\\r\\n]|\\\\.)+\\/[a-z]*/,greedy:!0,inside:{\"regex-flags\":/\\b[a-z]+$/,\"regex-source\":{pattern:/^(~\\/)[\\s\\S]+(?=\\/$)/,lookbehind:!0,alias:\"language-regex\",inside:Prism.languages.regex},\"regex-delimiter\":/^~\\/|\\/$/}}});Prism.languages.insertBefore(\"haxe\",\"keyword\",{preprocessor:{pattern:/#(?:else|elseif|end|if)\\b.*/,alias:\"property\"},metadata:{pattern:/@:?[\\w.]+/,alias:\"symbol\"},reification:{pattern:/\\$(?:\\w+|(?=\\{))/,alias:\"important\"}})}Object.defineProperty(exports,\n\"__esModule\",{value:!0});exports.default=haxe;var _clike=function(obj){return obj&&obj.__esModule?obj:{default:obj}}(require(\"module$node_modules$refractor$lang$clike\"));haxe.displayName=\"haxe\";haxe.aliases=[]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$haxe\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = haxe;\n\nvar _clike = _interopRequireDefault(require(\"./clike.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// @ts-nocheck\nhaxe.displayName = 'haxe';\nhaxe.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nfunction haxe(Prism) {\n  Prism.register(_clike.default);\n  Prism.languages.haxe = Prism.languages.extend('clike', {\n    string: {\n      // Strings can be multi-line\n      pattern: /\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"/,\n      greedy: true\n    },\n    'class-name': [{\n      pattern: /(\\b(?:abstract|class|enum|extends|implements|interface|new|typedef)\\s+)[A-Z_]\\w*/,\n      lookbehind: true\n    }, // based on naming convention\n    /\\b[A-Z]\\w*/],\n    // The final look-ahead prevents highlighting of keywords if expressions such as \"haxe.macro.Expr\"\n    keyword: /\\bthis\\b|\\b(?:abstract|as|break|case|cast|catch|class|continue|default|do|dynamic|else|enum|extends|extern|final|for|from|function|if|implements|import|in|inline|interface|macro|new|null|operator|overload|override|package|private|public|return|static|super|switch|throw|to|try|typedef|untyped|using|var|while)(?!\\.)\\b/,\n    function: {\n      pattern: /\\b[a-z_]\\w*(?=\\s*(?:<[^<>]*>\\s*)?\\()/i,\n      greedy: true\n    },\n    operator: /\\.{3}|\\+\\+|--|&&|\\|\\||->|=>|(?:<<?|>{1,3}|[-+*/%!=&|^])=?|[?:~]/\n  });\n  Prism.languages.insertBefore('haxe', 'string', {\n    'string-interpolation': {\n      pattern: /'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /(^|[^\\\\])\\$(?:\\w+|\\{[^{}]+\\})/,\n          lookbehind: true,\n          inside: {\n            'interpolation-punctuation': {\n              pattern: /^\\$\\{?|\\}$/,\n              alias: 'punctuation'\n            },\n            expression: {\n              pattern: /[\\s\\S]+/,\n              inside: Prism.languages.haxe\n            }\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  });\n  Prism.languages.insertBefore('haxe', 'class-name', {\n    regex: {\n      pattern: /~\\/(?:[^\\/\\\\\\r\\n]|\\\\.)+\\/[a-z]*/,\n      greedy: true,\n      inside: {\n        'regex-flags': /\\b[a-z]+$/,\n        'regex-source': {\n          pattern: /^(~\\/)[\\s\\S]+(?=\\/$)/,\n          lookbehind: true,\n          alias: 'language-regex',\n          inside: Prism.languages.regex\n        },\n        'regex-delimiter': /^~\\/|\\/$/\n      }\n    }\n  });\n  Prism.languages.insertBefore('haxe', 'keyword', {\n    preprocessor: {\n      pattern: /#(?:else|elseif|end|if)\\b.*/,\n      alias: 'property'\n    },\n    metadata: {\n      pattern: /@:?[\\w.]+/,\n      alias: 'symbol'\n    },\n    reification: {\n      pattern: /\\$(?:\\w+|(?=\\{))/,\n      alias: 'important'\n    }\n  });\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$refractor$lang$clike"]],"~:properties",["^5",["string","aliases","reification","operator","displayName","__esModule","regex","preprocessor","expression","lookbehind","value","keyword","greedy","metadata","function","pattern","inside","alias","haxe","interpolation","default"]],"~:compiled-at",1676841365419,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$haxe.js\",\n\"lineCount\":4,\n\"mappings\":\"AAAAA,cAAA,CAAA,uCAAA,CAA4D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAiBpGC,QAASA,KAAI,CAACC,KAAD,CAAQ,CACnBA,KAAMC,CAAAA,QAAN,CAAeC,MAAOC,CAAAA,OAAtB,CACAH,MAAMI,CAAAA,SAAUL,CAAAA,IAAhB,CAAuBC,KAAMI,CAAAA,SAAUC,CAAAA,MAAhB,CAAuB,OAAvB,CAAgC,CACrDC,OAAQ,CAENC,QAAS,wBAFH,CAGNC,OAAQ,CAAA,CAHF,CAD6C,CAMrD,aAAc,CAAC,CACbD,QAAS,kFADI,CAEbE,WAAY,CAAA,CAFC,CAAD,CAId,YAJc,CANuC,CAYrDC,QAAS,+TAZ4C;AAarDC,SAAU,CACRJ,QAAS,uCADD,CAERC,OAAQ,CAAA,CAFA,CAb2C,CAiBrDI,SAAU,iEAjB2C,CAAhC,CAmBvBZ,MAAMI,CAAAA,SAAUS,CAAAA,YAAhB,CAA6B,MAA7B,CAAqC,QAArC,CAA+C,CAC7C,uBAAwB,CACtBN,QAAS,wBADa,CAEtBC,OAAQ,CAAA,CAFc,CAGtBM,OAAQ,CACNC,cAAe,CACbR,QAAS,+BADI,CAEbE,WAAY,CAAA,CAFC,CAGbK,OAAQ,CACN,4BAA6B,CAC3BP,QAAS,YADkB,CAE3BS,MAAO,aAFoB,CADvB,CAKNC,WAAY,CACVV,QAAS,SADC,CAEVO,OAAQd,KAAMI,CAAAA,SAAUL,CAAAA,IAFd,CALN,CAHK,CADT,CAeNO,OAAQ,SAfF,CAHc,CADqB,CAA/C,CAuBAN,MAAMI,CAAAA,SAAUS,CAAAA,YAAhB,CAA6B,MAA7B;AAAqC,YAArC,CAAmD,CACjDK,MAAO,CACLX,QAAS,iCADJ,CAELC,OAAQ,CAAA,CAFH,CAGLM,OAAQ,CACN,cAAe,WADT,CAEN,eAAgB,CACdP,QAAS,sBADK,CAEdE,WAAY,CAAA,CAFE,CAGdO,MAAO,gBAHO,CAIdF,OAAQd,KAAMI,CAAAA,SAAUc,CAAAA,KAJV,CAFV,CAQN,kBAAmB,UARb,CAHH,CAD0C,CAAnD,CAgBAlB,MAAMI,CAAAA,SAAUS,CAAAA,YAAhB,CAA6B,MAA7B,CAAqC,SAArC,CAAgD,CAC9CM,aAAc,CACZZ,QAAS,6BADG,CAEZS,MAAO,UAFK,CADgC,CAK9CI,SAAU,CACRb,QAAS,WADD,CAERS,MAAO,QAFC,CALoC,CAS9CK,YAAa,CACXd,QAAS,kBADE,CAEXS,MAAO,WAFI,CATiC,CAAhD,CA5DmB,CAdrBM,MAAOC,CAAAA,cAAP,CAAsBzB,OAAtB;AAA+B,YAA/B,CAA6C,CAC3C0B,MAAO,CAAA,CADoC,CAA7C,CAGA1B,QAAQK,CAAAA,OAAR,CAAkBJ,IAElB,KAAIG,OAEJuB,QAA+B,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAIC,CAAAA,UAAX,CAAwBD,GAAxB,CAA8B,CAAEvB,QAASuB,GAAX,CAAvC,CAFxB,CAAuB9B,OAAA,CAAQ,0CAAR,CAAvB,CAKbG,KAAK6B,CAAAA,WAAL,CAAmB,MACnB7B,KAAK8B,CAAAA,OAAL,CAAe,EAdqF;\",\n\"sources\":[\"node_modules/refractor/lang/haxe.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$haxe\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = haxe;\\n\\nvar _clike = _interopRequireDefault(require(\\\"./clike.js\\\"));\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\n// @ts-nocheck\\nhaxe.displayName = 'haxe';\\nhaxe.aliases = [];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction haxe(Prism) {\\n  Prism.register(_clike.default);\\n  Prism.languages.haxe = Prism.languages.extend('clike', {\\n    string: {\\n      // Strings can be multi-line\\n      pattern: /\\\"(?:[^\\\"\\\\\\\\]|\\\\\\\\[\\\\s\\\\S])*\\\"/,\\n      greedy: true\\n    },\\n    'class-name': [{\\n      pattern: /(\\\\b(?:abstract|class|enum|extends|implements|interface|new|typedef)\\\\s+)[A-Z_]\\\\w*/,\\n      lookbehind: true\\n    }, // based on naming convention\\n    /\\\\b[A-Z]\\\\w*/],\\n    // The final look-ahead prevents highlighting of keywords if expressions such as \\\"haxe.macro.Expr\\\"\\n    keyword: /\\\\bthis\\\\b|\\\\b(?:abstract|as|break|case|cast|catch|class|continue|default|do|dynamic|else|enum|extends|extern|final|for|from|function|if|implements|import|in|inline|interface|macro|new|null|operator|overload|override|package|private|public|return|static|super|switch|throw|to|try|typedef|untyped|using|var|while)(?!\\\\.)\\\\b/,\\n    function: {\\n      pattern: /\\\\b[a-z_]\\\\w*(?=\\\\s*(?:<[^<>]*>\\\\s*)?\\\\()/i,\\n      greedy: true\\n    },\\n    operator: /\\\\.{3}|\\\\+\\\\+|--|&&|\\\\|\\\\||->|=>|(?:<<?|>{1,3}|[-+*/%!=&|^])=?|[?:~]/\\n  });\\n  Prism.languages.insertBefore('haxe', 'string', {\\n    'string-interpolation': {\\n      pattern: /'(?:[^'\\\\\\\\]|\\\\\\\\[\\\\s\\\\S])*'/,\\n      greedy: true,\\n      inside: {\\n        interpolation: {\\n          pattern: /(^|[^\\\\\\\\])\\\\$(?:\\\\w+|\\\\{[^{}]+\\\\})/,\\n          lookbehind: true,\\n          inside: {\\n            'interpolation-punctuation': {\\n              pattern: /^\\\\$\\\\{?|\\\\}$/,\\n              alias: 'punctuation'\\n            },\\n            expression: {\\n              pattern: /[\\\\s\\\\S]+/,\\n              inside: Prism.languages.haxe\\n            }\\n          }\\n        },\\n        string: /[\\\\s\\\\S]+/\\n      }\\n    }\\n  });\\n  Prism.languages.insertBefore('haxe', 'class-name', {\\n    regex: {\\n      pattern: /~\\\\/(?:[^\\\\/\\\\\\\\\\\\r\\\\n]|\\\\\\\\.)+\\\\/[a-z]*/,\\n      greedy: true,\\n      inside: {\\n        'regex-flags': /\\\\b[a-z]+$/,\\n        'regex-source': {\\n          pattern: /^(~\\\\/)[\\\\s\\\\S]+(?=\\\\/$)/,\\n          lookbehind: true,\\n          alias: 'language-regex',\\n          inside: Prism.languages.regex\\n        },\\n        'regex-delimiter': /^~\\\\/|\\\\/$/\\n      }\\n    }\\n  });\\n  Prism.languages.insertBefore('haxe', 'keyword', {\\n    preprocessor: {\\n      pattern: /#(?:else|elseif|end|if)\\\\b.*/,\\n      alias: 'property'\\n    },\\n    metadata: {\\n      pattern: /@:?[\\\\w.]+/,\\n      alias: 'symbol'\\n    },\\n    reification: {\\n      pattern: /\\\\$(?:\\\\w+|(?=\\\\{))/,\\n      alias: 'important'\\n    }\\n  });\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"haxe\",\"Prism\",\"register\",\"_clike\",\"default\",\"languages\",\"extend\",\"string\",\"pattern\",\"greedy\",\"lookbehind\",\"keyword\",\"function\",\"operator\",\"insertBefore\",\"inside\",\"interpolation\",\"alias\",\"expression\",\"regex\",\"preprocessor\",\"metadata\",\"reification\",\"Object\",\"defineProperty\",\"value\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"displayName\",\"aliases\"]\n}\n"]