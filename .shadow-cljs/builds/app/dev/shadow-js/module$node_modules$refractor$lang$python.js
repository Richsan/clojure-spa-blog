["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/python.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$python=function(global,require,module,exports){function python(Prism){Prism.languages.python={comment:{pattern:/(^|[^\\\\])#.*/,lookbehind:!0,greedy:!0},\"string-interpolation\":{pattern:/(?:f|fr|rf)(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i,greedy:!0,inside:{interpolation:{pattern:/((?:^|[^{])(?:\\{\\{)*)\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}])+\\})+\\})+\\}/,lookbehind:!0,inside:{\"format-spec\":{pattern:/(:)[^:(){}]+(?=\\}$)/,lookbehind:!0},\n\"conversion-option\":{pattern:/![sra](?=[:}]$)/,alias:\"punctuation\"},rest:null}},string:/[\\s\\S]+/}},\"triple-quoted-string\":{pattern:/(?:[rub]|br|rb)?(\"\"\"|''')[\\s\\S]*?\\1/i,greedy:!0,alias:\"string\"},string:{pattern:/(?:[rub]|br|rb)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i,greedy:!0},function:{pattern:/((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,lookbehind:!0},\"class-name\":{pattern:/(\\bclass\\s+)\\w+/i,lookbehind:!0},decorator:{pattern:/(^[\\t ]*)@\\w+(?:\\.\\w+)*/m,lookbehind:!0,alias:[\"annotation\",\"punctuation\"],\ninside:{punctuation:/\\./}},keyword:/\\b(?:_(?=\\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/,builtin:/\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\nboolean:/\\b(?:False|None|True)\\b/,number:/\\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\\b|(?:\\b\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\B\\.\\d+(?:_\\d+)*)(?:e[+-]?\\d+(?:_\\d+)*)?j?(?!\\w)/i,operator:/[-+%=]=?|!=|:=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,punctuation:/[{}[\\];(),.:]/};Prism.languages.python[\"string-interpolation\"].inside.interpolation.inside.rest=Prism.languages.python;Prism.languages.py=Prism.languages.python}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=python;\npython.displayName=\"python\";python.aliases=[\"py\"]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$python\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = python;\n// @ts-nocheck\npython.displayName = 'python';\npython.aliases = ['py'];\n/** @type {import('../core.js').Syntax} */\n\nfunction python(Prism) {\n  Prism.languages.python = {\n    comment: {\n      pattern: /(^|[^\\\\])#.*/,\n      lookbehind: true,\n      greedy: true\n    },\n    'string-interpolation': {\n      pattern: /(?:f|fr|rf)(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i,\n      greedy: true,\n      inside: {\n        interpolation: {\n          // \"{\" <expression> <optional \"!s\", \"!r\", or \"!a\"> <optional \":\" format specifier> \"}\"\n          pattern: /((?:^|[^{])(?:\\{\\{)*)\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}])+\\})+\\})+\\}/,\n          lookbehind: true,\n          inside: {\n            'format-spec': {\n              pattern: /(:)[^:(){}]+(?=\\}$)/,\n              lookbehind: true\n            },\n            'conversion-option': {\n              pattern: /![sra](?=[:}]$)/,\n              alias: 'punctuation'\n            },\n            rest: null\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    },\n    'triple-quoted-string': {\n      pattern: /(?:[rub]|br|rb)?(\"\"\"|''')[\\s\\S]*?\\1/i,\n      greedy: true,\n      alias: 'string'\n    },\n    string: {\n      pattern: /(?:[rub]|br|rb)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i,\n      greedy: true\n    },\n    function: {\n      pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n      lookbehind: true\n    },\n    'class-name': {\n      pattern: /(\\bclass\\s+)\\w+/i,\n      lookbehind: true\n    },\n    decorator: {\n      pattern: /(^[\\t ]*)@\\w+(?:\\.\\w+)*/m,\n      lookbehind: true,\n      alias: ['annotation', 'punctuation'],\n      inside: {\n        punctuation: /\\./\n      }\n    },\n    keyword: /\\b(?:_(?=\\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/,\n    builtin: /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n    boolean: /\\b(?:False|None|True)\\b/,\n    number: /\\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\\b|(?:\\b\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\B\\.\\d+(?:_\\d+)*)(?:e[+-]?\\d+(?:_\\d+)*)?j?(?!\\w)/i,\n    operator: /[-+%=]=?|!=|:=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n    punctuation: /[{}[\\];(),.:]/\n  };\n  Prism.languages.python['string-interpolation'].inside['interpolation'].inside.rest = Prism.languages.python;\n  Prism.languages.py = Prism.languages.python;\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["boolean","punctuation","string","aliases","operator","py","displayName","__esModule","rest","lookbehind","value","keyword","number","greedy","function","pattern","inside","alias","python","comment","decorator","builtin","interpolation","default"]],"~:compiled-at",1676841365374,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$python.js\",\n\"lineCount\":5,\n\"mappings\":\"AAAAA,cAAA,CAAA,yCAAA,CAA8D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAYtGC,QAASA,OAAM,CAACC,KAAD,CAAQ,CACrBA,KAAMC,CAAAA,SAAUF,CAAAA,MAAhB,CAAyB,CACvBG,QAAS,CACPC,QAAS,cADF,CAEPC,WAAY,CAAA,CAFL,CAGPC,OAAQ,CAAA,CAHD,CADc,CAMvB,uBAAwB,CACtBF,QAAS,qEADa,CAEtBE,OAAQ,CAAA,CAFc,CAGtBC,OAAQ,CACNC,cAAe,CAEbJ,QAAS,qFAFI,CAGbC,WAAY,CAAA,CAHC,CAIbE,OAAQ,CACN,cAAe,CACbH,QAAS,qBADI,CAEbC,WAAY,CAAA,CAFC,CADT;AAKN,oBAAqB,CACnBD,QAAS,iBADU,CAEnBK,MAAO,aAFY,CALf,CASNC,KAAM,IATA,CAJK,CADT,CAiBNC,OAAQ,SAjBF,CAHc,CAND,CA6BvB,uBAAwB,CACtBP,QAAS,sCADa,CAEtBE,OAAQ,CAAA,CAFc,CAGtBG,MAAO,QAHe,CA7BD,CAkCvBE,OAAQ,CACNP,QAAS,kDADH,CAENE,OAAQ,CAAA,CAFF,CAlCe,CAsCvBM,SAAU,CACRR,QAAS,2CADD,CAERC,WAAY,CAAA,CAFJ,CAtCa,CA0CvB,aAAc,CACZD,QAAS,kBADG,CAEZC,WAAY,CAAA,CAFA,CA1CS,CA8CvBQ,UAAW,CACTT,QAAS,0BADA,CAETC,WAAY,CAAA,CAFH,CAGTI,MAAO,CAAC,YAAD,CAAe,aAAf,CAHE;AAITF,OAAQ,CACNO,YAAa,IADP,CAJC,CA9CY,CAsDvBC,QAAS,uNAtDc,CAuDvBC,QAAS,qhBAvDc;AAwDvBC,QAAS,yBAxDc,CAyDvBC,OAAQ,kJAzDe,CA0DvBC,SAAU,sDA1Da,CA2DvBL,YAAa,eA3DU,CA6DzBb,MAAMC,CAAAA,SAAUF,CAAAA,MAAhB,CAAuB,sBAAvB,CAA+CO,CAAAA,MAA/C,CAAA,aAAuEA,CAAAA,MAAOG,CAAAA,IAA9E,CAAqFT,KAAMC,CAAAA,SAAUF,CAAAA,MACrGC,MAAMC,CAAAA,SAAUkB,CAAAA,EAAhB,CAAqBnB,KAAMC,CAAAA,SAAUF,CAAAA,MA/DhB,CATvBqB,MAAOC,CAAAA,cAAP,CAAsBvB,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CwB,MAAO,CAAA,CADoC,CAA7C,CAGAxB,QAAQyB,CAAAA,OAAR,CAAkBxB,MAElBA;MAAOyB,CAAAA,WAAP,CAAqB,QACrBzB,OAAO0B,CAAAA,OAAP,CAAiB,CAAC,IAAD,CATqF;\",\n\"sources\":[\"node_modules/refractor/lang/python.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$python\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = python;\\n// @ts-nocheck\\npython.displayName = 'python';\\npython.aliases = ['py'];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction python(Prism) {\\n  Prism.languages.python = {\\n    comment: {\\n      pattern: /(^|[^\\\\\\\\])#.*/,\\n      lookbehind: true,\\n      greedy: true\\n    },\\n    'string-interpolation': {\\n      pattern: /(?:f|fr|rf)(?:(\\\"\\\"\\\"|''')[\\\\s\\\\S]*?\\\\1|(\\\"|')(?:\\\\\\\\.|(?!\\\\2)[^\\\\\\\\\\\\r\\\\n])*\\\\2)/i,\\n      greedy: true,\\n      inside: {\\n        interpolation: {\\n          // \\\"{\\\" <expression> <optional \\\"!s\\\", \\\"!r\\\", or \\\"!a\\\"> <optional \\\":\\\" format specifier> \\\"}\\\"\\n          pattern: /((?:^|[^{])(?:\\\\{\\\\{)*)\\\\{(?!\\\\{)(?:[^{}]|\\\\{(?!\\\\{)(?:[^{}]|\\\\{(?!\\\\{)(?:[^{}])+\\\\})+\\\\})+\\\\}/,\\n          lookbehind: true,\\n          inside: {\\n            'format-spec': {\\n              pattern: /(:)[^:(){}]+(?=\\\\}$)/,\\n              lookbehind: true\\n            },\\n            'conversion-option': {\\n              pattern: /![sra](?=[:}]$)/,\\n              alias: 'punctuation'\\n            },\\n            rest: null\\n          }\\n        },\\n        string: /[\\\\s\\\\S]+/\\n      }\\n    },\\n    'triple-quoted-string': {\\n      pattern: /(?:[rub]|br|rb)?(\\\"\\\"\\\"|''')[\\\\s\\\\S]*?\\\\1/i,\\n      greedy: true,\\n      alias: 'string'\\n    },\\n    string: {\\n      pattern: /(?:[rub]|br|rb)?(\\\"|')(?:\\\\\\\\.|(?!\\\\1)[^\\\\\\\\\\\\r\\\\n])*\\\\1/i,\\n      greedy: true\\n    },\\n    function: {\\n      pattern: /((?:^|\\\\s)def[ \\\\t]+)[a-zA-Z_]\\\\w*(?=\\\\s*\\\\()/g,\\n      lookbehind: true\\n    },\\n    'class-name': {\\n      pattern: /(\\\\bclass\\\\s+)\\\\w+/i,\\n      lookbehind: true\\n    },\\n    decorator: {\\n      pattern: /(^[\\\\t ]*)@\\\\w+(?:\\\\.\\\\w+)*/m,\\n      lookbehind: true,\\n      alias: ['annotation', 'punctuation'],\\n      inside: {\\n        punctuation: /\\\\./\\n      }\\n    },\\n    keyword: /\\\\b(?:_(?=\\\\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\\\b/,\\n    builtin: /\\\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\\\b/,\\n    boolean: /\\\\b(?:False|None|True)\\\\b/,\\n    number: /\\\\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\\\\b|(?:\\\\b\\\\d+(?:_\\\\d+)*(?:\\\\.(?:\\\\d+(?:_\\\\d+)*)?)?|\\\\B\\\\.\\\\d+(?:_\\\\d+)*)(?:e[+-]?\\\\d+(?:_\\\\d+)*)?j?(?!\\\\w)/i,\\n    operator: /[-+%=]=?|!=|:=|\\\\*\\\\*?=?|\\\\/\\\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\\n    punctuation: /[{}[\\\\];(),.:]/\\n  };\\n  Prism.languages.python['string-interpolation'].inside['interpolation'].inside.rest = Prism.languages.python;\\n  Prism.languages.py = Prism.languages.python;\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"python\",\"Prism\",\"languages\",\"comment\",\"pattern\",\"lookbehind\",\"greedy\",\"inside\",\"interpolation\",\"alias\",\"rest\",\"string\",\"function\",\"decorator\",\"punctuation\",\"keyword\",\"builtin\",\"boolean\",\"number\",\"operator\",\"py\",\"Object\",\"defineProperty\",\"value\",\"default\",\"displayName\",\"aliases\"]\n}\n"]