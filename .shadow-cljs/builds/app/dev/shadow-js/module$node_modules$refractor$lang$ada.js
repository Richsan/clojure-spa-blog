["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/ada.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$ada=function(global,require,module,exports){function ada(Prism){Prism.languages.ada={comment:/--.*/,string:/\"(?:\"\"|[^\"\\r\\f\\n])*\"/,number:[{pattern:/\\b\\d(?:_?\\d)*#[\\dA-F](?:_?[\\dA-F])*(?:\\.[\\dA-F](?:_?[\\dA-F])*)?#(?:E[+-]?\\d(?:_?\\d)*)?/i},{pattern:/\\b\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:E[+-]?\\d(?:_?\\d)*)?\\b/i}],attribute:{pattern:/\\b'\\w+/,alias:\"attr-name\"},keyword:/\\b(?:abort|abs|abstract|accept|access|aliased|all|and|array|at|begin|body|case|constant|declare|delay|delta|digits|do|else|elsif|end|entry|exception|exit|for|function|generic|goto|if|in|interface|is|limited|loop|mod|new|not|null|of|or|others|out|overriding|package|pragma|private|procedure|protected|raise|range|record|rem|renames|requeue|return|reverse|select|separate|some|subtype|synchronized|tagged|task|terminate|then|type|until|use|when|while|with|xor)\\b/i,\nboolean:/\\b(?:false|true)\\b/i,operator:/<[=>]?|>=?|=>?|:=|\\/=?|\\*\\*?|[&+-]/,punctuation:/\\.\\.?|[,;():]/,char:/'.'/,variable:/\\b[a-z](?:\\w)*\\b/i}}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=ada;ada.displayName=\"ada\";ada.aliases=[]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$ada\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = ada;\n// @ts-nocheck\nada.displayName = 'ada';\nada.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nfunction ada(Prism) {\n  Prism.languages.ada = {\n    comment: /--.*/,\n    string: /\"(?:\"\"|[^\"\\r\\f\\n])*\"/,\n    number: [{\n      pattern: /\\b\\d(?:_?\\d)*#[\\dA-F](?:_?[\\dA-F])*(?:\\.[\\dA-F](?:_?[\\dA-F])*)?#(?:E[+-]?\\d(?:_?\\d)*)?/i\n    }, {\n      pattern: /\\b\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:E[+-]?\\d(?:_?\\d)*)?\\b/i\n    }],\n    attribute: {\n      pattern: /\\b'\\w+/,\n      alias: 'attr-name'\n    },\n    keyword: /\\b(?:abort|abs|abstract|accept|access|aliased|all|and|array|at|begin|body|case|constant|declare|delay|delta|digits|do|else|elsif|end|entry|exception|exit|for|function|generic|goto|if|in|interface|is|limited|loop|mod|new|not|null|of|or|others|out|overriding|package|pragma|private|procedure|protected|raise|range|record|rem|renames|requeue|return|reverse|select|separate|some|subtype|synchronized|tagged|task|terminate|then|type|until|use|when|while|with|xor)\\b/i,\n    boolean: /\\b(?:false|true)\\b/i,\n    operator: /<[=>]?|>=?|=>?|:=|\\/=?|\\*\\*?|[&+-]/,\n    punctuation: /\\.\\.?|[,;():]/,\n    char: /'.'/,\n    variable: /\\b[a-z](?:\\w)*\\b/i\n  };\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["boolean","punctuation","string","aliases","ada","operator","displayName","__esModule","attribute","value","char","variable","keyword","number","pattern","alias","comment","default"]],"~:compiled-at",1676841365386,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$ada.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,sCAAA,CAA2D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAYnGC,QAASA,IAAG,CAACC,KAAD,CAAQ,CAClBA,KAAMC,CAAAA,SAAUF,CAAAA,GAAhB,CAAsB,CACpBG,QAAS,MADW,CAEpBC,OAAQ,sBAFY,CAGpBC,OAAQ,CAAC,CACPC,QAAS,yFADF,CAAD,CAEL,CACDA,QAAS,0DADR,CAFK,CAHY,CAQpBC,UAAW,CACTD,QAAS,QADA,CAETE,MAAO,WAFE,CARS,CAYpBC,QAAS,+cAZW;AAapBC,QAAS,qBAbW,CAcpBC,SAAU,oCAdU,CAepBC,YAAa,eAfO,CAgBpBC,KAAM,KAhBc,CAiBpBC,SAAU,mBAjBU,CADJ,CATpBC,MAAOC,CAAAA,cAAP,CAAsBjB,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CkB,MAAO,CAAA,CADoC,CAA7C,CAGAlB,QAAQmB,CAAAA,OAAR,CAAkBlB,GAElBA,IAAImB,CAAAA,WAAJ,CAAkB,KAClBnB,IAAIoB,CAAAA,OAAJ,CAAc,EATqF;\",\n\"sources\":[\"node_modules/refractor/lang/ada.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$ada\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = ada;\\n// @ts-nocheck\\nada.displayName = 'ada';\\nada.aliases = [];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction ada(Prism) {\\n  Prism.languages.ada = {\\n    comment: /--.*/,\\n    string: /\\\"(?:\\\"\\\"|[^\\\"\\\\r\\\\f\\\\n])*\\\"/,\\n    number: [{\\n      pattern: /\\\\b\\\\d(?:_?\\\\d)*#[\\\\dA-F](?:_?[\\\\dA-F])*(?:\\\\.[\\\\dA-F](?:_?[\\\\dA-F])*)?#(?:E[+-]?\\\\d(?:_?\\\\d)*)?/i\\n    }, {\\n      pattern: /\\\\b\\\\d(?:_?\\\\d)*(?:\\\\.\\\\d(?:_?\\\\d)*)?(?:E[+-]?\\\\d(?:_?\\\\d)*)?\\\\b/i\\n    }],\\n    attribute: {\\n      pattern: /\\\\b'\\\\w+/,\\n      alias: 'attr-name'\\n    },\\n    keyword: /\\\\b(?:abort|abs|abstract|accept|access|aliased|all|and|array|at|begin|body|case|constant|declare|delay|delta|digits|do|else|elsif|end|entry|exception|exit|for|function|generic|goto|if|in|interface|is|limited|loop|mod|new|not|null|of|or|others|out|overriding|package|pragma|private|procedure|protected|raise|range|record|rem|renames|requeue|return|reverse|select|separate|some|subtype|synchronized|tagged|task|terminate|then|type|until|use|when|while|with|xor)\\\\b/i,\\n    boolean: /\\\\b(?:false|true)\\\\b/i,\\n    operator: /<[=>]?|>=?|=>?|:=|\\\\/=?|\\\\*\\\\*?|[&+-]/,\\n    punctuation: /\\\\.\\\\.?|[,;():]/,\\n    char: /'.'/,\\n    variable: /\\\\b[a-z](?:\\\\w)*\\\\b/i\\n  };\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"ada\",\"Prism\",\"languages\",\"comment\",\"string\",\"number\",\"pattern\",\"attribute\",\"alias\",\"keyword\",\"boolean\",\"operator\",\"punctuation\",\"char\",\"variable\",\"Object\",\"defineProperty\",\"value\",\"default\",\"displayName\",\"aliases\"]\n}\n"]