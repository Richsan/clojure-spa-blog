["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/rest.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$rest=function(global,require,module,exports){function rest(Prism){Prism.languages.rest={table:[{pattern:/(^[\\t ]*)(?:\\+[=-]+)+\\+(?:\\r?\\n|\\r)(?:\\1[+|].+[+|](?:\\r?\\n|\\r))+\\1(?:\\+[=-]+)+\\+/m,lookbehind:!0,inside:{punctuation:/\\||(?:\\+[=-]+)+\\+/}},{pattern:/(^[\\t ]*)=+ [ =]*=(?:(?:\\r?\\n|\\r)\\1.+)+(?:\\r?\\n|\\r)\\1=+ [ =]*=(?=(?:\\r?\\n|\\r){2}|\\s*$)/m,lookbehind:!0,inside:{punctuation:/[=-]+/}}],\"substitution-def\":{pattern:/(^[\\t ]*\\.\\. )\\|(?:[^|\\s](?:[^|]*[^|\\s])?)\\| [^:]+::/m,\nlookbehind:!0,inside:{substitution:{pattern:/^\\|(?:[^|\\s]|[^|\\s][^|]*[^|\\s])\\|/,alias:\"attr-value\",inside:{punctuation:/^\\||\\|$/}},directive:{pattern:/( )(?! )[^:]+::/,lookbehind:!0,alias:\"function\",inside:{punctuation:/::$/}}}},\"link-target\":[{pattern:/(^[\\t ]*\\.\\. )\\[[^\\]]+\\]/m,lookbehind:!0,alias:\"string\",inside:{punctuation:/^\\[|\\]$/}},{pattern:/(^[\\t ]*\\.\\. )_(?:`[^`]+`|(?:[^:\\\\]|\\\\.)+):/m,lookbehind:!0,alias:\"string\",inside:{punctuation:/^_|:$/}}],directive:{pattern:/(^[\\t ]*\\.\\. )[^:]+::/m,\nlookbehind:!0,alias:\"function\",inside:{punctuation:/::$/}},comment:{pattern:/(^[\\t ]*\\.\\.)(?:(?: .+)?(?:(?:\\r?\\n|\\r).+)+| .+)(?=(?:\\r?\\n|\\r){2}|$)/m,lookbehind:!0},title:[{pattern:/^(([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+)(?:\\r?\\n|\\r).+(?:\\r?\\n|\\r)\\1$/m,inside:{punctuation:/^[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+|[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,important:/.+/}},{pattern:/(^|(?:\\r?\\n|\\r){2}).+(?:\\r?\\n|\\r)([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+(?=\\r?\\n|\\r|$)/,lookbehind:!0,inside:{punctuation:/[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,\nimportant:/.+/}}],hr:{pattern:/((?:\\r?\\n|\\r){2})([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2{3,}(?=(?:\\r?\\n|\\r){2})/,lookbehind:!0,alias:\"punctuation\"},field:{pattern:/(^[\\t ]*):[^:\\r\\n]+:(?= )/m,lookbehind:!0,alias:\"attr-name\"},\"command-line-option\":{pattern:/(^[\\t ]*)(?:[+-][a-z\\d]|(?:--|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][\\w-]*|<[^<>]+>))?(?:, (?:[+-][a-z\\d]|(?:--|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][\\w-]*|<[^<>]+>))?)*(?=(?:\\r?\\n|\\r)? {2,}\\S)/im,lookbehind:!0,alias:\"symbol\"},\"literal-block\":{pattern:/::(?:\\r?\\n|\\r){2}([ \\t]+)(?![ \\t]).+(?:(?:\\r?\\n|\\r)\\1.+)*/,\ninside:{\"literal-block-punctuation\":{pattern:/^::/,alias:\"punctuation\"}}},\"quoted-literal-block\":{pattern:/::(?:\\r?\\n|\\r){2}([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]).*(?:(?:\\r?\\n|\\r)\\1.*)*/,inside:{\"literal-block-punctuation\":{pattern:/^(?:::|([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\1*)/m,alias:\"punctuation\"}}},\"list-bullet\":{pattern:/(^[\\t ]*)(?:[*+\\-•‣⁃]|\\(?(?:\\d+|[a-z]|[ivxdclm]+)\\)|(?:\\d+|[a-z]|[ivxdclm]+)\\.)(?= )/im,lookbehind:!0,alias:\"punctuation\"},\"doctest-block\":{pattern:/(^[\\t ]*)>>> .+(?:(?:\\r?\\n|\\r).+)*/m,\nlookbehind:!0,inside:{punctuation:/^>>>/}},inline:[{pattern:/(^|[\\s\\-:\\/'\"<(\\[{])(?::[^:]+:`.*?`|`.*?`:[^:]+:|(\\*\\*?|``?|\\|)(?!\\s)(?:(?!\\2).)*\\S\\2(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$))/m,lookbehind:!0,inside:{bold:{pattern:/(^\\*\\*).+(?=\\*\\*$)/,lookbehind:!0},italic:{pattern:/(^\\*).+(?=\\*$)/,lookbehind:!0},\"inline-literal\":{pattern:/(^``).+(?=``$)/,lookbehind:!0,alias:\"symbol\"},role:{pattern:/^:[^:]+:|:[^:]+:$/,alias:\"function\",inside:{punctuation:/^:|:$/}},\"interpreted-text\":{pattern:/(^`).+(?=`$)/,lookbehind:!0,\nalias:\"attr-value\"},substitution:{pattern:/(^\\|).+(?=\\|$)/,lookbehind:!0,alias:\"attr-value\"},punctuation:/\\*\\*?|``?|\\|/}}],link:[{pattern:/\\[[^\\[\\]]+\\]_(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/,alias:\"string\",inside:{punctuation:/^\\[|\\]_$/}},{pattern:/(?:\\b[a-z\\d]+(?:[_.:+][a-z\\d]+)*_?_|`[^`]+`_?_|_`[^`]+`)(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/i,alias:\"string\",inside:{punctuation:/^_?`|`$|`?_?_$/}}],punctuation:{pattern:/(^[\\t ]*)(?:\\|(?= |$)|(?:---?|—|\\.\\.|__)(?= )|\\.\\.$)/m,lookbehind:!0}}}Object.defineProperty(exports,\n\"__esModule\",{value:!0});exports.default=rest;rest.displayName=\"rest\";rest.aliases=[]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$rest\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = rest;\n// @ts-nocheck\nrest.displayName = 'rest';\nrest.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nfunction rest(Prism) {\n  Prism.languages.rest = {\n    table: [{\n      pattern: /(^[\\t ]*)(?:\\+[=-]+)+\\+(?:\\r?\\n|\\r)(?:\\1[+|].+[+|](?:\\r?\\n|\\r))+\\1(?:\\+[=-]+)+\\+/m,\n      lookbehind: true,\n      inside: {\n        punctuation: /\\||(?:\\+[=-]+)+\\+/\n      }\n    }, {\n      pattern: /(^[\\t ]*)=+ [ =]*=(?:(?:\\r?\\n|\\r)\\1.+)+(?:\\r?\\n|\\r)\\1=+ [ =]*=(?=(?:\\r?\\n|\\r){2}|\\s*$)/m,\n      lookbehind: true,\n      inside: {\n        punctuation: /[=-]+/\n      }\n    }],\n    // Directive-like patterns\n    'substitution-def': {\n      pattern: /(^[\\t ]*\\.\\. )\\|(?:[^|\\s](?:[^|]*[^|\\s])?)\\| [^:]+::/m,\n      lookbehind: true,\n      inside: {\n        substitution: {\n          pattern: /^\\|(?:[^|\\s]|[^|\\s][^|]*[^|\\s])\\|/,\n          alias: 'attr-value',\n          inside: {\n            punctuation: /^\\||\\|$/\n          }\n        },\n        directive: {\n          pattern: /( )(?! )[^:]+::/,\n          lookbehind: true,\n          alias: 'function',\n          inside: {\n            punctuation: /::$/\n          }\n        }\n      }\n    },\n    'link-target': [{\n      pattern: /(^[\\t ]*\\.\\. )\\[[^\\]]+\\]/m,\n      lookbehind: true,\n      alias: 'string',\n      inside: {\n        punctuation: /^\\[|\\]$/\n      }\n    }, {\n      pattern: /(^[\\t ]*\\.\\. )_(?:`[^`]+`|(?:[^:\\\\]|\\\\.)+):/m,\n      lookbehind: true,\n      alias: 'string',\n      inside: {\n        punctuation: /^_|:$/\n      }\n    }],\n    directive: {\n      pattern: /(^[\\t ]*\\.\\. )[^:]+::/m,\n      lookbehind: true,\n      alias: 'function',\n      inside: {\n        punctuation: /::$/\n      }\n    },\n    comment: {\n      // The two alternatives try to prevent highlighting of blank comments\n      pattern: /(^[\\t ]*\\.\\.)(?:(?: .+)?(?:(?:\\r?\\n|\\r).+)+| .+)(?=(?:\\r?\\n|\\r){2}|$)/m,\n      lookbehind: true\n    },\n    title: [// Overlined and underlined\n    {\n      pattern: /^(([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+)(?:\\r?\\n|\\r).+(?:\\r?\\n|\\r)\\1$/m,\n      inside: {\n        punctuation: /^[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+|[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,\n        important: /.+/\n      }\n    }, // Underlined only\n    {\n      pattern: /(^|(?:\\r?\\n|\\r){2}).+(?:\\r?\\n|\\r)([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+(?=\\r?\\n|\\r|$)/,\n      lookbehind: true,\n      inside: {\n        punctuation: /[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,\n        important: /.+/\n      }\n    }],\n    hr: {\n      pattern: /((?:\\r?\\n|\\r){2})([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2{3,}(?=(?:\\r?\\n|\\r){2})/,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    field: {\n      pattern: /(^[\\t ]*):[^:\\r\\n]+:(?= )/m,\n      lookbehind: true,\n      alias: 'attr-name'\n    },\n    'command-line-option': {\n      pattern: /(^[\\t ]*)(?:[+-][a-z\\d]|(?:--|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][\\w-]*|<[^<>]+>))?(?:, (?:[+-][a-z\\d]|(?:--|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][\\w-]*|<[^<>]+>))?)*(?=(?:\\r?\\n|\\r)? {2,}\\S)/im,\n      lookbehind: true,\n      alias: 'symbol'\n    },\n    'literal-block': {\n      pattern: /::(?:\\r?\\n|\\r){2}([ \\t]+)(?![ \\t]).+(?:(?:\\r?\\n|\\r)\\1.+)*/,\n      inside: {\n        'literal-block-punctuation': {\n          pattern: /^::/,\n          alias: 'punctuation'\n        }\n      }\n    },\n    'quoted-literal-block': {\n      pattern: /::(?:\\r?\\n|\\r){2}([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]).*(?:(?:\\r?\\n|\\r)\\1.*)*/,\n      inside: {\n        'literal-block-punctuation': {\n          pattern: /^(?:::|([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\1*)/m,\n          alias: 'punctuation'\n        }\n      }\n    },\n    'list-bullet': {\n      pattern: /(^[\\t ]*)(?:[*+\\-•‣⁃]|\\(?(?:\\d+|[a-z]|[ivxdclm]+)\\)|(?:\\d+|[a-z]|[ivxdclm]+)\\.)(?= )/im,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'doctest-block': {\n      pattern: /(^[\\t ]*)>>> .+(?:(?:\\r?\\n|\\r).+)*/m,\n      lookbehind: true,\n      inside: {\n        punctuation: /^>>>/\n      }\n    },\n    inline: [{\n      pattern: /(^|[\\s\\-:\\/'\"<(\\[{])(?::[^:]+:`.*?`|`.*?`:[^:]+:|(\\*\\*?|``?|\\|)(?!\\s)(?:(?!\\2).)*\\S\\2(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$))/m,\n      lookbehind: true,\n      inside: {\n        bold: {\n          pattern: /(^\\*\\*).+(?=\\*\\*$)/,\n          lookbehind: true\n        },\n        italic: {\n          pattern: /(^\\*).+(?=\\*$)/,\n          lookbehind: true\n        },\n        'inline-literal': {\n          pattern: /(^``).+(?=``$)/,\n          lookbehind: true,\n          alias: 'symbol'\n        },\n        role: {\n          pattern: /^:[^:]+:|:[^:]+:$/,\n          alias: 'function',\n          inside: {\n            punctuation: /^:|:$/\n          }\n        },\n        'interpreted-text': {\n          pattern: /(^`).+(?=`$)/,\n          lookbehind: true,\n          alias: 'attr-value'\n        },\n        substitution: {\n          pattern: /(^\\|).+(?=\\|$)/,\n          lookbehind: true,\n          alias: 'attr-value'\n        },\n        punctuation: /\\*\\*?|``?|\\|/\n      }\n    }],\n    link: [{\n      pattern: /\\[[^\\[\\]]+\\]_(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/,\n      alias: 'string',\n      inside: {\n        punctuation: /^\\[|\\]_$/\n      }\n    }, {\n      pattern: /(?:\\b[a-z\\d]+(?:[_.:+][a-z\\d]+)*_?_|`[^`]+`_?_|_`[^`]+`)(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/i,\n      alias: 'string',\n      inside: {\n        punctuation: /^_?`|`$|`?_?_$/\n      }\n    }],\n    // Line block start,\n    // quote attribution,\n    // explicit markup start,\n    // and anonymous hyperlink target shortcut (__)\n    punctuation: {\n      pattern: /(^[\\t ]*)(?:\\|(?= |$)|(?:---?|—|\\.\\.|__)(?= )|\\.\\.$)/m,\n      lookbehind: true\n    }\n  };\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["table","role","punctuation","aliases","important","directive","displayName","inline","__esModule","substitution","rest","lookbehind","hr","value","field","title","link","pattern","italic","inside","alias","comment","bold","default"]],"~:compiled-at",1676841365457,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$rest.js\",\n\"lineCount\":8,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/refractor/lang/rest.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$rest\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = rest;\\n// @ts-nocheck\\nrest.displayName = 'rest';\\nrest.aliases = [];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction rest(Prism) {\\n  Prism.languages.rest = {\\n    table: [{\\n      pattern: /(^[\\\\t ]*)(?:\\\\+[=-]+)+\\\\+(?:\\\\r?\\\\n|\\\\r)(?:\\\\1[+|].+[+|](?:\\\\r?\\\\n|\\\\r))+\\\\1(?:\\\\+[=-]+)+\\\\+/m,\\n      lookbehind: true,\\n      inside: {\\n        punctuation: /\\\\||(?:\\\\+[=-]+)+\\\\+/\\n      }\\n    }, {\\n      pattern: /(^[\\\\t ]*)=+ [ =]*=(?:(?:\\\\r?\\\\n|\\\\r)\\\\1.+)+(?:\\\\r?\\\\n|\\\\r)\\\\1=+ [ =]*=(?=(?:\\\\r?\\\\n|\\\\r){2}|\\\\s*$)/m,\\n      lookbehind: true,\\n      inside: {\\n        punctuation: /[=-]+/\\n      }\\n    }],\\n    // Directive-like patterns\\n    'substitution-def': {\\n      pattern: /(^[\\\\t ]*\\\\.\\\\. )\\\\|(?:[^|\\\\s](?:[^|]*[^|\\\\s])?)\\\\| [^:]+::/m,\\n      lookbehind: true,\\n      inside: {\\n        substitution: {\\n          pattern: /^\\\\|(?:[^|\\\\s]|[^|\\\\s][^|]*[^|\\\\s])\\\\|/,\\n          alias: 'attr-value',\\n          inside: {\\n            punctuation: /^\\\\||\\\\|$/\\n          }\\n        },\\n        directive: {\\n          pattern: /( )(?! )[^:]+::/,\\n          lookbehind: true,\\n          alias: 'function',\\n          inside: {\\n            punctuation: /::$/\\n          }\\n        }\\n      }\\n    },\\n    'link-target': [{\\n      pattern: /(^[\\\\t ]*\\\\.\\\\. )\\\\[[^\\\\]]+\\\\]/m,\\n      lookbehind: true,\\n      alias: 'string',\\n      inside: {\\n        punctuation: /^\\\\[|\\\\]$/\\n      }\\n    }, {\\n      pattern: /(^[\\\\t ]*\\\\.\\\\. )_(?:`[^`]+`|(?:[^:\\\\\\\\]|\\\\\\\\.)+):/m,\\n      lookbehind: true,\\n      alias: 'string',\\n      inside: {\\n        punctuation: /^_|:$/\\n      }\\n    }],\\n    directive: {\\n      pattern: /(^[\\\\t ]*\\\\.\\\\. )[^:]+::/m,\\n      lookbehind: true,\\n      alias: 'function',\\n      inside: {\\n        punctuation: /::$/\\n      }\\n    },\\n    comment: {\\n      // The two alternatives try to prevent highlighting of blank comments\\n      pattern: /(^[\\\\t ]*\\\\.\\\\.)(?:(?: .+)?(?:(?:\\\\r?\\\\n|\\\\r).+)+| .+)(?=(?:\\\\r?\\\\n|\\\\r){2}|$)/m,\\n      lookbehind: true\\n    },\\n    title: [// Overlined and underlined\\n    {\\n      pattern: /^(([!\\\"#$%&'()*+,\\\\-.\\\\/:;<=>?@\\\\[\\\\\\\\\\\\]^_`{|}~])\\\\2+)(?:\\\\r?\\\\n|\\\\r).+(?:\\\\r?\\\\n|\\\\r)\\\\1$/m,\\n      inside: {\\n        punctuation: /^[!\\\"#$%&'()*+,\\\\-.\\\\/:;<=>?@\\\\[\\\\\\\\\\\\]^_`{|}~]+|[!\\\"#$%&'()*+,\\\\-.\\\\/:;<=>?@\\\\[\\\\\\\\\\\\]^_`{|}~]+$/,\\n        important: /.+/\\n      }\\n    }, // Underlined only\\n    {\\n      pattern: /(^|(?:\\\\r?\\\\n|\\\\r){2}).+(?:\\\\r?\\\\n|\\\\r)([!\\\"#$%&'()*+,\\\\-.\\\\/:;<=>?@\\\\[\\\\\\\\\\\\]^_`{|}~])\\\\2+(?=\\\\r?\\\\n|\\\\r|$)/,\\n      lookbehind: true,\\n      inside: {\\n        punctuation: /[!\\\"#$%&'()*+,\\\\-.\\\\/:;<=>?@\\\\[\\\\\\\\\\\\]^_`{|}~]+$/,\\n        important: /.+/\\n      }\\n    }],\\n    hr: {\\n      pattern: /((?:\\\\r?\\\\n|\\\\r){2})([!\\\"#$%&'()*+,\\\\-.\\\\/:;<=>?@\\\\[\\\\\\\\\\\\]^_`{|}~])\\\\2{3,}(?=(?:\\\\r?\\\\n|\\\\r){2})/,\\n      lookbehind: true,\\n      alias: 'punctuation'\\n    },\\n    field: {\\n      pattern: /(^[\\\\t ]*):[^:\\\\r\\\\n]+:(?= )/m,\\n      lookbehind: true,\\n      alias: 'attr-name'\\n    },\\n    'command-line-option': {\\n      pattern: /(^[\\\\t ]*)(?:[+-][a-z\\\\d]|(?:--|\\\\/)[a-z\\\\d-]+)(?:[ =](?:[a-z][\\\\w-]*|<[^<>]+>))?(?:, (?:[+-][a-z\\\\d]|(?:--|\\\\/)[a-z\\\\d-]+)(?:[ =](?:[a-z][\\\\w-]*|<[^<>]+>))?)*(?=(?:\\\\r?\\\\n|\\\\r)? {2,}\\\\S)/im,\\n      lookbehind: true,\\n      alias: 'symbol'\\n    },\\n    'literal-block': {\\n      pattern: /::(?:\\\\r?\\\\n|\\\\r){2}([ \\\\t]+)(?![ \\\\t]).+(?:(?:\\\\r?\\\\n|\\\\r)\\\\1.+)*/,\\n      inside: {\\n        'literal-block-punctuation': {\\n          pattern: /^::/,\\n          alias: 'punctuation'\\n        }\\n      }\\n    },\\n    'quoted-literal-block': {\\n      pattern: /::(?:\\\\r?\\\\n|\\\\r){2}([!\\\"#$%&'()*+,\\\\-.\\\\/:;<=>?@\\\\[\\\\\\\\\\\\]^_`{|}~]).*(?:(?:\\\\r?\\\\n|\\\\r)\\\\1.*)*/,\\n      inside: {\\n        'literal-block-punctuation': {\\n          pattern: /^(?:::|([!\\\"#$%&'()*+,\\\\-.\\\\/:;<=>?@\\\\[\\\\\\\\\\\\]^_`{|}~])\\\\1*)/m,\\n          alias: 'punctuation'\\n        }\\n      }\\n    },\\n    'list-bullet': {\\n      pattern: /(^[\\\\t ]*)(?:[*+\\\\-\\u2022\\u2023\\u2043]|\\\\(?(?:\\\\d+|[a-z]|[ivxdclm]+)\\\\)|(?:\\\\d+|[a-z]|[ivxdclm]+)\\\\.)(?= )/im,\\n      lookbehind: true,\\n      alias: 'punctuation'\\n    },\\n    'doctest-block': {\\n      pattern: /(^[\\\\t ]*)>>> .+(?:(?:\\\\r?\\\\n|\\\\r).+)*/m,\\n      lookbehind: true,\\n      inside: {\\n        punctuation: /^>>>/\\n      }\\n    },\\n    inline: [{\\n      pattern: /(^|[\\\\s\\\\-:\\\\/'\\\"<(\\\\[{])(?::[^:]+:`.*?`|`.*?`:[^:]+:|(\\\\*\\\\*?|``?|\\\\|)(?!\\\\s)(?:(?!\\\\2).)*\\\\S\\\\2(?=[\\\\s\\\\-.,:;!?\\\\\\\\\\\\/'\\\")\\\\]}]|$))/m,\\n      lookbehind: true,\\n      inside: {\\n        bold: {\\n          pattern: /(^\\\\*\\\\*).+(?=\\\\*\\\\*$)/,\\n          lookbehind: true\\n        },\\n        italic: {\\n          pattern: /(^\\\\*).+(?=\\\\*$)/,\\n          lookbehind: true\\n        },\\n        'inline-literal': {\\n          pattern: /(^``).+(?=``$)/,\\n          lookbehind: true,\\n          alias: 'symbol'\\n        },\\n        role: {\\n          pattern: /^:[^:]+:|:[^:]+:$/,\\n          alias: 'function',\\n          inside: {\\n            punctuation: /^:|:$/\\n          }\\n        },\\n        'interpreted-text': {\\n          pattern: /(^`).+(?=`$)/,\\n          lookbehind: true,\\n          alias: 'attr-value'\\n        },\\n        substitution: {\\n          pattern: /(^\\\\|).+(?=\\\\|$)/,\\n          lookbehind: true,\\n          alias: 'attr-value'\\n        },\\n        punctuation: /\\\\*\\\\*?|``?|\\\\|/\\n      }\\n    }],\\n    link: [{\\n      pattern: /\\\\[[^\\\\[\\\\]]+\\\\]_(?=[\\\\s\\\\-.,:;!?\\\\\\\\\\\\/'\\\")\\\\]}]|$)/,\\n      alias: 'string',\\n      inside: {\\n        punctuation: /^\\\\[|\\\\]_$/\\n      }\\n    }, {\\n      pattern: /(?:\\\\b[a-z\\\\d]+(?:[_.:+][a-z\\\\d]+)*_?_|`[^`]+`_?_|_`[^`]+`)(?=[\\\\s\\\\-.,:;!?\\\\\\\\\\\\/'\\\")\\\\]}]|$)/i,\\n      alias: 'string',\\n      inside: {\\n        punctuation: /^_?`|`$|`?_?_$/\\n      }\\n    }],\\n    // Line block start,\\n    // quote attribution,\\n    // explicit markup start,\\n    // and anonymous hyperlink target shortcut (__)\\n    punctuation: {\\n      pattern: /(^[\\\\t ]*)(?:\\\\|(?= |$)|(?:---?|\\u2014|\\\\.\\\\.|__)(?= )|\\\\.\\\\.$)/m,\\n      lookbehind: true\\n    }\\n  };\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"rest\",\"Prism\",\"languages\",\"table\",\"pattern\",\"lookbehind\",\"inside\",\"punctuation\",\"substitution\",\"alias\",\"directive\",\"comment\",\"title\",\"important\",\"hr\",\"field\",\"inline\",\"bold\",\"italic\",\"role\",\"link\",\"Object\",\"defineProperty\",\"value\",\"default\",\"displayName\",\"aliases\"]\n}\n"]