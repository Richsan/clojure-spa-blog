["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/brainfuck.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$brainfuck=function(global,require,module,exports){function brainfuck(Prism){Prism.languages.brainfuck={pointer:{pattern:/<|>/,alias:\"keyword\"},increment:{pattern:/\\+/,alias:\"inserted\"},decrement:{pattern:/-/,alias:\"deleted\"},branching:{pattern:/\\[|\\]/,alias:\"important\"},operator:/[.,]/,comment:/\\S+/}}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=brainfuck;brainfuck.displayName=\"brainfuck\";brainfuck.aliases=[]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$brainfuck\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = brainfuck;\n// @ts-nocheck\nbrainfuck.displayName = 'brainfuck';\nbrainfuck.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nfunction brainfuck(Prism) {\n  Prism.languages.brainfuck = {\n    pointer: {\n      pattern: /<|>/,\n      alias: 'keyword'\n    },\n    increment: {\n      pattern: /\\+/,\n      alias: 'inserted'\n    },\n    decrement: {\n      pattern: /-/,\n      alias: 'deleted'\n    },\n    branching: {\n      pattern: /\\[|\\]/,\n      alias: 'important'\n    },\n    operator: /[.,]/,\n    comment: /\\S+/\n  };\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["aliases","operator","brainfuck","displayName","__esModule","increment","pointer","value","decrement","pattern","alias","comment","default","branching"]],"~:compiled-at",1676841365396,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$brainfuck.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAA,4CAAA,CAAiE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAYzGC,QAASA,UAAS,CAACC,KAAD,CAAQ,CACxBA,KAAMC,CAAAA,SAAUF,CAAAA,SAAhB,CAA4B,CAC1BG,QAAS,CACPC,QAAS,KADF,CAEPC,MAAO,SAFA,CADiB,CAK1BC,UAAW,CACTF,QAAS,IADA,CAETC,MAAO,UAFE,CALe,CAS1BE,UAAW,CACTH,QAAS,GADA,CAETC,MAAO,SAFE,CATe,CAa1BG,UAAW,CACTJ,QAAS,OADA,CAETC,MAAO,WAFE,CAbe,CAiB1BI,SAAU,MAjBgB,CAkB1BC,QAAS,KAlBiB,CADJ,CAT1BC,MAAOC,CAAAA,cAAP,CAAsBb,OAAtB,CAA+B,YAA/B,CAA6C,CAC3Cc,MAAO,CAAA,CADoC,CAA7C,CAGAd,QAAQe,CAAAA,OAAR,CAAkBd,SAElBA,UAAUe,CAAAA,WAAV,CAAwB,WACxBf,UAAUgB,CAAAA,OAAV,CAAoB,EATqF;\",\n\"sources\":[\"node_modules/refractor/lang/brainfuck.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$brainfuck\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = brainfuck;\\n// @ts-nocheck\\nbrainfuck.displayName = 'brainfuck';\\nbrainfuck.aliases = [];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction brainfuck(Prism) {\\n  Prism.languages.brainfuck = {\\n    pointer: {\\n      pattern: /<|>/,\\n      alias: 'keyword'\\n    },\\n    increment: {\\n      pattern: /\\\\+/,\\n      alias: 'inserted'\\n    },\\n    decrement: {\\n      pattern: /-/,\\n      alias: 'deleted'\\n    },\\n    branching: {\\n      pattern: /\\\\[|\\\\]/,\\n      alias: 'important'\\n    },\\n    operator: /[.,]/,\\n    comment: /\\\\S+/\\n  };\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"brainfuck\",\"Prism\",\"languages\",\"pointer\",\"pattern\",\"alias\",\"increment\",\"decrement\",\"branching\",\"operator\",\"comment\",\"Object\",\"defineProperty\",\"value\",\"default\",\"displayName\",\"aliases\"]\n}\n"]