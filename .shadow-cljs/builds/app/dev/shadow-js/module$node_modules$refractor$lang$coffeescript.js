["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/coffeescript.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$coffeescript=function(global,require,module,exports){function coffeescript(Prism){Prism.register(_javascript.default);var comment=/#(?!\\{).+/,interpolation={pattern:/#\\{[^}]+\\}/,alias:\"variable\"};Prism.languages.coffeescript=Prism.languages.extend(\"javascript\",{comment,string:[{pattern:/'(?:\\\\[\\s\\S]|[^\\\\'])*'/,greedy:!0},{pattern:/\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,greedy:!0,inside:{interpolation}}],keyword:/\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\n\"class-member\":{pattern:/@(?!\\d)\\w+/,alias:\"variable\"}});Prism.languages.insertBefore(\"coffeescript\",\"comment\",{\"multiline-comment\":{pattern:/###[\\s\\S]+?###/,alias:\"comment\"},\"block-regex\":{pattern:/\\/{3}[\\s\\S]*?\\/{3}/,alias:\"regex\",inside:{comment,interpolation}}});Prism.languages.insertBefore(\"coffeescript\",\"string\",{\"inline-javascript\":{pattern:/`(?:\\\\[\\s\\S]|[^\\\\`])*`/,inside:{delimiter:{pattern:/^`|`$/,alias:\"punctuation\"},script:{pattern:/[\\s\\S]+/,alias:\"language-javascript\",inside:Prism.languages.javascript}}},\n\"multiline-string\":[{pattern:/'''[\\s\\S]*?'''/,greedy:!0,alias:\"string\"},{pattern:/\"\"\"[\\s\\S]*?\"\"\"/,greedy:!0,alias:\"string\",inside:{interpolation}}]});Prism.languages.insertBefore(\"coffeescript\",\"keyword\",{property:/(?!\\d)\\w+(?=\\s*:(?!:))/});delete Prism.languages.coffeescript[\"template-string\"];Prism.languages.coffee=Prism.languages.coffeescript}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=coffeescript;var _javascript=function(obj){return obj&&obj.__esModule?obj:{default:obj}}(require(\"module$node_modules$refractor$lang$javascript\"));\ncoffeescript.displayName=\"coffeescript\";coffeescript.aliases=[\"coffee\"]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$coffeescript\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = coffeescript;\n\nvar _javascript = _interopRequireDefault(require(\"./javascript.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// @ts-nocheck\ncoffeescript.displayName = 'coffeescript';\ncoffeescript.aliases = ['coffee'];\n/** @type {import('../core.js').Syntax} */\n\nfunction coffeescript(Prism) {\n  Prism.register(_javascript.default);\n\n  (function (Prism) {\n    // Ignore comments starting with { to privilege string interpolation highlighting\n    var comment = /#(?!\\{).+/;\n    var interpolation = {\n      pattern: /#\\{[^}]+\\}/,\n      alias: 'variable'\n    };\n    Prism.languages.coffeescript = Prism.languages.extend('javascript', {\n      comment: comment,\n      string: [// Strings are multiline\n      {\n        pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n        greedy: true\n      }, {\n        // Strings are multiline\n        pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation\n        }\n      }],\n      keyword: /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\n      'class-member': {\n        pattern: /@(?!\\d)\\w+/,\n        alias: 'variable'\n      }\n    });\n    Prism.languages.insertBefore('coffeescript', 'comment', {\n      'multiline-comment': {\n        pattern: /###[\\s\\S]+?###/,\n        alias: 'comment'\n      },\n      // Block regexp can contain comments and interpolation\n      'block-regex': {\n        pattern: /\\/{3}[\\s\\S]*?\\/{3}/,\n        alias: 'regex',\n        inside: {\n          comment: comment,\n          interpolation: interpolation\n        }\n      }\n    });\n    Prism.languages.insertBefore('coffeescript', 'string', {\n      'inline-javascript': {\n        pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n        inside: {\n          delimiter: {\n            pattern: /^`|`$/,\n            alias: 'punctuation'\n          },\n          script: {\n            pattern: /[\\s\\S]+/,\n            alias: 'language-javascript',\n            inside: Prism.languages.javascript\n          }\n        }\n      },\n      // Block strings\n      'multiline-string': [{\n        pattern: /'''[\\s\\S]*?'''/,\n        greedy: true,\n        alias: 'string'\n      }, {\n        pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n        greedy: true,\n        alias: 'string',\n        inside: {\n          interpolation: interpolation\n        }\n      }]\n    });\n    Prism.languages.insertBefore('coffeescript', 'keyword', {\n      // Object property\n      property: /(?!\\d)\\w+(?=\\s*:(?!:))/\n    });\n    delete Prism.languages.coffeescript['template-string'];\n    Prism.languages.coffee = Prism.languages.coffeescript;\n  })(Prism);\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$refractor$lang$javascript","~$shadow.js"]],"~:properties",["^5",["string","aliases","displayName","__esModule","coffeescript","coffee","value","script","delimiter","keyword","greedy","property","pattern","inside","alias","comment","interpolation","default"]],"~:compiled-at",1676841365400,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$coffeescript.js\",\n\"lineCount\":4,\n\"mappings\":\"AAAAA,cAAA,CAAA,+CAAA,CAAoE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAiB5GC,QAASA,aAAY,CAACC,KAAD,CAAQ,CAC3BA,KAAMC,CAAAA,QAAN,CAAeC,WAAYC,CAAAA,OAA3B,CAIE,KAAIC,QAAU,WAAd,CACIC,cAAgB,CAClBC,QAAS,YADS,CAElBC,MAAO,UAFW,CA0EnBP,MAtEKQ,CAAAA,SAAUT,CAAAA,YAAhB,CAsECC,KAtEoCQ,CAAAA,SAAUC,CAAAA,MAAhB,CAAuB,YAAvB,CAAqC,CACzDL,OADyD,CAElEM,OAAQ,CACR,CACEJ,QAAS,wBADX,CAEEK,OAAQ,CAAA,CAFV,CADQ,CAIL,CAEDL,QAAS,wBAFR,CAGDK,OAAQ,CAAA,CAHP,CAIDC,OAAQ,CACSP,aADT,CAJP,CAJK,CAF0D,CAclEQ,QAAS,kSAdyD;AAelE,eAAgB,CACdP,QAAS,YADK,CAEdC,MAAO,UAFO,CAfkD,CAArC,CAsE9BP,MAlDKQ,CAAAA,SAAUM,CAAAA,YAAhB,CAA6B,cAA7B,CAA6C,SAA7C,CAAwD,CACtD,oBAAqB,CACnBR,QAAS,gBADU,CAEnBC,MAAO,SAFY,CADiC,CAMtD,cAAe,CACbD,QAAS,oBADI,CAEbC,MAAO,OAFM,CAGbK,OAAQ,CACGR,OADH,CAESC,aAFT,CAHK,CANuC,CAAxD,CAkDCL,MAnCKQ,CAAAA,SAAUM,CAAAA,YAAhB,CAA6B,cAA7B,CAA6C,QAA7C,CAAuD,CACrD,oBAAqB,CACnBR,QAAS,wBADU,CAEnBM,OAAQ,CACNG,UAAW,CACTT,QAAS,OADA,CAETC,MAAO,aAFE,CADL,CAKNS,OAAQ,CACNV,QAAS,SADH,CAENC,MAAO,qBAFD,CAGNK,OAwBPZ,KAxBqBQ,CAAAA,SAAUS,CAAAA,UAHlB,CALF,CAFW,CADgC;AAgBrD,mBAAoB,CAAC,CACnBX,QAAS,gBADU,CAEnBK,OAAQ,CAAA,CAFW,CAGnBJ,MAAO,QAHY,CAAD,CAIjB,CACDD,QAAS,gBADR,CAEDK,OAAQ,CAAA,CAFP,CAGDJ,MAAO,QAHN,CAIDK,OAAQ,CACSP,aADT,CAJP,CAJiB,CAhBiC,CAAvD,CAmCCL,MANKQ,CAAAA,SAAUM,CAAAA,YAAhB,CAA6B,cAA7B,CAA6C,SAA7C,CAAwD,CAEtDI,SAAU,wBAF4C,CAAxD,CAIA,QAEClB,KAFYQ,CAAAA,SAAUT,CAAAA,YAAhB,CAA6B,iBAA7B,CAENC,MADKQ,CAAAA,SAAUW,CAAAA,MAAhB,CACCnB,KAD8BQ,CAAAA,SAAUT,CAAAA,YA/EhB,CAd7BqB,MAAOC,CAAAA,cAAP,CAAsBvB,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CwB,MAAO,CAAA,CADoC,CAA7C,CAGAxB,QAAQK,CAAAA,OAAR,CAAkBJ,YAElB,KAAIG,YAEJqB,QAA+B,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAIC,CAAAA,UAAX,CAAwBD,GAAxB,CAA8B,CAAErB,QAASqB,GAAX,CAAvC,CAFnB,CAAuB5B,OAAA,CAAQ,+CAAR,CAAvB,CAKlBG;YAAa2B,CAAAA,WAAb,CAA2B,cAC3B3B,aAAa4B,CAAAA,OAAb,CAAuB,CAAC,QAAD,CAdqF;\",\n\"sources\":[\"node_modules/refractor/lang/coffeescript.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$coffeescript\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = coffeescript;\\n\\nvar _javascript = _interopRequireDefault(require(\\\"./javascript.js\\\"));\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\n// @ts-nocheck\\ncoffeescript.displayName = 'coffeescript';\\ncoffeescript.aliases = ['coffee'];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction coffeescript(Prism) {\\n  Prism.register(_javascript.default);\\n\\n  (function (Prism) {\\n    // Ignore comments starting with { to privilege string interpolation highlighting\\n    var comment = /#(?!\\\\{).+/;\\n    var interpolation = {\\n      pattern: /#\\\\{[^}]+\\\\}/,\\n      alias: 'variable'\\n    };\\n    Prism.languages.coffeescript = Prism.languages.extend('javascript', {\\n      comment: comment,\\n      string: [// Strings are multiline\\n      {\\n        pattern: /'(?:\\\\\\\\[\\\\s\\\\S]|[^\\\\\\\\'])*'/,\\n        greedy: true\\n      }, {\\n        // Strings are multiline\\n        pattern: /\\\"(?:\\\\\\\\[\\\\s\\\\S]|[^\\\\\\\\\\\"])*\\\"/,\\n        greedy: true,\\n        inside: {\\n          interpolation: interpolation\\n        }\\n      }],\\n      keyword: /\\\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\\\b/,\\n      'class-member': {\\n        pattern: /@(?!\\\\d)\\\\w+/,\\n        alias: 'variable'\\n      }\\n    });\\n    Prism.languages.insertBefore('coffeescript', 'comment', {\\n      'multiline-comment': {\\n        pattern: /###[\\\\s\\\\S]+?###/,\\n        alias: 'comment'\\n      },\\n      // Block regexp can contain comments and interpolation\\n      'block-regex': {\\n        pattern: /\\\\/{3}[\\\\s\\\\S]*?\\\\/{3}/,\\n        alias: 'regex',\\n        inside: {\\n          comment: comment,\\n          interpolation: interpolation\\n        }\\n      }\\n    });\\n    Prism.languages.insertBefore('coffeescript', 'string', {\\n      'inline-javascript': {\\n        pattern: /`(?:\\\\\\\\[\\\\s\\\\S]|[^\\\\\\\\`])*`/,\\n        inside: {\\n          delimiter: {\\n            pattern: /^`|`$/,\\n            alias: 'punctuation'\\n          },\\n          script: {\\n            pattern: /[\\\\s\\\\S]+/,\\n            alias: 'language-javascript',\\n            inside: Prism.languages.javascript\\n          }\\n        }\\n      },\\n      // Block strings\\n      'multiline-string': [{\\n        pattern: /'''[\\\\s\\\\S]*?'''/,\\n        greedy: true,\\n        alias: 'string'\\n      }, {\\n        pattern: /\\\"\\\"\\\"[\\\\s\\\\S]*?\\\"\\\"\\\"/,\\n        greedy: true,\\n        alias: 'string',\\n        inside: {\\n          interpolation: interpolation\\n        }\\n      }]\\n    });\\n    Prism.languages.insertBefore('coffeescript', 'keyword', {\\n      // Object property\\n      property: /(?!\\\\d)\\\\w+(?=\\\\s*:(?!:))/\\n    });\\n    delete Prism.languages.coffeescript['template-string'];\\n    Prism.languages.coffee = Prism.languages.coffeescript;\\n  })(Prism);\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"coffeescript\",\"Prism\",\"register\",\"_javascript\",\"default\",\"comment\",\"interpolation\",\"pattern\",\"alias\",\"languages\",\"extend\",\"string\",\"greedy\",\"inside\",\"keyword\",\"insertBefore\",\"delimiter\",\"script\",\"javascript\",\"property\",\"coffee\",\"Object\",\"defineProperty\",\"value\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"displayName\",\"aliases\"]\n}\n"]