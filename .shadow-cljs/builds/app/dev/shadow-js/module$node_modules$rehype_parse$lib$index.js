["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/rehype-parse/lib/index.js"],"~:js","shadow$provide.module$node_modules$rehype_parse$lib$index=function(global,require,module,exports){function camelcase(value){return value.replace(/-[a-z]/g,$0=>$0.charAt(1).toUpperCase())}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=function(options){const processorSettings=this.data(\"settings\"),settings=Object.assign({},processorSettings,options);Object.assign(this,{Parser:function(doc,file){function onerror(error){function format(value){return value.replace(/%c(?:-(\\d+))?/g,\n(_,$1)=>{_=$1?-Number.parseInt($1,10):0;_=doc.charAt(error.startOffset+_);return\"`\"===_?\"` ` `\":_}).replace(/%x/g,()=>\"0x\"+doc.charCodeAt(error.startOffset).toString(16).toUpperCase())}const code=error.code;var name=camelcase(code),setting=settings[name];setting=void 0===setting||null===setting?!0:setting;setting=\"number\"===typeof setting?setting:setting?1:0;var start={line:error.startLine,column:error.startCol,offset:error.startOffset};const end={line:error.endLine,column:error.endCol,offset:error.endOffset};\nsetting&&(name=_errors.errors[name]||{reason:\"\",description:\"\",url:\"\"},start=file.message(format(name.reason),{start,end}),start.source=\"parse-error\",start.ruleId=code,start.fatal=fatalities[setting],start.note=format(name.description),start.url=\"url\"in name&&!1===name.url?null:\"https://html.spec.whatwg.org/multipage/parsing.html#parse-error-\"+code)}const fn=settings.fragment?\"parseFragment\":\"parse\",parse5=new _index.default({sourceCodeLocationInfo:!0,onParseError:settings.emitParseErrors?onerror:\nnull,scriptingEnabled:!1});return(0,_hastUtilFromParse.fromParse5)(parse5[fn](doc),{space:settings.space,file,verbose:settings.verbose})}})};var _index=function(obj){return obj&&obj.__esModule?obj:{default:obj}}(require(\"module$node_modules$parse5$lib$parser$index\")),_hastUtilFromParse=require(\"module$node_modules$hast_util_from_parse5$index\"),_errors=require(\"module$node_modules$rehype_parse$lib$errors\");const fatalities={2:!0,1:!1,0:null}}","~:source","shadow$provide[\"module$node_modules$rehype_parse$lib$index\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = rehypeParse;\n\nvar _index = _interopRequireDefault(require(\"parse5/lib/parser/index.js\"));\n\nvar _hastUtilFromParse = require(\"hast-util-from-parse5\");\n\nvar _errors = require(\"./errors.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @typedef {import('hast').Root} Root\n * @typedef {Pick<import('hast-util-from-parse5').Options, 'space' | 'verbose'>} FromParse5Options\n *\n * @typedef {keyof errors} ErrorCode\n * @typedef {0|1|2|boolean|null|undefined} ErrorSeverity\n * @typedef {Partial<Record<ErrorCode, ErrorSeverity>>} ErrorFields\n *\n * @typedef ParseFields\n * @property {boolean|undefined} [fragment=false]\n *   Specify whether to parse a fragment, instead of a complete document.\n *   In document mode, unopened `html`, `head`, and `body` elements are opened\n *   in just the right places.\n * @property {boolean|undefined} [emitParseErrors=false]\n *   > ⚠️ Parse errors are currently being added to HTML.\n *   > Not all errors emitted by parse5 (or rehype-parse) are specced yet.\n *   > Some documentation may still be missing.\n *\n *   Emit parse errors while parsing on the vfile.\n *   Setting this to `true` starts emitting HTML parse errors.\n *\n *   Specific rules can be turned off by setting them to `false` (or `0`).\n *   The default, when `emitParseErrors: true`, is `true` (or `1`), and means\n *   that rules emit as warnings.\n *   Rules can also be configured with `2`, to turn them into fatal errors.\n *\n * @typedef {FromParse5Options & ParseFields & ErrorFields} Options\n */\n// @ts-expect-error: remove when typed\nconst base = 'https://html.spec.whatwg.org/multipage/parsing.html#parse-error-';\nconst fatalities = {\n  2: true,\n  1: false,\n  0: null\n};\n/** @type {import('unified').Plugin<[Options?] | Array<void>, string, Root>} */\n\nfunction rehypeParse(options) {\n  const processorSettings = this.data('settings');\n  const settings = Object.assign({}, processorSettings, options);\n  Object.assign(this, {\n    Parser: parser\n  });\n  /** @type {import('unified').ParserFunction<Root>} */\n\n  function parser(doc, file) {\n    const fn = settings.fragment ? 'parseFragment' : 'parse';\n    const onParseError = settings.emitParseErrors ? onerror : null;\n    const parse5 = new _index.default({\n      sourceCodeLocationInfo: true,\n      onParseError,\n      scriptingEnabled: false\n    }); // @ts-expect-error: `parse5` returns document or fragment, which are always\n    // mapped to roots.\n\n    return (0, _hastUtilFromParse.fromParse5)(parse5[fn](doc), {\n      space: settings.space,\n      file,\n      verbose: settings.verbose\n    });\n    /**\n     * @param {{code: string, startLine: number, startCol: number, startOffset: number, endLine: number, endCol: number, endOffset: number}} error\n     */\n\n    function onerror(error) {\n      const code = error.code;\n      const name = camelcase(code);\n      const setting = settings[name];\n      const config = setting === undefined || setting === null ? true : setting;\n      const level = typeof config === 'number' ? config : config ? 1 : 0;\n      const start = {\n        line: error.startLine,\n        column: error.startCol,\n        offset: error.startOffset\n      };\n      const end = {\n        line: error.endLine,\n        column: error.endCol,\n        offset: error.endOffset\n      };\n\n      if (level) {\n        /* c8 ignore next */\n        const info = _errors.errors[name] || {\n          reason: '',\n          description: '',\n          url: ''\n        };\n        const message = file.message(format(info.reason), {\n          start,\n          end\n        });\n        message.source = 'parse-error';\n        message.ruleId = code;\n        message.fatal = fatalities[level];\n        message.note = format(info.description);\n        message.url = 'url' in info && info.url === false ? null : base + code;\n      }\n      /**\n       * @param {string} value\n       * @returns {string}\n       */\n\n\n      function format(value) {\n        return value.replace(/%c(?:-(\\d+))?/g, (_,\n        /** @type {string} */\n        $1) => {\n          const offset = $1 ? -Number.parseInt($1, 10) : 0;\n          const char = doc.charAt(error.startOffset + offset);\n          return char === '`' ? '` ` `' : char;\n        }).replace(/%x/g, () => '0x' + doc.charCodeAt(error.startOffset).toString(16).toUpperCase());\n      }\n    }\n  }\n}\n/**\n * @param {string} value\n * @returns {ErrorCode}\n */\n\n\nfunction camelcase(value) {\n  // @ts-expect-error: this returns a valid error code.\n  return value.replace(/-[a-z]/g, $0 => $0.charAt(1).toUpperCase());\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$hast_util_from_parse5$index","~$module$node_modules$parse5$lib$parser$index","~$shadow.js","~$module$node_modules$rehype_parse$lib$errors"]],"~:properties",["^5",["fatal","space","url","sourceCodeLocationInfo","offset","__esModule","note","Parser","value","start","scriptingEnabled","line","column","source","reason","ruleId","file","onParseError","default","end","verbose","description"]],"~:compiled-at",1676667638432,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$rehype_parse$lib$index.js\",\n\"lineCount\":4,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/rehype-parse/lib/index.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$rehype_parse$lib$index\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = rehypeParse;\\n\\nvar _index = _interopRequireDefault(require(\\\"parse5/lib/parser/index.js\\\"));\\n\\nvar _hastUtilFromParse = require(\\\"hast-util-from-parse5\\\");\\n\\nvar _errors = require(\\\"./errors.js\\\");\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\n/**\\n * @typedef {import('hast').Root} Root\\n * @typedef {Pick<import('hast-util-from-parse5').Options, 'space' | 'verbose'>} FromParse5Options\\n *\\n * @typedef {keyof errors} ErrorCode\\n * @typedef {0|1|2|boolean|null|undefined} ErrorSeverity\\n * @typedef {Partial<Record<ErrorCode, ErrorSeverity>>} ErrorFields\\n *\\n * @typedef ParseFields\\n * @property {boolean|undefined} [fragment=false]\\n *   Specify whether to parse a fragment, instead of a complete document.\\n *   In document mode, unopened `html`, `head`, and `body` elements are opened\\n *   in just the right places.\\n * @property {boolean|undefined} [emitParseErrors=false]\\n *   > \\u26a0\\ufe0f Parse errors are currently being added to HTML.\\n *   > Not all errors emitted by parse5 (or rehype-parse) are specced yet.\\n *   > Some documentation may still be missing.\\n *\\n *   Emit parse errors while parsing on the vfile.\\n *   Setting this to `true` starts emitting HTML parse errors.\\n *\\n *   Specific rules can be turned off by setting them to `false` (or `0`).\\n *   The default, when `emitParseErrors: true`, is `true` (or `1`), and means\\n *   that rules emit as warnings.\\n *   Rules can also be configured with `2`, to turn them into fatal errors.\\n *\\n * @typedef {FromParse5Options & ParseFields & ErrorFields} Options\\n */\\n// @ts-expect-error: remove when typed\\nconst base = 'https://html.spec.whatwg.org/multipage/parsing.html#parse-error-';\\nconst fatalities = {\\n  2: true,\\n  1: false,\\n  0: null\\n};\\n/** @type {import('unified').Plugin<[Options?] | Array<void>, string, Root>} */\\n\\nfunction rehypeParse(options) {\\n  const processorSettings = this.data('settings');\\n  const settings = Object.assign({}, processorSettings, options);\\n  Object.assign(this, {\\n    Parser: parser\\n  });\\n  /** @type {import('unified').ParserFunction<Root>} */\\n\\n  function parser(doc, file) {\\n    const fn = settings.fragment ? 'parseFragment' : 'parse';\\n    const onParseError = settings.emitParseErrors ? onerror : null;\\n    const parse5 = new _index.default({\\n      sourceCodeLocationInfo: true,\\n      onParseError,\\n      scriptingEnabled: false\\n    }); // @ts-expect-error: `parse5` returns document or fragment, which are always\\n    // mapped to roots.\\n\\n    return (0, _hastUtilFromParse.fromParse5)(parse5[fn](doc), {\\n      space: settings.space,\\n      file,\\n      verbose: settings.verbose\\n    });\\n    /**\\n     * @param {{code: string, startLine: number, startCol: number, startOffset: number, endLine: number, endCol: number, endOffset: number}} error\\n     */\\n\\n    function onerror(error) {\\n      const code = error.code;\\n      const name = camelcase(code);\\n      const setting = settings[name];\\n      const config = setting === undefined || setting === null ? true : setting;\\n      const level = typeof config === 'number' ? config : config ? 1 : 0;\\n      const start = {\\n        line: error.startLine,\\n        column: error.startCol,\\n        offset: error.startOffset\\n      };\\n      const end = {\\n        line: error.endLine,\\n        column: error.endCol,\\n        offset: error.endOffset\\n      };\\n\\n      if (level) {\\n        /* c8 ignore next */\\n        const info = _errors.errors[name] || {\\n          reason: '',\\n          description: '',\\n          url: ''\\n        };\\n        const message = file.message(format(info.reason), {\\n          start,\\n          end\\n        });\\n        message.source = 'parse-error';\\n        message.ruleId = code;\\n        message.fatal = fatalities[level];\\n        message.note = format(info.description);\\n        message.url = 'url' in info && info.url === false ? null : base + code;\\n      }\\n      /**\\n       * @param {string} value\\n       * @returns {string}\\n       */\\n\\n\\n      function format(value) {\\n        return value.replace(/%c(?:-(\\\\d+))?/g, (_,\\n        /** @type {string} */\\n        $1) => {\\n          const offset = $1 ? -Number.parseInt($1, 10) : 0;\\n          const char = doc.charAt(error.startOffset + offset);\\n          return char === '`' ? '` ` `' : char;\\n        }).replace(/%x/g, () => '0x' + doc.charCodeAt(error.startOffset).toString(16).toUpperCase());\\n      }\\n    }\\n  }\\n}\\n/**\\n * @param {string} value\\n * @returns {ErrorCode}\\n */\\n\\n\\nfunction camelcase(value) {\\n  // @ts-expect-error: this returns a valid error code.\\n  return value.replace(/-[a-z]/g, $0 => $0.charAt(1).toUpperCase());\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"camelcase\",\"value\",\"replace\",\"$0\",\"charAt\",\"toUpperCase\",\"Object\",\"defineProperty\",\"default\",\"rehypeParse\",\"options\",\"processorSettings\",\"data\",\"settings\",\"assign\",\"Parser\",\"parser\",\"doc\",\"file\",\"onerror\",\"error\",\"format\",\"_\",\"$1\",\"offset\",\"Number\",\"parseInt\",\"char\",\"startOffset\",\"charCodeAt\",\"toString\",\"code\",\"name\",\"setting\",\"config\",\"undefined\",\"level\",\"start\",\"line\",\"startLine\",\"column\",\"startCol\",\"end\",\"endLine\",\"endCol\",\"endOffset\",\"info\",\"_errors\",\"errors\",\"reason\",\"description\",\"url\",\"message\",\"source\",\"ruleId\",\"fatal\",\"fatalities\",\"note\",\"base\",\"fn\",\"fragment\",\"parse5\",\"_index\",\"sourceCodeLocationInfo\",\"onParseError\",\"emitParseErrors\",\"scriptingEnabled\",\"_hastUtilFromParse\",\"fromParse5\",\"space\",\"verbose\",\"_interopRequireDefault\",\"obj\",\"__esModule\"]\n}\n"]