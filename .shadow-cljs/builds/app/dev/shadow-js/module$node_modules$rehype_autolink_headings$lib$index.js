["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/rehype-autolink-headings/lib/index.js"],"~:js","shadow$provide.module$node_modules$rehype_autolink_headings$lib$index=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=function(options={}){function inject(node){node.children[\"prepend\"===behavior?\"unshift\":\"push\"](create(node,(0,_extend.default)(!0,{},props$jscomp$0),toChildren(content,node)));return[_unistUtilVisit.SKIP]}function around(node,index,parent){if(\"number\"===typeof index&&parent){var link=create(node,(0,_extend.default)(!0,\n{},props$jscomp$0),toChildren(content,node));link=\"before\"===behavior?[link,node]:[node,link];group&&(node=toNode(group,node))&&!Array.isArray(node)&&\"element\"===node.type&&(node.children=link,link=[node]);parent.children.splice(index,1,...link);return[_unistUtilVisit.SKIP,index+link.length]}}function wrap(node){node.children=[create(node,(0,_extend.default)(!0,{},props$jscomp$0),node.children)];return[_unistUtilVisit.SKIP]}function toChildren(value,node){value=toNode(value,node);return Array.isArray(value)?\nvalue:[value]}function toNode(value,node){return\"function\"===typeof value?value(node):(0,_extend.default)(!0,Array.isArray(value)?[]:{},value)}function create(node,props,children){return{type:\"element\",tagName:\"a\",properties:Object.assign({},props,{href:\"#\"+(node.properties||{}).id}),children}}let props$jscomp$0=options.properties;const behavior=options.behaviour||options.behavior||\"prepend\",content=options.content||contentDefaults,group=options.group,is=(0,_hastUtilIsElement.convertElement)(options.test);\nlet method;\"wrap\"===behavior?method=wrap:\"before\"===behavior||\"after\"===behavior?method=around:(props$jscomp$0||(props$jscomp$0={ariaHidden:\"true\",tabIndex:-1}),method=inject);return tree=>{(0,_unistUtilVisit.visit)(tree,\"element\",(node,index,parent)=>{if((0,_hastUtilHeadingRank.headingRank)(node)&&(0,_hastUtilHasProperty.hasProperty)(node,\"id\")&&is(node,index,parent))return method(node,index,parent)})}};var _extend=function(obj){return obj&&obj.__esModule?obj:{default:obj}}(require(\"module$node_modules$extend$index\")),\n_hastUtilHasProperty=require(\"module$node_modules$hast_util_has_property$index\"),_hastUtilHeadingRank=require(\"module$node_modules$hast_util_heading_rank$index\"),_hastUtilIsElement=require(\"module$node_modules$hast_util_is_element$index\"),_unistUtilVisit=require(\"module$node_modules$unist_util_visit$index\");const contentDefaults={type:\"element\",tagName:\"span\",properties:{className:[\"icon\",\"icon-link\"]},children:[]}}","~:source","shadow$provide[\"module$node_modules$rehype_autolink_headings$lib$index\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = rehypeAutolinkHeadings;\n\nvar _extend = _interopRequireDefault(require(\"extend\"));\n\nvar _hastUtilHasProperty = require(\"hast-util-has-property\");\n\nvar _hastUtilHeadingRank = require(\"hast-util-heading-rank\");\n\nvar _hastUtilIsElement = require(\"hast-util-is-element\");\n\nvar _unistUtilVisit = require(\"unist-util-visit\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Parent} Parent\n * @typedef {import('hast').Element} Element\n * @typedef {Element['children'][number]} ElementChild\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast-util-is-element').Test} Test\n *\n * @typedef {'prepend'|'append'|'wrap'|'before'|'after'} Behavior\n *\n * @callback Build\n * @param {Element} node\n * @returns {ElementChild|ElementChild[]}\n *\n * @typedef Options\n *   Configuration.\n * @property {Behavior} [behavior='prepend']\n *   How to create links.\n * @property {Behavior} [behaviour]\n *   Please use `behavior` instead\n * @property {Properties} [properties]\n *   Extra properties to set on the link when injecting.\n *   Defaults to `{ariaHidden: true, tabIndex: -1}` when `'prepend'` or\n *   `'append'`.\n * @property {ElementChild|ElementChild[]|Build} [content={type: 'element', tagName: 'span', properties: {className: ['icon', 'icon-link']}, children: []}]\n *   hast nodes to insert in the link.\n * @property {ElementChild|ElementChild[]|Build} [group]\n *   hast node to wrap the heading and link with, if `behavior` is `'before'` or\n *   `'after'`.\n *   There is no default.\n * @property {Test} [test]\n *   Test to define which heading elements are linked.\n *   Any test that can be given to `hast-util-is-element` is supported.\n *   The default (no test) is to link all headings.\n *   Can be used to link only h1-h3, or for example all except h1.\n */\n\n/** @type {Element} */\nconst contentDefaults = {\n  type: 'element',\n  tagName: 'span',\n  properties: {\n    className: ['icon', 'icon-link']\n  },\n  children: []\n};\n/**\n * Plugin to automatically add links to headings (h1-h6).\n *\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\n */\n\nfunction rehypeAutolinkHeadings(options = {}) {\n  let props = options.properties;\n  const behavior = options.behaviour || options.behavior || 'prepend';\n  const content = options.content || contentDefaults;\n  const group = options.group;\n  const is = (0, _hastUtilIsElement.convertElement)(options.test);\n  /** @type {import('unist-util-visit/complex-types').Visitor<Element>} */\n\n  let method;\n\n  if (behavior === 'wrap') {\n    method = wrap;\n  } else if (behavior === 'before' || behavior === 'after') {\n    method = around;\n  } else {\n    if (!props) {\n      props = {\n        ariaHidden: 'true',\n        tabIndex: -1\n      };\n    }\n\n    method = inject;\n  }\n\n  return tree => {\n    (0, _unistUtilVisit.visit)(tree, 'element', (node, index, parent) => {\n      if ((0, _hastUtilHeadingRank.headingRank)(node) && (0, _hastUtilHasProperty.hasProperty)(node, 'id') && is(node, index, parent)) {\n        return method(node, index, parent);\n      }\n    });\n  };\n  /** @type {import('unist-util-visit/complex-types').Visitor<Element>} */\n\n  function inject(node) {\n    node.children[behavior === 'prepend' ? 'unshift' : 'push'](create(node, (0, _extend.default)(true, {}, props), toChildren(content, node)));\n    return [_unistUtilVisit.SKIP];\n  }\n  /** @type {import('unist-util-visit/complex-types').Visitor<Element>} */\n\n\n  function around(node, index, parent) {\n    // Uncommon.\n\n    /* c8 ignore next */\n    if (typeof index !== 'number' || !parent) return;\n    const link = create(node, (0, _extend.default)(true, {}, props), toChildren(content, node));\n    let nodes = behavior === 'before' ? [link, node] : [node, link];\n\n    if (group) {\n      const grouping = toNode(group, node);\n\n      if (grouping && !Array.isArray(grouping) && grouping.type === 'element') {\n        grouping.children = nodes;\n        nodes = [grouping];\n      }\n    }\n\n    parent.children.splice(index, 1, ...nodes);\n    return [_unistUtilVisit.SKIP, index + nodes.length];\n  }\n  /** @type {import('unist-util-visit/complex-types').Visitor<Element>} */\n\n\n  function wrap(node) {\n    node.children = [create(node, (0, _extend.default)(true, {}, props), node.children)];\n    return [_unistUtilVisit.SKIP];\n  }\n  /**\n   * @param {ElementChild|ElementChild[]|Build} value\n   * @param {Element} node\n   * @returns {ElementChild[]}\n   */\n\n\n  function toChildren(value, node) {\n    const result = toNode(value, node);\n    return Array.isArray(result) ? result : [result];\n  }\n  /**\n   * @param {ElementChild|ElementChild[]|Build} value\n   * @param {Element} node\n   * @returns {ElementChild|ElementChild[]}\n   */\n\n\n  function toNode(value, node) {\n    if (typeof value === 'function') return value(node);\n    return (0, _extend.default)(true, Array.isArray(value) ? [] : {}, value);\n  }\n  /**\n   * @param {Element} node\n   * @param {Properties} props\n   * @param {ElementChild[]} children\n   * @returns {Element}\n   */\n\n\n  function create(node, props, children) {\n    return {\n      type: 'element',\n      tagName: 'a',\n      properties: Object.assign({}, props, {\n        // Fix hast types and make them required.\n\n        /* c8 ignore next */\n        href: '#' + (node.properties || {}).id\n      }),\n      children\n    };\n  }\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$unist_util_visit$index","~$module$node_modules$extend$index","~$shadow.js","~$module$node_modules$hast_util_has_property$index","~$module$node_modules$hast_util_is_element$index","~$module$node_modules$hast_util_heading_rank$index"]],"~:properties",["^5",["properties","tabIndex","className","children","ariaHidden","__esModule","href","value","type","tagName","default"]],"~:compiled-at",1676841365352,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$rehype_autolink_headings$lib$index.js\",\n\"lineCount\":5,\n\"mappings\":\"AAAAA,cAAA,CAAA,sDAAA,CAA2E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGnHC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,OAAR,CAkEAC,QAA+B,CAACC,OAAA,CAAU,EAAX,CAAe,CAkC5CC,QAASA,OAAM,CAACC,IAAD,CAAO,CACpBA,IAAKC,CAAAA,QAAL,CAA2B,SAAb,GAAAC,QAAA,CAAyB,SAAzB,CAAqC,MAAnD,CAAA,CAA2DC,MAAA,CAAOH,IAAP,CAAa,GAAII,OAAQR,CAAAA,OAAZ,EAAqB,CAAA,CAArB,CAA2B,EAA3B,CAA+BS,cAA/B,CAAb,CAAoDC,UAAA,CAAWC,OAAX,CAAoBP,IAApB,CAApD,CAA3D,CACA,OAAO,CAACQ,eAAgBC,CAAAA,IAAjB,CAFa,CAOtBC,QAASA,OAAM,CAACV,IAAD,CAAOW,KAAP,CAAcC,MAAd,CAAsB,CAInC,GAAqB,QAArB,GAAI,MAAOD,MAAX,EAAkCC,MAAlC,CAAA,CACA,IAAMC,KAAOV,MAAA,CAAOH,IAAP,CAAa,GAAII,OAAQR,CAAAA,OAAZ,EAAqB,CAAA,CAArB;AAA2B,EAA3B,CAA+BS,cAA/B,CAAb,CAAoDC,UAAA,CAAWC,OAAX,CAAoBP,IAApB,CAApD,CACTc,KAAAA,CAAqB,QAAb,GAAAZ,QAAA,CAAwB,CAACW,IAAD,CAAOb,IAAP,CAAxB,CAAuC,CAACA,IAAD,CAAOa,IAAP,CAE/CE,MAAJ,GACQC,IADR,CACmBC,MAAA,CAAOF,KAAP,CAAcf,IAAd,CADnB,GAGkB,CAACkB,KAAMC,CAAAA,OAAN,CAAcH,IAAd,CAHnB,EAGgE,SAHhE,GAG8CA,IAASI,CAAAA,IAHvD,GAIIJ,IAASf,CAAAA,QACT,CADoBa,IACpB,CAAAA,IAAA,CAAQ,CAACE,IAAD,CALZ,CASAJ,OAAOX,CAAAA,QAASoB,CAAAA,MAAhB,CAAuBV,KAAvB,CAA8B,CAA9B,CAAiC,GAAGG,IAApC,CACA,OAAO,CAACN,eAAgBC,CAAAA,IAAjB,CAAuBE,KAAvB,CAA+BG,IAAMQ,CAAAA,MAArC,CAdP,CAJmC,CAuBrCC,QAASA,KAAI,CAACvB,IAAD,CAAO,CAClBA,IAAKC,CAAAA,QAAL,CAAgB,CAACE,MAAA,CAAOH,IAAP,CAAa,GAAII,OAAQR,CAAAA,OAAZ,EAAqB,CAAA,CAArB,CAA2B,EAA3B,CAA+BS,cAA/B,CAAb,CAAoDL,IAAKC,CAAAA,QAAzD,CAAD,CAChB,OAAO,CAACO,eAAgBC,CAAAA,IAAjB,CAFW,CAWpBH,QAASA,WAAU,CAACX,KAAD,CAAQK,IAAR,CAAc,CACzBwB,KAAAA,CAASP,MAAA,CAAOtB,KAAP,CAAcK,IAAd,CACf,OAAOkB,MAAMC,CAAAA,OAAN,CAAcK,KAAd,CAAA;AAAwBA,KAAxB,CAAiC,CAACA,KAAD,CAFT,CAWjCP,QAASA,OAAM,CAACtB,KAAD,CAAQK,IAAR,CAAc,CAC3B,MAAqB,UAArB,GAAI,MAAOL,MAAX,CAAwCA,KAAA,CAAMK,IAAN,CAAxC,CACO,GAAII,OAAQR,CAAAA,OAAZ,EAAqB,CAAA,CAArB,CAA2BsB,KAAMC,CAAAA,OAAN,CAAcxB,KAAd,CAAA,CAAuB,EAAvB,CAA4B,EAAvD,CAA2DA,KAA3D,CAFoB,CAY7BQ,QAASA,OAAM,CAACH,IAAD,CAAOK,KAAP,CAAcJ,QAAd,CAAwB,CACrC,MAAO,CACLmB,KAAM,SADD,CAELK,QAAS,GAFJ,CAGLC,WAAYjC,MAAOkC,CAAAA,MAAP,CAAc,EAAd,CAAkBtB,KAAlB,CAAyB,CAInCuB,KAAM,GAANA,CAAoCC,CAAvB7B,IAAK0B,CAAAA,UAAkBG,EAAJ,EAAIA,EAAAA,EAJD,CAAzB,CAHP,CASL5B,QATK,CAD8B,CAjGvC,IAAII,eAAQP,OAAQ4B,CAAAA,UACpB,OAAMxB,SAAWJ,OAAQgC,CAAAA,SAAnB5B,EAAgCJ,OAAQI,CAAAA,QAAxCA,EAAoD,SAA1D,CACMK,QAAUT,OAAQS,CAAAA,OAAlBA,EAA6BwB,eADnC,CAEMhB,MAAQjB,OAAQiB,CAAAA,KAFtB,CAGMiB,GAAK,GAAIC,kBAAmBC,CAAAA,cAAvB,EAAuCpC,OAAQqC,CAAAA,IAA/C,CAGX;IAAIC,MAEa,OAAjB,GAAIlC,QAAJ,CACEkC,MADF,CACWb,IADX,CAEwB,QAAjB,GAAIrB,QAAJ,EAA0C,OAA1C,GAA6BA,QAA7B,CACLkC,MADK,CACI1B,MADJ,EAGAL,cAOL,GANEA,cAMF,CANU,CACNgC,WAAY,MADN,CAENC,SAAU,CAAC,CAFL,CAMV,EAAAF,MAAA,CAASrC,MAVJ,CAaP,OAAOwC,KAAA,EAAQ,CACb,GAAI/B,eAAgBgC,CAAAA,KAApB,EAA2BD,IAA3B,CAAiC,SAAjC,CAA4C,CAACvC,IAAD,CAAOW,KAAP,CAAcC,MAAd,CAAA,EAAyB,CACnE,GAAI,GAAI6B,oBAAqBC,CAAAA,WAAzB,EAAsC1C,IAAtC,CAAJ,EAAmD,GAAI2C,oBAAqBC,CAAAA,WAAzB,EAAsC5C,IAAtC,CAA4C,IAA5C,CAAnD,EAAwGgC,EAAA,CAAGhC,IAAH,CAASW,KAAT,CAAgBC,MAAhB,CAAxG,CACE,MAAOwB,OAAA,CAAOpC,IAAP,CAAaW,KAAb,CAAoBC,MAApB,CAF0D,CAArE,CADa,CAzB6B,CAhE9C,KAAIR,QAUJyC,QAA+B,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAIC,CAAAA,UAAX,CAAwBD,GAAxB,CAA8B,CAAElD,QAASkD,GAAX,CAAvC,CAVvB,CAAuBxD,OAAA,CAAQ,kCAAR,CAAvB,CAAd;AAEIqD,qBAAuBrD,OAAA,CAAQ,kDAAR,CAF3B,CAIImD,qBAAuBnD,OAAA,CAAQ,kDAAR,CAJ3B,CAMI2C,mBAAqB3C,OAAA,CAAQ,gDAAR,CANzB,CAQIkB,gBAAkBlB,OAAA,CAAQ,4CAAR,CA0CtB,OAAMyC,gBAAkB,CACtBX,KAAM,SADgB,CAEtBK,QAAS,MAFa,CAGtBC,WAAY,CACVsB,UAAW,CAAC,MAAD,CAAS,WAAT,CADD,CAHU,CAMtB/C,SAAU,EANY,CA1D2F;\",\n\"sources\":[\"node_modules/rehype-autolink-headings/lib/index.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$rehype_autolink_headings$lib$index\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = rehypeAutolinkHeadings;\\n\\nvar _extend = _interopRequireDefault(require(\\\"extend\\\"));\\n\\nvar _hastUtilHasProperty = require(\\\"hast-util-has-property\\\");\\n\\nvar _hastUtilHeadingRank = require(\\\"hast-util-heading-rank\\\");\\n\\nvar _hastUtilIsElement = require(\\\"hast-util-is-element\\\");\\n\\nvar _unistUtilVisit = require(\\\"unist-util-visit\\\");\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\n/**\\n * @typedef {import('hast').Root} Root\\n * @typedef {import('hast').Parent} Parent\\n * @typedef {import('hast').Element} Element\\n * @typedef {Element['children'][number]} ElementChild\\n * @typedef {import('hast').Properties} Properties\\n * @typedef {import('hast-util-is-element').Test} Test\\n *\\n * @typedef {'prepend'|'append'|'wrap'|'before'|'after'} Behavior\\n *\\n * @callback Build\\n * @param {Element} node\\n * @returns {ElementChild|ElementChild[]}\\n *\\n * @typedef Options\\n *   Configuration.\\n * @property {Behavior} [behavior='prepend']\\n *   How to create links.\\n * @property {Behavior} [behaviour]\\n *   Please use `behavior` instead\\n * @property {Properties} [properties]\\n *   Extra properties to set on the link when injecting.\\n *   Defaults to `{ariaHidden: true, tabIndex: -1}` when `'prepend'` or\\n *   `'append'`.\\n * @property {ElementChild|ElementChild[]|Build} [content={type: 'element', tagName: 'span', properties: {className: ['icon', 'icon-link']}, children: []}]\\n *   hast nodes to insert in the link.\\n * @property {ElementChild|ElementChild[]|Build} [group]\\n *   hast node to wrap the heading and link with, if `behavior` is `'before'` or\\n *   `'after'`.\\n *   There is no default.\\n * @property {Test} [test]\\n *   Test to define which heading elements are linked.\\n *   Any test that can be given to `hast-util-is-element` is supported.\\n *   The default (no test) is to link all headings.\\n *   Can be used to link only h1-h3, or for example all except h1.\\n */\\n\\n/** @type {Element} */\\nconst contentDefaults = {\\n  type: 'element',\\n  tagName: 'span',\\n  properties: {\\n    className: ['icon', 'icon-link']\\n  },\\n  children: []\\n};\\n/**\\n * Plugin to automatically add links to headings (h1-h6).\\n *\\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\\n */\\n\\nfunction rehypeAutolinkHeadings(options = {}) {\\n  let props = options.properties;\\n  const behavior = options.behaviour || options.behavior || 'prepend';\\n  const content = options.content || contentDefaults;\\n  const group = options.group;\\n  const is = (0, _hastUtilIsElement.convertElement)(options.test);\\n  /** @type {import('unist-util-visit/complex-types').Visitor<Element>} */\\n\\n  let method;\\n\\n  if (behavior === 'wrap') {\\n    method = wrap;\\n  } else if (behavior === 'before' || behavior === 'after') {\\n    method = around;\\n  } else {\\n    if (!props) {\\n      props = {\\n        ariaHidden: 'true',\\n        tabIndex: -1\\n      };\\n    }\\n\\n    method = inject;\\n  }\\n\\n  return tree => {\\n    (0, _unistUtilVisit.visit)(tree, 'element', (node, index, parent) => {\\n      if ((0, _hastUtilHeadingRank.headingRank)(node) && (0, _hastUtilHasProperty.hasProperty)(node, 'id') && is(node, index, parent)) {\\n        return method(node, index, parent);\\n      }\\n    });\\n  };\\n  /** @type {import('unist-util-visit/complex-types').Visitor<Element>} */\\n\\n  function inject(node) {\\n    node.children[behavior === 'prepend' ? 'unshift' : 'push'](create(node, (0, _extend.default)(true, {}, props), toChildren(content, node)));\\n    return [_unistUtilVisit.SKIP];\\n  }\\n  /** @type {import('unist-util-visit/complex-types').Visitor<Element>} */\\n\\n\\n  function around(node, index, parent) {\\n    // Uncommon.\\n\\n    /* c8 ignore next */\\n    if (typeof index !== 'number' || !parent) return;\\n    const link = create(node, (0, _extend.default)(true, {}, props), toChildren(content, node));\\n    let nodes = behavior === 'before' ? [link, node] : [node, link];\\n\\n    if (group) {\\n      const grouping = toNode(group, node);\\n\\n      if (grouping && !Array.isArray(grouping) && grouping.type === 'element') {\\n        grouping.children = nodes;\\n        nodes = [grouping];\\n      }\\n    }\\n\\n    parent.children.splice(index, 1, ...nodes);\\n    return [_unistUtilVisit.SKIP, index + nodes.length];\\n  }\\n  /** @type {import('unist-util-visit/complex-types').Visitor<Element>} */\\n\\n\\n  function wrap(node) {\\n    node.children = [create(node, (0, _extend.default)(true, {}, props), node.children)];\\n    return [_unistUtilVisit.SKIP];\\n  }\\n  /**\\n   * @param {ElementChild|ElementChild[]|Build} value\\n   * @param {Element} node\\n   * @returns {ElementChild[]}\\n   */\\n\\n\\n  function toChildren(value, node) {\\n    const result = toNode(value, node);\\n    return Array.isArray(result) ? result : [result];\\n  }\\n  /**\\n   * @param {ElementChild|ElementChild[]|Build} value\\n   * @param {Element} node\\n   * @returns {ElementChild|ElementChild[]}\\n   */\\n\\n\\n  function toNode(value, node) {\\n    if (typeof value === 'function') return value(node);\\n    return (0, _extend.default)(true, Array.isArray(value) ? [] : {}, value);\\n  }\\n  /**\\n   * @param {Element} node\\n   * @param {Properties} props\\n   * @param {ElementChild[]} children\\n   * @returns {Element}\\n   */\\n\\n\\n  function create(node, props, children) {\\n    return {\\n      type: 'element',\\n      tagName: 'a',\\n      properties: Object.assign({}, props, {\\n        // Fix hast types and make them required.\\n\\n        /* c8 ignore next */\\n        href: '#' + (node.properties || {}).id\\n      }),\\n      children\\n    };\\n  }\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"default\",\"rehypeAutolinkHeadings\",\"options\",\"inject\",\"node\",\"children\",\"behavior\",\"create\",\"_extend\",\"props\",\"toChildren\",\"content\",\"_unistUtilVisit\",\"SKIP\",\"around\",\"index\",\"parent\",\"link\",\"nodes\",\"group\",\"grouping\",\"toNode\",\"Array\",\"isArray\",\"type\",\"splice\",\"length\",\"wrap\",\"result\",\"tagName\",\"properties\",\"assign\",\"href\",\"id\",\"behaviour\",\"contentDefaults\",\"is\",\"_hastUtilIsElement\",\"convertElement\",\"test\",\"method\",\"ariaHidden\",\"tabIndex\",\"tree\",\"visit\",\"_hastUtilHeadingRank\",\"headingRank\",\"_hastUtilHasProperty\",\"hasProperty\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"className\"]\n}\n"]