["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/hast-util-select/lib/name.js"],"~:js","shadow$provide.module$node_modules$hast_util_select$lib$name=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.name=function(query,element){return\"*\"===query.tagName||query.tagName===element.tagName}}","~:source","shadow$provide[\"module$node_modules$hast_util_select$lib$name\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.name = name;\n\n/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').Element} Element\n */\n\n/**\n * Check whether an element has a tag name.\n *\n * @param {Rule} query\n * @param {Element} element\n * @returns {boolean}\n */\nfunction name(query, element) {\n  return query.tagName === '*' || query.tagName === element.tagName;\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["__esModule","name","value"]],"~:compiled-at",1676841365493,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$hast_util_select$lib$name.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAA,6CAAA,CAAkE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG1GC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,IAAR,CAcAA,QAAa,CAACC,KAAD,CAAQC,OAAR,CAAiB,CAC5B,MAAyB,GAAzB,GAAOD,KAAME,CAAAA,OAAb,EAAgCF,KAAME,CAAAA,OAAtC,GAAkDD,OAAQC,CAAAA,OAD9B,CApB4E;\",\n\"sources\":[\"node_modules/hast-util-select/lib/name.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$hast_util_select$lib$name\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.name = name;\\n\\n/**\\n * @typedef {import('./types.js').Rule} Rule\\n * @typedef {import('./types.js').Element} Element\\n */\\n\\n/**\\n * Check whether an element has a tag name.\\n *\\n * @param {Rule} query\\n * @param {Element} element\\n * @returns {boolean}\\n */\\nfunction name(query, element) {\\n  return query.tagName === '*' || query.tagName === element.tagName;\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"name\",\"query\",\"element\",\"tagName\"]\n}\n"]