["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/aspnet.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$aspnet=function(global,require,module,exports){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function aspnet(Prism){Prism.register(_csharp.default);Prism.register(_markup.default);Prism.languages.aspnet=Prism.languages.extend(\"markup\",{\"page-directive\":{pattern:/<%\\s*@.*%>/,alias:\"tag\",inside:{\"page-directive\":{pattern:/<%\\s*@\\s*(?:Assembly|Control|Implements|Import|Master(?:Type)?|OutputCache|Page|PreviousPageType|Reference|Register)?|%>/i,\nalias:\"tag\"},rest:Prism.languages.markup.tag.inside}},directive:{pattern:/<%.*%>/,alias:\"tag\",inside:{directive:{pattern:/<%\\s*?[$=%#:]{0,2}|%>/,alias:\"tag\"},rest:Prism.languages.csharp}}});Prism.languages.aspnet.tag.pattern=/<(?!%)\\/?[^\\s>\\/]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/;Prism.languages.insertBefore(\"inside\",\"punctuation\",{directive:Prism.languages.aspnet.directive},Prism.languages.aspnet.tag.inside[\"attr-value\"]);Prism.languages.insertBefore(\"aspnet\",\n\"comment\",{\"asp-comment\":{pattern:/<%--[\\s\\S]*?--%>/,alias:[\"asp\",\"comment\"]}});Prism.languages.insertBefore(\"aspnet\",Prism.languages.javascript?\"script\":\"tag\",{\"asp-script\":{pattern:/(<script(?=.*runat=['\"]?server\\b)[^>]*>)[\\s\\S]*?(?=<\\/script>)/i,lookbehind:!0,alias:[\"asp\",\"script\"],inside:Prism.languages.csharp||{}}})}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=aspnet;var _csharp=_interopRequireDefault(require(\"module$node_modules$refractor$lang$csharp\")),_markup=_interopRequireDefault(require(\"module$node_modules$refractor$lang$markup\"));\naspnet.displayName=\"aspnet\";aspnet.aliases=[]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$aspnet\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = aspnet;\n\nvar _csharp = _interopRequireDefault(require(\"./csharp.js\"));\n\nvar _markup = _interopRequireDefault(require(\"./markup.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// @ts-nocheck\naspnet.displayName = 'aspnet';\naspnet.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nfunction aspnet(Prism) {\n  Prism.register(_csharp.default);\n  Prism.register(_markup.default);\n  Prism.languages.aspnet = Prism.languages.extend('markup', {\n    'page-directive': {\n      pattern: /<%\\s*@.*%>/,\n      alias: 'tag',\n      inside: {\n        'page-directive': {\n          pattern: /<%\\s*@\\s*(?:Assembly|Control|Implements|Import|Master(?:Type)?|OutputCache|Page|PreviousPageType|Reference|Register)?|%>/i,\n          alias: 'tag'\n        },\n        rest: Prism.languages.markup.tag.inside\n      }\n    },\n    directive: {\n      pattern: /<%.*%>/,\n      alias: 'tag',\n      inside: {\n        directive: {\n          pattern: /<%\\s*?[$=%#:]{0,2}|%>/,\n          alias: 'tag'\n        },\n        rest: Prism.languages.csharp\n      }\n    }\n  }); // Regexp copied from prism-markup, with a negative look-ahead added\n\n  Prism.languages.aspnet.tag.pattern = /<(?!%)\\/?[^\\s>\\/]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/; // match directives of attribute value foo=\"<% Bar %>\"\n\n  Prism.languages.insertBefore('inside', 'punctuation', {\n    directive: Prism.languages.aspnet['directive']\n  }, Prism.languages.aspnet.tag.inside['attr-value']);\n  Prism.languages.insertBefore('aspnet', 'comment', {\n    'asp-comment': {\n      pattern: /<%--[\\s\\S]*?--%>/,\n      alias: ['asp', 'comment']\n    }\n  }); // script runat=\"server\" contains csharp, not javascript\n\n  Prism.languages.insertBefore('aspnet', Prism.languages.javascript ? 'script' : 'tag', {\n    'asp-script': {\n      pattern: /(<script(?=.*runat=['\"]?server\\b)[^>]*>)[\\s\\S]*?(?=<\\/script>)/i,\n      lookbehind: true,\n      alias: ['asp', 'script'],\n      inside: Prism.languages.csharp || {}\n    }\n  });\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$refractor$lang$csharp","~$module$node_modules$refractor$lang$markup","~$shadow.js"]],"~:properties",["^5",["aliases","directive","displayName","aspnet","__esModule","rest","lookbehind","value","pattern","inside","alias","default"]],"~:compiled-at",1676841365392,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$aspnet.js\",\n\"lineCount\":4,\n\"mappings\":\"AAAAA,cAAA,CAAA,yCAAA,CAA8D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAYtGC,QAASA,uBAAsB,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAIC,CAAAA,UAAX,CAAwBD,GAAxB,CAA8B,CAAEE,QAASF,GAAX,CAAvC,CAOrCG,QAASA,OAAM,CAACC,KAAD,CAAQ,CACrBA,KAAMC,CAAAA,QAAN,CAAeC,OAAQJ,CAAAA,OAAvB,CACAE,MAAMC,CAAAA,QAAN,CAAeE,OAAQL,CAAAA,OAAvB,CACAE,MAAMI,CAAAA,SAAUL,CAAAA,MAAhB,CAAyBC,KAAMI,CAAAA,SAAUC,CAAAA,MAAhB,CAAuB,QAAvB,CAAiC,CACxD,iBAAkB,CAChBC,QAAS,YADO,CAEhBC,MAAO,KAFS,CAGhBC,OAAQ,CACN,iBAAkB,CAChBF,QAAS,2HADO;AAEhBC,MAAO,KAFS,CADZ,CAKNE,KAAMT,KAAMI,CAAAA,SAAUM,CAAAA,MAAOC,CAAAA,GAAIH,CAAAA,MAL3B,CAHQ,CADsC,CAYxDI,UAAW,CACTN,QAAS,QADA,CAETC,MAAO,KAFE,CAGTC,OAAQ,CACNI,UAAW,CACTN,QAAS,uBADA,CAETC,MAAO,KAFE,CADL,CAKNE,KAAMT,KAAMI,CAAAA,SAAUS,CAAAA,MALhB,CAHC,CAZ6C,CAAjC,CAyBzBb,MAAMI,CAAAA,SAAUL,CAAAA,MAAOY,CAAAA,GAAIL,CAAAA,OAA3B,CAAqC,kGAErCN,MAAMI,CAAAA,SAAUU,CAAAA,YAAhB,CAA6B,QAA7B,CAAuC,aAAvC,CAAsD,CACpDF,UAAWZ,KAAMI,CAAAA,SAAUL,CAAAA,MAAhB,CAAA,SADyC,CAAtD,CAEGC,KAAMI,CAAAA,SAAUL,CAAAA,MAAOY,CAAAA,GAAIH,CAAAA,MAA3B,CAAkC,YAAlC,CAFH,CAGAR,MAAMI,CAAAA,SAAUU,CAAAA,YAAhB,CAA6B,QAA7B;AAAuC,SAAvC,CAAkD,CAChD,cAAe,CACbR,QAAS,kBADI,CAEbC,MAAO,CAAC,KAAD,CAAQ,SAAR,CAFM,CADiC,CAAlD,CAOAP,MAAMI,CAAAA,SAAUU,CAAAA,YAAhB,CAA6B,QAA7B,CAAuCd,KAAMI,CAAAA,SAAUW,CAAAA,UAAhB,CAA6B,QAA7B,CAAwC,KAA/E,CAAsF,CACpF,aAAc,CACZT,QAAS,iEADG,CAEZU,WAAY,CAAA,CAFA,CAGZT,MAAO,CAAC,KAAD,CAAQ,QAAR,CAHK,CAIZC,OAAQR,KAAMI,CAAAA,SAAUS,CAAAA,MAAxBL,EAAkC,EAJtB,CADsE,CAAtF,CAxCqB,CAhBvBS,MAAOC,CAAAA,cAAP,CAAsBxB,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CyB,MAAO,CAAA,CADoC,CAA7C,CAGAzB,QAAQI,CAAAA,OAAR,CAAkBC,MAElB,KAAIG,QAAUP,sBAAA,CAAuBH,OAAA,CAAQ,2CAAR,CAAvB,CAAd,CAEIW,QAAUR,sBAAA,CAAuBH,OAAA,CAAQ,2CAAR,CAAvB,CAKdO;MAAOqB,CAAAA,WAAP,CAAqB,QACrBrB,OAAOsB,CAAAA,OAAP,CAAiB,EAhBqF;\",\n\"sources\":[\"node_modules/refractor/lang/aspnet.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$aspnet\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = aspnet;\\n\\nvar _csharp = _interopRequireDefault(require(\\\"./csharp.js\\\"));\\n\\nvar _markup = _interopRequireDefault(require(\\\"./markup.js\\\"));\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\n// @ts-nocheck\\naspnet.displayName = 'aspnet';\\naspnet.aliases = [];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction aspnet(Prism) {\\n  Prism.register(_csharp.default);\\n  Prism.register(_markup.default);\\n  Prism.languages.aspnet = Prism.languages.extend('markup', {\\n    'page-directive': {\\n      pattern: /<%\\\\s*@.*%>/,\\n      alias: 'tag',\\n      inside: {\\n        'page-directive': {\\n          pattern: /<%\\\\s*@\\\\s*(?:Assembly|Control|Implements|Import|Master(?:Type)?|OutputCache|Page|PreviousPageType|Reference|Register)?|%>/i,\\n          alias: 'tag'\\n        },\\n        rest: Prism.languages.markup.tag.inside\\n      }\\n    },\\n    directive: {\\n      pattern: /<%.*%>/,\\n      alias: 'tag',\\n      inside: {\\n        directive: {\\n          pattern: /<%\\\\s*?[$=%#:]{0,2}|%>/,\\n          alias: 'tag'\\n        },\\n        rest: Prism.languages.csharp\\n      }\\n    }\\n  }); // Regexp copied from prism-markup, with a negative look-ahead added\\n\\n  Prism.languages.aspnet.tag.pattern = /<(?!%)\\\\/?[^\\\\s>\\\\/]+(?:\\\\s+[^\\\\s>\\\\/=]+(?:=(?:(\\\"|')(?:\\\\\\\\[\\\\s\\\\S]|(?!\\\\1)[^\\\\\\\\])*\\\\1|[^\\\\s'\\\">=]+))?)*\\\\s*\\\\/?>/; // match directives of attribute value foo=\\\"<% Bar %>\\\"\\n\\n  Prism.languages.insertBefore('inside', 'punctuation', {\\n    directive: Prism.languages.aspnet['directive']\\n  }, Prism.languages.aspnet.tag.inside['attr-value']);\\n  Prism.languages.insertBefore('aspnet', 'comment', {\\n    'asp-comment': {\\n      pattern: /<%--[\\\\s\\\\S]*?--%>/,\\n      alias: ['asp', 'comment']\\n    }\\n  }); // script runat=\\\"server\\\" contains csharp, not javascript\\n\\n  Prism.languages.insertBefore('aspnet', Prism.languages.javascript ? 'script' : 'tag', {\\n    'asp-script': {\\n      pattern: /(<script(?=.*runat=['\\\"]?server\\\\b)[^>]*>)[\\\\s\\\\S]*?(?=<\\\\/script>)/i,\\n      lookbehind: true,\\n      alias: ['asp', 'script'],\\n      inside: Prism.languages.csharp || {}\\n    }\\n  });\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"default\",\"aspnet\",\"Prism\",\"register\",\"_csharp\",\"_markup\",\"languages\",\"extend\",\"pattern\",\"alias\",\"inside\",\"rest\",\"markup\",\"tag\",\"directive\",\"csharp\",\"insertBefore\",\"javascript\",\"lookbehind\",\"Object\",\"defineProperty\",\"value\",\"displayName\",\"aliases\"]\n}\n"]