["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/highlight_DOT_js/lib/languages/graphql.js"],"~:js","shadow$provide.module$node_modules$highlight_DOT_js$lib$languages$graphql=function(global,require,module,exports){module.exports=function(hljs){const regex=hljs.regex;return{name:\"GraphQL\",aliases:[\"gql\"],case_insensitive:!0,disableAutodetect:!1,keywords:{keyword:\"query mutation subscription type input schema directive interface union scalar fragment enum on\".split(\" \"),literal:[\"true\",\"false\",\"null\"]},contains:[hljs.HASH_COMMENT_MODE,hljs.QUOTE_STRING_MODE,hljs.NUMBER_MODE,{scope:\"punctuation\",match:/[.]{3}/,\nrelevance:0},{scope:\"punctuation\",begin:/[!\\(\\):=\\[\\]\\{\\|\\}]{1}/,relevance:0},{scope:\"variable\",begin:/\\$/,end:/\\W/,excludeEnd:!0,relevance:0},{scope:\"meta\",match:/@\\w+/,excludeEnd:!0},{scope:\"symbol\",begin:regex.concat(/[_A-Za-z][_0-9A-Za-z]*/,regex.lookahead(/\\s*:/)),relevance:0}],illegal:[/[;<']/,/BEGIN/]}}}","~:source","shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$graphql\"] = function(global,require,module,exports) {\n/*\n Language: GraphQL\n Author: John Foster (GH jf990), and others\n Description: GraphQL is a query language for APIs\n Category: web, common\n*/\n\n/** @type LanguageFn */\nfunction graphql(hljs) {\n  const regex = hljs.regex;\n  const GQL_NAME = /[_A-Za-z][_0-9A-Za-z]*/;\n  return {\n    name: \"GraphQL\",\n    aliases: [ \"gql\" ],\n    case_insensitive: true,\n    disableAutodetect: false,\n    keywords: {\n      keyword: [\n        \"query\",\n        \"mutation\",\n        \"subscription\",\n        \"type\",\n        \"input\",\n        \"schema\",\n        \"directive\",\n        \"interface\",\n        \"union\",\n        \"scalar\",\n        \"fragment\",\n        \"enum\",\n        \"on\"\n      ],\n      literal: [\n        \"true\",\n        \"false\",\n        \"null\"\n      ]\n    },\n    contains: [\n      hljs.HASH_COMMENT_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.NUMBER_MODE,\n      {\n        scope: \"punctuation\",\n        match: /[.]{3}/,\n        relevance: 0\n      },\n      {\n        scope: \"punctuation\",\n        begin: /[\\!\\(\\)\\:\\=\\[\\]\\{\\|\\}]{1}/,\n        relevance: 0\n      },\n      {\n        scope: \"variable\",\n        begin: /\\$/,\n        end: /\\W/,\n        excludeEnd: true,\n        relevance: 0\n      },\n      {\n        scope: \"meta\",\n        match: /@\\w+/,\n        excludeEnd: true\n      },\n      {\n        scope: \"symbol\",\n        begin: regex.concat(GQL_NAME, regex.lookahead(/\\s*:/)),\n        relevance: 0\n      }\n    ],\n    illegal: [\n      /[;<']/,\n      /BEGIN/\n    ]\n  };\n}\n\nmodule.exports = graphql;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["case_insensitive","begin","aliases","contains","relevance","name","keyword","scope","keywords","match","excludeEnd","illegal","literal","end","disableAutodetect"]],"~:compiled-at",1676671710196,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$highlight_DOT_js$lib$languages$graphql.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,0DAAA,CAA+E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CA8EvHD,MAAOC,CAAAA,OAAP,CArEAC,QAAgB,CAACC,IAAD,CAAO,CACrB,MAAMC,MAAQD,IAAKC,CAAAA,KAEnB,OAAO,CACLC,KAAM,SADD,CAELC,QAAS,CAAE,KAAF,CAFJ,CAGLC,iBAAkB,CAAA,CAHb,CAILC,kBAAmB,CAAA,CAJd,CAKLC,SAAU,CACRC,QAAS,iGAAA,CAAA,KAAA,CAAA,GAAA,CADD,CAgBRC,QAAS,CACP,MADO,CAEP,OAFO,CAGP,MAHO,CAhBD,CALL,CA2BLC,SAAU,CACRT,IAAKU,CAAAA,iBADG,CAERV,IAAKW,CAAAA,iBAFG,CAGRX,IAAKY,CAAAA,WAHG,CAIR,CACEC,MAAO,aADT,CAEEC,MAAO,QAFT;AAGEC,UAAW,CAHb,CAJQ,CASR,CACEF,MAAO,aADT,CAEEG,MAAO,wBAFT,CAGED,UAAW,CAHb,CATQ,CAcR,CACEF,MAAO,UADT,CAEEG,MAAO,IAFT,CAGEC,IAAK,IAHP,CAIEC,WAAY,CAAA,CAJd,CAKEH,UAAW,CALb,CAdQ,CAqBR,CACEF,MAAO,MADT,CAEEC,MAAO,MAFT,CAGEI,WAAY,CAAA,CAHd,CArBQ,CA0BR,CACEL,MAAO,QADT,CAEEG,MAAOf,KAAMkB,CAAAA,MAAN,CAxDIC,wBAwDJ,CAAuBnB,KAAMoB,CAAAA,SAAN,CAAgB,MAAhB,CAAvB,CAFT,CAGEN,UAAW,CAHb,CA1BQ,CA3BL,CA2DLO,QAAS,CACP,OADO,CAEP,OAFO,CA3DJ,CAHc,CATgG;\",\n\"sources\":[\"node_modules/highlight_DOT_js/lib/languages/graphql.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$highlight_DOT_js$lib$languages$graphql\\\"] = function(global,require,module,exports) {\\n/*\\n Language: GraphQL\\n Author: John Foster (GH jf990), and others\\n Description: GraphQL is a query language for APIs\\n Category: web, common\\n*/\\n\\n/** @type LanguageFn */\\nfunction graphql(hljs) {\\n  const regex = hljs.regex;\\n  const GQL_NAME = /[_A-Za-z][_0-9A-Za-z]*/;\\n  return {\\n    name: \\\"GraphQL\\\",\\n    aliases: [ \\\"gql\\\" ],\\n    case_insensitive: true,\\n    disableAutodetect: false,\\n    keywords: {\\n      keyword: [\\n        \\\"query\\\",\\n        \\\"mutation\\\",\\n        \\\"subscription\\\",\\n        \\\"type\\\",\\n        \\\"input\\\",\\n        \\\"schema\\\",\\n        \\\"directive\\\",\\n        \\\"interface\\\",\\n        \\\"union\\\",\\n        \\\"scalar\\\",\\n        \\\"fragment\\\",\\n        \\\"enum\\\",\\n        \\\"on\\\"\\n      ],\\n      literal: [\\n        \\\"true\\\",\\n        \\\"false\\\",\\n        \\\"null\\\"\\n      ]\\n    },\\n    contains: [\\n      hljs.HASH_COMMENT_MODE,\\n      hljs.QUOTE_STRING_MODE,\\n      hljs.NUMBER_MODE,\\n      {\\n        scope: \\\"punctuation\\\",\\n        match: /[.]{3}/,\\n        relevance: 0\\n      },\\n      {\\n        scope: \\\"punctuation\\\",\\n        begin: /[\\\\!\\\\(\\\\)\\\\:\\\\=\\\\[\\\\]\\\\{\\\\|\\\\}]{1}/,\\n        relevance: 0\\n      },\\n      {\\n        scope: \\\"variable\\\",\\n        begin: /\\\\$/,\\n        end: /\\\\W/,\\n        excludeEnd: true,\\n        relevance: 0\\n      },\\n      {\\n        scope: \\\"meta\\\",\\n        match: /@\\\\w+/,\\n        excludeEnd: true\\n      },\\n      {\\n        scope: \\\"symbol\\\",\\n        begin: regex.concat(GQL_NAME, regex.lookahead(/\\\\s*:/)),\\n        relevance: 0\\n      }\\n    ],\\n    illegal: [\\n      /[;<']/,\\n      /BEGIN/\\n    ]\\n  };\\n}\\n\\nmodule.exports = graphql;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"graphql\",\"hljs\",\"regex\",\"name\",\"aliases\",\"case_insensitive\",\"disableAutodetect\",\"keywords\",\"keyword\",\"literal\",\"contains\",\"HASH_COMMENT_MODE\",\"QUOTE_STRING_MODE\",\"NUMBER_MODE\",\"scope\",\"match\",\"relevance\",\"begin\",\"end\",\"excludeEnd\",\"concat\",\"GQL_NAME\",\"lookahead\",\"illegal\"]\n}\n"]