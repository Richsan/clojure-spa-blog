["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/armasm.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$armasm=function(global,require,module,exports){function armasm(Prism){Prism.languages.armasm={comment:{pattern:/;.*/,greedy:!0},string:{pattern:/\"(?:[^\"\\r\\n]|\"\")*\"/,greedy:!0,inside:{variable:{pattern:/((?:^|[^$])(?:\\${2})*)\\$\\w+/,lookbehind:!0}}},char:{pattern:/'(?:[^'\\r\\n]{0,4}|'')'/,greedy:!0},\"version-symbol\":{pattern:/\\|[\\w@]+\\|/,greedy:!0,alias:\"property\"},boolean:/\\b(?:FALSE|TRUE)\\b/,directive:{pattern:/\\b(?:ALIAS|ALIGN|AREA|ARM|ASSERT|ATTR|CN|CODE|CODE16|CODE32|COMMON|CP|DATA|DCB|DCD|DCDO|DCDU|DCFD|DCFDU|DCI|DCQ|DCQU|DCW|DCWU|DN|ELIF|ELSE|END|ENDFUNC|ENDIF|ENDP|ENTRY|EQU|EXPORT|EXPORTAS|EXTERN|FIELD|FILL|FN|FUNCTION|GBLA|GBLL|GBLS|GET|GLOBAL|IF|IMPORT|INCBIN|INCLUDE|INFO|KEEP|LCLA|LCLL|LCLS|LTORG|MACRO|MAP|MEND|MEXIT|NOFP|OPT|PRESERVE8|PROC|QN|READONLY|RELOC|REQUIRE|REQUIRE8|RLIST|ROUT|SETA|SETL|SETS|SN|SPACE|SUBT|THUMB|THUMBX|TTL|WEND|WHILE)\\b/,\nalias:\"property\"},instruction:{pattern:/((?:^|(?:^|[^\\\\])(?:\\r\\n?|\\n))[ \\t]*(?:(?:[A-Z][A-Z0-9_]*[a-z]\\w*|[a-z]\\w*|\\d+)[ \\t]+)?)\\b[A-Z.]+\\b/,lookbehind:!0,alias:\"keyword\"},variable:/\\$\\w+/,number:/(?:\\b[2-9]_\\d+|(?:\\b\\d+(?:\\.\\d+)?|\\B\\.\\d+)(?:e-?\\d+)?|\\b0(?:[fd]_|x)[0-9a-f]+|&[0-9a-f]+)\\b/i,register:{pattern:/\\b(?:r\\d|lr)\\b/,alias:\"symbol\"},operator:/<>|<<|>>|&&|\\|\\||[=!<>/]=?|[+\\-*%#?&|^]|:[A-Z]+:/,punctuation:/[()[\\],]/};Prism.languages[\"arm-asm\"]=Prism.languages.armasm}Object.defineProperty(exports,\n\"__esModule\",{value:!0});exports.default=armasm;armasm.displayName=\"armasm\";armasm.aliases=[\"arm-asm\"]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$armasm\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = armasm;\n// @ts-nocheck\narmasm.displayName = 'armasm';\narmasm.aliases = ['arm-asm'];\n/** @type {import('../core.js').Syntax} */\n\nfunction armasm(Prism) {\n  Prism.languages.armasm = {\n    comment: {\n      pattern: /;.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:[^\"\\r\\n]|\"\")*\"/,\n      greedy: true,\n      inside: {\n        variable: {\n          pattern: /((?:^|[^$])(?:\\${2})*)\\$\\w+/,\n          lookbehind: true\n        }\n      }\n    },\n    char: {\n      pattern: /'(?:[^'\\r\\n]{0,4}|'')'/,\n      greedy: true\n    },\n    'version-symbol': {\n      pattern: /\\|[\\w@]+\\|/,\n      greedy: true,\n      alias: 'property'\n    },\n    boolean: /\\b(?:FALSE|TRUE)\\b/,\n    directive: {\n      pattern: /\\b(?:ALIAS|ALIGN|AREA|ARM|ASSERT|ATTR|CN|CODE|CODE16|CODE32|COMMON|CP|DATA|DCB|DCD|DCDO|DCDU|DCFD|DCFDU|DCI|DCQ|DCQU|DCW|DCWU|DN|ELIF|ELSE|END|ENDFUNC|ENDIF|ENDP|ENTRY|EQU|EXPORT|EXPORTAS|EXTERN|FIELD|FILL|FN|FUNCTION|GBLA|GBLL|GBLS|GET|GLOBAL|IF|IMPORT|INCBIN|INCLUDE|INFO|KEEP|LCLA|LCLL|LCLS|LTORG|MACRO|MAP|MEND|MEXIT|NOFP|OPT|PRESERVE8|PROC|QN|READONLY|RELOC|REQUIRE|REQUIRE8|RLIST|ROUT|SETA|SETL|SETS|SN|SPACE|SUBT|THUMB|THUMBX|TTL|WEND|WHILE)\\b/,\n      alias: 'property'\n    },\n    instruction: {\n      pattern: /((?:^|(?:^|[^\\\\])(?:\\r\\n?|\\n))[ \\t]*(?:(?:[A-Z][A-Z0-9_]*[a-z]\\w*|[a-z]\\w*|\\d+)[ \\t]+)?)\\b[A-Z.]+\\b/,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    variable: /\\$\\w+/,\n    number: /(?:\\b[2-9]_\\d+|(?:\\b\\d+(?:\\.\\d+)?|\\B\\.\\d+)(?:e-?\\d+)?|\\b0(?:[fd]_|x)[0-9a-f]+|&[0-9a-f]+)\\b/i,\n    register: {\n      pattern: /\\b(?:r\\d|lr)\\b/,\n      alias: 'symbol'\n    },\n    operator: /<>|<<|>>|&&|\\|\\||[=!<>/]=?|[+\\-*%#?&|^]|:[A-Z]+:/,\n    punctuation: /[()[\\],]/\n  };\n  Prism.languages['arm-asm'] = Prism.languages.armasm;\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["boolean","punctuation","string","aliases","instruction","directive","operator","displayName","__esModule","lookbehind","value","char","variable","number","armasm","greedy","register","pattern","inside","alias","comment","default"]],"~:compiled-at",1676841365389,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$armasm.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,CAAA,yCAAA,CAA8D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAYtGC,QAASA,OAAM,CAACC,KAAD,CAAQ,CACrBA,KAAMC,CAAAA,SAAUF,CAAAA,MAAhB,CAAyB,CACvBG,QAAS,CACPC,QAAS,KADF,CAEPC,OAAQ,CAAA,CAFD,CADc,CAKvBC,OAAQ,CACNF,QAAS,oBADH,CAENC,OAAQ,CAAA,CAFF,CAGNE,OAAQ,CACNC,SAAU,CACRJ,QAAS,6BADD,CAERK,WAAY,CAAA,CAFJ,CADJ,CAHF,CALe,CAevBC,KAAM,CACJN,QAAS,wBADL,CAEJC,OAAQ,CAAA,CAFJ,CAfiB,CAmBvB,iBAAkB,CAChBD,QAAS,YADO,CAEhBC,OAAQ,CAAA,CAFQ,CAGhBM,MAAO,UAHS,CAnBK,CAwBvBC,QAAS,oBAxBc,CAyBvBC,UAAW,CACTT,QAAS,ocADA;AAETO,MAAO,UAFE,CAzBY,CA6BvBG,YAAa,CACXV,QAAS,qGADE,CAEXK,WAAY,CAAA,CAFD,CAGXE,MAAO,SAHI,CA7BU,CAkCvBH,SAAU,OAlCa,CAmCvBO,OAAQ,8FAnCe,CAoCvBC,SAAU,CACRZ,QAAS,gBADD,CAERO,MAAO,QAFC,CApCa,CAwCvBM,SAAU,kDAxCa,CAyCvBC,YAAa,UAzCU,CA2CzBjB,MAAMC,CAAAA,SAAN,CAAgB,SAAhB,CAAA,CAA6BD,KAAMC,CAAAA,SAAUF,CAAAA,MA5CxB,CATvBmB,MAAOC,CAAAA,cAAP,CAAsBrB,OAAtB;AAA+B,YAA/B,CAA6C,CAC3CsB,MAAO,CAAA,CADoC,CAA7C,CAGAtB,QAAQuB,CAAAA,OAAR,CAAkBtB,MAElBA,OAAOuB,CAAAA,WAAP,CAAqB,QACrBvB,OAAOwB,CAAAA,OAAP,CAAiB,CAAC,SAAD,CATqF;\",\n\"sources\":[\"node_modules/refractor/lang/armasm.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$armasm\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = armasm;\\n// @ts-nocheck\\narmasm.displayName = 'armasm';\\narmasm.aliases = ['arm-asm'];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction armasm(Prism) {\\n  Prism.languages.armasm = {\\n    comment: {\\n      pattern: /;.*/,\\n      greedy: true\\n    },\\n    string: {\\n      pattern: /\\\"(?:[^\\\"\\\\r\\\\n]|\\\"\\\")*\\\"/,\\n      greedy: true,\\n      inside: {\\n        variable: {\\n          pattern: /((?:^|[^$])(?:\\\\${2})*)\\\\$\\\\w+/,\\n          lookbehind: true\\n        }\\n      }\\n    },\\n    char: {\\n      pattern: /'(?:[^'\\\\r\\\\n]{0,4}|'')'/,\\n      greedy: true\\n    },\\n    'version-symbol': {\\n      pattern: /\\\\|[\\\\w@]+\\\\|/,\\n      greedy: true,\\n      alias: 'property'\\n    },\\n    boolean: /\\\\b(?:FALSE|TRUE)\\\\b/,\\n    directive: {\\n      pattern: /\\\\b(?:ALIAS|ALIGN|AREA|ARM|ASSERT|ATTR|CN|CODE|CODE16|CODE32|COMMON|CP|DATA|DCB|DCD|DCDO|DCDU|DCFD|DCFDU|DCI|DCQ|DCQU|DCW|DCWU|DN|ELIF|ELSE|END|ENDFUNC|ENDIF|ENDP|ENTRY|EQU|EXPORT|EXPORTAS|EXTERN|FIELD|FILL|FN|FUNCTION|GBLA|GBLL|GBLS|GET|GLOBAL|IF|IMPORT|INCBIN|INCLUDE|INFO|KEEP|LCLA|LCLL|LCLS|LTORG|MACRO|MAP|MEND|MEXIT|NOFP|OPT|PRESERVE8|PROC|QN|READONLY|RELOC|REQUIRE|REQUIRE8|RLIST|ROUT|SETA|SETL|SETS|SN|SPACE|SUBT|THUMB|THUMBX|TTL|WEND|WHILE)\\\\b/,\\n      alias: 'property'\\n    },\\n    instruction: {\\n      pattern: /((?:^|(?:^|[^\\\\\\\\])(?:\\\\r\\\\n?|\\\\n))[ \\\\t]*(?:(?:[A-Z][A-Z0-9_]*[a-z]\\\\w*|[a-z]\\\\w*|\\\\d+)[ \\\\t]+)?)\\\\b[A-Z.]+\\\\b/,\\n      lookbehind: true,\\n      alias: 'keyword'\\n    },\\n    variable: /\\\\$\\\\w+/,\\n    number: /(?:\\\\b[2-9]_\\\\d+|(?:\\\\b\\\\d+(?:\\\\.\\\\d+)?|\\\\B\\\\.\\\\d+)(?:e-?\\\\d+)?|\\\\b0(?:[fd]_|x)[0-9a-f]+|&[0-9a-f]+)\\\\b/i,\\n    register: {\\n      pattern: /\\\\b(?:r\\\\d|lr)\\\\b/,\\n      alias: 'symbol'\\n    },\\n    operator: /<>|<<|>>|&&|\\\\|\\\\||[=!<>/]=?|[+\\\\-*%#?&|^]|:[A-Z]+:/,\\n    punctuation: /[()[\\\\],]/\\n  };\\n  Prism.languages['arm-asm'] = Prism.languages.armasm;\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"armasm\",\"Prism\",\"languages\",\"comment\",\"pattern\",\"greedy\",\"string\",\"inside\",\"variable\",\"lookbehind\",\"char\",\"alias\",\"boolean\",\"directive\",\"instruction\",\"number\",\"register\",\"operator\",\"punctuation\",\"Object\",\"defineProperty\",\"value\",\"default\",\"displayName\",\"aliases\"]\n}\n"]