["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/stringify-entities/lib/util/to-decimal.js"],"~:js","shadow$provide.module$node_modules$stringify_entities$lib$util$to_decimal=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.toDecimal=function(code,next,omit){code=\"\\x26#\"+String(code);return omit&&next&&!/\\d/.test(String.fromCharCode(next))?code:code+\";\"}}","~:source","shadow$provide[\"module$node_modules$stringify_entities$lib$util$to_decimal\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toDecimal = toDecimal;\n\n/**\n * Configurable ways to encode characters as decimal references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @returns {string}\n */\nfunction toDecimal(code, next, omit) {\n  const value = '&#' + String(code);\n  return omit && next && !/\\d/.test(String.fromCharCode(next)) ? value : value + ';';\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["toDecimal","__esModule","value"]],"~:compiled-at",1676686799590,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$stringify_entities$lib$util$to_decimal.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAA,0DAAA,CAA+E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGvHC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,SAAR,CAUAA,QAAkB,CAACC,IAAD,CAAOC,IAAP,CAAaC,IAAb,CAAmB,CAC7BJ,IAAAA,CAAQ,OAARA,CAAeK,MAAA,CAAOH,IAAP,CACrB,OAAOE,KAAA,EAAQD,IAAR,EAAgB,CAAC,IAAKG,CAAAA,IAAL,CAAUD,MAAOE,CAAAA,YAAP,CAAoBJ,IAApB,CAAV,CAAjB,CAAwDH,IAAxD,CAAgEA,IAAhE,CAAwE,GAF5C,CAhBkF;\",\n\"sources\":[\"node_modules/stringify-entities/lib/util/to-decimal.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$stringify_entities$lib$util$to_decimal\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.toDecimal = toDecimal;\\n\\n/**\\n * Configurable ways to encode characters as decimal references.\\n *\\n * @param {number} code\\n * @param {number} next\\n * @param {boolean|undefined} omit\\n * @returns {string}\\n */\\nfunction toDecimal(code, next, omit) {\\n  const value = '&#' + String(code);\\n  return omit && next && !/\\\\d/.test(String.fromCharCode(next)) ? value : value + ';';\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"toDecimal\",\"code\",\"next\",\"omit\",\"String\",\"test\",\"fromCharCode\"]\n}\n"]