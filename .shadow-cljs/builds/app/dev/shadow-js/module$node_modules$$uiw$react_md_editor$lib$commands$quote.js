["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@uiw/react-md-editor/lib/commands/quote.js"],"~:js","shadow$provide.module$node_modules$$uiw$react_md_editor$lib$commands$quote=function(global,require,module,exports){global=require(\"module$node_modules$$babel$runtime$helpers$interopRequireWildcard\")[\"default\"];Object.defineProperty(exports,\"__esModule\",{value:!0});exports.quote=void 0;global(require(\"module$node_modules$react$index\"));var _markdownUtils=require(\"module$node_modules$$uiw$react_md_editor$lib$utils$markdownUtils\");require=require(\"module$node_modules$react$jsx_runtime\");require={name:\"quote\",\nkeyCommand:\"quote\",shortcuts:\"ctrlcmd+q\",buttonProps:{\"aria-label\":\"Insert a quote (ctrl + q)\",title:\"Insert a quote (ctrl + q)\"},icon:(0,require.jsx)(\"svg\",{width:\"12\",height:\"12\",viewBox:\"0 0 520 520\",children:(0,require.jsx)(\"path\",{fill:\"currentColor\",d:\"M520,95.75 L520,225.75 C520,364.908906 457.127578,437.050625 325.040469,472.443125 C309.577578,476.586875 294.396016,464.889922 294.396016,448.881641 L294.396016,414.457031 C294.396016,404.242891 300.721328,395.025078 310.328125,391.554687 C377.356328,367.342187 414.375,349.711094 414.375,274.5 L341.25,274.5 C314.325781,274.5 292.5,252.674219 292.5,225.75 L292.5,95.75 C292.5,68.8257812 314.325781,47 341.25,47 L471.25,47 C498.174219,47 520,68.8257812 520,95.75 Z M178.75,47 L48.75,47 C21.8257813,47 0,68.8257812 0,95.75 L0,225.75 C0,252.674219 21.8257813,274.5 48.75,274.5 L121.875,274.5 C121.875,349.711094 84.8563281,367.342187 17.828125,391.554687 C8.22132813,395.025078 1.89601563,404.242891 1.89601563,414.457031 L1.89601563,448.881641 C1.89601563,464.889922 17.0775781,476.586875 32.5404687,472.443125 C164.627578,437.050625 227.5,364.908906 227.5,225.75 L227.5,95.75 C227.5,68.8257812 205.674219,47 178.75,47 Z\"})}),\nexecute:function(state,api){state=(0,_markdownUtils.selectWord)({text:state.text,selection:state.selection});state=api.setSelectionRange(state);var breaksBeforeCount=(0,_markdownUtils.getBreaksNeededForEmptyLineBefore)(state.text,state.selection.start),breaksBefore=Array(breaksBeforeCount+1).join(\"\\n\"),breaksAfterCount=(0,_markdownUtils.getBreaksNeededForEmptyLineAfter)(state.text,state.selection.end);breaksAfterCount=Array(breaksAfterCount+1).join(\"\\n\");api.replaceSelection(\"\".concat(breaksBefore,\n\"\\x3e \").concat(state.selectedText).concat(breaksAfterCount));breaksBeforeCount=state.selection.start+breaksBeforeCount+2;api.setSelectionRange({start:breaksBeforeCount,end:breaksBeforeCount+state.selectedText.length})}};exports.quote=require}","~:source","shadow$provide[\"module$node_modules$$uiw$react_md_editor$lib$commands$quote\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\")[\"default\"];\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.quote = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _markdownUtils = require(\"../utils/markdownUtils\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar quote = {\n  name: 'quote',\n  keyCommand: 'quote',\n  shortcuts: 'ctrlcmd+q',\n  buttonProps: {\n    'aria-label': 'Insert a quote (ctrl + q)',\n    title: 'Insert a quote (ctrl + q)'\n  },\n  icon: /*#__PURE__*/(0, _jsxRuntime.jsx)(\"svg\", {\n    width: \"12\",\n    height: \"12\",\n    viewBox: \"0 0 520 520\",\n    children: /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n      fill: \"currentColor\",\n      d: \"M520,95.75 L520,225.75 C520,364.908906 457.127578,437.050625 325.040469,472.443125 C309.577578,476.586875 294.396016,464.889922 294.396016,448.881641 L294.396016,414.457031 C294.396016,404.242891 300.721328,395.025078 310.328125,391.554687 C377.356328,367.342187 414.375,349.711094 414.375,274.5 L341.25,274.5 C314.325781,274.5 292.5,252.674219 292.5,225.75 L292.5,95.75 C292.5,68.8257812 314.325781,47 341.25,47 L471.25,47 C498.174219,47 520,68.8257812 520,95.75 Z M178.75,47 L48.75,47 C21.8257813,47 0,68.8257812 0,95.75 L0,225.75 C0,252.674219 21.8257813,274.5 48.75,274.5 L121.875,274.5 C121.875,349.711094 84.8563281,367.342187 17.828125,391.554687 C8.22132813,395.025078 1.89601563,404.242891 1.89601563,414.457031 L1.89601563,448.881641 C1.89601563,464.889922 17.0775781,476.586875 32.5404687,472.443125 C164.627578,437.050625 227.5,364.908906 227.5,225.75 L227.5,95.75 C227.5,68.8257812 205.674219,47 178.75,47 Z\"\n    })\n  }),\n  execute: function execute(state, api) {\n    // Adjust the selection to encompass the whole word if the caret is inside one\n    var newSelectionRange = (0, _markdownUtils.selectWord)({\n      text: state.text,\n      selection: state.selection\n    });\n    var state1 = api.setSelectionRange(newSelectionRange);\n    var breaksBeforeCount = (0, _markdownUtils.getBreaksNeededForEmptyLineBefore)(state1.text, state1.selection.start);\n    var breaksBefore = Array(breaksBeforeCount + 1).join('\\n');\n    var breaksAfterCount = (0, _markdownUtils.getBreaksNeededForEmptyLineAfter)(state1.text, state1.selection.end);\n    var breaksAfter = Array(breaksAfterCount + 1).join('\\n');\n\n    // Replaces the current selection with the quote mark up\n    api.replaceSelection(\"\".concat(breaksBefore, \"> \").concat(state1.selectedText).concat(breaksAfter));\n    var selectionStart = state1.selection.start + breaksBeforeCount + 2;\n    var selectionEnd = selectionStart + state1.selectedText.length;\n    api.setSelectionRange({\n      start: selectionStart,\n      end: selectionEnd\n    });\n  }\n};\nexports.quote = quote;\n//# sourceMappingURL=quote.js.map\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$react$jsx_runtime","~$module$node_modules$$uiw$react_md_editor$lib$utils$markdownUtils","~$module$node_modules$$babel$runtime$helpers$interopRequireWildcard","~$module$node_modules$react$index","~$shadow.js"]],"~:properties",["^5",["d","width","height","shortcuts","children","__esModule","viewBox","name","value","keyCommand","start","text","fill","title","execute","quote","selection","buttonProps","end","icon"]],"~:compiled-at",1676841365515,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$uiw$react_md_editor$lib$commands$quote.js\",\n\"lineCount\":4,\n\"mappings\":\"AAAAA,cAAA,CAAA,2DAAA,CAAgF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGpHC,MAAAA,CAA0BH,OAAA,CAAQ,mEAAR,CAAA,CAAyD,SAAzD,CAC9BI,OAAOC,CAAAA,cAAP,CAAsBH,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CI,MAAO,CAAA,CADoC,CAA7C,CAGAJ,QAAQK,CAAAA,KAAR,CAAgB,IAAK,EACTJ,OAAA,CAAwBH,OAAA,CAAQ,iCAAR,CAAxB,CACZ,KAAIQ,eAAiBR,OAAA,CAAQ,kEAAR,CACjBS,QAAAA,CAAcT,OAAA,CAAQ,uCAAR,CACdO,QAAAA,CAAQ,CACVG,KAAM,OADI;AAEVC,WAAY,OAFF,CAGVC,UAAW,WAHD,CAIVC,YAAa,CACX,aAAc,2BADH,CAEXC,MAAO,2BAFI,CAJH,CAQVC,KAAmB,GAAIN,OAAYO,CAAAA,GAAhB,EAAqB,KAArB,CAA4B,CAC7CC,MAAO,IADsC,CAE7CC,OAAQ,IAFqC,CAG7CC,QAAS,aAHoC,CAI7CC,SAAuB,GAAIX,OAAYO,CAAAA,GAAhB,EAAqB,MAArB,CAA6B,CAClDK,KAAM,cAD4C,CAElDC,EAAG,05BAF+C,CAA7B,CAJsB,CAA5B,CART;AAiBVC,QAASA,QAAgB,CAACC,KAAD,CAAQC,GAAR,CAAa,CAEhCC,KAAAA,CAAoB,GAAIlB,cAAemB,CAAAA,UAAnB,EAA+B,CACrDC,KAAMJ,KAAMI,CAAAA,IADyC,CAErDC,UAAWL,KAAMK,CAAAA,SAFoC,CAA/B,CAIpBC,MAAAA,CAASL,GAAIM,CAAAA,iBAAJ,CAAsBL,KAAtB,CACb,KAAIM,kBAAoB,GAAIxB,cAAeyB,CAAAA,iCAAnB,EAAsDH,KAAOF,CAAAA,IAA7D,CAAmEE,KAAOD,CAAAA,SAAUK,CAAAA,KAApF,CAAxB,CACIC,aAAeC,KAAA,CAAMJ,iBAAN,CAA0B,CAA1B,CAA6BK,CAAAA,IAA7B,CAAkC,IAAlC,CADnB,CAEIC,iBAAmB,GAAI9B,cAAe+B,CAAAA,gCAAnB,EAAqDT,KAAOF,CAAAA,IAA5D,CAAkEE,KAAOD,CAAAA,SAAUW,CAAAA,GAAnF,CACnBC,iBAAAA,CAAcL,KAAA,CAAME,gBAAN,CAAyB,CAAzB,CAA4BD,CAAAA,IAA5B,CAAiC,IAAjC,CAGlBZ,IAAIiB,CAAAA,gBAAJ,CAAqB,EAAGC,CAAAA,MAAH,CAAUR,YAAV;AAAwB,OAAxB,CAA8BQ,CAAAA,MAA9B,CAAqCb,KAAOc,CAAAA,YAA5C,CAA0DD,CAAAA,MAA1D,CAAiEF,gBAAjE,CAArB,CACII,kBAAAA,CAAiBf,KAAOD,CAAAA,SAAUK,CAAAA,KAAlCW,CAA0Cb,iBAA1Ca,CAA8D,CAElEpB,IAAIM,CAAAA,iBAAJ,CAAsB,CACpBG,MAAOW,iBADa,CAEpBL,IAHiBK,iBAGjBL,CAHkCV,KAAOc,CAAAA,YAAaE,CAAAA,MAClC,CAAtB,CAhBoC,CAjB5B,CAuCZ5C,QAAQK,CAAAA,KAAR,CAAgBA,OAlDwG;\",\n\"sources\":[\"node_modules/@uiw/react-md-editor/lib/commands/quote.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$uiw$react_md_editor$lib$commands$quote\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nvar _interopRequireWildcard = require(\\\"@babel/runtime/helpers/interopRequireWildcard\\\")[\\\"default\\\"];\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.quote = void 0;\\nvar React = _interopRequireWildcard(require(\\\"react\\\"));\\nvar _markdownUtils = require(\\\"../utils/markdownUtils\\\");\\nvar _jsxRuntime = require(\\\"react/jsx-runtime\\\");\\nvar quote = {\\n  name: 'quote',\\n  keyCommand: 'quote',\\n  shortcuts: 'ctrlcmd+q',\\n  buttonProps: {\\n    'aria-label': 'Insert a quote (ctrl + q)',\\n    title: 'Insert a quote (ctrl + q)'\\n  },\\n  icon: /*#__PURE__*/(0, _jsxRuntime.jsx)(\\\"svg\\\", {\\n    width: \\\"12\\\",\\n    height: \\\"12\\\",\\n    viewBox: \\\"0 0 520 520\\\",\\n    children: /*#__PURE__*/(0, _jsxRuntime.jsx)(\\\"path\\\", {\\n      fill: \\\"currentColor\\\",\\n      d: \\\"M520,95.75 L520,225.75 C520,364.908906 457.127578,437.050625 325.040469,472.443125 C309.577578,476.586875 294.396016,464.889922 294.396016,448.881641 L294.396016,414.457031 C294.396016,404.242891 300.721328,395.025078 310.328125,391.554687 C377.356328,367.342187 414.375,349.711094 414.375,274.5 L341.25,274.5 C314.325781,274.5 292.5,252.674219 292.5,225.75 L292.5,95.75 C292.5,68.8257812 314.325781,47 341.25,47 L471.25,47 C498.174219,47 520,68.8257812 520,95.75 Z M178.75,47 L48.75,47 C21.8257813,47 0,68.8257812 0,95.75 L0,225.75 C0,252.674219 21.8257813,274.5 48.75,274.5 L121.875,274.5 C121.875,349.711094 84.8563281,367.342187 17.828125,391.554687 C8.22132813,395.025078 1.89601563,404.242891 1.89601563,414.457031 L1.89601563,448.881641 C1.89601563,464.889922 17.0775781,476.586875 32.5404687,472.443125 C164.627578,437.050625 227.5,364.908906 227.5,225.75 L227.5,95.75 C227.5,68.8257812 205.674219,47 178.75,47 Z\\\"\\n    })\\n  }),\\n  execute: function execute(state, api) {\\n    // Adjust the selection to encompass the whole word if the caret is inside one\\n    var newSelectionRange = (0, _markdownUtils.selectWord)({\\n      text: state.text,\\n      selection: state.selection\\n    });\\n    var state1 = api.setSelectionRange(newSelectionRange);\\n    var breaksBeforeCount = (0, _markdownUtils.getBreaksNeededForEmptyLineBefore)(state1.text, state1.selection.start);\\n    var breaksBefore = Array(breaksBeforeCount + 1).join('\\\\n');\\n    var breaksAfterCount = (0, _markdownUtils.getBreaksNeededForEmptyLineAfter)(state1.text, state1.selection.end);\\n    var breaksAfter = Array(breaksAfterCount + 1).join('\\\\n');\\n\\n    // Replaces the current selection with the quote mark up\\n    api.replaceSelection(\\\"\\\".concat(breaksBefore, \\\"> \\\").concat(state1.selectedText).concat(breaksAfter));\\n    var selectionStart = state1.selection.start + breaksBeforeCount + 2;\\n    var selectionEnd = selectionStart + state1.selectedText.length;\\n    api.setSelectionRange({\\n      start: selectionStart,\\n      end: selectionEnd\\n    });\\n  }\\n};\\nexports.quote = quote;\\n//# sourceMappingURL=quote.js.map\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_interopRequireWildcard\",\"Object\",\"defineProperty\",\"value\",\"quote\",\"_markdownUtils\",\"_jsxRuntime\",\"name\",\"keyCommand\",\"shortcuts\",\"buttonProps\",\"title\",\"icon\",\"jsx\",\"width\",\"height\",\"viewBox\",\"children\",\"fill\",\"d\",\"execute\",\"state\",\"api\",\"newSelectionRange\",\"selectWord\",\"text\",\"selection\",\"state1\",\"setSelectionRange\",\"breaksBeforeCount\",\"getBreaksNeededForEmptyLineBefore\",\"start\",\"breaksBefore\",\"Array\",\"join\",\"breaksAfterCount\",\"getBreaksNeededForEmptyLineAfter\",\"end\",\"breaksAfter\",\"replaceSelection\",\"concat\",\"selectedText\",\"selectionStart\",\"length\"]\n}\n"]