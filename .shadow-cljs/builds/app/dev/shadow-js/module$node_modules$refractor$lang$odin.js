["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/odin.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$odin=function(global,require,module,exports){function odin(Prism){var escapes=/\\\\(?:[\"'\\\\abefnrtv]|0[0-7]{2}|U[\\dA-Fa-f]{6}|u[\\dA-Fa-f]{4}|x[\\dA-Fa-f]{2})/;Prism.languages.odin={comment:[{pattern:/\\/\\*(?:[^/*]|\\/(?!\\*)|\\*(?!\\/)|\\/\\*(?:\\*(?!\\/)|[^*])*(?:\\*\\/|$))*(?:\\*\\/|$)/,greedy:!0},{pattern:/#![^\\n\\r]*/,greedy:!0},{pattern:/\\/\\/[^\\n\\r]*/,greedy:!0}],char:{pattern:/'(?:\\\\(?:.|[0Uux][0-9A-Fa-f]{1,6})|[^\\n\\r'\\\\])'/,greedy:!0,inside:{symbol:escapes}},\nstring:[{pattern:/`[^`]*`/,greedy:!0},{pattern:/\"(?:\\\\.|[^\\n\\r\"\\\\])*\"/,greedy:!0,inside:{symbol:escapes}}],directive:{pattern:/#\\w+/,alias:\"property\"},number:/\\b0(?:b[01_]+|d[\\d_]+|h_*(?:(?:(?:[\\dA-Fa-f]_*){8}){1,2}|(?:[\\dA-Fa-f]_*){4})|o[0-7_]+|x[\\dA-F_a-f]+|z[\\dAB_ab]+)\\b|(?:\\b\\d+(?:\\.(?!\\.)\\d*)?|\\B\\.\\d+)(?:[Ee][+-]?\\d*)?[ijk]?(?!\\w)/,discard:{pattern:/\\b_\\b/,alias:\"keyword\"},\"procedure-definition\":{pattern:/\\b\\w+(?=[ \\t]*(?::\\s*){2}proc\\b)/,alias:\"function\"},keyword:/\\b(?:asm|auto_cast|bit_set|break|case|cast|context|continue|defer|distinct|do|dynamic|else|enum|fallthrough|for|foreign|if|import|in|map|matrix|not_in|or_else|or_return|package|proc|return|struct|switch|transmute|typeid|union|using|when|where)\\b/,\n\"procedure-name\":{pattern:/\\b\\w+(?=[ \\t]*\\()/,alias:\"function\"},boolean:/\\b(?:false|nil|true)\\b/,\"constant-parameter-sign\":{pattern:/\\$/,alias:\"important\"},undefined:{pattern:/---/,alias:\"operator\"},arrow:{pattern:/->/,alias:\"punctuation\"},operator:/\\+\\+|--|\\.\\.[<=]?|(?:&~|[-!*+/=~]|[%&<>|]{1,2})=?|[?^]/,punctuation:/[(),.:;@\\[\\]{}]/}}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=odin;odin.displayName=\"odin\";odin.aliases=[]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$odin\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = odin;\n// @ts-nocheck\nodin.displayName = 'odin';\nodin.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nfunction odin(Prism) {\n  ;\n\n  (function (Prism) {\n    var escapes = /\\\\(?:[\"'\\\\abefnrtv]|0[0-7]{2}|U[\\dA-Fa-f]{6}|u[\\dA-Fa-f]{4}|x[\\dA-Fa-f]{2})/;\n    Prism.languages.odin = {\n      /**\n       * The current implementation supports only 1 level of nesting.\n       *\n       * @author Michael Schmidt\n       * @author edukisto\n       */\n      comment: [{\n        pattern: /\\/\\*(?:[^/*]|\\/(?!\\*)|\\*(?!\\/)|\\/\\*(?:\\*(?!\\/)|[^*])*(?:\\*\\/|$))*(?:\\*\\/|$)/,\n        greedy: true\n      }, {\n        pattern: /#![^\\n\\r]*/,\n        greedy: true\n      }, {\n        pattern: /\\/\\/[^\\n\\r]*/,\n        greedy: true\n      }],\n\n      /**\n       * Should be found before strings because of '\"'\"- and '`'`-like sequences.\n       */\n      char: {\n        pattern: /'(?:\\\\(?:.|[0Uux][0-9A-Fa-f]{1,6})|[^\\n\\r'\\\\])'/,\n        greedy: true,\n        inside: {\n          symbol: escapes\n        }\n      },\n      string: [{\n        pattern: /`[^`]*`/,\n        greedy: true\n      }, {\n        pattern: /\"(?:\\\\.|[^\\n\\r\"\\\\])*\"/,\n        greedy: true,\n        inside: {\n          symbol: escapes\n        }\n      }],\n      directive: {\n        pattern: /#\\w+/,\n        alias: 'property'\n      },\n      number: /\\b0(?:b[01_]+|d[\\d_]+|h_*(?:(?:(?:[\\dA-Fa-f]_*){8}){1,2}|(?:[\\dA-Fa-f]_*){4})|o[0-7_]+|x[\\dA-F_a-f]+|z[\\dAB_ab]+)\\b|(?:\\b\\d+(?:\\.(?!\\.)\\d*)?|\\B\\.\\d+)(?:[Ee][+-]?\\d*)?[ijk]?(?!\\w)/,\n      discard: {\n        pattern: /\\b_\\b/,\n        alias: 'keyword'\n      },\n      'procedure-definition': {\n        pattern: /\\b\\w+(?=[ \\t]*(?::\\s*){2}proc\\b)/,\n        alias: 'function'\n      },\n      keyword: /\\b(?:asm|auto_cast|bit_set|break|case|cast|context|continue|defer|distinct|do|dynamic|else|enum|fallthrough|for|foreign|if|import|in|map|matrix|not_in|or_else|or_return|package|proc|return|struct|switch|transmute|typeid|union|using|when|where)\\b/,\n\n      /**\n       * false, nil, true can be used as procedure names. \"_\" and keywords can't.\n       */\n      'procedure-name': {\n        pattern: /\\b\\w+(?=[ \\t]*\\()/,\n        alias: 'function'\n      },\n      boolean: /\\b(?:false|nil|true)\\b/,\n      'constant-parameter-sign': {\n        pattern: /\\$/,\n        alias: 'important'\n      },\n      undefined: {\n        pattern: /---/,\n        alias: 'operator'\n      },\n      arrow: {\n        pattern: /->/,\n        alias: 'punctuation'\n      },\n      operator: /\\+\\+|--|\\.\\.[<=]?|(?:&~|[-!*+/=~]|[%&<>|]{1,2})=?|[?^]/,\n      punctuation: /[(),.:;@\\[\\]{}]/\n    };\n  })(Prism);\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["boolean","punctuation","string","aliases","arrow","directive","operator","displayName","discard","__esModule","value","char","keyword","number","greedy","symbol","pattern","undefined","inside","alias","odin","comment","default"]],"~:compiled-at",1676841365442,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$odin.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,CAAA,uCAAA,CAA4D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAYpGC,QAASA,KAAI,CAACC,KAAD,CAAQ,CAIjB,IAAIC,QAAU,6EA6EbD,MA5EKE,CAAAA,SAAUH,CAAAA,IAAhB,CAAuB,CAOrBI,QAAS,CAAC,CACRC,QAAS,6EADD,CAERC,OAAQ,CAAA,CAFA,CAAD,CAGN,CACDD,QAAS,YADR,CAEDC,OAAQ,CAAA,CAFP,CAHM,CAMN,CACDD,QAAS,cADR,CAEDC,OAAQ,CAAA,CAFP,CANM,CAPY,CAqBrBC,KAAM,CACJF,QAAS,iDADL,CAEJC,OAAQ,CAAA,CAFJ,CAGJE,OAAQ,CACNC,OAAQP,OADF,CAHJ,CArBe;AA4BrBQ,OAAQ,CAAC,CACPL,QAAS,SADF,CAEPC,OAAQ,CAAA,CAFD,CAAD,CAGL,CACDD,QAAS,uBADR,CAEDC,OAAQ,CAAA,CAFP,CAGDE,OAAQ,CACNC,OAAQP,OADF,CAHP,CAHK,CA5Ba,CAsCrBS,UAAW,CACTN,QAAS,MADA,CAETO,MAAO,UAFE,CAtCU,CA0CrBC,OAAQ,oLA1Ca,CA2CrBC,QAAS,CACPT,QAAS,OADF,CAEPO,MAAO,SAFA,CA3CY,CA+CrB,uBAAwB,CACtBP,QAAS,kCADa,CAEtBO,MAAO,UAFe,CA/CH,CAmDrBG,QAAS,uPAnDY;AAwDrB,iBAAkB,CAChBV,QAAS,mBADO,CAEhBO,MAAO,UAFS,CAxDG,CA4DrBI,QAAS,wBA5DY,CA6DrB,0BAA2B,CACzBX,QAAS,IADgB,CAEzBO,MAAO,WAFkB,CA7DN,CAiErBK,UAAW,CACTZ,QAAS,KADA,CAETO,MAAO,UAFE,CAjEU,CAqErBM,MAAO,CACLb,QAAS,IADJ,CAELO,MAAO,aAFF,CArEc,CAyErBO,SAAU,wDAzEW,CA0ErBC,YAAa,iBA1EQ,CALN,CATrBC,MAAOC,CAAAA,cAAP,CAAsBvB,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CwB,MAAO,CAAA,CADoC,CAA7C,CAGAxB,QAAQyB,CAAAA,OAAR,CAAkBxB,IAElBA,KAAKyB,CAAAA,WAAL,CAAmB,MACnBzB,KAAK0B,CAAAA,OAAL,CAAe,EATqF;\",\n\"sources\":[\"node_modules/refractor/lang/odin.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$odin\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = odin;\\n// @ts-nocheck\\nodin.displayName = 'odin';\\nodin.aliases = [];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction odin(Prism) {\\n  ;\\n\\n  (function (Prism) {\\n    var escapes = /\\\\\\\\(?:[\\\"'\\\\\\\\abefnrtv]|0[0-7]{2}|U[\\\\dA-Fa-f]{6}|u[\\\\dA-Fa-f]{4}|x[\\\\dA-Fa-f]{2})/;\\n    Prism.languages.odin = {\\n      /**\\n       * The current implementation supports only 1 level of nesting.\\n       *\\n       * @author Michael Schmidt\\n       * @author edukisto\\n       */\\n      comment: [{\\n        pattern: /\\\\/\\\\*(?:[^/*]|\\\\/(?!\\\\*)|\\\\*(?!\\\\/)|\\\\/\\\\*(?:\\\\*(?!\\\\/)|[^*])*(?:\\\\*\\\\/|$))*(?:\\\\*\\\\/|$)/,\\n        greedy: true\\n      }, {\\n        pattern: /#![^\\\\n\\\\r]*/,\\n        greedy: true\\n      }, {\\n        pattern: /\\\\/\\\\/[^\\\\n\\\\r]*/,\\n        greedy: true\\n      }],\\n\\n      /**\\n       * Should be found before strings because of '\\\"'\\\"- and '`'`-like sequences.\\n       */\\n      char: {\\n        pattern: /'(?:\\\\\\\\(?:.|[0Uux][0-9A-Fa-f]{1,6})|[^\\\\n\\\\r'\\\\\\\\])'/,\\n        greedy: true,\\n        inside: {\\n          symbol: escapes\\n        }\\n      },\\n      string: [{\\n        pattern: /`[^`]*`/,\\n        greedy: true\\n      }, {\\n        pattern: /\\\"(?:\\\\\\\\.|[^\\\\n\\\\r\\\"\\\\\\\\])*\\\"/,\\n        greedy: true,\\n        inside: {\\n          symbol: escapes\\n        }\\n      }],\\n      directive: {\\n        pattern: /#\\\\w+/,\\n        alias: 'property'\\n      },\\n      number: /\\\\b0(?:b[01_]+|d[\\\\d_]+|h_*(?:(?:(?:[\\\\dA-Fa-f]_*){8}){1,2}|(?:[\\\\dA-Fa-f]_*){4})|o[0-7_]+|x[\\\\dA-F_a-f]+|z[\\\\dAB_ab]+)\\\\b|(?:\\\\b\\\\d+(?:\\\\.(?!\\\\.)\\\\d*)?|\\\\B\\\\.\\\\d+)(?:[Ee][+-]?\\\\d*)?[ijk]?(?!\\\\w)/,\\n      discard: {\\n        pattern: /\\\\b_\\\\b/,\\n        alias: 'keyword'\\n      },\\n      'procedure-definition': {\\n        pattern: /\\\\b\\\\w+(?=[ \\\\t]*(?::\\\\s*){2}proc\\\\b)/,\\n        alias: 'function'\\n      },\\n      keyword: /\\\\b(?:asm|auto_cast|bit_set|break|case|cast|context|continue|defer|distinct|do|dynamic|else|enum|fallthrough|for|foreign|if|import|in|map|matrix|not_in|or_else|or_return|package|proc|return|struct|switch|transmute|typeid|union|using|when|where)\\\\b/,\\n\\n      /**\\n       * false, nil, true can be used as procedure names. \\\"_\\\" and keywords can't.\\n       */\\n      'procedure-name': {\\n        pattern: /\\\\b\\\\w+(?=[ \\\\t]*\\\\()/,\\n        alias: 'function'\\n      },\\n      boolean: /\\\\b(?:false|nil|true)\\\\b/,\\n      'constant-parameter-sign': {\\n        pattern: /\\\\$/,\\n        alias: 'important'\\n      },\\n      undefined: {\\n        pattern: /---/,\\n        alias: 'operator'\\n      },\\n      arrow: {\\n        pattern: /->/,\\n        alias: 'punctuation'\\n      },\\n      operator: /\\\\+\\\\+|--|\\\\.\\\\.[<=]?|(?:&~|[-!*+/=~]|[%&<>|]{1,2})=?|[?^]/,\\n      punctuation: /[(),.:;@\\\\[\\\\]{}]/\\n    };\\n  })(Prism);\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"odin\",\"Prism\",\"escapes\",\"languages\",\"comment\",\"pattern\",\"greedy\",\"char\",\"inside\",\"symbol\",\"string\",\"directive\",\"alias\",\"number\",\"discard\",\"keyword\",\"boolean\",\"undefined\",\"arrow\",\"operator\",\"punctuation\",\"Object\",\"defineProperty\",\"value\",\"default\",\"displayName\",\"aliases\"]\n}\n"]