["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@uiw/react-md-editor/lib/commands/title1.js"],"~:js","shadow$provide.module$node_modules$$uiw$react_md_editor$lib$commands$title1=function(global,require,module,exports){global=require(\"module$node_modules$$babel$runtime$helpers$interopRequireDefault\")[\"default\"];Object.defineProperty(exports,\"__esModule\",{value:!0});exports.title1=void 0;global(require(\"module$node_modules$react$index\"));var _InsertTextAtPosition=require(\"module$node_modules$$uiw$react_md_editor$lib$utils$InsertTextAtPosition\");require={name:\"title1\",keyCommand:\"title1\",shortcuts:\"ctrlcmd+1\",\nvalue:\"title1\",buttonProps:{\"aria-label\":\"Insert title1 (ctrl + 1)\",title:\"Insert title1 (ctrl + 1)\"},icon:(0,require(\"module$node_modules$react$jsx_runtime\").jsx)(\"div\",{style:{fontSize:18,textAlign:\"left\"},children:\"Title 1\"}),execute:function(state,api){0===state.selection.start||/\\n$/.test(state.text)?api.replaceSelection(\"# \"):(0,_InsertTextAtPosition.insertAtLineStart)(\"# \",state.selection.start,api.textArea)}};exports.title1=require}","~:source","shadow$provide[\"module$node_modules$$uiw$react_md_editor$lib$commands$title1\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.title1 = void 0;\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _InsertTextAtPosition = require(\"../utils/InsertTextAtPosition\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar title1 = {\n  name: 'title1',\n  keyCommand: 'title1',\n  shortcuts: 'ctrlcmd+1',\n  value: 'title1',\n  buttonProps: {\n    'aria-label': 'Insert title1 (ctrl + 1)',\n    title: 'Insert title1 (ctrl + 1)'\n  },\n  icon: /*#__PURE__*/(0, _jsxRuntime.jsx)(\"div\", {\n    style: {\n      fontSize: 18,\n      textAlign: 'left'\n    },\n    children: \"Title 1\"\n  }),\n  execute: function execute(state, api) {\n    if (state.selection.start === 0 || /\\n$/.test(state.text)) {\n      api.replaceSelection('# ');\n    } else {\n      (0, _InsertTextAtPosition.insertAtLineStart)('# ', state.selection.start, api.textArea);\n    }\n  }\n};\nexports.title1 = title1;\n//# sourceMappingURL=title1.js.map\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$react$jsx_runtime","~$module$node_modules$$babel$runtime$helpers$interopRequireDefault","~$module$node_modules$react$index","~$module$node_modules$$uiw$react_md_editor$lib$utils$InsertTextAtPosition","~$shadow.js"]],"~:properties",["^5",["shortcuts","children","__esModule","name","style","value","keyCommand","fontSize","title","title1","execute","buttonProps","textAlign","icon"]],"~:compiled-at",1676841365516,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$uiw$react_md_editor$lib$commands$title1.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,4DAAA,CAAiF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGrHC,MAAAA,CAAyBH,OAAA,CAAQ,kEAAR,CAAA,CAAwD,SAAxD,CAC7BI,OAAOC,CAAAA,cAAP,CAAsBH,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CI,MAAO,CAAA,CADoC,CAA7C,CAGAJ,QAAQK,CAAAA,MAAR,CAAiB,IAAK,EACTJ,OAAA,CAAuBH,OAAA,CAAQ,iCAAR,CAAvB,CACb,KAAIQ,sBAAwBR,OAAA,CAAQ,yEAAR,CAExBO,QAAAA,CAAS,CACXE,KAAM,QADK,CAEXC,WAAY,QAFD,CAGXC,UAAW,WAHA;AAIXL,MAAO,QAJI,CAKXM,YAAa,CACX,aAAc,0BADH,CAEXC,MAAO,0BAFI,CALF,CASXC,KAAmB,GAVHd,OAAAe,CAAQ,uCAARA,CAUmBC,CAAAA,GAAhB,EAAqB,KAArB,CAA4B,CAC7CC,MAAO,CACLC,SAAU,EADL,CAELC,UAAW,MAFN,CADsC,CAK7CC,SAAU,SALmC,CAA5B,CATR,CAgBXC,QAASA,QAAgB,CAACC,KAAD,CAAQC,GAAR,CAAa,CACN,CAA9B,GAAID,KAAME,CAAAA,SAAUC,CAAAA,KAApB,EAAmC,KAAMC,CAAAA,IAAN,CAAWJ,KAAMK,CAAAA,IAAjB,CAAnC,CACEJ,GAAIK,CAAAA,gBAAJ,CAAqB,IAArB,CADF,CAGE,GAAIpB,qBAAsBqB,CAAAA,iBAA1B,EAA6C,IAA7C,CAAmDP,KAAME,CAAAA,SAAUC,CAAAA,KAAnE,CAA0EF,GAAIO,CAAAA,QAA9E,CAJkC,CAhB3B,CAwBb5B,QAAQK,CAAAA,MAAR,CAAiBA,OAnCwG;\",\n\"sources\":[\"node_modules/@uiw/react-md-editor/lib/commands/title1.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$uiw$react_md_editor$lib$commands$title1\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nvar _interopRequireDefault = require(\\\"@babel/runtime/helpers/interopRequireDefault\\\")[\\\"default\\\"];\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.title1 = void 0;\\nvar _react = _interopRequireDefault(require(\\\"react\\\"));\\nvar _InsertTextAtPosition = require(\\\"../utils/InsertTextAtPosition\\\");\\nvar _jsxRuntime = require(\\\"react/jsx-runtime\\\");\\nvar title1 = {\\n  name: 'title1',\\n  keyCommand: 'title1',\\n  shortcuts: 'ctrlcmd+1',\\n  value: 'title1',\\n  buttonProps: {\\n    'aria-label': 'Insert title1 (ctrl + 1)',\\n    title: 'Insert title1 (ctrl + 1)'\\n  },\\n  icon: /*#__PURE__*/(0, _jsxRuntime.jsx)(\\\"div\\\", {\\n    style: {\\n      fontSize: 18,\\n      textAlign: 'left'\\n    },\\n    children: \\\"Title 1\\\"\\n  }),\\n  execute: function execute(state, api) {\\n    if (state.selection.start === 0 || /\\\\n$/.test(state.text)) {\\n      api.replaceSelection('# ');\\n    } else {\\n      (0, _InsertTextAtPosition.insertAtLineStart)('# ', state.selection.start, api.textArea);\\n    }\\n  }\\n};\\nexports.title1 = title1;\\n//# sourceMappingURL=title1.js.map\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_interopRequireDefault\",\"Object\",\"defineProperty\",\"value\",\"title1\",\"_InsertTextAtPosition\",\"name\",\"keyCommand\",\"shortcuts\",\"buttonProps\",\"title\",\"icon\",\"_jsxRuntime\",\"jsx\",\"style\",\"fontSize\",\"textAlign\",\"children\",\"execute\",\"state\",\"api\",\"selection\",\"start\",\"test\",\"text\",\"replaceSelection\",\"insertAtLineStart\",\"textArea\"]\n}\n"]