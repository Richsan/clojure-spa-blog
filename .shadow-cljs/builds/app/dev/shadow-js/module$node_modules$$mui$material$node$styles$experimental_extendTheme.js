["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@mui/material/node/styles/experimental_extendTheme.js"],"~:js","shadow$provide.module$node_modules$$mui$material$node$styles$experimental_extendTheme=function(global,require,module,exports){function assignNode(obj,keys){keys.forEach(k=>{obj[k]||(obj[k]={})})}function setColor(obj,key,defaultValue){!obj[key]&&defaultValue&&(obj[key]=defaultValue)}function setColorChannel(obj,key){`${key}Channel`in obj||(obj[`${key}Channel`]=(0,_system.private_safeColorChannel)(obj[key],`MUI: Can't create \\`palette.${key}Channel\\` because \\`palette.${key}\\` is not one of these formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().`+\n\"\\n\"+`To suppress this warning, you need to explicitly provide the \\`palette.${key}Channel\\` as a string (in rgb format, e.g. \"12 12 12\") or undefined if you want to remove the channel token.`))}global=require(\"module$node_modules$$babel$runtime$helpers$interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:!0});exports.createGetCssVar=void 0;exports.default=function(options={},...args){var _colorSchemesInput$li,_colorSchemesInput$da,_colorSchemesInput$li2,_colorSchemesInput$li3,\n_colorSchemesInput$da2,_colorSchemesInput$da3;const {colorSchemes:colorSchemesInput={},cssVarPrefix=\"mui\"}=options;options=(0,_objectWithoutPropertiesLoose2.default)(options,_excluded);const getCssVar=createGetCssVar(cssVarPrefix),_createThemeWithoutVa=(0,_createTheme.default)((0,_extends2.default)({},options,colorSchemesInput.light&&{palette:null==(_colorSchemesInput$li=colorSchemesInput.light)?void 0:_colorSchemesInput$li.palette})),{palette:lightPalette}=_createThemeWithoutVa;_colorSchemesInput$li=\n(0,_objectWithoutPropertiesLoose2.default)(_createThemeWithoutVa,_excluded2);const {palette:darkPalette}=(0,_createTheme.default)({palette:(0,_extends2.default)({mode:\"dark\"},null==(_colorSchemesInput$da=colorSchemesInput.dark)?void 0:_colorSchemesInput$da.palette)});let theme=(0,_extends2.default)({},_colorSchemesInput$li,{cssVarPrefix,getCssVar,colorSchemes:(0,_extends2.default)({},colorSchemesInput,{light:(0,_extends2.default)({},colorSchemesInput.light,{palette:lightPalette,opacity:(0,_extends2.default)({inputPlaceholder:.42,\ninputUnderline:.42,switchTrackDisabled:.12,switchTrack:.38},null==(_colorSchemesInput$li2=colorSchemesInput.light)?void 0:_colorSchemesInput$li2.opacity),overlays:(null==(_colorSchemesInput$li3=colorSchemesInput.light)?void 0:_colorSchemesInput$li3.overlays)||[]}),dark:(0,_extends2.default)({},colorSchemesInput.dark,{palette:darkPalette,opacity:(0,_extends2.default)({inputPlaceholder:.5,inputUnderline:.7,switchTrackDisabled:.2,switchTrack:.3},null==(_colorSchemesInput$da2=colorSchemesInput.dark)?\nvoid 0:_colorSchemesInput$da2.opacity),overlays:(null==(_colorSchemesInput$da3=colorSchemesInput.dark)?void 0:_colorSchemesInput$da3.overlays)||defaultDarkOverlays})})});Object.keys(theme.colorSchemes).forEach(key=>{const palette=theme.colorSchemes[key].palette;\"light\"===key?(setColor(palette.common,\"background\",\"#fff\"),setColor(palette.common,\"onBackground\",\"#000\")):(setColor(palette.common,\"background\",\"#000\"),setColor(palette.common,\"onBackground\",\"#fff\"));assignNode(palette,\"Alert AppBar Avatar Chip FilledInput LinearProgress Skeleton Slider SnackbarContent SpeedDialAction StepConnector StepContent Switch TableCell Tooltip\".split(\" \"));\nif(\"light\"===key){setColor(palette.Alert,\"errorColor\",(0,_system.private_safeDarken)(palette.error.light,.6));setColor(palette.Alert,\"infoColor\",(0,_system.private_safeDarken)(palette.info.light,.6));setColor(palette.Alert,\"successColor\",(0,_system.private_safeDarken)(palette.success.light,.6));setColor(palette.Alert,\"warningColor\",(0,_system.private_safeDarken)(palette.warning.light,.6));setColor(palette.Alert,\"errorFilledBg\",getCssVar(\"palette-error-main\"));setColor(palette.Alert,\"infoFilledBg\",\ngetCssVar(\"palette-info-main\"));setColor(palette.Alert,\"successFilledBg\",getCssVar(\"palette-success-main\"));setColor(palette.Alert,\"warningFilledBg\",getCssVar(\"palette-warning-main\"));setColor(palette.Alert,\"errorFilledColor\",silent(()=>lightPalette.getContrastText(palette.error.main)));setColor(palette.Alert,\"infoFilledColor\",silent(()=>lightPalette.getContrastText(palette.info.main)));setColor(palette.Alert,\"successFilledColor\",silent(()=>lightPalette.getContrastText(palette.success.main)));setColor(palette.Alert,\n\"warningFilledColor\",silent(()=>lightPalette.getContrastText(palette.warning.main)));setColor(palette.Alert,\"errorStandardBg\",(0,_system.private_safeLighten)(palette.error.light,.9));setColor(palette.Alert,\"infoStandardBg\",(0,_system.private_safeLighten)(palette.info.light,.9));setColor(palette.Alert,\"successStandardBg\",(0,_system.private_safeLighten)(palette.success.light,.9));setColor(palette.Alert,\"warningStandardBg\",(0,_system.private_safeLighten)(palette.warning.light,.9));setColor(palette.Alert,\n\"errorIconColor\",getCssVar(\"palette-error-main\"));setColor(palette.Alert,\"infoIconColor\",getCssVar(\"palette-info-main\"));setColor(palette.Alert,\"successIconColor\",getCssVar(\"palette-success-main\"));setColor(palette.Alert,\"warningIconColor\",getCssVar(\"palette-warning-main\"));setColor(palette.AppBar,\"defaultBg\",getCssVar(\"palette-grey-100\"));setColor(palette.Avatar,\"defaultBg\",getCssVar(\"palette-grey-400\"));setColor(palette.Chip,\"defaultBorder\",getCssVar(\"palette-grey-400\"));setColor(palette.Chip,\"defaultAvatarColor\",\ngetCssVar(\"palette-grey-700\"));setColor(palette.Chip,\"defaultIconColor\",getCssVar(\"palette-grey-700\"));setColor(palette.FilledInput,\"bg\",\"rgba(0, 0, 0, 0.06)\");setColor(palette.FilledInput,\"hoverBg\",\"rgba(0, 0, 0, 0.09)\");setColor(palette.FilledInput,\"disabledBg\",\"rgba(0, 0, 0, 0.12)\");setColor(palette.LinearProgress,\"primaryBg\",(0,_system.private_safeLighten)(palette.primary.main,.62));setColor(palette.LinearProgress,\"secondaryBg\",(0,_system.private_safeLighten)(palette.secondary.main,.62));setColor(palette.LinearProgress,\n\"errorBg\",(0,_system.private_safeLighten)(palette.error.main,.62));setColor(palette.LinearProgress,\"infoBg\",(0,_system.private_safeLighten)(palette.info.main,.62));setColor(palette.LinearProgress,\"successBg\",(0,_system.private_safeLighten)(palette.success.main,.62));setColor(palette.LinearProgress,\"warningBg\",(0,_system.private_safeLighten)(palette.warning.main,.62));setColor(palette.Skeleton,\"bg\",`rgba(${getCssVar(\"palette-text-primaryChannel\")} / 0.11)`);setColor(palette.Slider,\"primaryTrack\",(0,_system.private_safeLighten)(palette.primary.main,\n.62));setColor(palette.Slider,\"secondaryTrack\",(0,_system.private_safeLighten)(palette.secondary.main,.62));setColor(palette.Slider,\"errorTrack\",(0,_system.private_safeLighten)(palette.error.main,.62));setColor(palette.Slider,\"infoTrack\",(0,_system.private_safeLighten)(palette.info.main,.62));setColor(palette.Slider,\"successTrack\",(0,_system.private_safeLighten)(palette.success.main,.62));setColor(palette.Slider,\"warningTrack\",(0,_system.private_safeLighten)(palette.warning.main,.62));const snackbarContentBackground=\n(0,_system.private_safeEmphasize)(palette.background.default,.8);setColor(palette.SnackbarContent,\"bg\",snackbarContentBackground);setColor(palette.SnackbarContent,\"color\",silent(()=>lightPalette.getContrastText(snackbarContentBackground)));setColor(palette.SpeedDialAction,\"fabHoverBg\",(0,_system.private_safeEmphasize)(palette.background.paper,.15));setColor(palette.StepConnector,\"border\",getCssVar(\"palette-grey-400\"));setColor(palette.StepContent,\"border\",getCssVar(\"palette-grey-400\"));setColor(palette.Switch,\n\"defaultColor\",getCssVar(\"palette-common-white\"));setColor(palette.Switch,\"defaultDisabledColor\",getCssVar(\"palette-grey-100\"));setColor(palette.Switch,\"primaryDisabledColor\",(0,_system.private_safeLighten)(palette.primary.main,.62));setColor(palette.Switch,\"secondaryDisabledColor\",(0,_system.private_safeLighten)(palette.secondary.main,.62));setColor(palette.Switch,\"errorDisabledColor\",(0,_system.private_safeLighten)(palette.error.main,.62));setColor(palette.Switch,\"infoDisabledColor\",(0,_system.private_safeLighten)(palette.info.main,\n.62));setColor(palette.Switch,\"successDisabledColor\",(0,_system.private_safeLighten)(palette.success.main,.62));setColor(palette.Switch,\"warningDisabledColor\",(0,_system.private_safeLighten)(palette.warning.main,.62));setColor(palette.TableCell,\"border\",(0,_system.private_safeLighten)((0,_system.private_safeAlpha)(palette.divider,1),.88))}else{setColor(palette.Alert,\"errorColor\",(0,_system.private_safeLighten)(palette.error.light,.6));setColor(palette.Alert,\"infoColor\",(0,_system.private_safeLighten)(palette.info.light,\n.6));setColor(palette.Alert,\"successColor\",(0,_system.private_safeLighten)(palette.success.light,.6));setColor(palette.Alert,\"warningColor\",(0,_system.private_safeLighten)(palette.warning.light,.6));setColor(palette.Alert,\"errorFilledBg\",getCssVar(\"palette-error-dark\"));setColor(palette.Alert,\"infoFilledBg\",getCssVar(\"palette-info-dark\"));setColor(palette.Alert,\"successFilledBg\",getCssVar(\"palette-success-dark\"));setColor(palette.Alert,\"warningFilledBg\",getCssVar(\"palette-warning-dark\"));setColor(palette.Alert,\n\"errorFilledColor\",silent(()=>darkPalette.getContrastText(palette.error.dark)));setColor(palette.Alert,\"infoFilledColor\",silent(()=>darkPalette.getContrastText(palette.info.dark)));setColor(palette.Alert,\"successFilledColor\",silent(()=>darkPalette.getContrastText(palette.success.dark)));setColor(palette.Alert,\"warningFilledColor\",silent(()=>darkPalette.getContrastText(palette.warning.dark)));setColor(palette.Alert,\"errorStandardBg\",(0,_system.private_safeDarken)(palette.error.light,.9));setColor(palette.Alert,\n\"infoStandardBg\",(0,_system.private_safeDarken)(palette.info.light,.9));setColor(palette.Alert,\"successStandardBg\",(0,_system.private_safeDarken)(palette.success.light,.9));setColor(palette.Alert,\"warningStandardBg\",(0,_system.private_safeDarken)(palette.warning.light,.9));setColor(palette.Alert,\"errorIconColor\",getCssVar(\"palette-error-main\"));setColor(palette.Alert,\"infoIconColor\",getCssVar(\"palette-info-main\"));setColor(palette.Alert,\"successIconColor\",getCssVar(\"palette-success-main\"));setColor(palette.Alert,\n\"warningIconColor\",getCssVar(\"palette-warning-main\"));setColor(palette.AppBar,\"defaultBg\",getCssVar(\"palette-grey-900\"));setColor(palette.AppBar,\"darkBg\",getCssVar(\"palette-background-paper\"));setColor(palette.AppBar,\"darkColor\",getCssVar(\"palette-text-primary\"));setColor(palette.Avatar,\"defaultBg\",getCssVar(\"palette-grey-600\"));setColor(palette.Chip,\"defaultBorder\",getCssVar(\"palette-grey-700\"));setColor(palette.Chip,\"defaultAvatarColor\",getCssVar(\"palette-grey-300\"));setColor(palette.Chip,\"defaultIconColor\",\ngetCssVar(\"palette-grey-300\"));setColor(palette.FilledInput,\"bg\",\"rgba(255, 255, 255, 0.09)\");setColor(palette.FilledInput,\"hoverBg\",\"rgba(255, 255, 255, 0.13)\");setColor(palette.FilledInput,\"disabledBg\",\"rgba(255, 255, 255, 0.12)\");setColor(palette.LinearProgress,\"primaryBg\",(0,_system.private_safeDarken)(palette.primary.main,.5));setColor(palette.LinearProgress,\"secondaryBg\",(0,_system.private_safeDarken)(palette.secondary.main,.5));setColor(palette.LinearProgress,\"errorBg\",(0,_system.private_safeDarken)(palette.error.main,\n.5));setColor(palette.LinearProgress,\"infoBg\",(0,_system.private_safeDarken)(palette.info.main,.5));setColor(palette.LinearProgress,\"successBg\",(0,_system.private_safeDarken)(palette.success.main,.5));setColor(palette.LinearProgress,\"warningBg\",(0,_system.private_safeDarken)(palette.warning.main,.5));setColor(palette.Skeleton,\"bg\",`rgba(${getCssVar(\"palette-text-primaryChannel\")} / 0.13)`);setColor(palette.Slider,\"primaryTrack\",(0,_system.private_safeDarken)(palette.primary.main,.5));setColor(palette.Slider,\n\"secondaryTrack\",(0,_system.private_safeDarken)(palette.secondary.main,.5));setColor(palette.Slider,\"errorTrack\",(0,_system.private_safeDarken)(palette.error.main,.5));setColor(palette.Slider,\"infoTrack\",(0,_system.private_safeDarken)(palette.info.main,.5));setColor(palette.Slider,\"successTrack\",(0,_system.private_safeDarken)(palette.success.main,.5));setColor(palette.Slider,\"warningTrack\",(0,_system.private_safeDarken)(palette.warning.main,.5));const snackbarContentBackground=(0,_system.private_safeEmphasize)(palette.background.default,\n.98);setColor(palette.SnackbarContent,\"bg\",snackbarContentBackground);setColor(palette.SnackbarContent,\"color\",silent(()=>darkPalette.getContrastText(snackbarContentBackground)));setColor(palette.SpeedDialAction,\"fabHoverBg\",(0,_system.private_safeEmphasize)(palette.background.paper,.15));setColor(palette.StepConnector,\"border\",getCssVar(\"palette-grey-600\"));setColor(palette.StepContent,\"border\",getCssVar(\"palette-grey-600\"));setColor(palette.Switch,\"defaultColor\",getCssVar(\"palette-grey-300\"));setColor(palette.Switch,\n\"defaultDisabledColor\",getCssVar(\"palette-grey-600\"));setColor(palette.Switch,\"primaryDisabledColor\",(0,_system.private_safeDarken)(palette.primary.main,.55));setColor(palette.Switch,\"secondaryDisabledColor\",(0,_system.private_safeDarken)(palette.secondary.main,.55));setColor(palette.Switch,\"errorDisabledColor\",(0,_system.private_safeDarken)(palette.error.main,.55));setColor(palette.Switch,\"infoDisabledColor\",(0,_system.private_safeDarken)(palette.info.main,.55));setColor(palette.Switch,\"successDisabledColor\",\n(0,_system.private_safeDarken)(palette.success.main,.55));setColor(palette.Switch,\"warningDisabledColor\",(0,_system.private_safeDarken)(palette.warning.main,.55));setColor(palette.TableCell,\"border\",(0,_system.private_safeDarken)((0,_system.private_safeAlpha)(palette.divider,1),.68))}setColor(palette.Tooltip,\"bg\",(0,_system.private_safeAlpha)(palette.grey[700],.92));setColorChannel(palette.background,\"default\");setColorChannel(palette.common,\"background\");setColorChannel(palette.common,\"onBackground\");\nsetColorChannel(palette,\"divider\");Object.keys(palette).forEach(color=>{const colors=palette[color];colors&&\"object\"===typeof colors&&(colors.main&&setColor(palette[color],\"mainChannel\",(0,_system.private_safeColorChannel)(colors.main)),colors.light&&setColor(palette[color],\"lightChannel\",(0,_system.private_safeColorChannel)(colors.light)),colors.dark&&setColor(palette[color],\"darkChannel\",(0,_system.private_safeColorChannel)(colors.dark)),colors.contrastText&&setColor(palette[color],\"contrastTextChannel\",\n(0,_system.private_safeColorChannel)(colors.contrastText)),\"text\"===color&&(setColorChannel(palette[color],\"primary\"),setColorChannel(palette[color],\"secondary\")),\"action\"===color&&(colors.active&&setColorChannel(palette[color],\"active\"),colors.selected&&setColorChannel(palette[color],\"selected\")))})});theme=args.reduce((acc,argument)=>(0,_utils.deepmerge)(acc,argument),theme);theme.unstable_sxConfig=(0,_extends2.default)({},_system.unstable_defaultSxConfig,null==options?void 0:options.unstable_sxConfig);\ntheme.unstable_sx=function(props){return(0,_system.unstable_styleFunctionSx)({sx:props,theme:this})};return theme};var _extends2=global(require(\"module$node_modules$$babel$runtime$helpers$extends\")),_objectWithoutPropertiesLoose2=global(require(\"module$node_modules$$babel$runtime$helpers$objectWithoutPropertiesLoose\")),_utils=require(\"module$node_modules$$mui$utils$index\"),_system=require(\"module$node_modules$$mui$system$index\"),_createTheme=global(require(\"module$node_modules$$mui$material$node$styles$createTheme\")),\n_getOverlayAlpha=global(require(\"module$node_modules$$mui$material$node$styles$getOverlayAlpha\"));const _excluded=[\"colorSchemes\",\"cssVarPrefix\"],_excluded2=[\"palette\"],defaultDarkOverlays=[...Array(25)].map((_,index)=>{if(0!==index)return _=(0,_getOverlayAlpha.default)(index),`linear-gradient(rgba(255 255 255 / ${_}), rgba(255 255 255 / ${_}))`}),silent=fn=>{try{return fn()}catch(error){}},createGetCssVar=(cssVarPrefix=\"mui\")=>(0,_system.unstable_createGetCssVar)(cssVarPrefix);exports.createGetCssVar=\ncreateGetCssVar}","~:source","shadow$provide[\"module$node_modules$$mui$material$node$styles$experimental_extendTheme\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createGetCssVar = void 0;\nexports.default = extendTheme;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\nvar _utils = require(\"@mui/utils\");\nvar _system = require(\"@mui/system\");\nvar _createTheme = _interopRequireDefault(require(\"./createTheme\"));\nvar _getOverlayAlpha = _interopRequireDefault(require(\"./getOverlayAlpha\"));\nconst _excluded = [\"colorSchemes\", \"cssVarPrefix\"],\n  _excluded2 = [\"palette\"];\nconst defaultDarkOverlays = [...Array(25)].map((_, index) => {\n  if (index === 0) {\n    return undefined;\n  }\n  const overlay = (0, _getOverlayAlpha.default)(index);\n  return `linear-gradient(rgba(255 255 255 / ${overlay}), rgba(255 255 255 / ${overlay}))`;\n});\nfunction assignNode(obj, keys) {\n  keys.forEach(k => {\n    if (!obj[k]) {\n      obj[k] = {};\n    }\n  });\n}\nfunction setColor(obj, key, defaultValue) {\n  if (!obj[key] && defaultValue) {\n    obj[key] = defaultValue;\n  }\n}\nfunction setColorChannel(obj, key) {\n  if (!(`${key}Channel` in obj)) {\n    // custom channel token is not provided, generate one.\n    // if channel token can't be generated, show a warning.\n    obj[`${key}Channel`] = (0, _system.private_safeColorChannel)(obj[key], `MUI: Can't create \\`palette.${key}Channel\\` because \\`palette.${key}\\` is not one of these formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().` + '\\n' + `To suppress this warning, you need to explicitly provide the \\`palette.${key}Channel\\` as a string (in rgb format, e.g. \"12 12 12\") or undefined if you want to remove the channel token.`);\n  }\n}\nconst silent = fn => {\n  try {\n    return fn();\n  } catch (error) {\n    // ignore error\n  }\n  return undefined;\n};\nconst createGetCssVar = (cssVarPrefix = 'mui') => (0, _system.unstable_createGetCssVar)(cssVarPrefix);\nexports.createGetCssVar = createGetCssVar;\nfunction extendTheme(options = {}, ...args) {\n  var _colorSchemesInput$li, _colorSchemesInput$da, _colorSchemesInput$li2, _colorSchemesInput$li3, _colorSchemesInput$da2, _colorSchemesInput$da3;\n  const {\n      colorSchemes: colorSchemesInput = {},\n      cssVarPrefix = 'mui'\n    } = options,\n    input = (0, _objectWithoutPropertiesLoose2.default)(options, _excluded);\n  const getCssVar = createGetCssVar(cssVarPrefix);\n  const _createThemeWithoutVa = (0, _createTheme.default)((0, _extends2.default)({}, input, colorSchemesInput.light && {\n      palette: (_colorSchemesInput$li = colorSchemesInput.light) == null ? void 0 : _colorSchemesInput$li.palette\n    })),\n    {\n      palette: lightPalette\n    } = _createThemeWithoutVa,\n    muiTheme = (0, _objectWithoutPropertiesLoose2.default)(_createThemeWithoutVa, _excluded2);\n  const {\n    palette: darkPalette\n  } = (0, _createTheme.default)({\n    palette: (0, _extends2.default)({\n      mode: 'dark'\n    }, (_colorSchemesInput$da = colorSchemesInput.dark) == null ? void 0 : _colorSchemesInput$da.palette)\n  });\n  let theme = (0, _extends2.default)({}, muiTheme, {\n    cssVarPrefix,\n    getCssVar,\n    colorSchemes: (0, _extends2.default)({}, colorSchemesInput, {\n      light: (0, _extends2.default)({}, colorSchemesInput.light, {\n        palette: lightPalette,\n        opacity: (0, _extends2.default)({\n          inputPlaceholder: 0.42,\n          inputUnderline: 0.42,\n          switchTrackDisabled: 0.12,\n          switchTrack: 0.38\n        }, (_colorSchemesInput$li2 = colorSchemesInput.light) == null ? void 0 : _colorSchemesInput$li2.opacity),\n        overlays: ((_colorSchemesInput$li3 = colorSchemesInput.light) == null ? void 0 : _colorSchemesInput$li3.overlays) || []\n      }),\n      dark: (0, _extends2.default)({}, colorSchemesInput.dark, {\n        palette: darkPalette,\n        opacity: (0, _extends2.default)({\n          inputPlaceholder: 0.5,\n          inputUnderline: 0.7,\n          switchTrackDisabled: 0.2,\n          switchTrack: 0.3\n        }, (_colorSchemesInput$da2 = colorSchemesInput.dark) == null ? void 0 : _colorSchemesInput$da2.opacity),\n        overlays: ((_colorSchemesInput$da3 = colorSchemesInput.dark) == null ? void 0 : _colorSchemesInput$da3.overlays) || defaultDarkOverlays\n      })\n    })\n  });\n  Object.keys(theme.colorSchemes).forEach(key => {\n    const palette = theme.colorSchemes[key].palette;\n\n    // attach black & white channels to common node\n    if (key === 'light') {\n      setColor(palette.common, 'background', '#fff');\n      setColor(palette.common, 'onBackground', '#000');\n    } else {\n      setColor(palette.common, 'background', '#000');\n      setColor(palette.common, 'onBackground', '#fff');\n    }\n\n    // assign component variables\n    assignNode(palette, ['Alert', 'AppBar', 'Avatar', 'Chip', 'FilledInput', 'LinearProgress', 'Skeleton', 'Slider', 'SnackbarContent', 'SpeedDialAction', 'StepConnector', 'StepContent', 'Switch', 'TableCell', 'Tooltip']);\n    if (key === 'light') {\n      setColor(palette.Alert, 'errorColor', (0, _system.private_safeDarken)(palette.error.light, 0.6));\n      setColor(palette.Alert, 'infoColor', (0, _system.private_safeDarken)(palette.info.light, 0.6));\n      setColor(palette.Alert, 'successColor', (0, _system.private_safeDarken)(palette.success.light, 0.6));\n      setColor(palette.Alert, 'warningColor', (0, _system.private_safeDarken)(palette.warning.light, 0.6));\n      setColor(palette.Alert, 'errorFilledBg', getCssVar('palette-error-main'));\n      setColor(palette.Alert, 'infoFilledBg', getCssVar('palette-info-main'));\n      setColor(palette.Alert, 'successFilledBg', getCssVar('palette-success-main'));\n      setColor(palette.Alert, 'warningFilledBg', getCssVar('palette-warning-main'));\n      setColor(palette.Alert, 'errorFilledColor', silent(() => lightPalette.getContrastText(palette.error.main)));\n      setColor(palette.Alert, 'infoFilledColor', silent(() => lightPalette.getContrastText(palette.info.main)));\n      setColor(palette.Alert, 'successFilledColor', silent(() => lightPalette.getContrastText(palette.success.main)));\n      setColor(palette.Alert, 'warningFilledColor', silent(() => lightPalette.getContrastText(palette.warning.main)));\n      setColor(palette.Alert, 'errorStandardBg', (0, _system.private_safeLighten)(palette.error.light, 0.9));\n      setColor(palette.Alert, 'infoStandardBg', (0, _system.private_safeLighten)(palette.info.light, 0.9));\n      setColor(palette.Alert, 'successStandardBg', (0, _system.private_safeLighten)(palette.success.light, 0.9));\n      setColor(palette.Alert, 'warningStandardBg', (0, _system.private_safeLighten)(palette.warning.light, 0.9));\n      setColor(palette.Alert, 'errorIconColor', getCssVar('palette-error-main'));\n      setColor(palette.Alert, 'infoIconColor', getCssVar('palette-info-main'));\n      setColor(palette.Alert, 'successIconColor', getCssVar('palette-success-main'));\n      setColor(palette.Alert, 'warningIconColor', getCssVar('palette-warning-main'));\n      setColor(palette.AppBar, 'defaultBg', getCssVar('palette-grey-100'));\n      setColor(palette.Avatar, 'defaultBg', getCssVar('palette-grey-400'));\n      setColor(palette.Chip, 'defaultBorder', getCssVar('palette-grey-400'));\n      setColor(palette.Chip, 'defaultAvatarColor', getCssVar('palette-grey-700'));\n      setColor(palette.Chip, 'defaultIconColor', getCssVar('palette-grey-700'));\n      setColor(palette.FilledInput, 'bg', 'rgba(0, 0, 0, 0.06)');\n      setColor(palette.FilledInput, 'hoverBg', 'rgba(0, 0, 0, 0.09)');\n      setColor(palette.FilledInput, 'disabledBg', 'rgba(0, 0, 0, 0.12)');\n      setColor(palette.LinearProgress, 'primaryBg', (0, _system.private_safeLighten)(palette.primary.main, 0.62));\n      setColor(palette.LinearProgress, 'secondaryBg', (0, _system.private_safeLighten)(palette.secondary.main, 0.62));\n      setColor(palette.LinearProgress, 'errorBg', (0, _system.private_safeLighten)(palette.error.main, 0.62));\n      setColor(palette.LinearProgress, 'infoBg', (0, _system.private_safeLighten)(palette.info.main, 0.62));\n      setColor(palette.LinearProgress, 'successBg', (0, _system.private_safeLighten)(palette.success.main, 0.62));\n      setColor(palette.LinearProgress, 'warningBg', (0, _system.private_safeLighten)(palette.warning.main, 0.62));\n      setColor(palette.Skeleton, 'bg', `rgba(${getCssVar('palette-text-primaryChannel')} / 0.11)`);\n      setColor(palette.Slider, 'primaryTrack', (0, _system.private_safeLighten)(palette.primary.main, 0.62));\n      setColor(palette.Slider, 'secondaryTrack', (0, _system.private_safeLighten)(palette.secondary.main, 0.62));\n      setColor(palette.Slider, 'errorTrack', (0, _system.private_safeLighten)(palette.error.main, 0.62));\n      setColor(palette.Slider, 'infoTrack', (0, _system.private_safeLighten)(palette.info.main, 0.62));\n      setColor(palette.Slider, 'successTrack', (0, _system.private_safeLighten)(palette.success.main, 0.62));\n      setColor(palette.Slider, 'warningTrack', (0, _system.private_safeLighten)(palette.warning.main, 0.62));\n      const snackbarContentBackground = (0, _system.private_safeEmphasize)(palette.background.default, 0.8);\n      setColor(palette.SnackbarContent, 'bg', snackbarContentBackground);\n      setColor(palette.SnackbarContent, 'color', silent(() => lightPalette.getContrastText(snackbarContentBackground)));\n      setColor(palette.SpeedDialAction, 'fabHoverBg', (0, _system.private_safeEmphasize)(palette.background.paper, 0.15));\n      setColor(palette.StepConnector, 'border', getCssVar('palette-grey-400'));\n      setColor(palette.StepContent, 'border', getCssVar('palette-grey-400'));\n      setColor(palette.Switch, 'defaultColor', getCssVar('palette-common-white'));\n      setColor(palette.Switch, 'defaultDisabledColor', getCssVar('palette-grey-100'));\n      setColor(palette.Switch, 'primaryDisabledColor', (0, _system.private_safeLighten)(palette.primary.main, 0.62));\n      setColor(palette.Switch, 'secondaryDisabledColor', (0, _system.private_safeLighten)(palette.secondary.main, 0.62));\n      setColor(palette.Switch, 'errorDisabledColor', (0, _system.private_safeLighten)(palette.error.main, 0.62));\n      setColor(palette.Switch, 'infoDisabledColor', (0, _system.private_safeLighten)(palette.info.main, 0.62));\n      setColor(palette.Switch, 'successDisabledColor', (0, _system.private_safeLighten)(palette.success.main, 0.62));\n      setColor(palette.Switch, 'warningDisabledColor', (0, _system.private_safeLighten)(palette.warning.main, 0.62));\n      setColor(palette.TableCell, 'border', (0, _system.private_safeLighten)((0, _system.private_safeAlpha)(palette.divider, 1), 0.88));\n      setColor(palette.Tooltip, 'bg', (0, _system.private_safeAlpha)(palette.grey[700], 0.92));\n    } else {\n      setColor(palette.Alert, 'errorColor', (0, _system.private_safeLighten)(palette.error.light, 0.6));\n      setColor(palette.Alert, 'infoColor', (0, _system.private_safeLighten)(palette.info.light, 0.6));\n      setColor(palette.Alert, 'successColor', (0, _system.private_safeLighten)(palette.success.light, 0.6));\n      setColor(palette.Alert, 'warningColor', (0, _system.private_safeLighten)(palette.warning.light, 0.6));\n      setColor(palette.Alert, 'errorFilledBg', getCssVar('palette-error-dark'));\n      setColor(palette.Alert, 'infoFilledBg', getCssVar('palette-info-dark'));\n      setColor(palette.Alert, 'successFilledBg', getCssVar('palette-success-dark'));\n      setColor(palette.Alert, 'warningFilledBg', getCssVar('palette-warning-dark'));\n      setColor(palette.Alert, 'errorFilledColor', silent(() => darkPalette.getContrastText(palette.error.dark)));\n      setColor(palette.Alert, 'infoFilledColor', silent(() => darkPalette.getContrastText(palette.info.dark)));\n      setColor(palette.Alert, 'successFilledColor', silent(() => darkPalette.getContrastText(palette.success.dark)));\n      setColor(palette.Alert, 'warningFilledColor', silent(() => darkPalette.getContrastText(palette.warning.dark)));\n      setColor(palette.Alert, 'errorStandardBg', (0, _system.private_safeDarken)(palette.error.light, 0.9));\n      setColor(palette.Alert, 'infoStandardBg', (0, _system.private_safeDarken)(palette.info.light, 0.9));\n      setColor(palette.Alert, 'successStandardBg', (0, _system.private_safeDarken)(palette.success.light, 0.9));\n      setColor(palette.Alert, 'warningStandardBg', (0, _system.private_safeDarken)(palette.warning.light, 0.9));\n      setColor(palette.Alert, 'errorIconColor', getCssVar('palette-error-main'));\n      setColor(palette.Alert, 'infoIconColor', getCssVar('palette-info-main'));\n      setColor(palette.Alert, 'successIconColor', getCssVar('palette-success-main'));\n      setColor(palette.Alert, 'warningIconColor', getCssVar('palette-warning-main'));\n      setColor(palette.AppBar, 'defaultBg', getCssVar('palette-grey-900'));\n      setColor(palette.AppBar, 'darkBg', getCssVar('palette-background-paper')); // specific for dark mode\n      setColor(palette.AppBar, 'darkColor', getCssVar('palette-text-primary')); // specific for dark mode\n      setColor(palette.Avatar, 'defaultBg', getCssVar('palette-grey-600'));\n      setColor(palette.Chip, 'defaultBorder', getCssVar('palette-grey-700'));\n      setColor(palette.Chip, 'defaultAvatarColor', getCssVar('palette-grey-300'));\n      setColor(palette.Chip, 'defaultIconColor', getCssVar('palette-grey-300'));\n      setColor(palette.FilledInput, 'bg', 'rgba(255, 255, 255, 0.09)');\n      setColor(palette.FilledInput, 'hoverBg', 'rgba(255, 255, 255, 0.13)');\n      setColor(palette.FilledInput, 'disabledBg', 'rgba(255, 255, 255, 0.12)');\n      setColor(palette.LinearProgress, 'primaryBg', (0, _system.private_safeDarken)(palette.primary.main, 0.5));\n      setColor(palette.LinearProgress, 'secondaryBg', (0, _system.private_safeDarken)(palette.secondary.main, 0.5));\n      setColor(palette.LinearProgress, 'errorBg', (0, _system.private_safeDarken)(palette.error.main, 0.5));\n      setColor(palette.LinearProgress, 'infoBg', (0, _system.private_safeDarken)(palette.info.main, 0.5));\n      setColor(palette.LinearProgress, 'successBg', (0, _system.private_safeDarken)(palette.success.main, 0.5));\n      setColor(palette.LinearProgress, 'warningBg', (0, _system.private_safeDarken)(palette.warning.main, 0.5));\n      setColor(palette.Skeleton, 'bg', `rgba(${getCssVar('palette-text-primaryChannel')} / 0.13)`);\n      setColor(palette.Slider, 'primaryTrack', (0, _system.private_safeDarken)(palette.primary.main, 0.5));\n      setColor(palette.Slider, 'secondaryTrack', (0, _system.private_safeDarken)(palette.secondary.main, 0.5));\n      setColor(palette.Slider, 'errorTrack', (0, _system.private_safeDarken)(palette.error.main, 0.5));\n      setColor(palette.Slider, 'infoTrack', (0, _system.private_safeDarken)(palette.info.main, 0.5));\n      setColor(palette.Slider, 'successTrack', (0, _system.private_safeDarken)(palette.success.main, 0.5));\n      setColor(palette.Slider, 'warningTrack', (0, _system.private_safeDarken)(palette.warning.main, 0.5));\n      const snackbarContentBackground = (0, _system.private_safeEmphasize)(palette.background.default, 0.98);\n      setColor(palette.SnackbarContent, 'bg', snackbarContentBackground);\n      setColor(palette.SnackbarContent, 'color', silent(() => darkPalette.getContrastText(snackbarContentBackground)));\n      setColor(palette.SpeedDialAction, 'fabHoverBg', (0, _system.private_safeEmphasize)(palette.background.paper, 0.15));\n      setColor(palette.StepConnector, 'border', getCssVar('palette-grey-600'));\n      setColor(palette.StepContent, 'border', getCssVar('palette-grey-600'));\n      setColor(palette.Switch, 'defaultColor', getCssVar('palette-grey-300'));\n      setColor(palette.Switch, 'defaultDisabledColor', getCssVar('palette-grey-600'));\n      setColor(palette.Switch, 'primaryDisabledColor', (0, _system.private_safeDarken)(palette.primary.main, 0.55));\n      setColor(palette.Switch, 'secondaryDisabledColor', (0, _system.private_safeDarken)(palette.secondary.main, 0.55));\n      setColor(palette.Switch, 'errorDisabledColor', (0, _system.private_safeDarken)(palette.error.main, 0.55));\n      setColor(palette.Switch, 'infoDisabledColor', (0, _system.private_safeDarken)(palette.info.main, 0.55));\n      setColor(palette.Switch, 'successDisabledColor', (0, _system.private_safeDarken)(palette.success.main, 0.55));\n      setColor(palette.Switch, 'warningDisabledColor', (0, _system.private_safeDarken)(palette.warning.main, 0.55));\n      setColor(palette.TableCell, 'border', (0, _system.private_safeDarken)((0, _system.private_safeAlpha)(palette.divider, 1), 0.68));\n      setColor(palette.Tooltip, 'bg', (0, _system.private_safeAlpha)(palette.grey[700], 0.92));\n    }\n\n    // MUI X - DataGrid needs this token.\n    setColorChannel(palette.background, 'default');\n    setColorChannel(palette.common, 'background');\n    setColorChannel(palette.common, 'onBackground');\n    setColorChannel(palette, 'divider');\n    Object.keys(palette).forEach(color => {\n      const colors = palette[color];\n\n      // The default palettes (primary, secondary, error, info, success, and warning) errors are handled by the above `createTheme(...)`.\n\n      if (colors && typeof colors === 'object') {\n        // Silent the error for custom palettes.\n        if (colors.main) {\n          setColor(palette[color], 'mainChannel', (0, _system.private_safeColorChannel)(colors.main));\n        }\n        if (colors.light) {\n          setColor(palette[color], 'lightChannel', (0, _system.private_safeColorChannel)(colors.light));\n        }\n        if (colors.dark) {\n          setColor(palette[color], 'darkChannel', (0, _system.private_safeColorChannel)(colors.dark));\n        }\n        if (colors.contrastText) {\n          setColor(palette[color], 'contrastTextChannel', (0, _system.private_safeColorChannel)(colors.contrastText));\n        }\n        if (color === 'text') {\n          // Text colors: text.primary, text.secondary\n          setColorChannel(palette[color], 'primary');\n          setColorChannel(palette[color], 'secondary');\n        }\n        if (color === 'action') {\n          // Action colors: action.active, action.selected\n          if (colors.active) {\n            setColorChannel(palette[color], 'active');\n          }\n          if (colors.selected) {\n            setColorChannel(palette[color], 'selected');\n          }\n        }\n      }\n    });\n  });\n  theme = args.reduce((acc, argument) => (0, _utils.deepmerge)(acc, argument), theme);\n  theme.unstable_sxConfig = (0, _extends2.default)({}, _system.unstable_defaultSxConfig, input == null ? void 0 : input.unstable_sxConfig);\n  theme.unstable_sx = function sx(props) {\n    return (0, _system.unstable_styleFunctionSx)({\n      sx: props,\n      theme: this\n    });\n  };\n  return theme;\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$$babel$runtime$helpers$objectWithoutPropertiesLoose","~$module$node_modules$$mui$material$node$styles$getOverlayAlpha","~$module$node_modules$$mui$utils$index","~$module$node_modules$$babel$runtime$helpers$interopRequireDefault","~$module$node_modules$$mui$material$node$styles$createTheme","~$shadow.js","~$module$node_modules$$mui$system$index","~$module$node_modules$$babel$runtime$helpers$extends"]],"~:properties",["^5",["light","inputUnderline","inputPlaceholder","overlays","getCssVar","__esModule","sx","unstable_sx","mode","value","switchTrackDisabled","unstable_sxConfig","dark","palette","colorSchemes","theme","cssVarPrefix","createGetCssVar","default","opacity","switchTrack"]],"~:compiled-at",1676594832787,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$mui$material$node$styles$experimental_extendTheme.js\",\n\"lineCount\":31,\n\"mappings\":\"AAAAA,cAAA,CAAA,sEAAA,CAA2F,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAwBnIC,QAASA,WAAU,CAACC,GAAD,CAAMC,IAAN,CAAY,CAC7BA,IAAKC,CAAAA,OAAL,CAAaC,CAAA,EAAK,CACXH,GAAA,CAAIG,CAAJ,CAAL,GACEH,GAAA,CAAIG,CAAJ,CADF,CACW,EADX,CADgB,CAAlB,CAD6B,CAO/BC,QAASA,SAAQ,CAACJ,GAAD,CAAMK,GAAN,CAAWC,YAAX,CAAyB,CACpC,CAACN,GAAA,CAAIK,GAAJ,CAAL,EAAiBC,YAAjB,GACEN,GAAA,CAAIK,GAAJ,CADF,CACaC,YADb,CADwC,CAK1CC,QAASA,gBAAe,CAACP,GAAD,CAAMK,GAAN,CAAW,CAC1B,GAAEA,GAAF,SAAP,EAAyBL,IAAzB,GAGEA,GAAA,CAAK,GAAEK,GAAF,SAAL,CAHF,CAGyB,GAAIG,OAAQC,CAAAA,wBAAZ,EAAsCT,GAAA,CAAIK,GAAJ,CAAtC,CAAiD,+BAA8BA,GAA9B,+BAAgEA,GAAhE,uFAAjD;AAA8M,IAA9M,CAAsN,0EAAyEA,GAAzE,8GAAtN,CAHzB,CADiC,CAjC/BK,MAAAA,CAAyBd,OAAA,CAAQ,kEAAR,CAC7Be,OAAOC,CAAAA,cAAP,CAAsBd,OAAtB,CAA+B,YAA/B,CAA6C,CAC3Ce,MAAO,CAAA,CADoC,CAA7C,CAGAf,QAAQgB,CAAAA,eAAR,CAA0B,IAAK,EAC/BhB,QAAQiB,CAAAA,OAAR,CA6CAC,QAAoB,CAACC,OAAA,CAAU,EAAX,CAAe,GAAGC,IAAlB,CAAwB,CAAA,IACtCC,qBADsC,CACfC,qBADe,CACQC,sBADR,CACgCC,sBADhC;AACwDC,sBADxD,CACgFC,sBADhF,OAEpC,CACF,aAAcC,iBAAA,CAAoB,EADhC,CAEFC,YAAA,CAAe,KAFb,CAAA,CAGAT,OACJU,QAAAA,CAAQ,GAAIC,8BAA+Bb,CAAAA,OAAnC,EAA4CE,OAA5C,CAAqDY,SAArD,CACV,OAAMC,UAAYhB,eAAA,CAAgBY,YAAhB,CAAlB,CACMK,sBAAwB,GAAIC,YAAajB,CAAAA,OAAjB,EAA0B,GAAIkB,SAAUlB,CAAAA,OAAd,EAAuB,EAAvB,CAA2BY,OAA3B,CAAkCF,iBAAkBS,CAAAA,KAApD,EAA6D,CACjHC,QAA8D,IAArD,GAAChB,qBAAD,CAAyBM,iBAAkBS,CAAAA,KAA3C,EAA4D,IAAK,EAAjE,CAAqEf,qBAAsBgB,CAAAA,OADa,CAA7D,CAA1B,CAD9B,CAIE,CACE,QAASC,YADX,CAAA,CAEIL,qBACJM,sBAAAA;AAAW,GAAIT,8BAA+Bb,CAAAA,OAAnC,EAA4CgB,qBAA5C,CAAmEO,UAAnE,CACb,OAAM,CACJ,QAASC,WADL,CAAA,CAEF,GAAIP,YAAajB,CAAAA,OAAjB,EAA0B,CAC5BoB,QAAS,GAAIF,SAAUlB,CAAAA,OAAd,EAAuB,CAC9ByB,KAAM,MADwB,CAAvB,CAE8C,IAApD,GAACpB,qBAAD,CAAyBK,iBAAkBgB,CAAAA,IAA3C,EAA2D,IAAK,EAAhE,CAAoErB,qBAAsBe,CAAAA,OAFpF,CADmB,CAA1B,CAKJ,KAAIO,MAAQ,GAAIT,SAAUlB,CAAAA,OAAd,EAAuB,EAAvB,CAA2BsB,qBAA3B,CAAqC,CAC/CX,YAD+C,CAE/CI,SAF+C,CAG/Ca,aAAc,GAAIV,SAAUlB,CAAAA,OAAd,EAAuB,EAAvB,CAA2BU,iBAA3B,CAA8C,CAC1DS,MAAO,GAAID,SAAUlB,CAAAA,OAAd,EAAuB,EAAvB,CAA2BU,iBAAkBS,CAAAA,KAA7C,CAAoD,CACzDC,QAASC,YADgD,CAEzDQ,QAAS,GAAIX,SAAUlB,CAAAA,OAAd,EAAuB,CAC9B8B,iBAAkB,GADY;AAE9BC,eAAgB,GAFc,CAG9BC,oBAAqB,GAHS,CAI9BC,YAAa,GAJiB,CAAvB,CAKgD,IAAtD,GAAC3B,sBAAD,CAA0BI,iBAAkBS,CAAAA,KAA5C,EAA6D,IAAK,EAAlE,CAAsEb,sBAAuBuB,CAAAA,OALvF,CAFgD,CAQzDK,UAAiE,IAAtD,GAAC3B,sBAAD,CAA0BG,iBAAkBS,CAAAA,KAA5C,EAA6D,IAAK,EAAlE,CAAsEZ,sBAAuB2B,CAAAA,QAAxGA,GAAqH,EAR5D,CAApD,CADmD,CAW1DR,KAAM,GAAIR,SAAUlB,CAAAA,OAAd,EAAuB,EAAvB,CAA2BU,iBAAkBgB,CAAAA,IAA7C,CAAmD,CACvDN,QAASI,WAD8C,CAEvDK,QAAS,GAAIX,SAAUlB,CAAAA,OAAd,EAAuB,CAC9B8B,iBAAkB,EADY,CAE9BC,eAAgB,EAFc,CAG9BC,oBAAqB,EAHS,CAI9BC,YAAa,EAJiB,CAAvB,CAK+C,IAArD,GAACzB,sBAAD,CAA0BE,iBAAkBgB,CAAAA,IAA5C;AAA4D,IAAK,EAAjE,CAAqElB,sBAAuBqB,CAAAA,OALtF,CAF8C,CAQvDK,UAAgE,IAArD,GAACzB,sBAAD,CAA0BC,iBAAkBgB,CAAAA,IAA5C,EAA4D,IAAK,EAAjE,CAAqEjB,sBAAuByB,CAAAA,QAAvGA,GAAoHC,mBAR7D,CAAnD,CAXoD,CAA9C,CAHiC,CAArC,CA0BZvC,OAAOV,CAAAA,IAAP,CAAYyC,KAAMC,CAAAA,YAAlB,CAAgCzC,CAAAA,OAAhC,CAAwCG,GAAA,EAAO,CAC7C,MAAM8B,QAAUO,KAAMC,CAAAA,YAAN,CAAmBtC,GAAnB,CAAwB8B,CAAAA,OAG5B,QAAZ,GAAI9B,GAAJ,EACED,QAAA,CAAS+B,OAAQgB,CAAAA,MAAjB,CAAyB,YAAzB,CAAuC,MAAvC,CACA,CAAA/C,QAAA,CAAS+B,OAAQgB,CAAAA,MAAjB,CAAyB,cAAzB,CAAyC,MAAzC,CAFF,GAIE/C,QAAA,CAAS+B,OAAQgB,CAAAA,MAAjB,CAAyB,YAAzB,CAAuC,MAAvC,CACA,CAAA/C,QAAA,CAAS+B,OAAQgB,CAAAA,MAAjB,CAAyB,cAAzB,CAAyC,MAAzC,CALF,CASApD,WAAA,CAAWoC,OAAX,CAAoB,wJAAA,CAAA,KAAA,CAAA,GAAA,CAApB,CACA;GAAY,OAAZ,GAAI9B,GAAJ,CAAqB,CACnBD,QAAA,CAAS+B,OAAQiB,CAAAA,KAAjB,CAAwB,YAAxB,CAAsC,GAAI5C,OAAQ6C,CAAAA,kBAAZ,EAAgClB,OAAQmB,CAAAA,KAAMpB,CAAAA,KAA9C,CAAqD,EAArD,CAAtC,CACA9B,SAAA,CAAS+B,OAAQiB,CAAAA,KAAjB,CAAwB,WAAxB,CAAqC,GAAI5C,OAAQ6C,CAAAA,kBAAZ,EAAgClB,OAAQoB,CAAAA,IAAKrB,CAAAA,KAA7C,CAAoD,EAApD,CAArC,CACA9B,SAAA,CAAS+B,OAAQiB,CAAAA,KAAjB,CAAwB,cAAxB,CAAwC,GAAI5C,OAAQ6C,CAAAA,kBAAZ,EAAgClB,OAAQqB,CAAAA,OAAQtB,CAAAA,KAAhD,CAAuD,EAAvD,CAAxC,CACA9B,SAAA,CAAS+B,OAAQiB,CAAAA,KAAjB,CAAwB,cAAxB,CAAwC,GAAI5C,OAAQ6C,CAAAA,kBAAZ,EAAgClB,OAAQsB,CAAAA,OAAQvB,CAAAA,KAAhD,CAAuD,EAAvD,CAAxC,CACA9B,SAAA,CAAS+B,OAAQiB,CAAAA,KAAjB,CAAwB,eAAxB,CAAyCtB,SAAA,CAAU,oBAAV,CAAzC,CACA1B,SAAA,CAAS+B,OAAQiB,CAAAA,KAAjB,CAAwB,cAAxB;AAAwCtB,SAAA,CAAU,mBAAV,CAAxC,CACA1B,SAAA,CAAS+B,OAAQiB,CAAAA,KAAjB,CAAwB,iBAAxB,CAA2CtB,SAAA,CAAU,sBAAV,CAA3C,CACA1B,SAAA,CAAS+B,OAAQiB,CAAAA,KAAjB,CAAwB,iBAAxB,CAA2CtB,SAAA,CAAU,sBAAV,CAA3C,CACA1B,SAAA,CAAS+B,OAAQiB,CAAAA,KAAjB,CAAwB,kBAAxB,CAA4CM,MAAA,CAAO,EAAA,EAAMtB,YAAauB,CAAAA,eAAb,CAA6BxB,OAAQmB,CAAAA,KAAMM,CAAAA,IAA3C,CAAb,CAA5C,CACAxD,SAAA,CAAS+B,OAAQiB,CAAAA,KAAjB,CAAwB,iBAAxB,CAA2CM,MAAA,CAAO,EAAA,EAAMtB,YAAauB,CAAAA,eAAb,CAA6BxB,OAAQoB,CAAAA,IAAKK,CAAAA,IAA1C,CAAb,CAA3C,CACAxD,SAAA,CAAS+B,OAAQiB,CAAAA,KAAjB,CAAwB,oBAAxB,CAA8CM,MAAA,CAAO,EAAA,EAAMtB,YAAauB,CAAAA,eAAb,CAA6BxB,OAAQqB,CAAAA,OAAQI,CAAAA,IAA7C,CAAb,CAA9C,CACAxD,SAAA,CAAS+B,OAAQiB,CAAAA,KAAjB;AAAwB,oBAAxB,CAA8CM,MAAA,CAAO,EAAA,EAAMtB,YAAauB,CAAAA,eAAb,CAA6BxB,OAAQsB,CAAAA,OAAQG,CAAAA,IAA7C,CAAb,CAA9C,CACAxD,SAAA,CAAS+B,OAAQiB,CAAAA,KAAjB,CAAwB,iBAAxB,CAA2C,GAAI5C,OAAQqD,CAAAA,mBAAZ,EAAiC1B,OAAQmB,CAAAA,KAAMpB,CAAAA,KAA/C,CAAsD,EAAtD,CAA3C,CACA9B,SAAA,CAAS+B,OAAQiB,CAAAA,KAAjB,CAAwB,gBAAxB,CAA0C,GAAI5C,OAAQqD,CAAAA,mBAAZ,EAAiC1B,OAAQoB,CAAAA,IAAKrB,CAAAA,KAA9C,CAAqD,EAArD,CAA1C,CACA9B,SAAA,CAAS+B,OAAQiB,CAAAA,KAAjB,CAAwB,mBAAxB,CAA6C,GAAI5C,OAAQqD,CAAAA,mBAAZ,EAAiC1B,OAAQqB,CAAAA,OAAQtB,CAAAA,KAAjD,CAAwD,EAAxD,CAA7C,CACA9B,SAAA,CAAS+B,OAAQiB,CAAAA,KAAjB,CAAwB,mBAAxB,CAA6C,GAAI5C,OAAQqD,CAAAA,mBAAZ,EAAiC1B,OAAQsB,CAAAA,OAAQvB,CAAAA,KAAjD,CAAwD,EAAxD,CAA7C,CACA9B,SAAA,CAAS+B,OAAQiB,CAAAA,KAAjB;AAAwB,gBAAxB,CAA0CtB,SAAA,CAAU,oBAAV,CAA1C,CACA1B,SAAA,CAAS+B,OAAQiB,CAAAA,KAAjB,CAAwB,eAAxB,CAAyCtB,SAAA,CAAU,mBAAV,CAAzC,CACA1B,SAAA,CAAS+B,OAAQiB,CAAAA,KAAjB,CAAwB,kBAAxB,CAA4CtB,SAAA,CAAU,sBAAV,CAA5C,CACA1B,SAAA,CAAS+B,OAAQiB,CAAAA,KAAjB,CAAwB,kBAAxB,CAA4CtB,SAAA,CAAU,sBAAV,CAA5C,CACA1B,SAAA,CAAS+B,OAAQ2B,CAAAA,MAAjB,CAAyB,WAAzB,CAAsChC,SAAA,CAAU,kBAAV,CAAtC,CACA1B,SAAA,CAAS+B,OAAQ4B,CAAAA,MAAjB,CAAyB,WAAzB,CAAsCjC,SAAA,CAAU,kBAAV,CAAtC,CACA1B,SAAA,CAAS+B,OAAQ6B,CAAAA,IAAjB,CAAuB,eAAvB,CAAwClC,SAAA,CAAU,kBAAV,CAAxC,CACA1B,SAAA,CAAS+B,OAAQ6B,CAAAA,IAAjB,CAAuB,oBAAvB;AAA6ClC,SAAA,CAAU,kBAAV,CAA7C,CACA1B,SAAA,CAAS+B,OAAQ6B,CAAAA,IAAjB,CAAuB,kBAAvB,CAA2ClC,SAAA,CAAU,kBAAV,CAA3C,CACA1B,SAAA,CAAS+B,OAAQ8B,CAAAA,WAAjB,CAA8B,IAA9B,CAAoC,qBAApC,CACA7D,SAAA,CAAS+B,OAAQ8B,CAAAA,WAAjB,CAA8B,SAA9B,CAAyC,qBAAzC,CACA7D,SAAA,CAAS+B,OAAQ8B,CAAAA,WAAjB,CAA8B,YAA9B,CAA4C,qBAA5C,CACA7D,SAAA,CAAS+B,OAAQ+B,CAAAA,cAAjB,CAAiC,WAAjC,CAA8C,GAAI1D,OAAQqD,CAAAA,mBAAZ,EAAiC1B,OAAQgC,CAAAA,OAAQP,CAAAA,IAAjD,CAAuD,GAAvD,CAA9C,CACAxD,SAAA,CAAS+B,OAAQ+B,CAAAA,cAAjB,CAAiC,aAAjC,CAAgD,GAAI1D,OAAQqD,CAAAA,mBAAZ,EAAiC1B,OAAQiC,CAAAA,SAAUR,CAAAA,IAAnD,CAAyD,GAAzD,CAAhD,CACAxD,SAAA,CAAS+B,OAAQ+B,CAAAA,cAAjB;AAAiC,SAAjC,CAA4C,GAAI1D,OAAQqD,CAAAA,mBAAZ,EAAiC1B,OAAQmB,CAAAA,KAAMM,CAAAA,IAA/C,CAAqD,GAArD,CAA5C,CACAxD,SAAA,CAAS+B,OAAQ+B,CAAAA,cAAjB,CAAiC,QAAjC,CAA2C,GAAI1D,OAAQqD,CAAAA,mBAAZ,EAAiC1B,OAAQoB,CAAAA,IAAKK,CAAAA,IAA9C,CAAoD,GAApD,CAA3C,CACAxD,SAAA,CAAS+B,OAAQ+B,CAAAA,cAAjB,CAAiC,WAAjC,CAA8C,GAAI1D,OAAQqD,CAAAA,mBAAZ,EAAiC1B,OAAQqB,CAAAA,OAAQI,CAAAA,IAAjD,CAAuD,GAAvD,CAA9C,CACAxD,SAAA,CAAS+B,OAAQ+B,CAAAA,cAAjB,CAAiC,WAAjC,CAA8C,GAAI1D,OAAQqD,CAAAA,mBAAZ,EAAiC1B,OAAQsB,CAAAA,OAAQG,CAAAA,IAAjD,CAAuD,GAAvD,CAA9C,CACAxD,SAAA,CAAS+B,OAAQkC,CAAAA,QAAjB,CAA2B,IAA3B,CAAkC,QAAOvC,SAAA,CAAU,6BAAV,CAAP,UAAlC,CACA1B,SAAA,CAAS+B,OAAQmC,CAAAA,MAAjB,CAAyB,cAAzB,CAAyC,GAAI9D,OAAQqD,CAAAA,mBAAZ,EAAiC1B,OAAQgC,CAAAA,OAAQP,CAAAA,IAAjD;AAAuD,GAAvD,CAAzC,CACAxD,SAAA,CAAS+B,OAAQmC,CAAAA,MAAjB,CAAyB,gBAAzB,CAA2C,GAAI9D,OAAQqD,CAAAA,mBAAZ,EAAiC1B,OAAQiC,CAAAA,SAAUR,CAAAA,IAAnD,CAAyD,GAAzD,CAA3C,CACAxD,SAAA,CAAS+B,OAAQmC,CAAAA,MAAjB,CAAyB,YAAzB,CAAuC,GAAI9D,OAAQqD,CAAAA,mBAAZ,EAAiC1B,OAAQmB,CAAAA,KAAMM,CAAAA,IAA/C,CAAqD,GAArD,CAAvC,CACAxD,SAAA,CAAS+B,OAAQmC,CAAAA,MAAjB,CAAyB,WAAzB,CAAsC,GAAI9D,OAAQqD,CAAAA,mBAAZ,EAAiC1B,OAAQoB,CAAAA,IAAKK,CAAAA,IAA9C,CAAoD,GAApD,CAAtC,CACAxD,SAAA,CAAS+B,OAAQmC,CAAAA,MAAjB,CAAyB,cAAzB,CAAyC,GAAI9D,OAAQqD,CAAAA,mBAAZ,EAAiC1B,OAAQqB,CAAAA,OAAQI,CAAAA,IAAjD,CAAuD,GAAvD,CAAzC,CACAxD,SAAA,CAAS+B,OAAQmC,CAAAA,MAAjB,CAAyB,cAAzB,CAAyC,GAAI9D,OAAQqD,CAAAA,mBAAZ,EAAiC1B,OAAQsB,CAAAA,OAAQG,CAAAA,IAAjD,CAAuD,GAAvD,CAAzC,CACA,OAAMW;AAA4B,GAAI/D,OAAQgE,CAAAA,qBAAZ,EAAmCrC,OAAQsC,CAAAA,UAAW1D,CAAAA,OAAtD,CAA+D,EAA/D,CAClCX,SAAA,CAAS+B,OAAQuC,CAAAA,eAAjB,CAAkC,IAAlC,CAAwCH,yBAAxC,CACAnE,SAAA,CAAS+B,OAAQuC,CAAAA,eAAjB,CAAkC,OAAlC,CAA2ChB,MAAA,CAAO,EAAA,EAAMtB,YAAauB,CAAAA,eAAb,CAA6BY,yBAA7B,CAAb,CAA3C,CACAnE,SAAA,CAAS+B,OAAQwC,CAAAA,eAAjB,CAAkC,YAAlC,CAAgD,GAAInE,OAAQgE,CAAAA,qBAAZ,EAAmCrC,OAAQsC,CAAAA,UAAWG,CAAAA,KAAtD,CAA6D,GAA7D,CAAhD,CACAxE,SAAA,CAAS+B,OAAQ0C,CAAAA,aAAjB,CAAgC,QAAhC,CAA0C/C,SAAA,CAAU,kBAAV,CAA1C,CACA1B,SAAA,CAAS+B,OAAQ2C,CAAAA,WAAjB,CAA8B,QAA9B,CAAwChD,SAAA,CAAU,kBAAV,CAAxC,CACA1B,SAAA,CAAS+B,OAAQ4C,CAAAA,MAAjB;AAAyB,cAAzB,CAAyCjD,SAAA,CAAU,sBAAV,CAAzC,CACA1B,SAAA,CAAS+B,OAAQ4C,CAAAA,MAAjB,CAAyB,sBAAzB,CAAiDjD,SAAA,CAAU,kBAAV,CAAjD,CACA1B,SAAA,CAAS+B,OAAQ4C,CAAAA,MAAjB,CAAyB,sBAAzB,CAAiD,GAAIvE,OAAQqD,CAAAA,mBAAZ,EAAiC1B,OAAQgC,CAAAA,OAAQP,CAAAA,IAAjD,CAAuD,GAAvD,CAAjD,CACAxD,SAAA,CAAS+B,OAAQ4C,CAAAA,MAAjB,CAAyB,wBAAzB,CAAmD,GAAIvE,OAAQqD,CAAAA,mBAAZ,EAAiC1B,OAAQiC,CAAAA,SAAUR,CAAAA,IAAnD,CAAyD,GAAzD,CAAnD,CACAxD,SAAA,CAAS+B,OAAQ4C,CAAAA,MAAjB,CAAyB,oBAAzB,CAA+C,GAAIvE,OAAQqD,CAAAA,mBAAZ,EAAiC1B,OAAQmB,CAAAA,KAAMM,CAAAA,IAA/C,CAAqD,GAArD,CAA/C,CACAxD,SAAA,CAAS+B,OAAQ4C,CAAAA,MAAjB,CAAyB,mBAAzB,CAA8C,GAAIvE,OAAQqD,CAAAA,mBAAZ,EAAiC1B,OAAQoB,CAAAA,IAAKK,CAAAA,IAA9C;AAAoD,GAApD,CAA9C,CACAxD,SAAA,CAAS+B,OAAQ4C,CAAAA,MAAjB,CAAyB,sBAAzB,CAAiD,GAAIvE,OAAQqD,CAAAA,mBAAZ,EAAiC1B,OAAQqB,CAAAA,OAAQI,CAAAA,IAAjD,CAAuD,GAAvD,CAAjD,CACAxD,SAAA,CAAS+B,OAAQ4C,CAAAA,MAAjB,CAAyB,sBAAzB,CAAiD,GAAIvE,OAAQqD,CAAAA,mBAAZ,EAAiC1B,OAAQsB,CAAAA,OAAQG,CAAAA,IAAjD,CAAuD,GAAvD,CAAjD,CACAxD,SAAA,CAAS+B,OAAQ6C,CAAAA,SAAjB,CAA4B,QAA5B,CAAsC,GAAIxE,OAAQqD,CAAAA,mBAAZ,EAAiC,GAAIrD,OAAQyE,CAAAA,iBAAZ,EAA+B9C,OAAQ+C,CAAAA,OAAvC,CAAgD,CAAhD,CAAjC,CAAqF,GAArF,CAAtC,CAxDmB,CAArB,IA0DO,CACL9E,QAAA,CAAS+B,OAAQiB,CAAAA,KAAjB,CAAwB,YAAxB,CAAsC,GAAI5C,OAAQqD,CAAAA,mBAAZ,EAAiC1B,OAAQmB,CAAAA,KAAMpB,CAAAA,KAA/C,CAAsD,EAAtD,CAAtC,CACA9B,SAAA,CAAS+B,OAAQiB,CAAAA,KAAjB,CAAwB,WAAxB,CAAqC,GAAI5C,OAAQqD,CAAAA,mBAAZ,EAAiC1B,OAAQoB,CAAAA,IAAKrB,CAAAA,KAA9C;AAAqD,EAArD,CAArC,CACA9B,SAAA,CAAS+B,OAAQiB,CAAAA,KAAjB,CAAwB,cAAxB,CAAwC,GAAI5C,OAAQqD,CAAAA,mBAAZ,EAAiC1B,OAAQqB,CAAAA,OAAQtB,CAAAA,KAAjD,CAAwD,EAAxD,CAAxC,CACA9B,SAAA,CAAS+B,OAAQiB,CAAAA,KAAjB,CAAwB,cAAxB,CAAwC,GAAI5C,OAAQqD,CAAAA,mBAAZ,EAAiC1B,OAAQsB,CAAAA,OAAQvB,CAAAA,KAAjD,CAAwD,EAAxD,CAAxC,CACA9B,SAAA,CAAS+B,OAAQiB,CAAAA,KAAjB,CAAwB,eAAxB,CAAyCtB,SAAA,CAAU,oBAAV,CAAzC,CACA1B,SAAA,CAAS+B,OAAQiB,CAAAA,KAAjB,CAAwB,cAAxB,CAAwCtB,SAAA,CAAU,mBAAV,CAAxC,CACA1B,SAAA,CAAS+B,OAAQiB,CAAAA,KAAjB,CAAwB,iBAAxB,CAA2CtB,SAAA,CAAU,sBAAV,CAA3C,CACA1B,SAAA,CAAS+B,OAAQiB,CAAAA,KAAjB,CAAwB,iBAAxB,CAA2CtB,SAAA,CAAU,sBAAV,CAA3C,CACA1B,SAAA,CAAS+B,OAAQiB,CAAAA,KAAjB;AAAwB,kBAAxB,CAA4CM,MAAA,CAAO,EAAA,EAAMnB,WAAYoB,CAAAA,eAAZ,CAA4BxB,OAAQmB,CAAAA,KAAMb,CAAAA,IAA1C,CAAb,CAA5C,CACArC,SAAA,CAAS+B,OAAQiB,CAAAA,KAAjB,CAAwB,iBAAxB,CAA2CM,MAAA,CAAO,EAAA,EAAMnB,WAAYoB,CAAAA,eAAZ,CAA4BxB,OAAQoB,CAAAA,IAAKd,CAAAA,IAAzC,CAAb,CAA3C,CACArC,SAAA,CAAS+B,OAAQiB,CAAAA,KAAjB,CAAwB,oBAAxB,CAA8CM,MAAA,CAAO,EAAA,EAAMnB,WAAYoB,CAAAA,eAAZ,CAA4BxB,OAAQqB,CAAAA,OAAQf,CAAAA,IAA5C,CAAb,CAA9C,CACArC,SAAA,CAAS+B,OAAQiB,CAAAA,KAAjB,CAAwB,oBAAxB,CAA8CM,MAAA,CAAO,EAAA,EAAMnB,WAAYoB,CAAAA,eAAZ,CAA4BxB,OAAQsB,CAAAA,OAAQhB,CAAAA,IAA5C,CAAb,CAA9C,CACArC,SAAA,CAAS+B,OAAQiB,CAAAA,KAAjB,CAAwB,iBAAxB,CAA2C,GAAI5C,OAAQ6C,CAAAA,kBAAZ,EAAgClB,OAAQmB,CAAAA,KAAMpB,CAAAA,KAA9C,CAAqD,EAArD,CAA3C,CACA9B,SAAA,CAAS+B,OAAQiB,CAAAA,KAAjB;AAAwB,gBAAxB,CAA0C,GAAI5C,OAAQ6C,CAAAA,kBAAZ,EAAgClB,OAAQoB,CAAAA,IAAKrB,CAAAA,KAA7C,CAAoD,EAApD,CAA1C,CACA9B,SAAA,CAAS+B,OAAQiB,CAAAA,KAAjB,CAAwB,mBAAxB,CAA6C,GAAI5C,OAAQ6C,CAAAA,kBAAZ,EAAgClB,OAAQqB,CAAAA,OAAQtB,CAAAA,KAAhD,CAAuD,EAAvD,CAA7C,CACA9B,SAAA,CAAS+B,OAAQiB,CAAAA,KAAjB,CAAwB,mBAAxB,CAA6C,GAAI5C,OAAQ6C,CAAAA,kBAAZ,EAAgClB,OAAQsB,CAAAA,OAAQvB,CAAAA,KAAhD,CAAuD,EAAvD,CAA7C,CACA9B,SAAA,CAAS+B,OAAQiB,CAAAA,KAAjB,CAAwB,gBAAxB,CAA0CtB,SAAA,CAAU,oBAAV,CAA1C,CACA1B,SAAA,CAAS+B,OAAQiB,CAAAA,KAAjB,CAAwB,eAAxB,CAAyCtB,SAAA,CAAU,mBAAV,CAAzC,CACA1B,SAAA,CAAS+B,OAAQiB,CAAAA,KAAjB,CAAwB,kBAAxB,CAA4CtB,SAAA,CAAU,sBAAV,CAA5C,CACA1B,SAAA,CAAS+B,OAAQiB,CAAAA,KAAjB;AAAwB,kBAAxB,CAA4CtB,SAAA,CAAU,sBAAV,CAA5C,CACA1B,SAAA,CAAS+B,OAAQ2B,CAAAA,MAAjB,CAAyB,WAAzB,CAAsChC,SAAA,CAAU,kBAAV,CAAtC,CACA1B,SAAA,CAAS+B,OAAQ2B,CAAAA,MAAjB,CAAyB,QAAzB,CAAmChC,SAAA,CAAU,0BAAV,CAAnC,CACA1B,SAAA,CAAS+B,OAAQ2B,CAAAA,MAAjB,CAAyB,WAAzB,CAAsChC,SAAA,CAAU,sBAAV,CAAtC,CACA1B,SAAA,CAAS+B,OAAQ4B,CAAAA,MAAjB,CAAyB,WAAzB,CAAsCjC,SAAA,CAAU,kBAAV,CAAtC,CACA1B,SAAA,CAAS+B,OAAQ6B,CAAAA,IAAjB,CAAuB,eAAvB,CAAwClC,SAAA,CAAU,kBAAV,CAAxC,CACA1B,SAAA,CAAS+B,OAAQ6B,CAAAA,IAAjB,CAAuB,oBAAvB,CAA6ClC,SAAA,CAAU,kBAAV,CAA7C,CACA1B,SAAA,CAAS+B,OAAQ6B,CAAAA,IAAjB,CAAuB,kBAAvB;AAA2ClC,SAAA,CAAU,kBAAV,CAA3C,CACA1B,SAAA,CAAS+B,OAAQ8B,CAAAA,WAAjB,CAA8B,IAA9B,CAAoC,2BAApC,CACA7D,SAAA,CAAS+B,OAAQ8B,CAAAA,WAAjB,CAA8B,SAA9B,CAAyC,2BAAzC,CACA7D,SAAA,CAAS+B,OAAQ8B,CAAAA,WAAjB,CAA8B,YAA9B,CAA4C,2BAA5C,CACA7D,SAAA,CAAS+B,OAAQ+B,CAAAA,cAAjB,CAAiC,WAAjC,CAA8C,GAAI1D,OAAQ6C,CAAAA,kBAAZ,EAAgClB,OAAQgC,CAAAA,OAAQP,CAAAA,IAAhD,CAAsD,EAAtD,CAA9C,CACAxD,SAAA,CAAS+B,OAAQ+B,CAAAA,cAAjB,CAAiC,aAAjC,CAAgD,GAAI1D,OAAQ6C,CAAAA,kBAAZ,EAAgClB,OAAQiC,CAAAA,SAAUR,CAAAA,IAAlD,CAAwD,EAAxD,CAAhD,CACAxD,SAAA,CAAS+B,OAAQ+B,CAAAA,cAAjB,CAAiC,SAAjC,CAA4C,GAAI1D,OAAQ6C,CAAAA,kBAAZ,EAAgClB,OAAQmB,CAAAA,KAAMM,CAAAA,IAA9C;AAAoD,EAApD,CAA5C,CACAxD,SAAA,CAAS+B,OAAQ+B,CAAAA,cAAjB,CAAiC,QAAjC,CAA2C,GAAI1D,OAAQ6C,CAAAA,kBAAZ,EAAgClB,OAAQoB,CAAAA,IAAKK,CAAAA,IAA7C,CAAmD,EAAnD,CAA3C,CACAxD,SAAA,CAAS+B,OAAQ+B,CAAAA,cAAjB,CAAiC,WAAjC,CAA8C,GAAI1D,OAAQ6C,CAAAA,kBAAZ,EAAgClB,OAAQqB,CAAAA,OAAQI,CAAAA,IAAhD,CAAsD,EAAtD,CAA9C,CACAxD,SAAA,CAAS+B,OAAQ+B,CAAAA,cAAjB,CAAiC,WAAjC,CAA8C,GAAI1D,OAAQ6C,CAAAA,kBAAZ,EAAgClB,OAAQsB,CAAAA,OAAQG,CAAAA,IAAhD,CAAsD,EAAtD,CAA9C,CACAxD,SAAA,CAAS+B,OAAQkC,CAAAA,QAAjB,CAA2B,IAA3B,CAAkC,QAAOvC,SAAA,CAAU,6BAAV,CAAP,UAAlC,CACA1B,SAAA,CAAS+B,OAAQmC,CAAAA,MAAjB,CAAyB,cAAzB,CAAyC,GAAI9D,OAAQ6C,CAAAA,kBAAZ,EAAgClB,OAAQgC,CAAAA,OAAQP,CAAAA,IAAhD,CAAsD,EAAtD,CAAzC,CACAxD,SAAA,CAAS+B,OAAQmC,CAAAA,MAAjB;AAAyB,gBAAzB,CAA2C,GAAI9D,OAAQ6C,CAAAA,kBAAZ,EAAgClB,OAAQiC,CAAAA,SAAUR,CAAAA,IAAlD,CAAwD,EAAxD,CAA3C,CACAxD,SAAA,CAAS+B,OAAQmC,CAAAA,MAAjB,CAAyB,YAAzB,CAAuC,GAAI9D,OAAQ6C,CAAAA,kBAAZ,EAAgClB,OAAQmB,CAAAA,KAAMM,CAAAA,IAA9C,CAAoD,EAApD,CAAvC,CACAxD,SAAA,CAAS+B,OAAQmC,CAAAA,MAAjB,CAAyB,WAAzB,CAAsC,GAAI9D,OAAQ6C,CAAAA,kBAAZ,EAAgClB,OAAQoB,CAAAA,IAAKK,CAAAA,IAA7C,CAAmD,EAAnD,CAAtC,CACAxD,SAAA,CAAS+B,OAAQmC,CAAAA,MAAjB,CAAyB,cAAzB,CAAyC,GAAI9D,OAAQ6C,CAAAA,kBAAZ,EAAgClB,OAAQqB,CAAAA,OAAQI,CAAAA,IAAhD,CAAsD,EAAtD,CAAzC,CACAxD,SAAA,CAAS+B,OAAQmC,CAAAA,MAAjB,CAAyB,cAAzB,CAAyC,GAAI9D,OAAQ6C,CAAAA,kBAAZ,EAAgClB,OAAQsB,CAAAA,OAAQG,CAAAA,IAAhD,CAAsD,EAAtD,CAAzC,CACA,OAAMW,0BAA4B,GAAI/D,OAAQgE,CAAAA,qBAAZ,EAAmCrC,OAAQsC,CAAAA,UAAW1D,CAAAA,OAAtD;AAA+D,GAA/D,CAClCX,SAAA,CAAS+B,OAAQuC,CAAAA,eAAjB,CAAkC,IAAlC,CAAwCH,yBAAxC,CACAnE,SAAA,CAAS+B,OAAQuC,CAAAA,eAAjB,CAAkC,OAAlC,CAA2ChB,MAAA,CAAO,EAAA,EAAMnB,WAAYoB,CAAAA,eAAZ,CAA4BY,yBAA5B,CAAb,CAA3C,CACAnE,SAAA,CAAS+B,OAAQwC,CAAAA,eAAjB,CAAkC,YAAlC,CAAgD,GAAInE,OAAQgE,CAAAA,qBAAZ,EAAmCrC,OAAQsC,CAAAA,UAAWG,CAAAA,KAAtD,CAA6D,GAA7D,CAAhD,CACAxE,SAAA,CAAS+B,OAAQ0C,CAAAA,aAAjB,CAAgC,QAAhC,CAA0C/C,SAAA,CAAU,kBAAV,CAA1C,CACA1B,SAAA,CAAS+B,OAAQ2C,CAAAA,WAAjB,CAA8B,QAA9B,CAAwChD,SAAA,CAAU,kBAAV,CAAxC,CACA1B,SAAA,CAAS+B,OAAQ4C,CAAAA,MAAjB,CAAyB,cAAzB,CAAyCjD,SAAA,CAAU,kBAAV,CAAzC,CACA1B,SAAA,CAAS+B,OAAQ4C,CAAAA,MAAjB;AAAyB,sBAAzB,CAAiDjD,SAAA,CAAU,kBAAV,CAAjD,CACA1B,SAAA,CAAS+B,OAAQ4C,CAAAA,MAAjB,CAAyB,sBAAzB,CAAiD,GAAIvE,OAAQ6C,CAAAA,kBAAZ,EAAgClB,OAAQgC,CAAAA,OAAQP,CAAAA,IAAhD,CAAsD,GAAtD,CAAjD,CACAxD,SAAA,CAAS+B,OAAQ4C,CAAAA,MAAjB,CAAyB,wBAAzB,CAAmD,GAAIvE,OAAQ6C,CAAAA,kBAAZ,EAAgClB,OAAQiC,CAAAA,SAAUR,CAAAA,IAAlD,CAAwD,GAAxD,CAAnD,CACAxD,SAAA,CAAS+B,OAAQ4C,CAAAA,MAAjB,CAAyB,oBAAzB,CAA+C,GAAIvE,OAAQ6C,CAAAA,kBAAZ,EAAgClB,OAAQmB,CAAAA,KAAMM,CAAAA,IAA9C,CAAoD,GAApD,CAA/C,CACAxD,SAAA,CAAS+B,OAAQ4C,CAAAA,MAAjB,CAAyB,mBAAzB,CAA8C,GAAIvE,OAAQ6C,CAAAA,kBAAZ,EAAgClB,OAAQoB,CAAAA,IAAKK,CAAAA,IAA7C,CAAmD,GAAnD,CAA9C,CACAxD,SAAA,CAAS+B,OAAQ4C,CAAAA,MAAjB,CAAyB,sBAAzB;AAAiD,GAAIvE,OAAQ6C,CAAAA,kBAAZ,EAAgClB,OAAQqB,CAAAA,OAAQI,CAAAA,IAAhD,CAAsD,GAAtD,CAAjD,CACAxD,SAAA,CAAS+B,OAAQ4C,CAAAA,MAAjB,CAAyB,sBAAzB,CAAiD,GAAIvE,OAAQ6C,CAAAA,kBAAZ,EAAgClB,OAAQsB,CAAAA,OAAQG,CAAAA,IAAhD,CAAsD,GAAtD,CAAjD,CACAxD,SAAA,CAAS+B,OAAQ6C,CAAAA,SAAjB,CAA4B,QAA5B,CAAsC,GAAIxE,OAAQ6C,CAAAA,kBAAZ,EAAgC,GAAI7C,OAAQyE,CAAAA,iBAAZ,EAA+B9C,OAAQ+C,CAAAA,OAAvC,CAAgD,CAAhD,CAAhC,CAAoF,GAApF,CAAtC,CA1DK,CADL9E,QAAA,CAAS+B,OAAQgD,CAAAA,OAAjB,CAA0B,IAA1B,CAAgC,GAAI3E,OAAQyE,CAAAA,iBAAZ,EAA+B9C,OAAQiD,CAAAA,IAAR,CAAa,GAAb,CAA/B,CAAkD,GAAlD,CAAhC,CAgEF7E,gBAAA,CAAgB4B,OAAQsC,CAAAA,UAAxB,CAAoC,SAApC,CACAlE,gBAAA,CAAgB4B,OAAQgB,CAAAA,MAAxB,CAAgC,YAAhC,CACA5C,gBAAA,CAAgB4B,OAAQgB,CAAAA,MAAxB,CAAgC,cAAhC,CACA5C;eAAA,CAAgB4B,OAAhB,CAAyB,SAAzB,CACAxB,OAAOV,CAAAA,IAAP,CAAYkC,OAAZ,CAAqBjC,CAAAA,OAArB,CAA6BmF,KAAA,EAAS,CACpC,MAAMC,OAASnD,OAAA,CAAQkD,KAAR,CAIXC,OAAJ,EAAgC,QAAhC,GAAc,MAAOA,OAArB,GAEMA,MAAO1B,CAAAA,IAiBX,EAhBExD,QAAA,CAAS+B,OAAA,CAAQkD,KAAR,CAAT,CAAyB,aAAzB,CAAwC,GAAI7E,OAAQC,CAAAA,wBAAZ,EAAsC6E,MAAO1B,CAAAA,IAA7C,CAAxC,CAgBF,CAdI0B,MAAOpD,CAAAA,KAcX,EAbE9B,QAAA,CAAS+B,OAAA,CAAQkD,KAAR,CAAT,CAAyB,cAAzB,CAAyC,GAAI7E,OAAQC,CAAAA,wBAAZ,EAAsC6E,MAAOpD,CAAAA,KAA7C,CAAzC,CAaF,CAXIoD,MAAO7C,CAAAA,IAWX,EAVErC,QAAA,CAAS+B,OAAA,CAAQkD,KAAR,CAAT,CAAyB,aAAzB,CAAwC,GAAI7E,OAAQC,CAAAA,wBAAZ,EAAsC6E,MAAO7C,CAAAA,IAA7C,CAAxC,CAUF,CARI6C,MAAOC,CAAAA,YAQX,EAPEnF,QAAA,CAAS+B,OAAA,CAAQkD,KAAR,CAAT,CAAyB,qBAAzB;AAAgD,GAAI7E,OAAQC,CAAAA,wBAAZ,EAAsC6E,MAAOC,CAAAA,YAA7C,CAAhD,CAOF,CALc,MAKd,GALIF,KAKJ,GAHE9E,eAAA,CAAgB4B,OAAA,CAAQkD,KAAR,CAAhB,CAAgC,SAAhC,CACA,CAAA9E,eAAA,CAAgB4B,OAAA,CAAQkD,KAAR,CAAhB,CAAgC,WAAhC,CAEF,EAAc,QAAd,GAAIA,KAAJ,GAEMC,MAAOE,CAAAA,MAGX,EAFEjF,eAAA,CAAgB4B,OAAA,CAAQkD,KAAR,CAAhB,CAAgC,QAAhC,CAEF,CAAIC,MAAOG,CAAAA,QAAX,EACElF,eAAA,CAAgB4B,OAAA,CAAQkD,KAAR,CAAhB,CAAgC,UAAhC,CANJ,CAnBF,CALoC,CAAtC,CA3I6C,CAA/C,CA+KA3C,MAAA,CAAQxB,IAAKwE,CAAAA,MAAL,CAAY,CAACC,GAAD,CAAMC,QAAN,CAAA,EAAmB,GAAIC,MAAOC,CAAAA,SAAX,EAAsBH,GAAtB,CAA2BC,QAA3B,CAA/B,CAAqElD,KAArE,CACRA,MAAMqD,CAAAA,iBAAN,CAA0B,GAAI9D,SAAUlB,CAAAA,OAAd,EAAuB,EAAvB,CAA2BP,OAAQwF,CAAAA,wBAAnC,CAAsE,IAAT,EAAArE,OAAA,CAAgB,IAAK,EAArB,CAAyBA,OAAMoE,CAAAA,iBAA5F,CAC1BrD;KAAMuD,CAAAA,WAAN,CAAoBC,QAAW,CAACC,KAAD,CAAQ,CACrC,MAAO,GAAI3F,OAAQ4F,CAAAA,wBAAZ,EAAsC,CAC3CC,GAAIF,KADuC,CAE3CzD,MAAO,IAFoC,CAAtC,CAD8B,CAMvC,OAAOA,MAvOmC,CA5C5C,KAAIT,UAAYvB,MAAA,CAAuBd,OAAA,CAAQ,oDAAR,CAAvB,CAAhB,CACIgC,+BAAiClB,MAAA,CAAuBd,OAAA,CAAQ,yEAAR,CAAvB,CADrC,CAEIiG,OAASjG,OAAA,CAAQ,sCAAR,CAFb,CAGIY,QAAUZ,OAAA,CAAQ,uCAAR,CAHd,CAIIoC,aAAetB,MAAA,CAAuBd,OAAA,CAAQ,2DAAR,CAAvB,CAJnB;AAKI0G,iBAAmB5F,MAAA,CAAuBd,OAAA,CAAQ,+DAAR,CAAvB,CAd4G,OAe7HiC,UAAY,CAAC,cAAD,CAAiB,cAAjB,CAfiH,CAgBjIS,WAAa,CAAC,SAAD,CAhBoH,CAiB7HY,oBAAsB,CAAC,GAAGqD,KAAA,CAAM,EAAN,CAAJ,CAAeC,CAAAA,GAAf,CAAmB,CAACC,CAAD,CAAIC,KAAJ,CAAA,EAAc,CAC3D,GAAc,CAAd,GAAIA,KAAJ,CAIA,MADMC,EACE,CADQ,GAAIL,gBAAiBvF,CAAAA,OAArB,EAA8B2F,KAA9B,CACR,CAAA,sCAAqCC,CAArC,yBAAqEA,CAArE,IALmD,CAAjC,CAjBuG,CA2C7HjD,OAASkD,EAAAlD,EAAM,CACnB,GAAI,CACF,MAAOkD,GAAA,EADL,CAEF,MAAOtD,KAAP,CAAc,EAHG,CA3C8G,CAmD7HxC,gBAAkB,CAACY,YAAA,CAAe,KAAhB,CAAAZ,EAA0B,GAAIN,OAAQqG,CAAAA,wBAAZ,EAAsCnF,YAAtC,CAClD5B,QAAQgB,CAAAA,eAAR;AAA0BA,eApDyG;\",\n\"sources\":[\"node_modules/@mui/material/node/styles/experimental_extendTheme.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$mui$material$node$styles$experimental_extendTheme\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nvar _interopRequireDefault = require(\\\"@babel/runtime/helpers/interopRequireDefault\\\");\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.createGetCssVar = void 0;\\nexports.default = extendTheme;\\nvar _extends2 = _interopRequireDefault(require(\\\"@babel/runtime/helpers/extends\\\"));\\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\\\"@babel/runtime/helpers/objectWithoutPropertiesLoose\\\"));\\nvar _utils = require(\\\"@mui/utils\\\");\\nvar _system = require(\\\"@mui/system\\\");\\nvar _createTheme = _interopRequireDefault(require(\\\"./createTheme\\\"));\\nvar _getOverlayAlpha = _interopRequireDefault(require(\\\"./getOverlayAlpha\\\"));\\nconst _excluded = [\\\"colorSchemes\\\", \\\"cssVarPrefix\\\"],\\n  _excluded2 = [\\\"palette\\\"];\\nconst defaultDarkOverlays = [...Array(25)].map((_, index) => {\\n  if (index === 0) {\\n    return undefined;\\n  }\\n  const overlay = (0, _getOverlayAlpha.default)(index);\\n  return `linear-gradient(rgba(255 255 255 / ${overlay}), rgba(255 255 255 / ${overlay}))`;\\n});\\nfunction assignNode(obj, keys) {\\n  keys.forEach(k => {\\n    if (!obj[k]) {\\n      obj[k] = {};\\n    }\\n  });\\n}\\nfunction setColor(obj, key, defaultValue) {\\n  if (!obj[key] && defaultValue) {\\n    obj[key] = defaultValue;\\n  }\\n}\\nfunction setColorChannel(obj, key) {\\n  if (!(`${key}Channel` in obj)) {\\n    // custom channel token is not provided, generate one.\\n    // if channel token can't be generated, show a warning.\\n    obj[`${key}Channel`] = (0, _system.private_safeColorChannel)(obj[key], `MUI: Can't create \\\\`palette.${key}Channel\\\\` because \\\\`palette.${key}\\\\` is not one of these formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().` + '\\\\n' + `To suppress this warning, you need to explicitly provide the \\\\`palette.${key}Channel\\\\` as a string (in rgb format, e.g. \\\"12 12 12\\\") or undefined if you want to remove the channel token.`);\\n  }\\n}\\nconst silent = fn => {\\n  try {\\n    return fn();\\n  } catch (error) {\\n    // ignore error\\n  }\\n  return undefined;\\n};\\nconst createGetCssVar = (cssVarPrefix = 'mui') => (0, _system.unstable_createGetCssVar)(cssVarPrefix);\\nexports.createGetCssVar = createGetCssVar;\\nfunction extendTheme(options = {}, ...args) {\\n  var _colorSchemesInput$li, _colorSchemesInput$da, _colorSchemesInput$li2, _colorSchemesInput$li3, _colorSchemesInput$da2, _colorSchemesInput$da3;\\n  const {\\n      colorSchemes: colorSchemesInput = {},\\n      cssVarPrefix = 'mui'\\n    } = options,\\n    input = (0, _objectWithoutPropertiesLoose2.default)(options, _excluded);\\n  const getCssVar = createGetCssVar(cssVarPrefix);\\n  const _createThemeWithoutVa = (0, _createTheme.default)((0, _extends2.default)({}, input, colorSchemesInput.light && {\\n      palette: (_colorSchemesInput$li = colorSchemesInput.light) == null ? void 0 : _colorSchemesInput$li.palette\\n    })),\\n    {\\n      palette: lightPalette\\n    } = _createThemeWithoutVa,\\n    muiTheme = (0, _objectWithoutPropertiesLoose2.default)(_createThemeWithoutVa, _excluded2);\\n  const {\\n    palette: darkPalette\\n  } = (0, _createTheme.default)({\\n    palette: (0, _extends2.default)({\\n      mode: 'dark'\\n    }, (_colorSchemesInput$da = colorSchemesInput.dark) == null ? void 0 : _colorSchemesInput$da.palette)\\n  });\\n  let theme = (0, _extends2.default)({}, muiTheme, {\\n    cssVarPrefix,\\n    getCssVar,\\n    colorSchemes: (0, _extends2.default)({}, colorSchemesInput, {\\n      light: (0, _extends2.default)({}, colorSchemesInput.light, {\\n        palette: lightPalette,\\n        opacity: (0, _extends2.default)({\\n          inputPlaceholder: 0.42,\\n          inputUnderline: 0.42,\\n          switchTrackDisabled: 0.12,\\n          switchTrack: 0.38\\n        }, (_colorSchemesInput$li2 = colorSchemesInput.light) == null ? void 0 : _colorSchemesInput$li2.opacity),\\n        overlays: ((_colorSchemesInput$li3 = colorSchemesInput.light) == null ? void 0 : _colorSchemesInput$li3.overlays) || []\\n      }),\\n      dark: (0, _extends2.default)({}, colorSchemesInput.dark, {\\n        palette: darkPalette,\\n        opacity: (0, _extends2.default)({\\n          inputPlaceholder: 0.5,\\n          inputUnderline: 0.7,\\n          switchTrackDisabled: 0.2,\\n          switchTrack: 0.3\\n        }, (_colorSchemesInput$da2 = colorSchemesInput.dark) == null ? void 0 : _colorSchemesInput$da2.opacity),\\n        overlays: ((_colorSchemesInput$da3 = colorSchemesInput.dark) == null ? void 0 : _colorSchemesInput$da3.overlays) || defaultDarkOverlays\\n      })\\n    })\\n  });\\n  Object.keys(theme.colorSchemes).forEach(key => {\\n    const palette = theme.colorSchemes[key].palette;\\n\\n    // attach black & white channels to common node\\n    if (key === 'light') {\\n      setColor(palette.common, 'background', '#fff');\\n      setColor(palette.common, 'onBackground', '#000');\\n    } else {\\n      setColor(palette.common, 'background', '#000');\\n      setColor(palette.common, 'onBackground', '#fff');\\n    }\\n\\n    // assign component variables\\n    assignNode(palette, ['Alert', 'AppBar', 'Avatar', 'Chip', 'FilledInput', 'LinearProgress', 'Skeleton', 'Slider', 'SnackbarContent', 'SpeedDialAction', 'StepConnector', 'StepContent', 'Switch', 'TableCell', 'Tooltip']);\\n    if (key === 'light') {\\n      setColor(palette.Alert, 'errorColor', (0, _system.private_safeDarken)(palette.error.light, 0.6));\\n      setColor(palette.Alert, 'infoColor', (0, _system.private_safeDarken)(palette.info.light, 0.6));\\n      setColor(palette.Alert, 'successColor', (0, _system.private_safeDarken)(palette.success.light, 0.6));\\n      setColor(palette.Alert, 'warningColor', (0, _system.private_safeDarken)(palette.warning.light, 0.6));\\n      setColor(palette.Alert, 'errorFilledBg', getCssVar('palette-error-main'));\\n      setColor(palette.Alert, 'infoFilledBg', getCssVar('palette-info-main'));\\n      setColor(palette.Alert, 'successFilledBg', getCssVar('palette-success-main'));\\n      setColor(palette.Alert, 'warningFilledBg', getCssVar('palette-warning-main'));\\n      setColor(palette.Alert, 'errorFilledColor', silent(() => lightPalette.getContrastText(palette.error.main)));\\n      setColor(palette.Alert, 'infoFilledColor', silent(() => lightPalette.getContrastText(palette.info.main)));\\n      setColor(palette.Alert, 'successFilledColor', silent(() => lightPalette.getContrastText(palette.success.main)));\\n      setColor(palette.Alert, 'warningFilledColor', silent(() => lightPalette.getContrastText(palette.warning.main)));\\n      setColor(palette.Alert, 'errorStandardBg', (0, _system.private_safeLighten)(palette.error.light, 0.9));\\n      setColor(palette.Alert, 'infoStandardBg', (0, _system.private_safeLighten)(palette.info.light, 0.9));\\n      setColor(palette.Alert, 'successStandardBg', (0, _system.private_safeLighten)(palette.success.light, 0.9));\\n      setColor(palette.Alert, 'warningStandardBg', (0, _system.private_safeLighten)(palette.warning.light, 0.9));\\n      setColor(palette.Alert, 'errorIconColor', getCssVar('palette-error-main'));\\n      setColor(palette.Alert, 'infoIconColor', getCssVar('palette-info-main'));\\n      setColor(palette.Alert, 'successIconColor', getCssVar('palette-success-main'));\\n      setColor(palette.Alert, 'warningIconColor', getCssVar('palette-warning-main'));\\n      setColor(palette.AppBar, 'defaultBg', getCssVar('palette-grey-100'));\\n      setColor(palette.Avatar, 'defaultBg', getCssVar('palette-grey-400'));\\n      setColor(palette.Chip, 'defaultBorder', getCssVar('palette-grey-400'));\\n      setColor(palette.Chip, 'defaultAvatarColor', getCssVar('palette-grey-700'));\\n      setColor(palette.Chip, 'defaultIconColor', getCssVar('palette-grey-700'));\\n      setColor(palette.FilledInput, 'bg', 'rgba(0, 0, 0, 0.06)');\\n      setColor(palette.FilledInput, 'hoverBg', 'rgba(0, 0, 0, 0.09)');\\n      setColor(palette.FilledInput, 'disabledBg', 'rgba(0, 0, 0, 0.12)');\\n      setColor(palette.LinearProgress, 'primaryBg', (0, _system.private_safeLighten)(palette.primary.main, 0.62));\\n      setColor(palette.LinearProgress, 'secondaryBg', (0, _system.private_safeLighten)(palette.secondary.main, 0.62));\\n      setColor(palette.LinearProgress, 'errorBg', (0, _system.private_safeLighten)(palette.error.main, 0.62));\\n      setColor(palette.LinearProgress, 'infoBg', (0, _system.private_safeLighten)(palette.info.main, 0.62));\\n      setColor(palette.LinearProgress, 'successBg', (0, _system.private_safeLighten)(palette.success.main, 0.62));\\n      setColor(palette.LinearProgress, 'warningBg', (0, _system.private_safeLighten)(palette.warning.main, 0.62));\\n      setColor(palette.Skeleton, 'bg', `rgba(${getCssVar('palette-text-primaryChannel')} / 0.11)`);\\n      setColor(palette.Slider, 'primaryTrack', (0, _system.private_safeLighten)(palette.primary.main, 0.62));\\n      setColor(palette.Slider, 'secondaryTrack', (0, _system.private_safeLighten)(palette.secondary.main, 0.62));\\n      setColor(palette.Slider, 'errorTrack', (0, _system.private_safeLighten)(palette.error.main, 0.62));\\n      setColor(palette.Slider, 'infoTrack', (0, _system.private_safeLighten)(palette.info.main, 0.62));\\n      setColor(palette.Slider, 'successTrack', (0, _system.private_safeLighten)(palette.success.main, 0.62));\\n      setColor(palette.Slider, 'warningTrack', (0, _system.private_safeLighten)(palette.warning.main, 0.62));\\n      const snackbarContentBackground = (0, _system.private_safeEmphasize)(palette.background.default, 0.8);\\n      setColor(palette.SnackbarContent, 'bg', snackbarContentBackground);\\n      setColor(palette.SnackbarContent, 'color', silent(() => lightPalette.getContrastText(snackbarContentBackground)));\\n      setColor(palette.SpeedDialAction, 'fabHoverBg', (0, _system.private_safeEmphasize)(palette.background.paper, 0.15));\\n      setColor(palette.StepConnector, 'border', getCssVar('palette-grey-400'));\\n      setColor(palette.StepContent, 'border', getCssVar('palette-grey-400'));\\n      setColor(palette.Switch, 'defaultColor', getCssVar('palette-common-white'));\\n      setColor(palette.Switch, 'defaultDisabledColor', getCssVar('palette-grey-100'));\\n      setColor(palette.Switch, 'primaryDisabledColor', (0, _system.private_safeLighten)(palette.primary.main, 0.62));\\n      setColor(palette.Switch, 'secondaryDisabledColor', (0, _system.private_safeLighten)(palette.secondary.main, 0.62));\\n      setColor(palette.Switch, 'errorDisabledColor', (0, _system.private_safeLighten)(palette.error.main, 0.62));\\n      setColor(palette.Switch, 'infoDisabledColor', (0, _system.private_safeLighten)(palette.info.main, 0.62));\\n      setColor(palette.Switch, 'successDisabledColor', (0, _system.private_safeLighten)(palette.success.main, 0.62));\\n      setColor(palette.Switch, 'warningDisabledColor', (0, _system.private_safeLighten)(palette.warning.main, 0.62));\\n      setColor(palette.TableCell, 'border', (0, _system.private_safeLighten)((0, _system.private_safeAlpha)(palette.divider, 1), 0.88));\\n      setColor(palette.Tooltip, 'bg', (0, _system.private_safeAlpha)(palette.grey[700], 0.92));\\n    } else {\\n      setColor(palette.Alert, 'errorColor', (0, _system.private_safeLighten)(palette.error.light, 0.6));\\n      setColor(palette.Alert, 'infoColor', (0, _system.private_safeLighten)(palette.info.light, 0.6));\\n      setColor(palette.Alert, 'successColor', (0, _system.private_safeLighten)(palette.success.light, 0.6));\\n      setColor(palette.Alert, 'warningColor', (0, _system.private_safeLighten)(palette.warning.light, 0.6));\\n      setColor(palette.Alert, 'errorFilledBg', getCssVar('palette-error-dark'));\\n      setColor(palette.Alert, 'infoFilledBg', getCssVar('palette-info-dark'));\\n      setColor(palette.Alert, 'successFilledBg', getCssVar('palette-success-dark'));\\n      setColor(palette.Alert, 'warningFilledBg', getCssVar('palette-warning-dark'));\\n      setColor(palette.Alert, 'errorFilledColor', silent(() => darkPalette.getContrastText(palette.error.dark)));\\n      setColor(palette.Alert, 'infoFilledColor', silent(() => darkPalette.getContrastText(palette.info.dark)));\\n      setColor(palette.Alert, 'successFilledColor', silent(() => darkPalette.getContrastText(palette.success.dark)));\\n      setColor(palette.Alert, 'warningFilledColor', silent(() => darkPalette.getContrastText(palette.warning.dark)));\\n      setColor(palette.Alert, 'errorStandardBg', (0, _system.private_safeDarken)(palette.error.light, 0.9));\\n      setColor(palette.Alert, 'infoStandardBg', (0, _system.private_safeDarken)(palette.info.light, 0.9));\\n      setColor(palette.Alert, 'successStandardBg', (0, _system.private_safeDarken)(palette.success.light, 0.9));\\n      setColor(palette.Alert, 'warningStandardBg', (0, _system.private_safeDarken)(palette.warning.light, 0.9));\\n      setColor(palette.Alert, 'errorIconColor', getCssVar('palette-error-main'));\\n      setColor(palette.Alert, 'infoIconColor', getCssVar('palette-info-main'));\\n      setColor(palette.Alert, 'successIconColor', getCssVar('palette-success-main'));\\n      setColor(palette.Alert, 'warningIconColor', getCssVar('palette-warning-main'));\\n      setColor(palette.AppBar, 'defaultBg', getCssVar('palette-grey-900'));\\n      setColor(palette.AppBar, 'darkBg', getCssVar('palette-background-paper')); // specific for dark mode\\n      setColor(palette.AppBar, 'darkColor', getCssVar('palette-text-primary')); // specific for dark mode\\n      setColor(palette.Avatar, 'defaultBg', getCssVar('palette-grey-600'));\\n      setColor(palette.Chip, 'defaultBorder', getCssVar('palette-grey-700'));\\n      setColor(palette.Chip, 'defaultAvatarColor', getCssVar('palette-grey-300'));\\n      setColor(palette.Chip, 'defaultIconColor', getCssVar('palette-grey-300'));\\n      setColor(palette.FilledInput, 'bg', 'rgba(255, 255, 255, 0.09)');\\n      setColor(palette.FilledInput, 'hoverBg', 'rgba(255, 255, 255, 0.13)');\\n      setColor(palette.FilledInput, 'disabledBg', 'rgba(255, 255, 255, 0.12)');\\n      setColor(palette.LinearProgress, 'primaryBg', (0, _system.private_safeDarken)(palette.primary.main, 0.5));\\n      setColor(palette.LinearProgress, 'secondaryBg', (0, _system.private_safeDarken)(palette.secondary.main, 0.5));\\n      setColor(palette.LinearProgress, 'errorBg', (0, _system.private_safeDarken)(palette.error.main, 0.5));\\n      setColor(palette.LinearProgress, 'infoBg', (0, _system.private_safeDarken)(palette.info.main, 0.5));\\n      setColor(palette.LinearProgress, 'successBg', (0, _system.private_safeDarken)(palette.success.main, 0.5));\\n      setColor(palette.LinearProgress, 'warningBg', (0, _system.private_safeDarken)(palette.warning.main, 0.5));\\n      setColor(palette.Skeleton, 'bg', `rgba(${getCssVar('palette-text-primaryChannel')} / 0.13)`);\\n      setColor(palette.Slider, 'primaryTrack', (0, _system.private_safeDarken)(palette.primary.main, 0.5));\\n      setColor(palette.Slider, 'secondaryTrack', (0, _system.private_safeDarken)(palette.secondary.main, 0.5));\\n      setColor(palette.Slider, 'errorTrack', (0, _system.private_safeDarken)(palette.error.main, 0.5));\\n      setColor(palette.Slider, 'infoTrack', (0, _system.private_safeDarken)(palette.info.main, 0.5));\\n      setColor(palette.Slider, 'successTrack', (0, _system.private_safeDarken)(palette.success.main, 0.5));\\n      setColor(palette.Slider, 'warningTrack', (0, _system.private_safeDarken)(palette.warning.main, 0.5));\\n      const snackbarContentBackground = (0, _system.private_safeEmphasize)(palette.background.default, 0.98);\\n      setColor(palette.SnackbarContent, 'bg', snackbarContentBackground);\\n      setColor(palette.SnackbarContent, 'color', silent(() => darkPalette.getContrastText(snackbarContentBackground)));\\n      setColor(palette.SpeedDialAction, 'fabHoverBg', (0, _system.private_safeEmphasize)(palette.background.paper, 0.15));\\n      setColor(palette.StepConnector, 'border', getCssVar('palette-grey-600'));\\n      setColor(palette.StepContent, 'border', getCssVar('palette-grey-600'));\\n      setColor(palette.Switch, 'defaultColor', getCssVar('palette-grey-300'));\\n      setColor(palette.Switch, 'defaultDisabledColor', getCssVar('palette-grey-600'));\\n      setColor(palette.Switch, 'primaryDisabledColor', (0, _system.private_safeDarken)(palette.primary.main, 0.55));\\n      setColor(palette.Switch, 'secondaryDisabledColor', (0, _system.private_safeDarken)(palette.secondary.main, 0.55));\\n      setColor(palette.Switch, 'errorDisabledColor', (0, _system.private_safeDarken)(palette.error.main, 0.55));\\n      setColor(palette.Switch, 'infoDisabledColor', (0, _system.private_safeDarken)(palette.info.main, 0.55));\\n      setColor(palette.Switch, 'successDisabledColor', (0, _system.private_safeDarken)(palette.success.main, 0.55));\\n      setColor(palette.Switch, 'warningDisabledColor', (0, _system.private_safeDarken)(palette.warning.main, 0.55));\\n      setColor(palette.TableCell, 'border', (0, _system.private_safeDarken)((0, _system.private_safeAlpha)(palette.divider, 1), 0.68));\\n      setColor(palette.Tooltip, 'bg', (0, _system.private_safeAlpha)(palette.grey[700], 0.92));\\n    }\\n\\n    // MUI X - DataGrid needs this token.\\n    setColorChannel(palette.background, 'default');\\n    setColorChannel(palette.common, 'background');\\n    setColorChannel(palette.common, 'onBackground');\\n    setColorChannel(palette, 'divider');\\n    Object.keys(palette).forEach(color => {\\n      const colors = palette[color];\\n\\n      // The default palettes (primary, secondary, error, info, success, and warning) errors are handled by the above `createTheme(...)`.\\n\\n      if (colors && typeof colors === 'object') {\\n        // Silent the error for custom palettes.\\n        if (colors.main) {\\n          setColor(palette[color], 'mainChannel', (0, _system.private_safeColorChannel)(colors.main));\\n        }\\n        if (colors.light) {\\n          setColor(palette[color], 'lightChannel', (0, _system.private_safeColorChannel)(colors.light));\\n        }\\n        if (colors.dark) {\\n          setColor(palette[color], 'darkChannel', (0, _system.private_safeColorChannel)(colors.dark));\\n        }\\n        if (colors.contrastText) {\\n          setColor(palette[color], 'contrastTextChannel', (0, _system.private_safeColorChannel)(colors.contrastText));\\n        }\\n        if (color === 'text') {\\n          // Text colors: text.primary, text.secondary\\n          setColorChannel(palette[color], 'primary');\\n          setColorChannel(palette[color], 'secondary');\\n        }\\n        if (color === 'action') {\\n          // Action colors: action.active, action.selected\\n          if (colors.active) {\\n            setColorChannel(palette[color], 'active');\\n          }\\n          if (colors.selected) {\\n            setColorChannel(palette[color], 'selected');\\n          }\\n        }\\n      }\\n    });\\n  });\\n  theme = args.reduce((acc, argument) => (0, _utils.deepmerge)(acc, argument), theme);\\n  theme.unstable_sxConfig = (0, _extends2.default)({}, _system.unstable_defaultSxConfig, input == null ? void 0 : input.unstable_sxConfig);\\n  theme.unstable_sx = function sx(props) {\\n    return (0, _system.unstable_styleFunctionSx)({\\n      sx: props,\\n      theme: this\\n    });\\n  };\\n  return theme;\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"assignNode\",\"obj\",\"keys\",\"forEach\",\"k\",\"setColor\",\"key\",\"defaultValue\",\"setColorChannel\",\"_system\",\"private_safeColorChannel\",\"_interopRequireDefault\",\"Object\",\"defineProperty\",\"value\",\"createGetCssVar\",\"default\",\"extendTheme\",\"options\",\"args\",\"_colorSchemesInput$li\",\"_colorSchemesInput$da\",\"_colorSchemesInput$li2\",\"_colorSchemesInput$li3\",\"_colorSchemesInput$da2\",\"_colorSchemesInput$da3\",\"colorSchemesInput\",\"cssVarPrefix\",\"input\",\"_objectWithoutPropertiesLoose2\",\"_excluded\",\"getCssVar\",\"_createThemeWithoutVa\",\"_createTheme\",\"_extends2\",\"light\",\"palette\",\"lightPalette\",\"muiTheme\",\"_excluded2\",\"darkPalette\",\"mode\",\"dark\",\"theme\",\"colorSchemes\",\"opacity\",\"inputPlaceholder\",\"inputUnderline\",\"switchTrackDisabled\",\"switchTrack\",\"overlays\",\"defaultDarkOverlays\",\"common\",\"Alert\",\"private_safeDarken\",\"error\",\"info\",\"success\",\"warning\",\"silent\",\"getContrastText\",\"main\",\"private_safeLighten\",\"AppBar\",\"Avatar\",\"Chip\",\"FilledInput\",\"LinearProgress\",\"primary\",\"secondary\",\"Skeleton\",\"Slider\",\"snackbarContentBackground\",\"private_safeEmphasize\",\"background\",\"SnackbarContent\",\"SpeedDialAction\",\"paper\",\"StepConnector\",\"StepContent\",\"Switch\",\"TableCell\",\"private_safeAlpha\",\"divider\",\"Tooltip\",\"grey\",\"color\",\"colors\",\"contrastText\",\"active\",\"selected\",\"reduce\",\"acc\",\"argument\",\"_utils\",\"deepmerge\",\"unstable_sxConfig\",\"unstable_defaultSxConfig\",\"unstable_sx\",\"theme.unstable_sx\",\"props\",\"unstable_styleFunctionSx\",\"sx\",\"_getOverlayAlpha\",\"Array\",\"map\",\"_\",\"index\",\"overlay\",\"fn\",\"unstable_createGetCssVar\"]\n}\n"]