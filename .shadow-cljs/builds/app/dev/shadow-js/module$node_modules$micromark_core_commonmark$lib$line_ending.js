["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/micromark-core-commonmark/lib/line-ending.js"],"~:js","shadow$provide.module$node_modules$micromark_core_commonmark$lib$line_ending=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.lineEnding=void 0;var _micromarkFactorySpace=require(\"module$node_modules$micromark_factory_space$index\");require(\"module$node_modules$micromark_util_character$index\");exports.lineEnding={name:\"lineEnding\",tokenize:function(effects,ok){return function(code){effects.enter(\"lineEnding\");effects.consume(code);effects.exit(\"lineEnding\");\nreturn(0,_micromarkFactorySpace.factorySpace)(effects,ok,\"linePrefix\")}}}}","~:source","shadow$provide[\"module$node_modules$micromark_core_commonmark$lib$line_ending\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.lineEnding = void 0;\n\nvar _micromarkFactorySpace = require(\"micromark-factory-space\");\n\nvar _micromarkUtilCharacter = require(\"micromark-util-character\");\n\n/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\n\n/** @type {Construct} */\nconst lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n};\n/** @type {Tokenizer} */\n\nexports.lineEnding = lineEnding;\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start;\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('lineEnding');\n    effects.consume(code);\n    effects.exit('lineEnding');\n    return (0, _micromarkFactorySpace.factorySpace)(effects, ok, 'linePrefix');\n  }\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$micromark_util_character$index","~$shadow.js","~$module$node_modules$micromark_factory_space$index"]],"~:properties",["^5",["tokenize","__esModule","name","value","lineEnding"]],"~:compiled-at",1676665867294,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$micromark_core_commonmark$lib$line_ending.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,6DAAA,CAAkF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG1HC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,UAAR,CAAqB,IAAK,EAE1B,KAAIC,uBAAyBP,OAAA,CAAQ,mDAAR,CAECA,QAAA,CAAQ,oDAAR,CAe9BE,QAAQI,CAAAA,UAAR,CANmBA,CACjBE,KAAM,YADWF,CAEjBG,SAMFC,QAA2B,CAACC,OAAD,CAAUC,EAAV,CAAc,CACvC,MAGAC,SAAc,CAACC,IAAD,CAAO,CACnBH,OAAQI,CAAAA,KAAR,CAAc,YAAd,CACAJ,QAAQK,CAAAA,OAAR,CAAgBF,IAAhB,CACAH,QAAQM,CAAAA,IAAR,CAAa,YAAb,CACA;MAAO,GAAIV,sBAAuBW,CAAAA,YAA3B,EAAyCP,OAAzC,CAAkDC,EAAlD,CAAsD,YAAtD,CAJY,CAJkB,CARtBN,CAnBuG;\",\n\"sources\":[\"node_modules/micromark-core-commonmark/lib/line-ending.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$micromark_core_commonmark$lib$line_ending\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.lineEnding = void 0;\\n\\nvar _micromarkFactorySpace = require(\\\"micromark-factory-space\\\");\\n\\nvar _micromarkUtilCharacter = require(\\\"micromark-util-character\\\");\\n\\n/**\\n * @typedef {import('micromark-util-types').Construct} Construct\\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\\n * @typedef {import('micromark-util-types').State} State\\n */\\n\\n/** @type {Construct} */\\nconst lineEnding = {\\n  name: 'lineEnding',\\n  tokenize: tokenizeLineEnding\\n};\\n/** @type {Tokenizer} */\\n\\nexports.lineEnding = lineEnding;\\n\\nfunction tokenizeLineEnding(effects, ok) {\\n  return start;\\n  /** @type {State} */\\n\\n  function start(code) {\\n    effects.enter('lineEnding');\\n    effects.consume(code);\\n    effects.exit('lineEnding');\\n    return (0, _micromarkFactorySpace.factorySpace)(effects, ok, 'linePrefix');\\n  }\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"lineEnding\",\"_micromarkFactorySpace\",\"name\",\"tokenize\",\"tokenizeLineEnding\",\"effects\",\"ok\",\"start\",\"code\",\"enter\",\"consume\",\"exit\",\"factorySpace\"]\n}\n"]