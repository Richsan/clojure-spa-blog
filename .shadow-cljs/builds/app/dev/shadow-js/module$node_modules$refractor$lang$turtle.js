["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/turtle.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$turtle=function(global,require,module,exports){function turtle(Prism){Prism.languages.turtle={comment:{pattern:/#.*/,greedy:!0},\"multiline-string\":{pattern:/\"\"\"(?:(?:\"\"?)?(?:[^\"\\\\]|\\\\.))*\"\"\"|'''(?:(?:''?)?(?:[^'\\\\]|\\\\.))*'''/,greedy:!0,alias:\"string\",inside:{comment:/#.*/}},string:{pattern:/\"(?:[^\\\\\"\\r\\n]|\\\\.)*\"|'(?:[^\\\\'\\r\\n]|\\\\.)*'/,greedy:!0},url:{pattern:/<(?:[^\\x00-\\x20<>\"{}|^`\\\\]|\\\\(?:u[\\da-fA-F]{4}|U[\\da-fA-F]{8}))*>/,greedy:!0,inside:{punctuation:/[<>]/}},\nfunction:{pattern:/(?:(?![-.\\d\\xB7])[-.\\w\\xB7\\xC0-\\uFFFD]+)?:(?:(?![-.])(?:[-.:\\w\\xC0-\\uFFFD]|%[\\da-f]{2}|\\\\.)+)?/i,inside:{\"local-name\":{pattern:/([^:]*:)[\\s\\S]+/,lookbehind:!0},prefix:{pattern:/[\\s\\S]+/,inside:{punctuation:/:/}}}},number:/[+-]?\\b\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?/i,punctuation:/[{}.,;()[\\]]|\\^\\^/,boolean:/\\b(?:false|true)\\b/,keyword:[/(?:\\ba|@prefix|@base)\\b|=/,/\\b(?:base|graph|prefix)\\b/i],tag:{pattern:/@[a-z]+(?:-[a-z\\d]+)*/i,inside:{punctuation:/@/}}};Prism.languages.trig=Prism.languages.turtle}\nObject.defineProperty(exports,\"__esModule\",{value:!0});exports.default=turtle;turtle.displayName=\"turtle\";turtle.aliases=[\"trig\"]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$turtle\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = turtle;\n// @ts-nocheck\nturtle.displayName = 'turtle';\nturtle.aliases = ['trig'];\n/** @type {import('../core.js').Syntax} */\n\nfunction turtle(Prism) {\n  Prism.languages.turtle = {\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    'multiline-string': {\n      pattern: /\"\"\"(?:(?:\"\"?)?(?:[^\"\\\\]|\\\\.))*\"\"\"|'''(?:(?:''?)?(?:[^'\\\\]|\\\\.))*'''/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        comment: /#.*/\n      }\n    },\n    string: {\n      pattern: /\"(?:[^\\\\\"\\r\\n]|\\\\.)*\"|'(?:[^\\\\'\\r\\n]|\\\\.)*'/,\n      greedy: true\n    },\n    url: {\n      pattern: /<(?:[^\\x00-\\x20<>\"{}|^`\\\\]|\\\\(?:u[\\da-fA-F]{4}|U[\\da-fA-F]{8}))*>/,\n      greedy: true,\n      inside: {\n        punctuation: /[<>]/\n      }\n    },\n    function: {\n      pattern: /(?:(?![-.\\d\\xB7])[-.\\w\\xB7\\xC0-\\uFFFD]+)?:(?:(?![-.])(?:[-.:\\w\\xC0-\\uFFFD]|%[\\da-f]{2}|\\\\.)+)?/i,\n      inside: {\n        'local-name': {\n          pattern: /([^:]*:)[\\s\\S]+/,\n          lookbehind: true\n        },\n        prefix: {\n          pattern: /[\\s\\S]+/,\n          inside: {\n            punctuation: /:/\n          }\n        }\n      }\n    },\n    number: /[+-]?\\b\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?/i,\n    punctuation: /[{}.,;()[\\]]|\\^\\^/,\n    boolean: /\\b(?:false|true)\\b/,\n    keyword: [/(?:\\ba|@prefix|@base)\\b|=/, /\\b(?:base|graph|prefix)\\b/i],\n    tag: {\n      pattern: /@[a-z]+(?:-[a-z\\d]+)*/i,\n      inside: {\n        punctuation: /@/\n      }\n    }\n  };\n  Prism.languages.trig = Prism.languages['turtle'];\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["boolean","url","punctuation","string","aliases","prefix","displayName","__esModule","lookbehind","tag","value","turtle","keyword","number","greedy","function","pattern","trig","inside","alias","comment","default"]],"~:compiled-at",1676841365462,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$turtle.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,CAAA,yCAAA,CAA8D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAYtGC,QAASA,OAAM,CAACC,KAAD,CAAQ,CACrBA,KAAMC,CAAAA,SAAUF,CAAAA,MAAhB,CAAyB,CACvBG,QAAS,CACPC,QAAS,KADF,CAEPC,OAAQ,CAAA,CAFD,CADc,CAKvB,mBAAoB,CAClBD,QAAS,qEADS,CAElBC,OAAQ,CAAA,CAFU,CAGlBC,MAAO,QAHW,CAIlBC,OAAQ,CACNJ,QAAS,KADH,CAJU,CALG,CAavBK,OAAQ,CACNJ,QAAS,6CADH,CAENC,OAAQ,CAAA,CAFF,CAbe,CAiBvBI,IAAK,CACHL,QAAS,mEADN,CAEHC,OAAQ,CAAA,CAFL,CAGHE,OAAQ,CACNG,YAAa,MADP,CAHL,CAjBkB;AAwBvBC,SAAU,CACRP,QAAS,iGADD,CAERG,OAAQ,CACN,aAAc,CACZH,QAAS,iBADG,CAEZQ,WAAY,CAAA,CAFA,CADR,CAKNC,OAAQ,CACNT,QAAS,SADH,CAENG,OAAQ,CACNG,YAAa,GADP,CAFF,CALF,CAFA,CAxBa,CAuCvBI,OAAQ,qCAvCe,CAwCvBJ,YAAa,mBAxCU,CAyCvBK,QAAS,oBAzCc,CA0CvBC,QAAS,CAAC,2BAAD,CAA8B,4BAA9B,CA1Cc,CA2CvBC,IAAK,CACHb,QAAS,wBADN,CAEHG,OAAQ,CACNG,YAAa,GADP,CAFL,CA3CkB,CAkDzBT,MAAMC,CAAAA,SAAUgB,CAAAA,IAAhB,CAAuBjB,KAAMC,CAAAA,SAAN,CAAA,MAnDF;AATvBiB,MAAOC,CAAAA,cAAP,CAAsBrB,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CsB,MAAO,CAAA,CADoC,CAA7C,CAGAtB,QAAQuB,CAAAA,OAAR,CAAkBtB,MAElBA,OAAOuB,CAAAA,WAAP,CAAqB,QACrBvB,OAAOwB,CAAAA,OAAP,CAAiB,CAAC,MAAD,CATqF;\",\n\"sources\":[\"node_modules/refractor/lang/turtle.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$turtle\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = turtle;\\n// @ts-nocheck\\nturtle.displayName = 'turtle';\\nturtle.aliases = ['trig'];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction turtle(Prism) {\\n  Prism.languages.turtle = {\\n    comment: {\\n      pattern: /#.*/,\\n      greedy: true\\n    },\\n    'multiline-string': {\\n      pattern: /\\\"\\\"\\\"(?:(?:\\\"\\\"?)?(?:[^\\\"\\\\\\\\]|\\\\\\\\.))*\\\"\\\"\\\"|'''(?:(?:''?)?(?:[^'\\\\\\\\]|\\\\\\\\.))*'''/,\\n      greedy: true,\\n      alias: 'string',\\n      inside: {\\n        comment: /#.*/\\n      }\\n    },\\n    string: {\\n      pattern: /\\\"(?:[^\\\\\\\\\\\"\\\\r\\\\n]|\\\\\\\\.)*\\\"|'(?:[^\\\\\\\\'\\\\r\\\\n]|\\\\\\\\.)*'/,\\n      greedy: true\\n    },\\n    url: {\\n      pattern: /<(?:[^\\\\x00-\\\\x20<>\\\"{}|^`\\\\\\\\]|\\\\\\\\(?:u[\\\\da-fA-F]{4}|U[\\\\da-fA-F]{8}))*>/,\\n      greedy: true,\\n      inside: {\\n        punctuation: /[<>]/\\n      }\\n    },\\n    function: {\\n      pattern: /(?:(?![-.\\\\d\\\\xB7])[-.\\\\w\\\\xB7\\\\xC0-\\\\uFFFD]+)?:(?:(?![-.])(?:[-.:\\\\w\\\\xC0-\\\\uFFFD]|%[\\\\da-f]{2}|\\\\\\\\.)+)?/i,\\n      inside: {\\n        'local-name': {\\n          pattern: /([^:]*:)[\\\\s\\\\S]+/,\\n          lookbehind: true\\n        },\\n        prefix: {\\n          pattern: /[\\\\s\\\\S]+/,\\n          inside: {\\n            punctuation: /:/\\n          }\\n        }\\n      }\\n    },\\n    number: /[+-]?\\\\b\\\\d+(?:\\\\.\\\\d*)?(?:e[+-]?\\\\d+)?/i,\\n    punctuation: /[{}.,;()[\\\\]]|\\\\^\\\\^/,\\n    boolean: /\\\\b(?:false|true)\\\\b/,\\n    keyword: [/(?:\\\\ba|@prefix|@base)\\\\b|=/, /\\\\b(?:base|graph|prefix)\\\\b/i],\\n    tag: {\\n      pattern: /@[a-z]+(?:-[a-z\\\\d]+)*/i,\\n      inside: {\\n        punctuation: /@/\\n      }\\n    }\\n  };\\n  Prism.languages.trig = Prism.languages['turtle'];\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"turtle\",\"Prism\",\"languages\",\"comment\",\"pattern\",\"greedy\",\"alias\",\"inside\",\"string\",\"url\",\"punctuation\",\"function\",\"lookbehind\",\"prefix\",\"number\",\"boolean\",\"keyword\",\"tag\",\"trig\",\"Object\",\"defineProperty\",\"value\",\"default\",\"displayName\",\"aliases\"]\n}\n"]