["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/java.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$java=function(global,require,module,exports){function java(Prism$jscomp$0){Prism$jscomp$0.register(_clike.default);(function(Prism){var keywords=/\\b(?:abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|exports|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|module|native|new|non-sealed|null|open|opens|package|permits|private|protected|provides|public|record(?!\\s*[(){}[\\]<>=%~.:,;?+\\-*/&|^])|requires|return|sealed|short|static|strictfp|super|switch|synchronized|this|throw|throws|to|transient|transitive|try|uses|var|void|volatile|while|with|yield)\\b/,\nclassNamePrefix=/(?:[a-z]\\w*\\s*\\.\\s*)*(?:[A-Z]\\w*\\s*\\.\\s*)*/.source,className={pattern:RegExp(/(^|[^\\w.])/.source+classNamePrefix+/[A-Z](?:[\\d_A-Z]*[a-z]\\w*)?\\b/.source),lookbehind:!0,inside:{namespace:{pattern:/^[a-z]\\w*(?:\\s*\\.\\s*[a-z]\\w*)*(?:\\s*\\.)?/,inside:{punctuation:/\\./}},punctuation:/\\./}};Prism.languages.java=Prism.languages.extend(\"clike\",{string:{pattern:/(^|[^\\\\])\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,lookbehind:!0,greedy:!0},\"class-name\":[className,{pattern:RegExp(/(^|[^\\w.])/.source+classNamePrefix+\n/[A-Z]\\w*(?=\\s+\\w+\\s*[;,=()]|\\s*(?:\\[[\\s,]*\\]\\s*)?::\\s*new\\b)/.source),lookbehind:!0,inside:className.inside},{pattern:RegExp(/(\\b(?:class|enum|extends|implements|instanceof|interface|new|record|throws)\\s+)/.source+classNamePrefix+/[A-Z]\\w*\\b/.source),lookbehind:!0,inside:className.inside}],keyword:keywords,function:[Prism.languages.clike.function,{pattern:/(::\\s*)[a-z_]\\w*/,lookbehind:!0}],number:/\\b0b[01][01_]*L?\\b|\\b0x(?:\\.[\\da-f_p+-]+|[\\da-f_]+(?:\\.[\\da-f_p+-]+)?)\\b|(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?\\d[\\d_]*)?[dfl]?/i,\noperator:{pattern:/(^|[^.])(?:<<=?|>>>?=?|->|--|\\+\\+|&&|\\|\\||::|[?:~]|[-+*/%&|^!=<>]=?)/m,lookbehind:!0},constant:/\\b[A-Z][A-Z_\\d]+\\b/});Prism.languages.insertBefore(\"java\",\"string\",{\"triple-quoted-string\":{pattern:/\"\"\"[ \\t]*[\\r\\n](?:(?:\"|\"\")?(?:\\\\.|[^\"\\\\]))*\"\"\"/,greedy:!0,alias:\"string\"},char:{pattern:/'(?:\\\\.|[^'\\\\\\r\\n]){1,6}'/,greedy:!0}});Prism.languages.insertBefore(\"java\",\"class-name\",{annotation:{pattern:/(^|[^.])@\\w+(?:\\s*\\.\\s*\\w+)*/,lookbehind:!0,alias:\"punctuation\"},generics:{pattern:/<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&))*>)*>)*>)*>/,\ninside:{\"class-name\":className,keyword:keywords,punctuation:/[<>(),.:]/,operator:/[?&|]/}},import:[{pattern:RegExp(/(\\bimport\\s+)/.source+classNamePrefix+/(?:[A-Z]\\w*|\\*)(?=\\s*;)/.source),lookbehind:!0,inside:{namespace:className.inside.namespace,punctuation:/\\./,operator:/\\*/,\"class-name\":/\\w+/}},{pattern:RegExp(/(\\bimport\\s+static\\s+)/.source+classNamePrefix+/(?:\\w+|\\*)(?=\\s*;)/.source),lookbehind:!0,alias:\"static\",inside:{namespace:className.inside.namespace,static:/\\b\\w+$/,punctuation:/\\./,operator:/\\*/,\n\"class-name\":/\\w+/}}],namespace:{pattern:RegExp(/(\\b(?:exports|import(?:\\s+static)?|module|open|opens|package|provides|requires|to|transitive|uses|with)\\s+)(?!<keyword>)[a-z]\\w*(?:\\.[a-z]\\w*)*\\.?/.source.replace(/<keyword>/g,function(){return keywords.source})),lookbehind:!0,inside:{punctuation:/\\./}}})})(Prism$jscomp$0)}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=java;var _clike=function(obj){return obj&&obj.__esModule?obj:{default:obj}}(require(\"module$node_modules$refractor$lang$clike\"));\njava.displayName=\"java\";java.aliases=[]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$java\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = java;\n\nvar _clike = _interopRequireDefault(require(\"./clike.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// @ts-nocheck\njava.displayName = 'java';\njava.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nfunction java(Prism) {\n  Prism.register(_clike.default);\n\n  (function (Prism) {\n    var keywords = /\\b(?:abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|exports|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|module|native|new|non-sealed|null|open|opens|package|permits|private|protected|provides|public|record(?!\\s*[(){}[\\]<>=%~.:,;?+\\-*/&|^])|requires|return|sealed|short|static|strictfp|super|switch|synchronized|this|throw|throws|to|transient|transitive|try|uses|var|void|volatile|while|with|yield)\\b/; // full package (optional) + parent classes (optional)\n\n    var classNamePrefix = /(?:[a-z]\\w*\\s*\\.\\s*)*(?:[A-Z]\\w*\\s*\\.\\s*)*/.source; // based on the java naming conventions\n\n    var className = {\n      pattern: RegExp(/(^|[^\\w.])/.source + classNamePrefix + /[A-Z](?:[\\d_A-Z]*[a-z]\\w*)?\\b/.source),\n      lookbehind: true,\n      inside: {\n        namespace: {\n          pattern: /^[a-z]\\w*(?:\\s*\\.\\s*[a-z]\\w*)*(?:\\s*\\.)?/,\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        punctuation: /\\./\n      }\n    };\n    Prism.languages.java = Prism.languages.extend('clike', {\n      string: {\n        pattern: /(^|[^\\\\])\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n        lookbehind: true,\n        greedy: true\n      },\n      'class-name': [className, {\n        // variables, parameters, and constructor references\n        // this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\n        pattern: RegExp(/(^|[^\\w.])/.source + classNamePrefix + /[A-Z]\\w*(?=\\s+\\w+\\s*[;,=()]|\\s*(?:\\[[\\s,]*\\]\\s*)?::\\s*new\\b)/.source),\n        lookbehind: true,\n        inside: className.inside\n      }, {\n        // class names based on keyword\n        // this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\n        pattern: RegExp(/(\\b(?:class|enum|extends|implements|instanceof|interface|new|record|throws)\\s+)/.source + classNamePrefix + /[A-Z]\\w*\\b/.source),\n        lookbehind: true,\n        inside: className.inside\n      }],\n      keyword: keywords,\n      function: [Prism.languages.clike.function, {\n        pattern: /(::\\s*)[a-z_]\\w*/,\n        lookbehind: true\n      }],\n      number: /\\b0b[01][01_]*L?\\b|\\b0x(?:\\.[\\da-f_p+-]+|[\\da-f_]+(?:\\.[\\da-f_p+-]+)?)\\b|(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?\\d[\\d_]*)?[dfl]?/i,\n      operator: {\n        pattern: /(^|[^.])(?:<<=?|>>>?=?|->|--|\\+\\+|&&|\\|\\||::|[?:~]|[-+*/%&|^!=<>]=?)/m,\n        lookbehind: true\n      },\n      constant: /\\b[A-Z][A-Z_\\d]+\\b/\n    });\n    Prism.languages.insertBefore('java', 'string', {\n      'triple-quoted-string': {\n        // http://openjdk.java.net/jeps/355#Description\n        pattern: /\"\"\"[ \\t]*[\\r\\n](?:(?:\"|\"\")?(?:\\\\.|[^\"\\\\]))*\"\"\"/,\n        greedy: true,\n        alias: 'string'\n      },\n      char: {\n        pattern: /'(?:\\\\.|[^'\\\\\\r\\n]){1,6}'/,\n        greedy: true\n      }\n    });\n    Prism.languages.insertBefore('java', 'class-name', {\n      annotation: {\n        pattern: /(^|[^.])@\\w+(?:\\s*\\.\\s*\\w+)*/,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      generics: {\n        pattern: /<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&))*>)*>)*>)*>/,\n        inside: {\n          'class-name': className,\n          keyword: keywords,\n          punctuation: /[<>(),.:]/,\n          operator: /[?&|]/\n        }\n      },\n      import: [{\n        pattern: RegExp(/(\\bimport\\s+)/.source + classNamePrefix + /(?:[A-Z]\\w*|\\*)(?=\\s*;)/.source),\n        lookbehind: true,\n        inside: {\n          namespace: className.inside.namespace,\n          punctuation: /\\./,\n          operator: /\\*/,\n          'class-name': /\\w+/\n        }\n      }, {\n        pattern: RegExp(/(\\bimport\\s+static\\s+)/.source + classNamePrefix + /(?:\\w+|\\*)(?=\\s*;)/.source),\n        lookbehind: true,\n        alias: 'static',\n        inside: {\n          namespace: className.inside.namespace,\n          static: /\\b\\w+$/,\n          punctuation: /\\./,\n          operator: /\\*/,\n          'class-name': /\\w+/\n        }\n      }],\n      namespace: {\n        pattern: RegExp(/(\\b(?:exports|import(?:\\s+static)?|module|open|opens|package|provides|requires|to|transitive|uses|with)\\s+)(?!<keyword>)[a-z]\\w*(?:\\.[a-z]\\w*)*\\.?/.source.replace(/<keyword>/g, function () {\n          return keywords.source;\n        })),\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      }\n    });\n  })(Prism);\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$refractor$lang$clike"]],"~:properties",["^5",["static","punctuation","string","aliases","constant","operator","displayName","__esModule","java","lookbehind","value","import","char","keyword","number","greedy","function","pattern","inside","annotation","alias","namespace","default","generics"]],"~:compiled-at",1676841365363,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$java.js\",\n\"lineCount\":7,\n\"mappings\":\"AAAAA,cAAA,CAAA,uCAAA,CAA4D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAiBpGC,QAASA,KAAI,CAACC,cAAD,CAAQ,CACnBA,cAAMC,CAAAA,QAAN,CAAeC,MAAOC,CAAAA,OAAtB,CAEC,UAAS,CAACH,KAAD,CAAQ,CAChB,IAAII,SAAW,kfAAf;AAEIC,gBAAkB,4CAA6CC,CAAAA,MAFnE,CAIIC,UAAY,CACdC,QAASC,MAAA,CAAO,YAAaH,CAAAA,MAApB,CAA6BD,eAA7B,CAA+C,+BAAgCC,CAAAA,MAA/E,CADK,CAEdI,WAAY,CAAA,CAFE,CAGdC,OAAQ,CACNC,UAAW,CACTJ,QAAS,0CADA,CAETG,OAAQ,CACNE,YAAa,IADP,CAFC,CADL,CAONA,YAAa,IAPP,CAHM,CAahBb,MAAMc,CAAAA,SAAUf,CAAAA,IAAhB,CAAuBC,KAAMc,CAAAA,SAAUC,CAAAA,MAAhB,CAAuB,OAAvB,CAAgC,CACrDC,OAAQ,CACNR,QAAS,gCADH,CAENE,WAAY,CAAA,CAFN,CAGNO,OAAQ,CAAA,CAHF,CAD6C,CAMrD,aAAc,CAACV,SAAD,CAAY,CAGxBC,QAASC,MAAA,CAAO,YAAaH,CAAAA,MAApB,CAA6BD,eAA7B;AAA+C,8DAA+DC,CAAAA,MAA9G,CAHe,CAIxBI,WAAY,CAAA,CAJY,CAKxBC,OAAQJ,SAAUI,CAAAA,MALM,CAAZ,CAMX,CAGDH,QAASC,MAAA,CAAO,iFAAkFH,CAAAA,MAAzF,CAAkGD,eAAlG,CAAoH,YAAaC,CAAAA,MAAjI,CAHR,CAIDI,WAAY,CAAA,CAJX,CAKDC,OAAQJ,SAAUI,CAAAA,MALjB,CANW,CANuC,CAmBrDO,QAASd,QAnB4C,CAoBrDe,SAAU,CAACnB,KAAMc,CAAAA,SAAUM,CAAAA,KAAMD,CAAAA,QAAvB,CAAiC,CACzCX,QAAS,kBADgC,CAEzCE,WAAY,CAAA,CAF6B,CAAjC,CApB2C,CAwBrDW,OAAQ,6IAxB6C;AAyBrDC,SAAU,CACRd,QAAS,uEADD,CAERE,WAAY,CAAA,CAFJ,CAzB2C,CA6BrDa,SAAU,oBA7B2C,CAAhC,CA+BvBvB,MAAMc,CAAAA,SAAUU,CAAAA,YAAhB,CAA6B,MAA7B,CAAqC,QAArC,CAA+C,CAC7C,uBAAwB,CAEtBhB,QAAS,gDAFa,CAGtBS,OAAQ,CAAA,CAHc,CAItBQ,MAAO,QAJe,CADqB,CAO7CC,KAAM,CACJlB,QAAS,2BADL,CAEJS,OAAQ,CAAA,CAFJ,CAPuC,CAA/C,CAYAjB,MAAMc,CAAAA,SAAUU,CAAAA,YAAhB,CAA6B,MAA7B,CAAqC,YAArC,CAAmD,CACjDG,WAAY,CACVnB,QAAS,8BADC,CAEVE,WAAY,CAAA,CAFF,CAGVe,MAAO,aAHG,CADqC,CAMjDG,SAAU,CACRpB,QAAS,iGADD;AAERG,OAAQ,CACN,aAAcJ,SADR,CAENW,QAASd,QAFH,CAGNS,YAAa,WAHP,CAINS,SAAU,OAJJ,CAFA,CANuC,CAejDO,OAAQ,CAAC,CACPrB,QAASC,MAAA,CAAO,eAAgBH,CAAAA,MAAvB,CAAgCD,eAAhC,CAAkD,yBAA0BC,CAAAA,MAA5E,CADF,CAEPI,WAAY,CAAA,CAFL,CAGPC,OAAQ,CACNC,UAAWL,SAAUI,CAAAA,MAAOC,CAAAA,SADtB,CAENC,YAAa,IAFP,CAGNS,SAAU,IAHJ,CAIN,aAAc,KAJR,CAHD,CAAD,CASL,CACDd,QAASC,MAAA,CAAO,wBAAyBH,CAAAA,MAAhC,CAAyCD,eAAzC,CAA2D,oBAAqBC,CAAAA,MAAhF,CADR,CAEDI,WAAY,CAAA,CAFX,CAGDe,MAAO,QAHN,CAIDd,OAAQ,CACNC,UAAWL,SAAUI,CAAAA,MAAOC,CAAAA,SADtB,CAENkB,OAAQ,QAFF,CAGNjB,YAAa,IAHP,CAINS,SAAU,IAJJ;AAKN,aAAc,KALR,CAJP,CATK,CAfyC,CAoCjDV,UAAW,CACTJ,QAASC,MAAA,CAAO,oJAAqJH,CAAAA,MAAOyB,CAAAA,OAA5J,CAAoK,YAApK,CAAkL,QAAS,EAAG,CAC5M,MAAO3B,SAASE,CAAAA,MAD4L,CAA9L,CAAP,CADA,CAITI,WAAY,CAAA,CAJH,CAKTC,OAAQ,CACNE,YAAa,IADP,CALC,CApCsC,CAAnD,CA7DgB,CAAjB,CAAD,CA2GGb,cA3GH,CAHmB,CAdrBgC,MAAOC,CAAAA,cAAP,CAAsBnC,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CoC,MAAO,CAAA,CADoC,CAA7C,CAGApC,QAAQK,CAAAA,OAAR,CAAkBJ,IAElB,KAAIG,OAEJiC,QAA+B,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAIC,CAAAA,UAAX,CAAwBD,GAAxB,CAA8B,CAAEjC,QAASiC,GAAX,CAAvC,CAFxB,CAAuBxC,OAAA,CAAQ,0CAAR,CAAvB,CAKbG;IAAKuC,CAAAA,WAAL,CAAmB,MACnBvC,KAAKwC,CAAAA,OAAL,CAAe,EAdqF;\",\n\"sources\":[\"node_modules/refractor/lang/java.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$java\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = java;\\n\\nvar _clike = _interopRequireDefault(require(\\\"./clike.js\\\"));\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\n// @ts-nocheck\\njava.displayName = 'java';\\njava.aliases = [];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction java(Prism) {\\n  Prism.register(_clike.default);\\n\\n  (function (Prism) {\\n    var keywords = /\\\\b(?:abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|exports|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|module|native|new|non-sealed|null|open|opens|package|permits|private|protected|provides|public|record(?!\\\\s*[(){}[\\\\]<>=%~.:,;?+\\\\-*/&|^])|requires|return|sealed|short|static|strictfp|super|switch|synchronized|this|throw|throws|to|transient|transitive|try|uses|var|void|volatile|while|with|yield)\\\\b/; // full package (optional) + parent classes (optional)\\n\\n    var classNamePrefix = /(?:[a-z]\\\\w*\\\\s*\\\\.\\\\s*)*(?:[A-Z]\\\\w*\\\\s*\\\\.\\\\s*)*/.source; // based on the java naming conventions\\n\\n    var className = {\\n      pattern: RegExp(/(^|[^\\\\w.])/.source + classNamePrefix + /[A-Z](?:[\\\\d_A-Z]*[a-z]\\\\w*)?\\\\b/.source),\\n      lookbehind: true,\\n      inside: {\\n        namespace: {\\n          pattern: /^[a-z]\\\\w*(?:\\\\s*\\\\.\\\\s*[a-z]\\\\w*)*(?:\\\\s*\\\\.)?/,\\n          inside: {\\n            punctuation: /\\\\./\\n          }\\n        },\\n        punctuation: /\\\\./\\n      }\\n    };\\n    Prism.languages.java = Prism.languages.extend('clike', {\\n      string: {\\n        pattern: /(^|[^\\\\\\\\])\\\"(?:\\\\\\\\.|[^\\\"\\\\\\\\\\\\r\\\\n])*\\\"/,\\n        lookbehind: true,\\n        greedy: true\\n      },\\n      'class-name': [className, {\\n        // variables, parameters, and constructor references\\n        // this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\\n        pattern: RegExp(/(^|[^\\\\w.])/.source + classNamePrefix + /[A-Z]\\\\w*(?=\\\\s+\\\\w+\\\\s*[;,=()]|\\\\s*(?:\\\\[[\\\\s,]*\\\\]\\\\s*)?::\\\\s*new\\\\b)/.source),\\n        lookbehind: true,\\n        inside: className.inside\\n      }, {\\n        // class names based on keyword\\n        // this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\\n        pattern: RegExp(/(\\\\b(?:class|enum|extends|implements|instanceof|interface|new|record|throws)\\\\s+)/.source + classNamePrefix + /[A-Z]\\\\w*\\\\b/.source),\\n        lookbehind: true,\\n        inside: className.inside\\n      }],\\n      keyword: keywords,\\n      function: [Prism.languages.clike.function, {\\n        pattern: /(::\\\\s*)[a-z_]\\\\w*/,\\n        lookbehind: true\\n      }],\\n      number: /\\\\b0b[01][01_]*L?\\\\b|\\\\b0x(?:\\\\.[\\\\da-f_p+-]+|[\\\\da-f_]+(?:\\\\.[\\\\da-f_p+-]+)?)\\\\b|(?:\\\\b\\\\d[\\\\d_]*(?:\\\\.[\\\\d_]*)?|\\\\B\\\\.\\\\d[\\\\d_]*)(?:e[+-]?\\\\d[\\\\d_]*)?[dfl]?/i,\\n      operator: {\\n        pattern: /(^|[^.])(?:<<=?|>>>?=?|->|--|\\\\+\\\\+|&&|\\\\|\\\\||::|[?:~]|[-+*/%&|^!=<>]=?)/m,\\n        lookbehind: true\\n      },\\n      constant: /\\\\b[A-Z][A-Z_\\\\d]+\\\\b/\\n    });\\n    Prism.languages.insertBefore('java', 'string', {\\n      'triple-quoted-string': {\\n        // http://openjdk.java.net/jeps/355#Description\\n        pattern: /\\\"\\\"\\\"[ \\\\t]*[\\\\r\\\\n](?:(?:\\\"|\\\"\\\")?(?:\\\\\\\\.|[^\\\"\\\\\\\\]))*\\\"\\\"\\\"/,\\n        greedy: true,\\n        alias: 'string'\\n      },\\n      char: {\\n        pattern: /'(?:\\\\\\\\.|[^'\\\\\\\\\\\\r\\\\n]){1,6}'/,\\n        greedy: true\\n      }\\n    });\\n    Prism.languages.insertBefore('java', 'class-name', {\\n      annotation: {\\n        pattern: /(^|[^.])@\\\\w+(?:\\\\s*\\\\.\\\\s*\\\\w+)*/,\\n        lookbehind: true,\\n        alias: 'punctuation'\\n      },\\n      generics: {\\n        pattern: /<(?:[\\\\w\\\\s,.?]|&(?!&)|<(?:[\\\\w\\\\s,.?]|&(?!&)|<(?:[\\\\w\\\\s,.?]|&(?!&)|<(?:[\\\\w\\\\s,.?]|&(?!&))*>)*>)*>)*>/,\\n        inside: {\\n          'class-name': className,\\n          keyword: keywords,\\n          punctuation: /[<>(),.:]/,\\n          operator: /[?&|]/\\n        }\\n      },\\n      import: [{\\n        pattern: RegExp(/(\\\\bimport\\\\s+)/.source + classNamePrefix + /(?:[A-Z]\\\\w*|\\\\*)(?=\\\\s*;)/.source),\\n        lookbehind: true,\\n        inside: {\\n          namespace: className.inside.namespace,\\n          punctuation: /\\\\./,\\n          operator: /\\\\*/,\\n          'class-name': /\\\\w+/\\n        }\\n      }, {\\n        pattern: RegExp(/(\\\\bimport\\\\s+static\\\\s+)/.source + classNamePrefix + /(?:\\\\w+|\\\\*)(?=\\\\s*;)/.source),\\n        lookbehind: true,\\n        alias: 'static',\\n        inside: {\\n          namespace: className.inside.namespace,\\n          static: /\\\\b\\\\w+$/,\\n          punctuation: /\\\\./,\\n          operator: /\\\\*/,\\n          'class-name': /\\\\w+/\\n        }\\n      }],\\n      namespace: {\\n        pattern: RegExp(/(\\\\b(?:exports|import(?:\\\\s+static)?|module|open|opens|package|provides|requires|to|transitive|uses|with)\\\\s+)(?!<keyword>)[a-z]\\\\w*(?:\\\\.[a-z]\\\\w*)*\\\\.?/.source.replace(/<keyword>/g, function () {\\n          return keywords.source;\\n        })),\\n        lookbehind: true,\\n        inside: {\\n          punctuation: /\\\\./\\n        }\\n      }\\n    });\\n  })(Prism);\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"java\",\"Prism\",\"register\",\"_clike\",\"default\",\"keywords\",\"classNamePrefix\",\"source\",\"className\",\"pattern\",\"RegExp\",\"lookbehind\",\"inside\",\"namespace\",\"punctuation\",\"languages\",\"extend\",\"string\",\"greedy\",\"keyword\",\"function\",\"clike\",\"number\",\"operator\",\"constant\",\"insertBefore\",\"alias\",\"char\",\"annotation\",\"generics\",\"import\",\"static\",\"replace\",\"Object\",\"defineProperty\",\"value\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"displayName\",\"aliases\"]\n}\n"]