["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/fault/index.js"],"~:js","shadow$provide.module$node_modules$fault$index=function(global,require,module,exports){function create(Constructor){function FormattedError(format,...values){format=format?(0,_format.default)(format,...values):format;return new Constructor(format)}FormattedError.displayName=Constructor.displayName||Constructor.name;return FormattedError}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.create=create;exports.fault=void 0;var _format=function(obj){return obj&&obj.__esModule?obj:{default:obj}}(require(\"module$node_modules$format$format\"));\nglobal=Object.assign(create(Error),{eval:create(EvalError),range:create(RangeError),reference:create(ReferenceError),syntax:create(SyntaxError),type:create(TypeError),uri:create(URIError)});exports.fault=global}","~:source","shadow$provide[\"module$node_modules$fault$index\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.fault = void 0;\n\nvar _format = _interopRequireDefault(require(\"format\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// @ts-expect-error\nconst fault = Object.assign(create(Error), {\n  eval: create(EvalError),\n  range: create(RangeError),\n  reference: create(ReferenceError),\n  syntax: create(SyntaxError),\n  type: create(TypeError),\n  uri: create(URIError)\n});\n/**\n * Create a new `EConstructor`, with the formatted `format` as a first argument.\n *\n * @template {Error} Fault\n * @template {new (reason: string) => Fault} Class\n * @param {Class} Constructor\n */\n\nexports.fault = fault;\n\nfunction create(Constructor) {\n  /** @type {string} */\n  // @ts-expect-error\n  FormattedError.displayName = Constructor.displayName || Constructor.name;\n  return FormattedError;\n  /**\n   * Create an error with a printf-like formatted message.\n   *\n   * @param {string|null} [format]\n   *   Template string.\n   * @param {...unknown} values\n   *   Values to render in `format`.\n   * @returns {Fault}\n   */\n\n  function FormattedError(format, ...values) {\n    /** @type {string} */\n    const reason = format ? (0, _format.default)(format, ...values) : format;\n    return new Constructor(reason);\n  }\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$format$format","~$shadow.js"]],"~:properties",["^5",["range","displayName","uri","__esModule","value","eval","reference","type","syntax","create","fault","default"]],"~:compiled-at",1676671710260,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$fault$index.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,+BAAA,CAAoD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAgC5FC,QAASA,OAAM,CAACC,WAAD,CAAc,CAe3BC,QAASA,eAAc,CAACC,MAAD,CAAS,GAAGC,MAAZ,CAAoB,CAEnCC,MAAAA,CAASF,MAAA,CAAS,GAAIG,OAAQC,CAAAA,OAAZ,EAAqBJ,MAArB,CAA6B,GAAGC,MAAhC,CAAT,CAAmDD,MAClE,OAAO,KAAIF,WAAJ,CAAgBI,MAAhB,CAHkC,CAZ3CH,cAAeM,CAAAA,WAAf,CAA6BP,WAAYO,CAAAA,WAAzC,EAAwDP,WAAYQ,CAAAA,IACpE,OAAOP,eAJoB,CA7B7BQ,MAAOC,CAAAA,cAAP,CAAsBZ,OAAtB,CAA+B,YAA/B,CAA6C,CAC3Ca,MAAO,CAAA,CADoC,CAA7C,CAGAb,QAAQC,CAAAA,MAAR,CAAiBA,MACjBD,QAAQc,CAAAA,KAAR,CAAgB,IAAK,EAErB,KAAIP,QAEJQ,QAA+B,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAIC,CAAAA,UAAX,CAAwBD,GAAxB,CAA8B,CAAER,QAASQ,GAAX,CAAvC,CAFvB,CAAuBlB,OAAA,CAAQ,mCAAR,CAAvB,CAKRgB;MAAAA,CAAQH,MAAOO,CAAAA,MAAP,CAAcjB,MAAA,CAAOkB,KAAP,CAAd,CAA6B,CACzCC,KAAMnB,MAAA,CAAOoB,SAAP,CADmC,CAEzCC,MAAOrB,MAAA,CAAOsB,UAAP,CAFkC,CAGzCC,UAAWvB,MAAA,CAAOwB,cAAP,CAH8B,CAIzCC,OAAQzB,MAAA,CAAO0B,WAAP,CAJiC,CAKzCC,KAAM3B,MAAA,CAAO4B,SAAP,CALmC,CAMzCC,IAAK7B,MAAA,CAAO8B,QAAP,CANoC,CAA7B,CAgBd/B,QAAQc,CAAAA,KAAR,CAAgBA,MA9B4E;\",\n\"sources\":[\"node_modules/fault/index.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$fault$index\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.create = create;\\nexports.fault = void 0;\\n\\nvar _format = _interopRequireDefault(require(\\\"format\\\"));\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\n// @ts-expect-error\\nconst fault = Object.assign(create(Error), {\\n  eval: create(EvalError),\\n  range: create(RangeError),\\n  reference: create(ReferenceError),\\n  syntax: create(SyntaxError),\\n  type: create(TypeError),\\n  uri: create(URIError)\\n});\\n/**\\n * Create a new `EConstructor`, with the formatted `format` as a first argument.\\n *\\n * @template {Error} Fault\\n * @template {new (reason: string) => Fault} Class\\n * @param {Class} Constructor\\n */\\n\\nexports.fault = fault;\\n\\nfunction create(Constructor) {\\n  /** @type {string} */\\n  // @ts-expect-error\\n  FormattedError.displayName = Constructor.displayName || Constructor.name;\\n  return FormattedError;\\n  /**\\n   * Create an error with a printf-like formatted message.\\n   *\\n   * @param {string|null} [format]\\n   *   Template string.\\n   * @param {...unknown} values\\n   *   Values to render in `format`.\\n   * @returns {Fault}\\n   */\\n\\n  function FormattedError(format, ...values) {\\n    /** @type {string} */\\n    const reason = format ? (0, _format.default)(format, ...values) : format;\\n    return new Constructor(reason);\\n  }\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"create\",\"Constructor\",\"FormattedError\",\"format\",\"values\",\"reason\",\"_format\",\"default\",\"displayName\",\"name\",\"Object\",\"defineProperty\",\"value\",\"fault\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"assign\",\"Error\",\"eval\",\"EvalError\",\"range\",\"RangeError\",\"reference\",\"ReferenceError\",\"syntax\",\"SyntaxError\",\"type\",\"TypeError\",\"uri\",\"URIError\"]\n}\n"]