["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/bicep.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$bicep=function(global,require,module,exports){function bicep(Prism){Prism.languages.bicep={comment:[{pattern:/(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,lookbehind:!0,greedy:!0},{pattern:/(^|[^\\\\:])\\/\\/.*/,lookbehind:!0,greedy:!0}],property:[{pattern:/([\\r\\n][ \\t]*)[a-z_]\\w*(?=[ \\t]*:)/i,lookbehind:!0},{pattern:/([\\r\\n][ \\t]*)'(?:\\\\.|\\$(?!\\{)|[^'\\\\\\r\\n$])*'(?=[ \\t]*:)/,lookbehind:!0,greedy:!0}],string:[{pattern:/'''[^'][\\s\\S]*?'''/,greedy:!0},{pattern:/(^|[^\\\\'])'(?:\\\\.|\\$(?!\\{)|[^'\\\\\\r\\n$])*'/,\nlookbehind:!0,greedy:!0}],\"interpolated-string\":{pattern:/(^|[^\\\\'])'(?:\\\\.|\\$(?:(?!\\{)|\\{[^{}\\r\\n]*\\})|[^'\\\\\\r\\n$])*'/,lookbehind:!0,greedy:!0,inside:{interpolation:{pattern:/\\$\\{[^{}\\r\\n]*\\}/,inside:{expression:{pattern:/(^\\$\\{)[\\s\\S]+(?=\\}$)/,lookbehind:!0},punctuation:/^\\$\\{|\\}$/}},string:/[\\s\\S]+/}},datatype:{pattern:/(\\b(?:output|param)\\b[ \\t]+\\w+[ \\t]+)\\w+\\b/,lookbehind:!0,alias:\"class-name\"},boolean:/\\b(?:false|true)\\b/,keyword:/\\b(?:existing|for|if|in|module|null|output|param|resource|targetScope|var)\\b/,\ndecorator:/@\\w+\\b/,function:/\\b[a-z_]\\w*(?=[ \\t]*\\()/i,number:/(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,operator:/--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/,punctuation:/[{}[\\];(),.:]/};Prism.languages.bicep[\"interpolated-string\"].inside.interpolation.inside.expression.inside=Prism.languages.bicep}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=bicep;bicep.displayName=\"bicep\";bicep.aliases=[]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$bicep\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = bicep;\n// @ts-nocheck\nbicep.displayName = 'bicep';\nbicep.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nfunction bicep(Prism) {\n  // based loosely upon: https://github.com/Azure/bicep/blob/main/src/textmate/bicep.tmlanguage\n  Prism.languages.bicep = {\n    comment: [{\n      // multiline comments eg /* ASDF */\n      pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n      lookbehind: true,\n      greedy: true\n    }, {\n      // singleline comments eg // ASDF\n      pattern: /(^|[^\\\\:])\\/\\/.*/,\n      lookbehind: true,\n      greedy: true\n    }],\n    property: [{\n      pattern: /([\\r\\n][ \\t]*)[a-z_]\\w*(?=[ \\t]*:)/i,\n      lookbehind: true\n    }, {\n      pattern: /([\\r\\n][ \\t]*)'(?:\\\\.|\\$(?!\\{)|[^'\\\\\\r\\n$])*'(?=[ \\t]*:)/,\n      lookbehind: true,\n      greedy: true\n    }],\n    string: [{\n      pattern: /'''[^'][\\s\\S]*?'''/,\n      greedy: true\n    }, {\n      pattern: /(^|[^\\\\'])'(?:\\\\.|\\$(?!\\{)|[^'\\\\\\r\\n$])*'/,\n      lookbehind: true,\n      greedy: true\n    }],\n    'interpolated-string': {\n      pattern: /(^|[^\\\\'])'(?:\\\\.|\\$(?:(?!\\{)|\\{[^{}\\r\\n]*\\})|[^'\\\\\\r\\n$])*'/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /\\$\\{[^{}\\r\\n]*\\}/,\n          inside: {\n            expression: {\n              pattern: /(^\\$\\{)[\\s\\S]+(?=\\}$)/,\n              lookbehind: true\n            },\n            punctuation: /^\\$\\{|\\}$/\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    },\n    datatype: {\n      pattern: /(\\b(?:output|param)\\b[ \\t]+\\w+[ \\t]+)\\w+\\b/,\n      lookbehind: true,\n      alias: 'class-name'\n    },\n    boolean: /\\b(?:false|true)\\b/,\n    // https://github.com/Azure/bicep/blob/114a3251b4e6e30082a58729f19a8cc4e374ffa6/src/textmate/bicep.tmlanguage#L184\n    keyword: /\\b(?:existing|for|if|in|module|null|output|param|resource|targetScope|var)\\b/,\n    decorator: /@\\w+\\b/,\n    function: /\\b[a-z_]\\w*(?=[ \\t]*\\()/i,\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n    operator: /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/,\n    punctuation: /[{}[\\];(),.:]/\n  };\n  Prism.languages.bicep['interpolated-string'].inside['interpolation'].inside['expression'].inside = Prism.languages.bicep;\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["boolean","punctuation","string","aliases","operator","displayName","__esModule","expression","lookbehind","value","keyword","number","greedy","property","function","bicep","pattern","inside","datatype","alias","comment","decorator","interpolation","default"]],"~:compiled-at",1676841365395,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$bicep.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,CAAA,wCAAA,CAA6D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAYrGC,QAASA,MAAK,CAACC,KAAD,CAAQ,CAEpBA,KAAMC,CAAAA,SAAUF,CAAAA,KAAhB,CAAwB,CACtBG,QAAS,CAAC,CAERC,QAAS,iCAFD,CAGRC,WAAY,CAAA,CAHJ,CAIRC,OAAQ,CAAA,CAJA,CAAD,CAKN,CAEDF,QAAS,kBAFR,CAGDC,WAAY,CAAA,CAHX,CAIDC,OAAQ,CAAA,CAJP,CALM,CADa,CAYtBC,SAAU,CAAC,CACTH,QAAS,qCADA,CAETC,WAAY,CAAA,CAFH,CAAD,CAGP,CACDD,QAAS,0DADR,CAEDC,WAAY,CAAA,CAFX,CAGDC,OAAQ,CAAA,CAHP,CAHO,CAZY,CAoBtBE,OAAQ,CAAC,CACPJ,QAAS,oBADF,CAEPE,OAAQ,CAAA,CAFD,CAAD,CAGL,CACDF,QAAS,2CADR;AAEDC,WAAY,CAAA,CAFX,CAGDC,OAAQ,CAAA,CAHP,CAHK,CApBc,CA4BtB,sBAAuB,CACrBF,QAAS,8DADY,CAErBC,WAAY,CAAA,CAFS,CAGrBC,OAAQ,CAAA,CAHa,CAIrBG,OAAQ,CACNC,cAAe,CACbN,QAAS,kBADI,CAEbK,OAAQ,CACNE,WAAY,CACVP,QAAS,uBADC,CAEVC,WAAY,CAAA,CAFF,CADN,CAKNO,YAAa,WALP,CAFK,CADT,CAWNJ,OAAQ,SAXF,CAJa,CA5BD,CA8CtBK,SAAU,CACRT,QAAS,4CADD,CAERC,WAAY,CAAA,CAFJ,CAGRS,MAAO,YAHC,CA9CY,CAmDtBC,QAAS,oBAnDa,CAqDtBC,QAAS,8EArDa;AAsDtBC,UAAW,QAtDW,CAuDtBC,SAAU,0BAvDY,CAwDtBC,OAAQ,4CAxDc,CAyDtBC,SAAU,2FAzDY,CA0DtBR,YAAa,eA1DS,CA4DxBX,MAAMC,CAAAA,SAAUF,CAAAA,KAAhB,CAAsB,qBAAtB,CAA6CS,CAAAA,MAA7C,CAAA,aAAqEA,CAAAA,MAArE,CAAA,UAA0FA,CAAAA,MAA1F,CAAmGR,KAAMC,CAAAA,SAAUF,CAAAA,KA9D/F,CATtBqB,MAAOC,CAAAA,cAAP,CAAsBvB,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CwB,MAAO,CAAA,CADoC,CAA7C,CAGAxB,QAAQyB,CAAAA,OAAR,CAAkBxB,KAElBA,MAAMyB,CAAAA,WAAN,CAAoB,OACpBzB,MAAM0B,CAAAA,OAAN,CAAgB,EATqF;\",\n\"sources\":[\"node_modules/refractor/lang/bicep.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$bicep\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = bicep;\\n// @ts-nocheck\\nbicep.displayName = 'bicep';\\nbicep.aliases = [];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction bicep(Prism) {\\n  // based loosely upon: https://github.com/Azure/bicep/blob/main/src/textmate/bicep.tmlanguage\\n  Prism.languages.bicep = {\\n    comment: [{\\n      // multiline comments eg /* ASDF */\\n      pattern: /(^|[^\\\\\\\\])\\\\/\\\\*[\\\\s\\\\S]*?(?:\\\\*\\\\/|$)/,\\n      lookbehind: true,\\n      greedy: true\\n    }, {\\n      // singleline comments eg // ASDF\\n      pattern: /(^|[^\\\\\\\\:])\\\\/\\\\/.*/,\\n      lookbehind: true,\\n      greedy: true\\n    }],\\n    property: [{\\n      pattern: /([\\\\r\\\\n][ \\\\t]*)[a-z_]\\\\w*(?=[ \\\\t]*:)/i,\\n      lookbehind: true\\n    }, {\\n      pattern: /([\\\\r\\\\n][ \\\\t]*)'(?:\\\\\\\\.|\\\\$(?!\\\\{)|[^'\\\\\\\\\\\\r\\\\n$])*'(?=[ \\\\t]*:)/,\\n      lookbehind: true,\\n      greedy: true\\n    }],\\n    string: [{\\n      pattern: /'''[^'][\\\\s\\\\S]*?'''/,\\n      greedy: true\\n    }, {\\n      pattern: /(^|[^\\\\\\\\'])'(?:\\\\\\\\.|\\\\$(?!\\\\{)|[^'\\\\\\\\\\\\r\\\\n$])*'/,\\n      lookbehind: true,\\n      greedy: true\\n    }],\\n    'interpolated-string': {\\n      pattern: /(^|[^\\\\\\\\'])'(?:\\\\\\\\.|\\\\$(?:(?!\\\\{)|\\\\{[^{}\\\\r\\\\n]*\\\\})|[^'\\\\\\\\\\\\r\\\\n$])*'/,\\n      lookbehind: true,\\n      greedy: true,\\n      inside: {\\n        interpolation: {\\n          pattern: /\\\\$\\\\{[^{}\\\\r\\\\n]*\\\\}/,\\n          inside: {\\n            expression: {\\n              pattern: /(^\\\\$\\\\{)[\\\\s\\\\S]+(?=\\\\}$)/,\\n              lookbehind: true\\n            },\\n            punctuation: /^\\\\$\\\\{|\\\\}$/\\n          }\\n        },\\n        string: /[\\\\s\\\\S]+/\\n      }\\n    },\\n    datatype: {\\n      pattern: /(\\\\b(?:output|param)\\\\b[ \\\\t]+\\\\w+[ \\\\t]+)\\\\w+\\\\b/,\\n      lookbehind: true,\\n      alias: 'class-name'\\n    },\\n    boolean: /\\\\b(?:false|true)\\\\b/,\\n    // https://github.com/Azure/bicep/blob/114a3251b4e6e30082a58729f19a8cc4e374ffa6/src/textmate/bicep.tmlanguage#L184\\n    keyword: /\\\\b(?:existing|for|if|in|module|null|output|param|resource|targetScope|var)\\\\b/,\\n    decorator: /@\\\\w+\\\\b/,\\n    function: /\\\\b[a-z_]\\\\w*(?=[ \\\\t]*\\\\()/i,\\n    number: /(?:\\\\b\\\\d+(?:\\\\.\\\\d*)?|\\\\B\\\\.\\\\d+)(?:E[+-]?\\\\d+)?/i,\\n    operator: /--|\\\\+\\\\+|\\\\*\\\\*=?|=>|&&=?|\\\\|\\\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\\\.{3}|\\\\?\\\\?=?|\\\\?\\\\.?|[~:]/,\\n    punctuation: /[{}[\\\\];(),.:]/\\n  };\\n  Prism.languages.bicep['interpolated-string'].inside['interpolation'].inside['expression'].inside = Prism.languages.bicep;\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"bicep\",\"Prism\",\"languages\",\"comment\",\"pattern\",\"lookbehind\",\"greedy\",\"property\",\"string\",\"inside\",\"interpolation\",\"expression\",\"punctuation\",\"datatype\",\"alias\",\"boolean\",\"keyword\",\"decorator\",\"function\",\"number\",\"operator\",\"Object\",\"defineProperty\",\"value\",\"default\",\"displayName\",\"aliases\"]\n}\n"]