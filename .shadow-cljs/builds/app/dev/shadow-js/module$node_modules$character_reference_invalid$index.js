["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/character-reference-invalid/index.js"],"~:js","shadow$provide.module$node_modules$character_reference_invalid$index=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.characterReferenceInvalid={0:\"�\",128:\"€\",130:\"‚\",131:\"ƒ\",132:\"„\",133:\"…\",134:\"†\",135:\"‡\",136:\"ˆ\",137:\"‰\",138:\"Š\",139:\"‹\",140:\"Œ\",142:\"Ž\",145:\"‘\",146:\"’\",147:\"“\",148:\"”\",149:\"•\",150:\"–\",151:\"—\",152:\"˜\",153:\"™\",154:\"š\",155:\"›\",156:\"œ\",158:\"ž\",159:\"Ÿ\"}}","~:source","shadow$provide[\"module$node_modules$character_reference_invalid$index\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.characterReferenceInvalid = void 0;\n\n/**\n * Map of invalid numeric character references to their replacements, according to HTML.\n *\n * @type {Record<number, string>}\n */\nconst characterReferenceInvalid = {\n  0: '�',\n  128: '€',\n  130: '‚',\n  131: 'ƒ',\n  132: '„',\n  133: '…',\n  134: '†',\n  135: '‡',\n  136: 'ˆ',\n  137: '‰',\n  138: 'Š',\n  139: '‹',\n  140: 'Œ',\n  142: 'Ž',\n  145: '‘',\n  146: '’',\n  147: '“',\n  148: '”',\n  149: '•',\n  150: '–',\n  151: '—',\n  152: '˜',\n  153: '™',\n  154: 'š',\n  155: '›',\n  156: 'œ',\n  158: 'ž',\n  159: 'Ÿ'\n};\nexports.characterReferenceInvalid = characterReferenceInvalid;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["__esModule","value","characterReferenceInvalid"]],"~:compiled-at",1676841365379,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$character_reference_invalid$index.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAA,qDAAA,CAA0E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGlHC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAwCAH,QAAQI,CAAAA,yBAAR,CA9BkCA,CAChC,EAAG,GAD6BA,CAEhC,IAAK,GAF2BA,CAGhC,IAAK,GAH2BA,CAIhC,IAAK,GAJ2BA,CAKhC,IAAK,GAL2BA,CAMhC,IAAK,GAN2BA,CAOhC,IAAK,GAP2BA,CAQhC,IAAK,GAR2BA,CAShC,IAAK,GAT2BA,CAUhC,IAAK,GAV2BA,CAWhC,IAAK,GAX2BA,CAYhC,IAAK,GAZ2BA,CAahC,IAAK,GAb2BA,CAchC,IAAK,GAd2BA,CAehC,IAAK,GAf2BA,CAgBhC,IAAK,GAhB2BA,CAiBhC,IAAK,GAjB2BA,CAkBhC,IAAK,GAlB2BA,CAmBhC,IAAK,GAnB2BA,CAoBhC,IAAK,GApB2BA,CAqBhC,IAAK,GArB2BA,CAsBhC,IAAK,GAtB2BA,CAuBhC,IAAK,GAvB2BA,CAwBhC,IAAK,GAxB2BA,CAyBhC,IAAK,GAzB2BA,CA0BhC,IAAK,GA1B2BA,CA2BhC,IAAK,GA3B2BA,CA4BhC,IAAK,GA5B2BA,CAbgF;\",\n\"sources\":[\"node_modules/character-reference-invalid/index.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$character_reference_invalid$index\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.characterReferenceInvalid = void 0;\\n\\n/**\\n * Map of invalid numeric character references to their replacements, according to HTML.\\n *\\n * @type {Record<number, string>}\\n */\\nconst characterReferenceInvalid = {\\n  0: '\\ufffd',\\n  128: '\\u20ac',\\n  130: '\\u201a',\\n  131: '\\u0192',\\n  132: '\\u201e',\\n  133: '\\u2026',\\n  134: '\\u2020',\\n  135: '\\u2021',\\n  136: '\\u02c6',\\n  137: '\\u2030',\\n  138: '\\u0160',\\n  139: '\\u2039',\\n  140: '\\u0152',\\n  142: '\\u017d',\\n  145: '\\u2018',\\n  146: '\\u2019',\\n  147: '\\u201c',\\n  148: '\\u201d',\\n  149: '\\u2022',\\n  150: '\\u2013',\\n  151: '\\u2014',\\n  152: '\\u02dc',\\n  153: '\\u2122',\\n  154: '\\u0161',\\n  155: '\\u203a',\\n  156: '\\u0153',\\n  158: '\\u017e',\\n  159: '\\u0178'\\n};\\nexports.characterReferenceInvalid = characterReferenceInvalid;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"characterReferenceInvalid\"]\n}\n"]