["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/stylus.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$stylus=function(global,require,module,exports){function stylus(Prism){var unit={pattern:/(\\b\\d+)(?:%|[a-z]+)/,lookbehind:!0},number={pattern:/(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,lookbehind:!0};unit={comment:{pattern:/(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,lookbehind:!0},url:{pattern:/\\burl\\(([\"']?).*?\\1\\)/i,greedy:!0},string:{pattern:/(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,greedy:!0},interpolation:null,func:null,important:/\\B!(?:important|optional)\\b/i,\nkeyword:{pattern:/(^|\\s+)(?:(?:else|for|if|return|unless)(?=\\s|$)|@[\\w-]+)/,lookbehind:!0},hexcode:/#[\\da-f]{3,6}/i,color:[/\\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\\b/i,\n{pattern:/\\b(?:hsl|rgb)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:hsl|rgb)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,inside:{unit,number,function:/[\\w-]+(?=\\()/,punctuation:/[(),]/}}],entity:/\\\\[\\da-f]{1,8}/i,unit,boolean:/\\b(?:false|true)\\b/,operator:[/~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.{2,3}|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/],number,punctuation:/[{}()\\[\\];:,]/};unit.interpolation={pattern:/\\{[^\\r\\n}:]+\\}/,alias:\"variable\",\ninside:{delimiter:{pattern:/^\\{|\\}$/,alias:\"punctuation\"},rest:unit}};unit.func={pattern:/[\\w-]+\\([^)]*\\).*/,inside:{function:/^[^(]+/,rest:unit}};Prism.languages.stylus={\"atrule-declaration\":{pattern:/(^[ \\t]*)@.+/m,lookbehind:!0,inside:{atrule:/^@[\\w-]+/,rest:unit}},\"variable-declaration\":{pattern:/(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:\\{[^{}]*\\}|\\S.*|$)/m,lookbehind:!0,inside:{variable:/^\\S+/,rest:unit}},statement:{pattern:/(^[ \\t]*)(?:else|for|if|return|unless)[ \\t].+/m,lookbehind:!0,inside:{keyword:/^\\S+/,\nrest:unit}},\"property-declaration\":{pattern:/((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)(?!\\s)[^{\\r\\n]*(?:;|[^{\\r\\n,]$(?!(?:\\r?\\n|\\r)(?:\\{|\\2[ \\t])))/m,lookbehind:!0,inside:{property:{pattern:/^[^\\s:]+/,inside:{interpolation:unit.interpolation}},rest:unit}},selector:{pattern:/(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t])))/m,\nlookbehind:!0,inside:{interpolation:unit.interpolation,comment:unit.comment,punctuation:/[{},]/}},func:unit.func,string:unit.string,comment:{pattern:/(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,lookbehind:!0,greedy:!0},interpolation:unit.interpolation,punctuation:/[{}()\\[\\];:.]/}}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=stylus;stylus.displayName=\"stylus\";stylus.aliases=[]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$stylus\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = stylus;\n// @ts-nocheck\nstylus.displayName = 'stylus';\nstylus.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nfunction stylus(Prism) {\n  ;\n\n  (function (Prism) {\n    var unit = {\n      pattern: /(\\b\\d+)(?:%|[a-z]+)/,\n      lookbehind: true\n    }; // 123 -123 .123 -.123 12.3 -12.3\n\n    var number = {\n      pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n      lookbehind: true\n    };\n    var inside = {\n      comment: {\n        pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n        lookbehind: true\n      },\n      url: {\n        pattern: /\\burl\\(([\"']?).*?\\1\\)/i,\n        greedy: true\n      },\n      string: {\n        pattern: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n        greedy: true\n      },\n      interpolation: null,\n      // See below\n      func: null,\n      // See below\n      important: /\\B!(?:important|optional)\\b/i,\n      keyword: {\n        pattern: /(^|\\s+)(?:(?:else|for|if|return|unless)(?=\\s|$)|@[\\w-]+)/,\n        lookbehind: true\n      },\n      hexcode: /#[\\da-f]{3,6}/i,\n      color: [/\\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\\b/i, {\n        pattern: /\\b(?:hsl|rgb)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:hsl|rgb)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n        inside: {\n          unit: unit,\n          number: number,\n          function: /[\\w-]+(?=\\()/,\n          punctuation: /[(),]/\n        }\n      }],\n      entity: /\\\\[\\da-f]{1,8}/i,\n      unit: unit,\n      boolean: /\\b(?:false|true)\\b/,\n      operator: [// We want non-word chars around \"-\" because it is\n      // accepted in property names.\n      /~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.{2,3}|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/],\n      number: number,\n      punctuation: /[{}()\\[\\];:,]/\n    };\n    inside['interpolation'] = {\n      pattern: /\\{[^\\r\\n}:]+\\}/,\n      alias: 'variable',\n      inside: {\n        delimiter: {\n          pattern: /^\\{|\\}$/,\n          alias: 'punctuation'\n        },\n        rest: inside\n      }\n    };\n    inside['func'] = {\n      pattern: /[\\w-]+\\([^)]*\\).*/,\n      inside: {\n        function: /^[^(]+/,\n        rest: inside\n      }\n    };\n    Prism.languages.stylus = {\n      'atrule-declaration': {\n        pattern: /(^[ \\t]*)@.+/m,\n        lookbehind: true,\n        inside: {\n          atrule: /^@[\\w-]+/,\n          rest: inside\n        }\n      },\n      'variable-declaration': {\n        pattern: /(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:\\{[^{}]*\\}|\\S.*|$)/m,\n        lookbehind: true,\n        inside: {\n          variable: /^\\S+/,\n          rest: inside\n        }\n      },\n      statement: {\n        pattern: /(^[ \\t]*)(?:else|for|if|return|unless)[ \\t].+/m,\n        lookbehind: true,\n        inside: {\n          keyword: /^\\S+/,\n          rest: inside\n        }\n      },\n      // A property/value pair cannot end with a comma or a brace\n      // It cannot have indented content unless it ended with a semicolon\n      'property-declaration': {\n        pattern: /((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)(?!\\s)[^{\\r\\n]*(?:;|[^{\\r\\n,]$(?!(?:\\r?\\n|\\r)(?:\\{|\\2[ \\t])))/m,\n        lookbehind: true,\n        inside: {\n          property: {\n            pattern: /^[^\\s:]+/,\n            inside: {\n              interpolation: inside.interpolation\n            }\n          },\n          rest: inside\n        }\n      },\n      // A selector can contain parentheses only as part of a pseudo-element\n      // It can span multiple lines.\n      // It must end with a comma or an accolade or have indented content.\n      selector: {\n        pattern: /(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t])))/m,\n        lookbehind: true,\n        inside: {\n          interpolation: inside.interpolation,\n          comment: inside.comment,\n          punctuation: /[{},]/\n        }\n      },\n      func: inside.func,\n      string: inside.string,\n      comment: {\n        pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n        lookbehind: true,\n        greedy: true\n      },\n      interpolation: inside.interpolation,\n      punctuation: /[{}()\\[\\];:.]/\n    };\n  })(Prism);\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["func","boolean","url","punctuation","string","aliases","atrule","important","stylus","operator","displayName","__esModule","rest","lookbehind","value","delimiter","variable","keyword","number","statement","greedy","property","function","pattern","inside","unit","alias","selector","comment","entity","interpolation","color","default","hexcode"]],"~:compiled-at",1676841365448,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$stylus.js\",\n\"lineCount\":6,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/refractor/lang/stylus.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$stylus\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = stylus;\\n// @ts-nocheck\\nstylus.displayName = 'stylus';\\nstylus.aliases = [];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction stylus(Prism) {\\n  ;\\n\\n  (function (Prism) {\\n    var unit = {\\n      pattern: /(\\\\b\\\\d+)(?:%|[a-z]+)/,\\n      lookbehind: true\\n    }; // 123 -123 .123 -.123 12.3 -12.3\\n\\n    var number = {\\n      pattern: /(^|[^\\\\w.-])-?(?:\\\\d+(?:\\\\.\\\\d+)?|\\\\.\\\\d+)/,\\n      lookbehind: true\\n    };\\n    var inside = {\\n      comment: {\\n        pattern: /(^|[^\\\\\\\\])(?:\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/|\\\\/\\\\/.*)/,\\n        lookbehind: true\\n      },\\n      url: {\\n        pattern: /\\\\burl\\\\(([\\\"']?).*?\\\\1\\\\)/i,\\n        greedy: true\\n      },\\n      string: {\\n        pattern: /(\\\"|')(?:(?!\\\\1)[^\\\\\\\\\\\\r\\\\n]|\\\\\\\\(?:\\\\r\\\\n|[\\\\s\\\\S]))*\\\\1/,\\n        greedy: true\\n      },\\n      interpolation: null,\\n      // See below\\n      func: null,\\n      // See below\\n      important: /\\\\B!(?:important|optional)\\\\b/i,\\n      keyword: {\\n        pattern: /(^|\\\\s+)(?:(?:else|for|if|return|unless)(?=\\\\s|$)|@[\\\\w-]+)/,\\n        lookbehind: true\\n      },\\n      hexcode: /#[\\\\da-f]{3,6}/i,\\n      color: [/\\\\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\\\\b/i, {\\n        pattern: /\\\\b(?:hsl|rgb)\\\\(\\\\s*\\\\d{1,3}\\\\s*,\\\\s*\\\\d{1,3}%?\\\\s*,\\\\s*\\\\d{1,3}%?\\\\s*\\\\)\\\\B|\\\\b(?:hsl|rgb)a\\\\(\\\\s*\\\\d{1,3}\\\\s*,\\\\s*\\\\d{1,3}%?\\\\s*,\\\\s*\\\\d{1,3}%?\\\\s*,\\\\s*(?:0|0?\\\\.\\\\d+|1)\\\\s*\\\\)\\\\B/i,\\n        inside: {\\n          unit: unit,\\n          number: number,\\n          function: /[\\\\w-]+(?=\\\\()/,\\n          punctuation: /[(),]/\\n        }\\n      }],\\n      entity: /\\\\\\\\[\\\\da-f]{1,8}/i,\\n      unit: unit,\\n      boolean: /\\\\b(?:false|true)\\\\b/,\\n      operator: [// We want non-word chars around \\\"-\\\" because it is\\n      // accepted in property names.\\n      /~|[+!\\\\/%<>?=]=?|[-:]=|\\\\*[*=]?|\\\\.{2,3}|&&|\\\\|\\\\||\\\\B-\\\\B|\\\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\\\b/],\\n      number: number,\\n      punctuation: /[{}()\\\\[\\\\];:,]/\\n    };\\n    inside['interpolation'] = {\\n      pattern: /\\\\{[^\\\\r\\\\n}:]+\\\\}/,\\n      alias: 'variable',\\n      inside: {\\n        delimiter: {\\n          pattern: /^\\\\{|\\\\}$/,\\n          alias: 'punctuation'\\n        },\\n        rest: inside\\n      }\\n    };\\n    inside['func'] = {\\n      pattern: /[\\\\w-]+\\\\([^)]*\\\\).*/,\\n      inside: {\\n        function: /^[^(]+/,\\n        rest: inside\\n      }\\n    };\\n    Prism.languages.stylus = {\\n      'atrule-declaration': {\\n        pattern: /(^[ \\\\t]*)@.+/m,\\n        lookbehind: true,\\n        inside: {\\n          atrule: /^@[\\\\w-]+/,\\n          rest: inside\\n        }\\n      },\\n      'variable-declaration': {\\n        pattern: /(^[ \\\\t]*)[\\\\w$-]+\\\\s*.?=[ \\\\t]*(?:\\\\{[^{}]*\\\\}|\\\\S.*|$)/m,\\n        lookbehind: true,\\n        inside: {\\n          variable: /^\\\\S+/,\\n          rest: inside\\n        }\\n      },\\n      statement: {\\n        pattern: /(^[ \\\\t]*)(?:else|for|if|return|unless)[ \\\\t].+/m,\\n        lookbehind: true,\\n        inside: {\\n          keyword: /^\\\\S+/,\\n          rest: inside\\n        }\\n      },\\n      // A property/value pair cannot end with a comma or a brace\\n      // It cannot have indented content unless it ended with a semicolon\\n      'property-declaration': {\\n        pattern: /((?:^|\\\\{)([ \\\\t]*))(?:[\\\\w-]|\\\\{[^}\\\\r\\\\n]+\\\\})+(?:\\\\s*:\\\\s*|[ \\\\t]+)(?!\\\\s)[^{\\\\r\\\\n]*(?:;|[^{\\\\r\\\\n,]$(?!(?:\\\\r?\\\\n|\\\\r)(?:\\\\{|\\\\2[ \\\\t])))/m,\\n        lookbehind: true,\\n        inside: {\\n          property: {\\n            pattern: /^[^\\\\s:]+/,\\n            inside: {\\n              interpolation: inside.interpolation\\n            }\\n          },\\n          rest: inside\\n        }\\n      },\\n      // A selector can contain parentheses only as part of a pseudo-element\\n      // It can span multiple lines.\\n      // It must end with a comma or an accolade or have indented content.\\n      selector: {\\n        pattern: /(^[ \\\\t]*)(?:(?=\\\\S)(?:[^{}\\\\r\\\\n:()]|::?[\\\\w-]+(?:\\\\([^)\\\\r\\\\n]*\\\\)|(?![\\\\w-]))|\\\\{[^}\\\\r\\\\n]+\\\\})+)(?:(?:\\\\r?\\\\n|\\\\r)(?:\\\\1(?:(?=\\\\S)(?:[^{}\\\\r\\\\n:()]|::?[\\\\w-]+(?:\\\\([^)\\\\r\\\\n]*\\\\)|(?![\\\\w-]))|\\\\{[^}\\\\r\\\\n]+\\\\})+)))*(?:,$|\\\\{|(?=(?:\\\\r?\\\\n|\\\\r)(?:\\\\{|\\\\1[ \\\\t])))/m,\\n        lookbehind: true,\\n        inside: {\\n          interpolation: inside.interpolation,\\n          comment: inside.comment,\\n          punctuation: /[{},]/\\n        }\\n      },\\n      func: inside.func,\\n      string: inside.string,\\n      comment: {\\n        pattern: /(^|[^\\\\\\\\])(?:\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/|\\\\/\\\\/.*)/,\\n        lookbehind: true,\\n        greedy: true\\n      },\\n      interpolation: inside.interpolation,\\n      punctuation: /[{}()\\\\[\\\\];:.]/\\n    };\\n  })(Prism);\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"stylus\",\"Prism\",\"unit\",\"pattern\",\"lookbehind\",\"number\",\"inside\",\"comment\",\"url\",\"greedy\",\"string\",\"interpolation\",\"func\",\"important\",\"keyword\",\"hexcode\",\"color\",\"function\",\"punctuation\",\"entity\",\"boolean\",\"operator\",\"alias\",\"delimiter\",\"rest\",\"languages\",\"atrule\",\"variable\",\"statement\",\"property\",\"selector\",\"Object\",\"defineProperty\",\"value\",\"default\",\"displayName\",\"aliases\"]\n}\n"]