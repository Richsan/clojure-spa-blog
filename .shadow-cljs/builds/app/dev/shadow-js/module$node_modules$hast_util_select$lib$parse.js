["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/hast-util-select/lib/parse.js"],"~:js","shadow$provide.module$node_modules$hast_util_select$lib$parse=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.parse=function(selector){if(\"string\"!==typeof selector)throw new TypeError(\"Expected `string` as selector, not `\"+selector+\"`\");return parser.parse(selector)};const parser=new (require(\"module$node_modules$css_selector_parser$lib$index\").CssSelectorParser);parser.registerAttrEqualityMods(\"~\",\"|\",\"^\",\"$\",\"*\");parser.registerSelectorPseudos(\"any\",\n\"matches\",\"not\",\"has\");parser.registerNestingOperators(\"\\x3e\",\"+\",\"~\")}","~:source","shadow$provide[\"module$node_modules$hast_util_select$lib$parse\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parse = parse;\n\nvar _cssSelectorParser = require(\"css-selector-parser\");\n\n/**\n * @typedef {import('./types.js').Selectors} Selectors\n * @typedef {import('./types.js').RuleSet} RuleSet\n */\nconst parser = new _cssSelectorParser.CssSelectorParser();\nparser.registerAttrEqualityMods('~', '|', '^', '$', '*');\nparser.registerSelectorPseudos('any', 'matches', 'not', 'has');\nparser.registerNestingOperators('>', '+', '~');\n/**\n * @param {string} selector\n * @returns {Selectors | RuleSet | null}\n */\n\nfunction parse(selector) {\n  if (typeof selector !== 'string') {\n    throw new TypeError('Expected `string` as selector, not `' + selector + '`');\n  }\n\n  return parser.parse(selector);\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$css_selector_parser$lib$index"]],"~:properties",["^5",["__esModule","value","parse"]],"~:compiled-at",1676841365503,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$hast_util_select$lib$parse.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,8CAAA,CAAmE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG3GC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,KAAR,CAiBAA,QAAc,CAACC,QAAD,CAAW,CACvB,GAAwB,QAAxB,GAAI,MAAOA,SAAX,CACE,KAAM,KAAIC,SAAJ,CAAc,sCAAd,CAAuDD,QAAvD,CAAkE,GAAlE,CAAN,CAGF,MAAOE,OAAOH,CAAAA,KAAP,CAAaC,QAAb,CALgB,CATzB,OAAME,OAAS,KANUT,OAAAU,CAAQ,mDAARA,CAMaC,CAAAA,iBAAvB,CACfF,OAAOG,CAAAA,wBAAP,CAAgC,GAAhC,CAAqC,GAArC,CAA0C,GAA1C,CAA+C,GAA/C,CAAoD,GAApD,CACAH,OAAOI,CAAAA,uBAAP,CAA+B,KAA/B;AAAsC,SAAtC,CAAiD,KAAjD,CAAwD,KAAxD,CACAJ,OAAOK,CAAAA,wBAAP,CAAgC,MAAhC,CAAqC,GAArC,CAA0C,GAA1C,CAjB2G;\",\n\"sources\":[\"node_modules/hast-util-select/lib/parse.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$hast_util_select$lib$parse\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.parse = parse;\\n\\nvar _cssSelectorParser = require(\\\"css-selector-parser\\\");\\n\\n/**\\n * @typedef {import('./types.js').Selectors} Selectors\\n * @typedef {import('./types.js').RuleSet} RuleSet\\n */\\nconst parser = new _cssSelectorParser.CssSelectorParser();\\nparser.registerAttrEqualityMods('~', '|', '^', '$', '*');\\nparser.registerSelectorPseudos('any', 'matches', 'not', 'has');\\nparser.registerNestingOperators('>', '+', '~');\\n/**\\n * @param {string} selector\\n * @returns {Selectors | RuleSet | null}\\n */\\n\\nfunction parse(selector) {\\n  if (typeof selector !== 'string') {\\n    throw new TypeError('Expected `string` as selector, not `' + selector + '`');\\n  }\\n\\n  return parser.parse(selector);\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"parse\",\"selector\",\"TypeError\",\"parser\",\"_cssSelectorParser\",\"CssSelectorParser\",\"registerAttrEqualityMods\",\"registerSelectorPseudos\",\"registerNestingOperators\"]\n}\n"]