["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/css-extras.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$css_extras=function(global,require,module,exports){function cssExtras(Prism){Prism.register(_css.default);var string=/(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;Prism.languages.css.selector={pattern:Prism.languages.css.selector.pattern,lookbehind:!0,inside:string={\"pseudo-element\":/:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\"pseudo-class\":/:[-\\w]+/,class:/\\.[-\\w]+/,id:/#[-\\w]+/,attribute:{pattern:RegExp(\"\\\\[(?:[^[\\\\]\\\"']|\"+string.source+\n\")*\\\\]\"),greedy:!0,inside:{punctuation:/^\\[|\\]$/,\"case-sensitivity\":{pattern:/(\\s)[si]$/i,lookbehind:!0,alias:\"keyword\"},namespace:{pattern:/^(\\s*)(?:(?!\\s)[-*\\w\\xA0-\\uFFFF])*\\|(?!=)/,lookbehind:!0,inside:{punctuation:/\\|$/}},\"attr-name\":{pattern:/^(\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+/,lookbehind:!0},\"attr-value\":[string,{pattern:/(=\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+(?=\\s*$)/,lookbehind:!0}],operator:/[|~*^$]?=/}},\"n-th\":[{pattern:/(\\(\\s*)[+-]?\\d*[\\dn](?:\\s*[+-]\\s*\\d+)?(?=\\s*\\))/,lookbehind:!0,inside:{number:/[\\dn]+/,\noperator:/[+-]/}},{pattern:/(\\(\\s*)(?:even|odd)(?=\\s*\\))/i,lookbehind:!0}],combinator:/>|\\+|~|\\|\\|/,punctuation:/[(),]/}};Prism.languages.css.atrule.inside[\"selector-function-argument\"].inside=string;Prism.languages.insertBefore(\"css\",\"property\",{variable:{pattern:/(^|[^-\\w\\xA0-\\uFFFF])--(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*/i,lookbehind:!0}});string={pattern:/(\\b\\d+)(?:%|[a-z]+(?![\\w-]))/,lookbehind:!0};var number={pattern:/(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,lookbehind:!0};Prism.languages.insertBefore(\"css\",\n\"function\",{operator:{pattern:/(\\s)[+\\-*\\/](?=\\s)/,lookbehind:!0},hexcode:{pattern:/\\B#[\\da-f]{3,8}\\b/i,alias:\"color\"},color:[{pattern:/(^|[^\\w-])(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|RebeccaPurple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)(?![\\w-])/i,\nlookbehind:!0},{pattern:/\\b(?:hsl|rgb)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:hsl|rgb)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,inside:{unit:string,number,function:/[\\w-]+(?=\\()/,punctuation:/[(),]/}}],entity:/\\\\[\\da-f]{1,8}/i,unit:string,number})}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=cssExtras;var _css=function(obj){return obj&&obj.__esModule?obj:{default:obj}}(require(\"module$node_modules$refractor$lang$css\"));\ncssExtras.displayName=\"css-extras\";cssExtras.aliases=[]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$css_extras\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = cssExtras;\n\nvar _css = _interopRequireDefault(require(\"./css.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// @ts-nocheck\ncssExtras.displayName = 'css-extras';\ncssExtras.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nfunction cssExtras(Prism) {\n  Prism.register(_css.default);\n\n  (function (Prism) {\n    var string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n    var selectorInside;\n    Prism.languages.css.selector = {\n      pattern: Prism.languages.css.selector.pattern,\n      lookbehind: true,\n      inside: selectorInside = {\n        'pseudo-element': /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\n        'pseudo-class': /:[-\\w]+/,\n        class: /\\.[-\\w]+/,\n        id: /#[-\\w]+/,\n        attribute: {\n          pattern: RegExp('\\\\[(?:[^[\\\\]\"\\']|' + string.source + ')*\\\\]'),\n          greedy: true,\n          inside: {\n            punctuation: /^\\[|\\]$/,\n            'case-sensitivity': {\n              pattern: /(\\s)[si]$/i,\n              lookbehind: true,\n              alias: 'keyword'\n            },\n            namespace: {\n              pattern: /^(\\s*)(?:(?!\\s)[-*\\w\\xA0-\\uFFFF])*\\|(?!=)/,\n              lookbehind: true,\n              inside: {\n                punctuation: /\\|$/\n              }\n            },\n            'attr-name': {\n              pattern: /^(\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+/,\n              lookbehind: true\n            },\n            'attr-value': [string, {\n              pattern: /(=\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+(?=\\s*$)/,\n              lookbehind: true\n            }],\n            operator: /[|~*^$]?=/\n          }\n        },\n        'n-th': [{\n          pattern: /(\\(\\s*)[+-]?\\d*[\\dn](?:\\s*[+-]\\s*\\d+)?(?=\\s*\\))/,\n          lookbehind: true,\n          inside: {\n            number: /[\\dn]+/,\n            operator: /[+-]/\n          }\n        }, {\n          pattern: /(\\(\\s*)(?:even|odd)(?=\\s*\\))/i,\n          lookbehind: true\n        }],\n        combinator: />|\\+|~|\\|\\|/,\n        // the `tag` token has been existed and removed.\n        // because we can't find a perfect tokenize to match it.\n        // if you want to add it, please read https://github.com/PrismJS/prism/pull/2373 first.\n        punctuation: /[(),]/\n      }\n    };\n    Prism.languages.css['atrule'].inside['selector-function-argument'].inside = selectorInside;\n    Prism.languages.insertBefore('css', 'property', {\n      variable: {\n        pattern: /(^|[^-\\w\\xA0-\\uFFFF])--(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*/i,\n        lookbehind: true\n      }\n    });\n    var unit = {\n      pattern: /(\\b\\d+)(?:%|[a-z]+(?![\\w-]))/,\n      lookbehind: true\n    }; // 123 -123 .123 -.123 12.3 -12.3\n\n    var number = {\n      pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n      lookbehind: true\n    };\n    Prism.languages.insertBefore('css', 'function', {\n      operator: {\n        pattern: /(\\s)[+\\-*\\/](?=\\s)/,\n        lookbehind: true\n      },\n      // CAREFUL!\n      // Previewers and Inline color use hexcode and color.\n      hexcode: {\n        pattern: /\\B#[\\da-f]{3,8}\\b/i,\n        alias: 'color'\n      },\n      color: [{\n        pattern: /(^|[^\\w-])(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|RebeccaPurple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)(?![\\w-])/i,\n        lookbehind: true\n      }, {\n        pattern: /\\b(?:hsl|rgb)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:hsl|rgb)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n        inside: {\n          unit: unit,\n          number: number,\n          function: /[\\w-]+(?=\\()/,\n          punctuation: /[(),]/\n        }\n      }],\n      // it's important that there is no boundary assertion after the hex digits\n      entity: /\\\\[\\da-f]{1,8}/i,\n      unit: unit,\n      number: number\n    });\n  })(Prism);\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$refractor$lang$css"]],"~:properties",["^5",["punctuation","aliases","class","operator","displayName","__esModule","attribute","id","combinator","lookbehind","value","variable","number","greedy","function","pattern","inside","unit","alias","selector","namespace","entity","color","default","hexcode"]],"~:compiled-at",1676841365402,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$css_extras.js\",\n\"lineCount\":6,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/refractor/lang/css-extras.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$css_extras\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = cssExtras;\\n\\nvar _css = _interopRequireDefault(require(\\\"./css.js\\\"));\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\n// @ts-nocheck\\ncssExtras.displayName = 'css-extras';\\ncssExtras.aliases = [];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction cssExtras(Prism) {\\n  Prism.register(_css.default);\\n\\n  (function (Prism) {\\n    var string = /(\\\"|')(?:\\\\\\\\(?:\\\\r\\\\n|[\\\\s\\\\S])|(?!\\\\1)[^\\\\\\\\\\\\r\\\\n])*\\\\1/;\\n    var selectorInside;\\n    Prism.languages.css.selector = {\\n      pattern: Prism.languages.css.selector.pattern,\\n      lookbehind: true,\\n      inside: selectorInside = {\\n        'pseudo-element': /:(?:after|before|first-letter|first-line|selection)|::[-\\\\w]+/,\\n        'pseudo-class': /:[-\\\\w]+/,\\n        class: /\\\\.[-\\\\w]+/,\\n        id: /#[-\\\\w]+/,\\n        attribute: {\\n          pattern: RegExp('\\\\\\\\[(?:[^[\\\\\\\\]\\\"\\\\']|' + string.source + ')*\\\\\\\\]'),\\n          greedy: true,\\n          inside: {\\n            punctuation: /^\\\\[|\\\\]$/,\\n            'case-sensitivity': {\\n              pattern: /(\\\\s)[si]$/i,\\n              lookbehind: true,\\n              alias: 'keyword'\\n            },\\n            namespace: {\\n              pattern: /^(\\\\s*)(?:(?!\\\\s)[-*\\\\w\\\\xA0-\\\\uFFFF])*\\\\|(?!=)/,\\n              lookbehind: true,\\n              inside: {\\n                punctuation: /\\\\|$/\\n              }\\n            },\\n            'attr-name': {\\n              pattern: /^(\\\\s*)(?:(?!\\\\s)[-\\\\w\\\\xA0-\\\\uFFFF])+/,\\n              lookbehind: true\\n            },\\n            'attr-value': [string, {\\n              pattern: /(=\\\\s*)(?:(?!\\\\s)[-\\\\w\\\\xA0-\\\\uFFFF])+(?=\\\\s*$)/,\\n              lookbehind: true\\n            }],\\n            operator: /[|~*^$]?=/\\n          }\\n        },\\n        'n-th': [{\\n          pattern: /(\\\\(\\\\s*)[+-]?\\\\d*[\\\\dn](?:\\\\s*[+-]\\\\s*\\\\d+)?(?=\\\\s*\\\\))/,\\n          lookbehind: true,\\n          inside: {\\n            number: /[\\\\dn]+/,\\n            operator: /[+-]/\\n          }\\n        }, {\\n          pattern: /(\\\\(\\\\s*)(?:even|odd)(?=\\\\s*\\\\))/i,\\n          lookbehind: true\\n        }],\\n        combinator: />|\\\\+|~|\\\\|\\\\|/,\\n        // the `tag` token has been existed and removed.\\n        // because we can't find a perfect tokenize to match it.\\n        // if you want to add it, please read https://github.com/PrismJS/prism/pull/2373 first.\\n        punctuation: /[(),]/\\n      }\\n    };\\n    Prism.languages.css['atrule'].inside['selector-function-argument'].inside = selectorInside;\\n    Prism.languages.insertBefore('css', 'property', {\\n      variable: {\\n        pattern: /(^|[^-\\\\w\\\\xA0-\\\\uFFFF])--(?!\\\\s)[-_a-z\\\\xA0-\\\\uFFFF](?:(?!\\\\s)[-\\\\w\\\\xA0-\\\\uFFFF])*/i,\\n        lookbehind: true\\n      }\\n    });\\n    var unit = {\\n      pattern: /(\\\\b\\\\d+)(?:%|[a-z]+(?![\\\\w-]))/,\\n      lookbehind: true\\n    }; // 123 -123 .123 -.123 12.3 -12.3\\n\\n    var number = {\\n      pattern: /(^|[^\\\\w.-])-?(?:\\\\d+(?:\\\\.\\\\d+)?|\\\\.\\\\d+)/,\\n      lookbehind: true\\n    };\\n    Prism.languages.insertBefore('css', 'function', {\\n      operator: {\\n        pattern: /(\\\\s)[+\\\\-*\\\\/](?=\\\\s)/,\\n        lookbehind: true\\n      },\\n      // CAREFUL!\\n      // Previewers and Inline color use hexcode and color.\\n      hexcode: {\\n        pattern: /\\\\B#[\\\\da-f]{3,8}\\\\b/i,\\n        alias: 'color'\\n      },\\n      color: [{\\n        pattern: /(^|[^\\\\w-])(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|RebeccaPurple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)(?![\\\\w-])/i,\\n        lookbehind: true\\n      }, {\\n        pattern: /\\\\b(?:hsl|rgb)\\\\(\\\\s*\\\\d{1,3}\\\\s*,\\\\s*\\\\d{1,3}%?\\\\s*,\\\\s*\\\\d{1,3}%?\\\\s*\\\\)\\\\B|\\\\b(?:hsl|rgb)a\\\\(\\\\s*\\\\d{1,3}\\\\s*,\\\\s*\\\\d{1,3}%?\\\\s*,\\\\s*\\\\d{1,3}%?\\\\s*,\\\\s*(?:0|0?\\\\.\\\\d+|1)\\\\s*\\\\)\\\\B/i,\\n        inside: {\\n          unit: unit,\\n          number: number,\\n          function: /[\\\\w-]+(?=\\\\()/,\\n          punctuation: /[(),]/\\n        }\\n      }],\\n      // it's important that there is no boundary assertion after the hex digits\\n      entity: /\\\\\\\\[\\\\da-f]{1,8}/i,\\n      unit: unit,\\n      number: number\\n    });\\n  })(Prism);\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"cssExtras\",\"Prism\",\"register\",\"_css\",\"default\",\"string\",\"languages\",\"css\",\"selector\",\"pattern\",\"lookbehind\",\"inside\",\"selectorInside\",\"class\",\"id\",\"attribute\",\"RegExp\",\"source\",\"greedy\",\"punctuation\",\"alias\",\"namespace\",\"operator\",\"number\",\"combinator\",\"insertBefore\",\"variable\",\"unit\",\"hexcode\",\"color\",\"function\",\"entity\",\"Object\",\"defineProperty\",\"value\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"displayName\",\"aliases\"]\n}\n"]