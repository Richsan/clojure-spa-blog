["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/gap.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$gap=function(global,require,module,exports){function gap(Prism){Prism.languages.gap={shell:{pattern:/^gap>[\\s\\S]*?(?=^gap>|$(?![\\s\\S]))/m,greedy:!0,inside:{gap:{pattern:/^(gap>).+(?:(?:\\r(?:\\n|(?!\\n))|\\n)>.*)*/,lookbehind:!0,inside:null},punctuation:/^gap>/}},comment:{pattern:/#.*/,greedy:!0},string:{pattern:/(^|[^\\\\'\"])(?:'(?:[^\\r\\n\\\\']|\\\\.){1,10}'|\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"(?!\")|\"\"\"[\\s\\S]*?\"\"\")/,lookbehind:!0,greedy:!0,inside:{continuation:{pattern:/([\\r\\n])>/,\nlookbehind:!0,alias:\"punctuation\"}}},keyword:/\\b(?:Assert|Info|IsBound|QUIT|TryNextMethod|Unbind|and|atomic|break|continue|do|elif|else|end|fi|for|function|if|in|local|mod|not|od|or|quit|readonly|readwrite|rec|repeat|return|then|until|while)\\b/,boolean:/\\b(?:false|true)\\b/,function:/\\b[a-z_]\\w*(?=\\s*\\()/i,number:{pattern:/(^|[^\\w.]|\\.\\.)(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+)?(?:_[a-z]?)?(?=$|[^\\w.]|\\.\\.)/,lookbehind:!0},continuation:{pattern:/([\\r\\n])>/,lookbehind:!0,alias:\"punctuation\"},operator:/->|[-+*/^~=!]|<>|[<>]=?|:=|\\.\\./,\npunctuation:/[()[\\]{},;.:]/};Prism.languages.gap.shell.inside.gap.inside=Prism.languages.gap}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=gap;gap.displayName=\"gap\";gap.aliases=[]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$gap\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = gap;\n// @ts-nocheck\ngap.displayName = 'gap';\ngap.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nfunction gap(Prism) {\n  // https://www.gap-system.org/Manuals/doc/ref/chap4.html\n  // https://www.gap-system.org/Manuals/doc/ref/chap27.html\n  Prism.languages.gap = {\n    shell: {\n      pattern: /^gap>[\\s\\S]*?(?=^gap>|$(?![\\s\\S]))/m,\n      greedy: true,\n      inside: {\n        gap: {\n          pattern: /^(gap>).+(?:(?:\\r(?:\\n|(?!\\n))|\\n)>.*)*/,\n          lookbehind: true,\n          inside: null // see below\n\n        },\n        punctuation: /^gap>/\n      }\n    },\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /(^|[^\\\\'\"])(?:'(?:[^\\r\\n\\\\']|\\\\.){1,10}'|\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"(?!\")|\"\"\"[\\s\\S]*?\"\"\")/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        continuation: {\n          pattern: /([\\r\\n])>/,\n          lookbehind: true,\n          alias: 'punctuation'\n        }\n      }\n    },\n    keyword: /\\b(?:Assert|Info|IsBound|QUIT|TryNextMethod|Unbind|and|atomic|break|continue|do|elif|else|end|fi|for|function|if|in|local|mod|not|od|or|quit|readonly|readwrite|rec|repeat|return|then|until|while)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    number: {\n      pattern: /(^|[^\\w.]|\\.\\.)(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+)?(?:_[a-z]?)?(?=$|[^\\w.]|\\.\\.)/,\n      lookbehind: true\n    },\n    continuation: {\n      pattern: /([\\r\\n])>/,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    operator: /->|[-+*/^~=!]|<>|[<>]=?|:=|\\.\\./,\n    punctuation: /[()[\\]{},;.:]/\n  };\n  Prism.languages.gap.shell.inside.gap.inside = Prism.languages.gap;\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["boolean","gap","punctuation","string","aliases","operator","continuation","displayName","__esModule","lookbehind","shell","value","keyword","number","greedy","function","pattern","inside","alias","comment","default"]],"~:compiled-at",1676841365413,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$gap.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,CAAA,sCAAA,CAA2D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAYnGC,QAASA,IAAG,CAACC,KAAD,CAAQ,CAGlBA,KAAMC,CAAAA,SAAUF,CAAAA,GAAhB,CAAsB,CACpBG,MAAO,CACLC,QAAS,qCADJ,CAELC,OAAQ,CAAA,CAFH,CAGLC,OAAQ,CACNN,IAAK,CACHI,QAAS,yCADN,CAEHG,WAAY,CAAA,CAFT,CAGHD,OAAQ,IAHL,CADC,CAONE,YAAa,OAPP,CAHH,CADa,CAcpBC,QAAS,CACPL,QAAS,KADF,CAEPC,OAAQ,CAAA,CAFD,CAdW,CAkBpBK,OAAQ,CACNN,QAAS,qFADH,CAENG,WAAY,CAAA,CAFN,CAGNF,OAAQ,CAAA,CAHF,CAINC,OAAQ,CACNK,aAAc,CACZP,QAAS,WADG;AAEZG,WAAY,CAAA,CAFA,CAGZK,MAAO,aAHK,CADR,CAJF,CAlBY,CA8BpBC,QAAS,uMA9BW,CA+BpBC,QAAS,oBA/BW,CAgCpBC,SAAU,uBAhCU,CAiCpBC,OAAQ,CACNZ,QAAS,sFADH,CAENG,WAAY,CAAA,CAFN,CAjCY,CAqCpBI,aAAc,CACZP,QAAS,WADG,CAEZG,WAAY,CAAA,CAFA,CAGZK,MAAO,aAHK,CArCM,CA0CpBK,SAAU,iCA1CU;AA2CpBT,YAAa,eA3CO,CA6CtBP,MAAMC,CAAAA,SAAUF,CAAAA,GAAIG,CAAAA,KAAMG,CAAAA,MAAON,CAAAA,GAAIM,CAAAA,MAArC,CAA8CL,KAAMC,CAAAA,SAAUF,CAAAA,GAhD5C,CATpBkB,MAAOC,CAAAA,cAAP,CAAsBpB,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CqB,MAAO,CAAA,CADoC,CAA7C,CAGArB,QAAQsB,CAAAA,OAAR,CAAkBrB,GAElBA,IAAIsB,CAAAA,WAAJ,CAAkB,KAClBtB,IAAIuB,CAAAA,OAAJ,CAAc,EATqF;\",\n\"sources\":[\"node_modules/refractor/lang/gap.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$gap\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = gap;\\n// @ts-nocheck\\ngap.displayName = 'gap';\\ngap.aliases = [];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction gap(Prism) {\\n  // https://www.gap-system.org/Manuals/doc/ref/chap4.html\\n  // https://www.gap-system.org/Manuals/doc/ref/chap27.html\\n  Prism.languages.gap = {\\n    shell: {\\n      pattern: /^gap>[\\\\s\\\\S]*?(?=^gap>|$(?![\\\\s\\\\S]))/m,\\n      greedy: true,\\n      inside: {\\n        gap: {\\n          pattern: /^(gap>).+(?:(?:\\\\r(?:\\\\n|(?!\\\\n))|\\\\n)>.*)*/,\\n          lookbehind: true,\\n          inside: null // see below\\n\\n        },\\n        punctuation: /^gap>/\\n      }\\n    },\\n    comment: {\\n      pattern: /#.*/,\\n      greedy: true\\n    },\\n    string: {\\n      pattern: /(^|[^\\\\\\\\'\\\"])(?:'(?:[^\\\\r\\\\n\\\\\\\\']|\\\\\\\\.){1,10}'|\\\"(?:[^\\\\r\\\\n\\\\\\\\\\\"]|\\\\\\\\.)*\\\"(?!\\\")|\\\"\\\"\\\"[\\\\s\\\\S]*?\\\"\\\"\\\")/,\\n      lookbehind: true,\\n      greedy: true,\\n      inside: {\\n        continuation: {\\n          pattern: /([\\\\r\\\\n])>/,\\n          lookbehind: true,\\n          alias: 'punctuation'\\n        }\\n      }\\n    },\\n    keyword: /\\\\b(?:Assert|Info|IsBound|QUIT|TryNextMethod|Unbind|and|atomic|break|continue|do|elif|else|end|fi|for|function|if|in|local|mod|not|od|or|quit|readonly|readwrite|rec|repeat|return|then|until|while)\\\\b/,\\n    boolean: /\\\\b(?:false|true)\\\\b/,\\n    function: /\\\\b[a-z_]\\\\w*(?=\\\\s*\\\\()/i,\\n    number: {\\n      pattern: /(^|[^\\\\w.]|\\\\.\\\\.)(?:\\\\d+(?:\\\\.\\\\d*)?|\\\\.\\\\d+)(?:[eE][+-]?\\\\d+)?(?:_[a-z]?)?(?=$|[^\\\\w.]|\\\\.\\\\.)/,\\n      lookbehind: true\\n    },\\n    continuation: {\\n      pattern: /([\\\\r\\\\n])>/,\\n      lookbehind: true,\\n      alias: 'punctuation'\\n    },\\n    operator: /->|[-+*/^~=!]|<>|[<>]=?|:=|\\\\.\\\\./,\\n    punctuation: /[()[\\\\]{},;.:]/\\n  };\\n  Prism.languages.gap.shell.inside.gap.inside = Prism.languages.gap;\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"gap\",\"Prism\",\"languages\",\"shell\",\"pattern\",\"greedy\",\"inside\",\"lookbehind\",\"punctuation\",\"comment\",\"string\",\"continuation\",\"alias\",\"keyword\",\"boolean\",\"function\",\"number\",\"operator\",\"Object\",\"defineProperty\",\"value\",\"default\",\"displayName\",\"aliases\"]\n}\n"]