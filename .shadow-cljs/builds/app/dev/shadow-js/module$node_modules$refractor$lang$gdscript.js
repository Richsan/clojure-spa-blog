["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/gdscript.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$gdscript=function(global,require,module,exports){function gdscript(Prism){Prism.languages.gdscript={comment:/#.*/,string:{pattern:/@?(?:(\"|')(?:(?!\\1)[^\\n\\\\]|\\\\[\\s\\S])*\\1(?!\"|')|\"\"\"(?:[^\\\\]|\\\\[\\s\\S])*?\"\"\")/,greedy:!0},\"class-name\":{pattern:/(^(?:class|class_name|extends)[ \\t]+|^export\\([ \\t]*|\\bas[ \\t]+|(?:\\b(?:const|var)[ \\t]|[,(])[ \\t]*\\w+[ \\t]*:[ \\t]*|->[ \\t]*)[a-zA-Z_]\\w*/m,lookbehind:!0},keyword:/\\b(?:and|as|assert|break|breakpoint|class|class_name|const|continue|elif|else|enum|export|extends|for|func|if|in|is|master|mastersync|match|not|null|onready|or|pass|preload|puppet|puppetsync|remote|remotesync|return|self|setget|signal|static|tool|var|while|yield)\\b/,\nfunction:/\\b[a-z_]\\w*(?=[ \\t]*\\()/i,variable:/\\$\\w+/,number:[/\\b0b[01_]+\\b|\\b0x[\\da-fA-F_]+\\b|(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.[\\d_]+)(?:e[+-]?[\\d_]+)?\\b/,/\\b(?:INF|NAN|PI|TAU)\\b/],constant:/\\b[A-Z][A-Z_\\d]*\\b/,boolean:/\\b(?:false|true)\\b/,operator:/->|:=|&&|\\|\\||<<|>>|[-+*/%&|!<>=]=?|[~^]/,punctuation:/[.:,;()[\\]{}]/}}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=gdscript;gdscript.displayName=\"gdscript\";gdscript.aliases=[]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$gdscript\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = gdscript;\n// @ts-nocheck\ngdscript.displayName = 'gdscript';\ngdscript.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nfunction gdscript(Prism) {\n  Prism.languages.gdscript = {\n    comment: /#.*/,\n    string: {\n      pattern: /@?(?:(\"|')(?:(?!\\1)[^\\n\\\\]|\\\\[\\s\\S])*\\1(?!\"|')|\"\"\"(?:[^\\\\]|\\\\[\\s\\S])*?\"\"\")/,\n      greedy: true\n    },\n    'class-name': {\n      // class_name Foo, extends Bar, class InnerClass\n      // export(int) var baz, export(int, 0) var i\n      // as Node\n      // const FOO: int = 9, var bar: bool = true\n      // func add(reference: Item, amount: int) -> Item:\n      pattern: /(^(?:class|class_name|extends)[ \\t]+|^export\\([ \\t]*|\\bas[ \\t]+|(?:\\b(?:const|var)[ \\t]|[,(])[ \\t]*\\w+[ \\t]*:[ \\t]*|->[ \\t]*)[a-zA-Z_]\\w*/m,\n      lookbehind: true\n    },\n    keyword: /\\b(?:and|as|assert|break|breakpoint|class|class_name|const|continue|elif|else|enum|export|extends|for|func|if|in|is|master|mastersync|match|not|null|onready|or|pass|preload|puppet|puppetsync|remote|remotesync|return|self|setget|signal|static|tool|var|while|yield)\\b/,\n    function: /\\b[a-z_]\\w*(?=[ \\t]*\\()/i,\n    variable: /\\$\\w+/,\n    number: [/\\b0b[01_]+\\b|\\b0x[\\da-fA-F_]+\\b|(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.[\\d_]+)(?:e[+-]?[\\d_]+)?\\b/, /\\b(?:INF|NAN|PI|TAU)\\b/],\n    constant: /\\b[A-Z][A-Z_\\d]*\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    operator: /->|:=|&&|\\|\\||<<|>>|[-+*/%&|!<>=]=?|[~^]/,\n    punctuation: /[.:,;()[\\]{}]/\n  };\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["boolean","punctuation","string","aliases","constant","operator","displayName","__esModule","gdscript","lookbehind","value","variable","keyword","number","greedy","function","pattern","comment","default"]],"~:compiled-at",1676841365413,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$gdscript.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,2CAAA,CAAgE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAYxGC,QAASA,SAAQ,CAACC,KAAD,CAAQ,CACvBA,KAAMC,CAAAA,SAAUF,CAAAA,QAAhB,CAA2B,CACzBG,QAAS,KADgB,CAEzBC,OAAQ,CACNC,QAAS,4EADH,CAENC,OAAQ,CAAA,CAFF,CAFiB,CAMzB,aAAc,CAMZD,QAAS,4IANG,CAOZE,WAAY,CAAA,CAPA,CANW,CAezBC,QAAS,2QAfgB;AAgBzBC,SAAU,0BAhBe,CAiBzBC,SAAU,OAjBe,CAkBzBC,OAAQ,CAAC,2FAAD,CAA8F,wBAA9F,CAlBiB,CAmBzBC,SAAU,oBAnBe,CAoBzBC,QAAS,oBApBgB,CAqBzBC,SAAU,0CArBe,CAsBzBC,YAAa,eAtBY,CADJ,CATzBC,MAAOC,CAAAA,cAAP,CAAsBlB,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CmB,MAAO,CAAA,CADoC,CAA7C,CAGAnB,QAAQoB,CAAAA,OAAR,CAAkBnB,QAElBA,SAASoB,CAAAA,WAAT,CAAuB,UACvBpB,SAASqB,CAAAA,OAAT,CAAmB,EATqF;\",\n\"sources\":[\"node_modules/refractor/lang/gdscript.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$gdscript\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = gdscript;\\n// @ts-nocheck\\ngdscript.displayName = 'gdscript';\\ngdscript.aliases = [];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction gdscript(Prism) {\\n  Prism.languages.gdscript = {\\n    comment: /#.*/,\\n    string: {\\n      pattern: /@?(?:(\\\"|')(?:(?!\\\\1)[^\\\\n\\\\\\\\]|\\\\\\\\[\\\\s\\\\S])*\\\\1(?!\\\"|')|\\\"\\\"\\\"(?:[^\\\\\\\\]|\\\\\\\\[\\\\s\\\\S])*?\\\"\\\"\\\")/,\\n      greedy: true\\n    },\\n    'class-name': {\\n      // class_name Foo, extends Bar, class InnerClass\\n      // export(int) var baz, export(int, 0) var i\\n      // as Node\\n      // const FOO: int = 9, var bar: bool = true\\n      // func add(reference: Item, amount: int) -> Item:\\n      pattern: /(^(?:class|class_name|extends)[ \\\\t]+|^export\\\\([ \\\\t]*|\\\\bas[ \\\\t]+|(?:\\\\b(?:const|var)[ \\\\t]|[,(])[ \\\\t]*\\\\w+[ \\\\t]*:[ \\\\t]*|->[ \\\\t]*)[a-zA-Z_]\\\\w*/m,\\n      lookbehind: true\\n    },\\n    keyword: /\\\\b(?:and|as|assert|break|breakpoint|class|class_name|const|continue|elif|else|enum|export|extends|for|func|if|in|is|master|mastersync|match|not|null|onready|or|pass|preload|puppet|puppetsync|remote|remotesync|return|self|setget|signal|static|tool|var|while|yield)\\\\b/,\\n    function: /\\\\b[a-z_]\\\\w*(?=[ \\\\t]*\\\\()/i,\\n    variable: /\\\\$\\\\w+/,\\n    number: [/\\\\b0b[01_]+\\\\b|\\\\b0x[\\\\da-fA-F_]+\\\\b|(?:\\\\b\\\\d[\\\\d_]*(?:\\\\.[\\\\d_]*)?|\\\\B\\\\.[\\\\d_]+)(?:e[+-]?[\\\\d_]+)?\\\\b/, /\\\\b(?:INF|NAN|PI|TAU)\\\\b/],\\n    constant: /\\\\b[A-Z][A-Z_\\\\d]*\\\\b/,\\n    boolean: /\\\\b(?:false|true)\\\\b/,\\n    operator: /->|:=|&&|\\\\|\\\\||<<|>>|[-+*/%&|!<>=]=?|[~^]/,\\n    punctuation: /[.:,;()[\\\\]{}]/\\n  };\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"gdscript\",\"Prism\",\"languages\",\"comment\",\"string\",\"pattern\",\"greedy\",\"lookbehind\",\"keyword\",\"function\",\"variable\",\"number\",\"constant\",\"boolean\",\"operator\",\"punctuation\",\"Object\",\"defineProperty\",\"value\",\"default\",\"displayName\",\"aliases\"]\n}\n"]