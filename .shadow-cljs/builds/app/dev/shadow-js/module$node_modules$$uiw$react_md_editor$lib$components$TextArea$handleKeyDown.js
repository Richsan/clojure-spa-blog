["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@uiw/react-md-editor/lib/components/TextArea/handleKeyDown.js"],"~:js","shadow$provide.module$node_modules$$uiw$react_md_editor$lib$components$TextArea$handleKeyDown=function(global,require,module,exports){function stopPropagation(e){e.stopPropagation();e.preventDefault()}Object.defineProperty(exports,\"__esModule\",{value:!0});exports[\"default\"]=function(e){var tabSize=1<arguments.length&&void 0!==arguments[1]?arguments[1]:2,defaultTabEnable=2<arguments.length&&void 0!==arguments[2]?arguments[2]:!1,target=e.target,valArr=target.value.substr(0,target.selectionStart).split(\"\\n\"),\ncurrentLineStr=valArr[valArr.length-1];valArr=new _commands.TextAreaTextApi(target);if(!defaultTabEnable&&e.code&&\"tab\"===e.code.toLowerCase()){stopPropagation(e);var space=Array(tabSize+1).join(\"  \");if(target.selectionStart!==target.selectionEnd){var _star=target.value.substring(0,target.selectionStart).split(\"\\n\"),modifiedTextLine=[];target.value.substring(0,target.selectionEnd).split(\"\\n\").forEach(function(item,idx){item!==_star[idx]&&modifiedTextLine.push(item)});var modifiedText=modifiedTextLine.join(\"\\n\");\ndefaultTabEnable=target.value.substring(target.selectionStart,target.selectionEnd);currentLineStr=target.value.substring(0,target.selectionStart).length;valArr.setSelectionRange({start:target.value.indexOf(modifiedText),end:target.selectionEnd});target=(0,_list.insertBeforeEachLine)(modifiedText,e.shiftKey?\"\":space).modifiedText;e.shiftKey&&(target=target.split(\"\\n\").map(function(item){return item.replace(new RegExp(\"^\".concat(space)),\"\")}).join(\"\\n\"));valArr.replaceSelection(target);valArr.setSelectionRange({start:currentLineStr+\n(e.shiftKey?-tabSize:tabSize),end:currentLineStr+defaultTabEnable.length+(e.shiftKey?-modifiedTextLine.length*tabSize:modifiedTextLine.length*tabSize)})}else return(0,_InsertTextAtPosition.insertTextAtPosition)(target,space)}else if(13===e.keyCode&&\"enter\"===e.code.toLowerCase()&&(/^(-|\\*)\\s/.test(currentLineStr)||/^\\d+.\\s/.test(currentLineStr)))return stopPropagation(e),tabSize=\"\\n- \",currentLineStr.startsWith(\"*\")&&(tabSize=\"\\n* \"),currentLineStr.startsWith(\"- [ ]\")?tabSize=\"\\n- [ ] \":currentLineStr.startsWith(\"- [X]\")&&\n(tabSize=\"\\n- [X] \"),/^\\d+.\\s/.test(currentLineStr)&&(tabSize=\"\\n\".concat(parseInt(currentLineStr)+1,\". \")),(0,_InsertTextAtPosition.insertTextAtPosition)(target,tabSize)};var _InsertTextAtPosition=require(\"module$node_modules$$uiw$react_md_editor$lib$utils$InsertTextAtPosition\"),_commands=require(\"module$node_modules$$uiw$react_md_editor$lib$commands$index\"),_list=require(\"module$node_modules$$uiw$react_md_editor$lib$commands$list\");module.exports=exports.default}","~:source","shadow$provide[\"module$node_modules$$uiw$react_md_editor$lib$components$TextArea$handleKeyDown\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = handleKeyDown;\nvar _InsertTextAtPosition = require(\"../../utils/InsertTextAtPosition\");\nvar _commands = require(\"../../commands\");\nvar _list = require(\"../../commands/list\");\n/**\n * - `13` - `Enter`\n * - `9` - `Tab`\n */\nfunction stopPropagation(e) {\n  e.stopPropagation();\n  e.preventDefault();\n}\nfunction handleKeyDown(e) {\n  var tabSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n  var defaultTabEnable = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var target = e.target;\n  var starVal = target.value.substr(0, target.selectionStart);\n  var valArr = starVal.split('\\n');\n  var currentLineStr = valArr[valArr.length - 1];\n  var textArea = new _commands.TextAreaTextApi(target);\n\n  /**\n   * `9` - `Tab`\n   */\n  if (!defaultTabEnable && e.code && e.code.toLowerCase() === 'tab') {\n    stopPropagation(e);\n    var space = new Array(tabSize + 1).join('  ');\n    if (target.selectionStart !== target.selectionEnd) {\n      var _star = target.value.substring(0, target.selectionStart).split('\\n');\n      var _end = target.value.substring(0, target.selectionEnd).split('\\n');\n      var modifiedTextLine = [];\n      _end.forEach(function (item, idx) {\n        if (item !== _star[idx]) {\n          modifiedTextLine.push(item);\n        }\n      });\n      var modifiedText = modifiedTextLine.join('\\n');\n      var oldSelectText = target.value.substring(target.selectionStart, target.selectionEnd);\n      var newStarNum = target.value.substring(0, target.selectionStart).length;\n      textArea.setSelectionRange({\n        start: target.value.indexOf(modifiedText),\n        end: target.selectionEnd\n      });\n      var modifiedTextObj = (0, _list.insertBeforeEachLine)(modifiedText, e.shiftKey ? '' : space);\n      var text = modifiedTextObj.modifiedText;\n      if (e.shiftKey) {\n        text = text.split('\\n').map(function (item) {\n          return item.replace(new RegExp(\"^\".concat(space)), '');\n        }).join('\\n');\n      }\n      textArea.replaceSelection(text);\n      var startTabSize = e.shiftKey ? -tabSize : tabSize;\n      var endTabSize = e.shiftKey ? -modifiedTextLine.length * tabSize : modifiedTextLine.length * tabSize;\n      textArea.setSelectionRange({\n        start: newStarNum + startTabSize,\n        end: newStarNum + oldSelectText.length + endTabSize\n      });\n    } else {\n      return (0, _InsertTextAtPosition.insertTextAtPosition)(target, space);\n    }\n  } else if (e.keyCode === 13 && e.code.toLowerCase() === 'enter' && (/^(-|\\*)\\s/.test(currentLineStr) || /^\\d+.\\s/.test(currentLineStr))) {\n    /**\n     * `13` - `Enter`\n     */\n    stopPropagation(e);\n    var startStr = '\\n- ';\n    if (currentLineStr.startsWith('*')) {\n      startStr = '\\n* ';\n    }\n    if (currentLineStr.startsWith('- [ ]')) {\n      startStr = '\\n- [ ] ';\n    } else if (currentLineStr.startsWith('- [X]')) {\n      startStr = '\\n- [X] ';\n    }\n    if (/^\\d+.\\s/.test(currentLineStr)) {\n      startStr = \"\\n\".concat(parseInt(currentLineStr) + 1, \". \");\n    }\n    return (0, _InsertTextAtPosition.insertTextAtPosition)(target, startStr);\n  }\n}\nmodule.exports = exports.default;\n//# sourceMappingURL=handleKeyDown.js.map\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$$uiw$react_md_editor$lib$utils$InsertTextAtPosition","~$shadow.js","~$module$node_modules$$uiw$react_md_editor$lib$commands$list","~$module$node_modules$$uiw$react_md_editor$lib$commands$index"]],"~:properties",["^5",["__esModule","value","start","end"]],"~:compiled-at",1676841365520,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$uiw$react_md_editor$lib$components$TextArea$handleKeyDown.js\",\n\"lineCount\":5,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/@uiw/react-md-editor/lib/components/TextArea/handleKeyDown.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$uiw$react_md_editor$lib$components$TextArea$handleKeyDown\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports[\\\"default\\\"] = handleKeyDown;\\nvar _InsertTextAtPosition = require(\\\"../../utils/InsertTextAtPosition\\\");\\nvar _commands = require(\\\"../../commands\\\");\\nvar _list = require(\\\"../../commands/list\\\");\\n/**\\n * - `13` - `Enter`\\n * - `9` - `Tab`\\n */\\nfunction stopPropagation(e) {\\n  e.stopPropagation();\\n  e.preventDefault();\\n}\\nfunction handleKeyDown(e) {\\n  var tabSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\\n  var defaultTabEnable = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\\n  var target = e.target;\\n  var starVal = target.value.substr(0, target.selectionStart);\\n  var valArr = starVal.split('\\\\n');\\n  var currentLineStr = valArr[valArr.length - 1];\\n  var textArea = new _commands.TextAreaTextApi(target);\\n\\n  /**\\n   * `9` - `Tab`\\n   */\\n  if (!defaultTabEnable && e.code && e.code.toLowerCase() === 'tab') {\\n    stopPropagation(e);\\n    var space = new Array(tabSize + 1).join('  ');\\n    if (target.selectionStart !== target.selectionEnd) {\\n      var _star = target.value.substring(0, target.selectionStart).split('\\\\n');\\n      var _end = target.value.substring(0, target.selectionEnd).split('\\\\n');\\n      var modifiedTextLine = [];\\n      _end.forEach(function (item, idx) {\\n        if (item !== _star[idx]) {\\n          modifiedTextLine.push(item);\\n        }\\n      });\\n      var modifiedText = modifiedTextLine.join('\\\\n');\\n      var oldSelectText = target.value.substring(target.selectionStart, target.selectionEnd);\\n      var newStarNum = target.value.substring(0, target.selectionStart).length;\\n      textArea.setSelectionRange({\\n        start: target.value.indexOf(modifiedText),\\n        end: target.selectionEnd\\n      });\\n      var modifiedTextObj = (0, _list.insertBeforeEachLine)(modifiedText, e.shiftKey ? '' : space);\\n      var text = modifiedTextObj.modifiedText;\\n      if (e.shiftKey) {\\n        text = text.split('\\\\n').map(function (item) {\\n          return item.replace(new RegExp(\\\"^\\\".concat(space)), '');\\n        }).join('\\\\n');\\n      }\\n      textArea.replaceSelection(text);\\n      var startTabSize = e.shiftKey ? -tabSize : tabSize;\\n      var endTabSize = e.shiftKey ? -modifiedTextLine.length * tabSize : modifiedTextLine.length * tabSize;\\n      textArea.setSelectionRange({\\n        start: newStarNum + startTabSize,\\n        end: newStarNum + oldSelectText.length + endTabSize\\n      });\\n    } else {\\n      return (0, _InsertTextAtPosition.insertTextAtPosition)(target, space);\\n    }\\n  } else if (e.keyCode === 13 && e.code.toLowerCase() === 'enter' && (/^(-|\\\\*)\\\\s/.test(currentLineStr) || /^\\\\d+.\\\\s/.test(currentLineStr))) {\\n    /**\\n     * `13` - `Enter`\\n     */\\n    stopPropagation(e);\\n    var startStr = '\\\\n- ';\\n    if (currentLineStr.startsWith('*')) {\\n      startStr = '\\\\n* ';\\n    }\\n    if (currentLineStr.startsWith('- [ ]')) {\\n      startStr = '\\\\n- [ ] ';\\n    } else if (currentLineStr.startsWith('- [X]')) {\\n      startStr = '\\\\n- [X] ';\\n    }\\n    if (/^\\\\d+.\\\\s/.test(currentLineStr)) {\\n      startStr = \\\"\\\\n\\\".concat(parseInt(currentLineStr) + 1, \\\". \\\");\\n    }\\n    return (0, _InsertTextAtPosition.insertTextAtPosition)(target, startStr);\\n  }\\n}\\nmodule.exports = exports.default;\\n//# sourceMappingURL=handleKeyDown.js.map\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"stopPropagation\",\"e\",\"preventDefault\",\"Object\",\"defineProperty\",\"value\",\"handleKeyDown\",\"tabSize\",\"arguments\",\"length\",\"undefined\",\"defaultTabEnable\",\"target\",\"valArr\",\"substr\",\"starVal\",\"selectionStart\",\"split\",\"currentLineStr\",\"textArea\",\"_commands\",\"TextAreaTextApi\",\"code\",\"toLowerCase\",\"space\",\"Array\",\"join\",\"selectionEnd\",\"_star\",\"substring\",\"modifiedTextLine\",\"_end\",\"forEach\",\"item\",\"idx\",\"push\",\"modifiedText\",\"oldSelectText\",\"newStarNum\",\"setSelectionRange\",\"start\",\"indexOf\",\"end\",\"text\",\"modifiedTextObj\",\"_list\",\"insertBeforeEachLine\",\"shiftKey\",\"map\",\"replace\",\"RegExp\",\"concat\",\"replaceSelection\",\"startTabSize\",\"endTabSize\",\"_InsertTextAtPosition\",\"insertTextAtPosition\",\"keyCode\",\"test\",\"startStr\",\"startsWith\",\"parseInt\",\"default\"]\n}\n"]