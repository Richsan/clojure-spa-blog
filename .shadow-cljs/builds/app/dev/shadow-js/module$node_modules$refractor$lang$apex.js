["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/apex.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$apex=function(global,require,module,exports){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function apex(Prism$jscomp$0){Prism$jscomp$0.register(_clike.default);Prism$jscomp$0.register(_sql.default);(function(Prism){function insertClassName(pattern){return RegExp(pattern.replace(/<CLASS-NAME>/g,function(){return className}),\"i\")}var keywords=/\\b(?:(?:after|before)(?=\\s+[a-z])|abstract|activate|and|any|array|as|asc|autonomous|begin|bigdecimal|blob|boolean|break|bulk|by|byte|case|cast|catch|char|class|collect|commit|const|continue|currency|date|datetime|decimal|default|delete|desc|do|double|else|end|enum|exception|exit|export|extends|final|finally|float|for|from|get(?=\\s*[{};])|global|goto|group|having|hint|if|implements|import|in|inner|insert|instanceof|int|integer|interface|into|join|like|limit|list|long|loop|map|merge|new|not|null|nulls|number|object|of|on|or|outer|override|package|parallel|pragma|private|protected|public|retrieve|return|rollback|select|set|short|sObject|sort|static|string|super|switch|synchronized|system|testmethod|then|this|throw|time|transaction|transient|trigger|try|undelete|update|upsert|using|virtual|void|webservice|when|where|while|(?:inherited|with|without)\\s+sharing)\\b/i,\nclassName=/\\b(?:(?=[a-z_]\\w*\\s*[<\\[])|(?!<keyword>))[A-Z_]\\w*(?:\\s*\\.\\s*[A-Z_]\\w*)*\\b(?:\\s*(?:\\[\\s*\\]|<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>))*/.source.replace(/<keyword>/g,function(){return keywords.source}),classNameInside={keyword:keywords,punctuation:/[()\\[\\]{};,:.<>]/};Prism.languages.apex={comment:Prism.languages.clike.comment,string:Prism.languages.clike.string,sql:{pattern:/((?:[=,({:]|\\breturn)\\s*)\\[[^\\[\\]]*\\]/i,lookbehind:!0,greedy:!0,alias:\"language-sql\",inside:Prism.languages.sql},annotation:{pattern:/@\\w+\\b/,\nalias:\"punctuation\"},\"class-name\":[{pattern:insertClassName(/(\\b(?:class|enum|extends|implements|instanceof|interface|new|trigger\\s+\\w+\\s+on)\\s+)<CLASS-NAME>/.source),lookbehind:!0,inside:classNameInside},{pattern:insertClassName(/(\\(\\s*)<CLASS-NAME>(?=\\s*\\)\\s*[\\w(])/.source),lookbehind:!0,inside:classNameInside},{pattern:insertClassName(/<CLASS-NAME>(?=\\s*\\w+\\s*[;=,(){:])/.source),inside:classNameInside}],trigger:{pattern:/(\\btrigger\\s+)\\w+\\b/i,lookbehind:!0,alias:\"class-name\"},keyword:keywords,\nfunction:/\\b[a-z_]\\w*(?=\\s*\\()/i,boolean:/\\b(?:false|true)\\b/i,number:/(?:\\B\\.\\d+|\\b\\d+(?:\\.\\d+|L)?)\\b/i,operator:/[!=](?:==?)?|\\?\\.?|&&|\\|\\||--|\\+\\+|[-+*/^&|]=?|:|<<?=?|>{1,3}=?/,punctuation:/[()\\[\\]{};,.]/}})(Prism$jscomp$0)}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=apex;var _clike=_interopRequireDefault(require(\"module$node_modules$refractor$lang$clike\")),_sql=_interopRequireDefault(require(\"module$node_modules$refractor$lang$sql\"));apex.displayName=\"apex\";apex.aliases=\n[]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$apex\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = apex;\n\nvar _clike = _interopRequireDefault(require(\"./clike.js\"));\n\nvar _sql = _interopRequireDefault(require(\"./sql.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// @ts-nocheck\napex.displayName = 'apex';\napex.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nfunction apex(Prism) {\n  Prism.register(_clike.default);\n  Prism.register(_sql.default);\n\n  (function (Prism) {\n    var keywords = /\\b(?:(?:after|before)(?=\\s+[a-z])|abstract|activate|and|any|array|as|asc|autonomous|begin|bigdecimal|blob|boolean|break|bulk|by|byte|case|cast|catch|char|class|collect|commit|const|continue|currency|date|datetime|decimal|default|delete|desc|do|double|else|end|enum|exception|exit|export|extends|final|finally|float|for|from|get(?=\\s*[{};])|global|goto|group|having|hint|if|implements|import|in|inner|insert|instanceof|int|integer|interface|into|join|like|limit|list|long|loop|map|merge|new|not|null|nulls|number|object|of|on|or|outer|override|package|parallel|pragma|private|protected|public|retrieve|return|rollback|select|set|short|sObject|sort|static|string|super|switch|synchronized|system|testmethod|then|this|throw|time|transaction|transient|trigger|try|undelete|update|upsert|using|virtual|void|webservice|when|where|while|(?:inherited|with|without)\\s+sharing)\\b/i;\n    var className = /\\b(?:(?=[a-z_]\\w*\\s*[<\\[])|(?!<keyword>))[A-Z_]\\w*(?:\\s*\\.\\s*[A-Z_]\\w*)*\\b(?:\\s*(?:\\[\\s*\\]|<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>))*/.source.replace(/<keyword>/g, function () {\n      return keywords.source;\n    });\n    /** @param {string} pattern */\n\n    function insertClassName(pattern) {\n      return RegExp(pattern.replace(/<CLASS-NAME>/g, function () {\n        return className;\n      }), 'i');\n    }\n\n    var classNameInside = {\n      keyword: keywords,\n      punctuation: /[()\\[\\]{};,:.<>]/\n    };\n    Prism.languages.apex = {\n      comment: Prism.languages.clike.comment,\n      string: Prism.languages.clike.string,\n      sql: {\n        pattern: /((?:[=,({:]|\\breturn)\\s*)\\[[^\\[\\]]*\\]/i,\n        lookbehind: true,\n        greedy: true,\n        alias: 'language-sql',\n        inside: Prism.languages.sql\n      },\n      annotation: {\n        pattern: /@\\w+\\b/,\n        alias: 'punctuation'\n      },\n      'class-name': [{\n        pattern: insertClassName(/(\\b(?:class|enum|extends|implements|instanceof|interface|new|trigger\\s+\\w+\\s+on)\\s+)<CLASS-NAME>/.source),\n        lookbehind: true,\n        inside: classNameInside\n      }, {\n        // cast\n        pattern: insertClassName(/(\\(\\s*)<CLASS-NAME>(?=\\s*\\)\\s*[\\w(])/.source),\n        lookbehind: true,\n        inside: classNameInside\n      }, {\n        // variable/parameter declaration and return types\n        pattern: insertClassName(/<CLASS-NAME>(?=\\s*\\w+\\s*[;=,(){:])/.source),\n        inside: classNameInside\n      }],\n      trigger: {\n        pattern: /(\\btrigger\\s+)\\w+\\b/i,\n        lookbehind: true,\n        alias: 'class-name'\n      },\n      keyword: keywords,\n      function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n      boolean: /\\b(?:false|true)\\b/i,\n      number: /(?:\\B\\.\\d+|\\b\\d+(?:\\.\\d+|L)?)\\b/i,\n      operator: /[!=](?:==?)?|\\?\\.?|&&|\\|\\||--|\\+\\+|[-+*/^&|]=?|:|<<?=?|>{1,3}=?/,\n      punctuation: /[()\\[\\]{};,.]/\n    };\n  })(Prism);\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$refractor$lang$clike","~$module$node_modules$refractor$lang$sql"]],"~:properties",["^5",["boolean","punctuation","string","aliases","apex","operator","displayName","__esModule","lookbehind","value","keyword","number","greedy","function","pattern","inside","annotation","alias","comment","sql","trigger","default"]],"~:compiled-at",1676841365387,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$apex.js\",\n\"lineCount\":5,\n\"mappings\":\"AAAAA,cAAA,CAAA,uCAAA,CAA4D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAYpGC,QAASA,uBAAsB,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAIC,CAAAA,UAAX,CAAwBD,GAAxB,CAA8B,CAAEE,QAASF,GAAX,CAAvC,CAOrCG,QAASA,KAAI,CAACC,cAAD,CAAQ,CACnBA,cAAMC,CAAAA,QAAN,CAAeC,MAAOJ,CAAAA,OAAtB,CACAE,eAAMC,CAAAA,QAAN,CAAeE,IAAKL,CAAAA,OAApB,CAEC,UAAS,CAACE,KAAD,CAAQ,CAOhBI,QAASA,gBAAe,CAACC,OAAD,CAAU,CAChC,MAAOC,OAAA,CAAOD,OAAQE,CAAAA,OAAR,CAAgB,eAAhB,CAAiC,QAAS,EAAG,CACzD,MAAOC,UADkD,CAA7C,CAAP,CAEH,GAFG,CADyB,CANlC,IAAIC,SAAW,w2BAAf;AACID,UAAY,kIAAmIE,CAAAA,MAAOH,CAAAA,OAA1I,CAAkJ,YAAlJ,CAAgK,QAAS,EAAG,CAC1L,MAAOE,SAASC,CAAAA,MAD0K,CAA5K,CADhB,CAYIC,gBAAkB,CACpBC,QAASH,QADW,CAEpBI,YAAa,kBAFO,CAItBb,MAAMc,CAAAA,SAAUf,CAAAA,IAAhB,CAAuB,CACrBgB,QAASf,KAAMc,CAAAA,SAAUE,CAAAA,KAAMD,CAAAA,OADV,CAErBE,OAAQjB,KAAMc,CAAAA,SAAUE,CAAAA,KAAMC,CAAAA,MAFT,CAGrBC,IAAK,CACHb,QAAS,wCADN,CAEHc,WAAY,CAAA,CAFT,CAGHC,OAAQ,CAAA,CAHL,CAIHC,MAAO,cAJJ,CAKHC,OAAQtB,KAAMc,CAAAA,SAAUI,CAAAA,GALrB,CAHgB,CAUrBK,WAAY,CACVlB,QAAS,QADC;AAEVgB,MAAO,aAFG,CAVS,CAcrB,aAAc,CAAC,CACbhB,QAASD,eAAA,CAAgB,kGAAmGM,CAAAA,MAAnH,CADI,CAEbS,WAAY,CAAA,CAFC,CAGbG,OAAQX,eAHK,CAAD,CAIX,CAEDN,QAASD,eAAA,CAAgB,sCAAuCM,CAAAA,MAAvD,CAFR,CAGDS,WAAY,CAAA,CAHX,CAIDG,OAAQX,eAJP,CAJW,CASX,CAEDN,QAASD,eAAA,CAAgB,oCAAqCM,CAAAA,MAArD,CAFR,CAGDY,OAAQX,eAHP,CATW,CAdO,CA4BrBa,QAAS,CACPnB,QAAS,sBADF,CAEPc,WAAY,CAAA,CAFL,CAGPE,MAAO,YAHA,CA5BY,CAiCrBT,QAASH,QAjCY;AAkCrBgB,SAAU,uBAlCW,CAmCrBC,QAAS,qBAnCY,CAoCrBC,OAAQ,kCApCa,CAqCrBC,SAAU,iEArCW,CAsCrBf,YAAa,eAtCQ,CAjBP,CAAjB,CAAD,CAyDGb,cAzDH,CAJmB,CAhBrB6B,MAAOC,CAAAA,cAAP,CAAsBpC,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CqC,MAAO,CAAA,CADoC,CAA7C,CAGArC,QAAQI,CAAAA,OAAR,CAAkBC,IAElB,KAAIG,OAASP,sBAAA,CAAuBH,OAAA,CAAQ,0CAAR,CAAvB,CAAb,CAEIW,KAAOR,sBAAA,CAAuBH,OAAA,CAAQ,wCAAR,CAAvB,CAKXO,KAAKiC,CAAAA,WAAL,CAAmB,MACnBjC,KAAKkC,CAAAA,OAAL;AAAe,EAhBqF;\",\n\"sources\":[\"node_modules/refractor/lang/apex.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$apex\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = apex;\\n\\nvar _clike = _interopRequireDefault(require(\\\"./clike.js\\\"));\\n\\nvar _sql = _interopRequireDefault(require(\\\"./sql.js\\\"));\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\n// @ts-nocheck\\napex.displayName = 'apex';\\napex.aliases = [];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction apex(Prism) {\\n  Prism.register(_clike.default);\\n  Prism.register(_sql.default);\\n\\n  (function (Prism) {\\n    var keywords = /\\\\b(?:(?:after|before)(?=\\\\s+[a-z])|abstract|activate|and|any|array|as|asc|autonomous|begin|bigdecimal|blob|boolean|break|bulk|by|byte|case|cast|catch|char|class|collect|commit|const|continue|currency|date|datetime|decimal|default|delete|desc|do|double|else|end|enum|exception|exit|export|extends|final|finally|float|for|from|get(?=\\\\s*[{};])|global|goto|group|having|hint|if|implements|import|in|inner|insert|instanceof|int|integer|interface|into|join|like|limit|list|long|loop|map|merge|new|not|null|nulls|number|object|of|on|or|outer|override|package|parallel|pragma|private|protected|public|retrieve|return|rollback|select|set|short|sObject|sort|static|string|super|switch|synchronized|system|testmethod|then|this|throw|time|transaction|transient|trigger|try|undelete|update|upsert|using|virtual|void|webservice|when|where|while|(?:inherited|with|without)\\\\s+sharing)\\\\b/i;\\n    var className = /\\\\b(?:(?=[a-z_]\\\\w*\\\\s*[<\\\\[])|(?!<keyword>))[A-Z_]\\\\w*(?:\\\\s*\\\\.\\\\s*[A-Z_]\\\\w*)*\\\\b(?:\\\\s*(?:\\\\[\\\\s*\\\\]|<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>))*/.source.replace(/<keyword>/g, function () {\\n      return keywords.source;\\n    });\\n    /** @param {string} pattern */\\n\\n    function insertClassName(pattern) {\\n      return RegExp(pattern.replace(/<CLASS-NAME>/g, function () {\\n        return className;\\n      }), 'i');\\n    }\\n\\n    var classNameInside = {\\n      keyword: keywords,\\n      punctuation: /[()\\\\[\\\\]{};,:.<>]/\\n    };\\n    Prism.languages.apex = {\\n      comment: Prism.languages.clike.comment,\\n      string: Prism.languages.clike.string,\\n      sql: {\\n        pattern: /((?:[=,({:]|\\\\breturn)\\\\s*)\\\\[[^\\\\[\\\\]]*\\\\]/i,\\n        lookbehind: true,\\n        greedy: true,\\n        alias: 'language-sql',\\n        inside: Prism.languages.sql\\n      },\\n      annotation: {\\n        pattern: /@\\\\w+\\\\b/,\\n        alias: 'punctuation'\\n      },\\n      'class-name': [{\\n        pattern: insertClassName(/(\\\\b(?:class|enum|extends|implements|instanceof|interface|new|trigger\\\\s+\\\\w+\\\\s+on)\\\\s+)<CLASS-NAME>/.source),\\n        lookbehind: true,\\n        inside: classNameInside\\n      }, {\\n        // cast\\n        pattern: insertClassName(/(\\\\(\\\\s*)<CLASS-NAME>(?=\\\\s*\\\\)\\\\s*[\\\\w(])/.source),\\n        lookbehind: true,\\n        inside: classNameInside\\n      }, {\\n        // variable/parameter declaration and return types\\n        pattern: insertClassName(/<CLASS-NAME>(?=\\\\s*\\\\w+\\\\s*[;=,(){:])/.source),\\n        inside: classNameInside\\n      }],\\n      trigger: {\\n        pattern: /(\\\\btrigger\\\\s+)\\\\w+\\\\b/i,\\n        lookbehind: true,\\n        alias: 'class-name'\\n      },\\n      keyword: keywords,\\n      function: /\\\\b[a-z_]\\\\w*(?=\\\\s*\\\\()/i,\\n      boolean: /\\\\b(?:false|true)\\\\b/i,\\n      number: /(?:\\\\B\\\\.\\\\d+|\\\\b\\\\d+(?:\\\\.\\\\d+|L)?)\\\\b/i,\\n      operator: /[!=](?:==?)?|\\\\?\\\\.?|&&|\\\\|\\\\||--|\\\\+\\\\+|[-+*/^&|]=?|:|<<?=?|>{1,3}=?/,\\n      punctuation: /[()\\\\[\\\\]{};,.]/\\n    };\\n  })(Prism);\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"default\",\"apex\",\"Prism\",\"register\",\"_clike\",\"_sql\",\"insertClassName\",\"pattern\",\"RegExp\",\"replace\",\"className\",\"keywords\",\"source\",\"classNameInside\",\"keyword\",\"punctuation\",\"languages\",\"comment\",\"clike\",\"string\",\"sql\",\"lookbehind\",\"greedy\",\"alias\",\"inside\",\"annotation\",\"trigger\",\"function\",\"boolean\",\"number\",\"operator\",\"Object\",\"defineProperty\",\"value\",\"displayName\",\"aliases\"]\n}\n"]