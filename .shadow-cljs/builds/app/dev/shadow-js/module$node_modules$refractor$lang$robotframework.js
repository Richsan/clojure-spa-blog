["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/robotframework.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$robotframework=function(global,require,module,exports){function robotframework(Prism$jscomp$0){(function(Prism){function createSection(name,inside){var extendecInside={\"section-header\":{pattern:/^ ?\\*{3}.+?\\*{3}/,alias:\"keyword\"}},token;for(token in inside)extendecInside[token]=inside[token];extendecInside.tag={pattern:/([\\r\\n](?: {2}|\\t)[ \\t]*)\\[[-\\w]+\\]/,lookbehind:!0,inside:{punctuation:/\\[|\\]/}};extendecInside.variable=variable;extendecInside.comment=\ncomment;return{pattern:RegExp(/^ ?\\*{3}[ \\t]*<name>[ \\t]*\\*{3}(?:.|[\\r\\n](?!\\*{3}))*/.source.replace(/<name>/g,function(){return name}),\"im\"),alias:\"section\",inside:extendecInside}}var comment={pattern:/(^[ \\t]*| {2}|\\t)#.*/m,lookbehind:!0,greedy:!0},variable={pattern:/((?:^|[^\\\\])(?:\\\\{2})*)[$@&%]\\{(?:[^{}\\r\\n]|\\{[^{}\\r\\n]*\\})*\\}/,lookbehind:!0,inside:{punctuation:/^[$@&%]\\{|\\}$/}},docTag={pattern:/(\\[Documentation\\](?: {2}|\\t)[ \\t]*)(?![ \\t]|#)(?:.|(?:\\r\\n?|\\n)[ \\t]*\\.{3})+/,lookbehind:!0,alias:\"string\"},\ntestNameLike={pattern:/([\\r\\n] ?)(?!#)(?:\\S(?:[ \\t]\\S)*)+/,lookbehind:!0,alias:\"function\",inside:{variable}},testPropertyLike={pattern:/([\\r\\n](?: {2}|\\t)[ \\t]*)(?!\\[|\\.{3}|#)(?:\\S(?:[ \\t]\\S)*)+/,lookbehind:!0,inside:{variable}};Prism.languages.robotframework={settings:createSection(\"Settings\",{documentation:{pattern:/([\\r\\n] ?Documentation(?: {2}|\\t)[ \\t]*)(?![ \\t]|#)(?:.|(?:\\r\\n?|\\n)[ \\t]*\\.{3})+/,lookbehind:!0,alias:\"string\"},property:{pattern:/([\\r\\n] ?)(?!\\.{3}|#)(?:\\S(?:[ \\t]\\S)*)+/,lookbehind:!0}}),\nvariables:createSection(\"Variables\"),\"test-cases\":createSection(\"Test Cases\",{\"test-name\":testNameLike,documentation:docTag,property:testPropertyLike}),keywords:createSection(\"Keywords\",{\"keyword-name\":testNameLike,documentation:docTag,property:testPropertyLike}),tasks:createSection(\"Tasks\",{\"task-name\":testNameLike,documentation:docTag,property:testPropertyLike}),comment};Prism.languages.robot=Prism.languages.robotframework})(Prism$jscomp$0)}Object.defineProperty(exports,\"__esModule\",{value:!0});\nexports.default=robotframework;robotframework.displayName=\"robotframework\";robotframework.aliases=[\"robot\"]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$robotframework\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = robotframework;\n// @ts-nocheck\nrobotframework.displayName = 'robotframework';\nrobotframework.aliases = ['robot'];\n/** @type {import('../core.js').Syntax} */\n\nfunction robotframework(Prism) {\n  ;\n\n  (function (Prism) {\n    var comment = {\n      pattern: /(^[ \\t]*| {2}|\\t)#.*/m,\n      lookbehind: true,\n      greedy: true\n    };\n    var variable = {\n      pattern: /((?:^|[^\\\\])(?:\\\\{2})*)[$@&%]\\{(?:[^{}\\r\\n]|\\{[^{}\\r\\n]*\\})*\\}/,\n      lookbehind: true,\n      inside: {\n        punctuation: /^[$@&%]\\{|\\}$/\n      }\n    };\n\n    function createSection(name, inside) {\n      var extendecInside = {};\n      extendecInside['section-header'] = {\n        pattern: /^ ?\\*{3}.+?\\*{3}/,\n        alias: 'keyword'\n      }; // copy inside tokens\n\n      for (var token in inside) {\n        extendecInside[token] = inside[token];\n      }\n\n      extendecInside['tag'] = {\n        pattern: /([\\r\\n](?: {2}|\\t)[ \\t]*)\\[[-\\w]+\\]/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\[|\\]/\n        }\n      };\n      extendecInside['variable'] = variable;\n      extendecInside['comment'] = comment;\n      return {\n        pattern: RegExp(/^ ?\\*{3}[ \\t]*<name>[ \\t]*\\*{3}(?:.|[\\r\\n](?!\\*{3}))*/.source.replace(/<name>/g, function () {\n          return name;\n        }), 'im'),\n        alias: 'section',\n        inside: extendecInside\n      };\n    }\n\n    var docTag = {\n      pattern: /(\\[Documentation\\](?: {2}|\\t)[ \\t]*)(?![ \\t]|#)(?:.|(?:\\r\\n?|\\n)[ \\t]*\\.{3})+/,\n      lookbehind: true,\n      alias: 'string'\n    };\n    var testNameLike = {\n      pattern: /([\\r\\n] ?)(?!#)(?:\\S(?:[ \\t]\\S)*)+/,\n      lookbehind: true,\n      alias: 'function',\n      inside: {\n        variable: variable\n      }\n    };\n    var testPropertyLike = {\n      pattern: /([\\r\\n](?: {2}|\\t)[ \\t]*)(?!\\[|\\.{3}|#)(?:\\S(?:[ \\t]\\S)*)+/,\n      lookbehind: true,\n      inside: {\n        variable: variable\n      }\n    };\n    Prism.languages['robotframework'] = {\n      settings: createSection('Settings', {\n        documentation: {\n          pattern: /([\\r\\n] ?Documentation(?: {2}|\\t)[ \\t]*)(?![ \\t]|#)(?:.|(?:\\r\\n?|\\n)[ \\t]*\\.{3})+/,\n          lookbehind: true,\n          alias: 'string'\n        },\n        property: {\n          pattern: /([\\r\\n] ?)(?!\\.{3}|#)(?:\\S(?:[ \\t]\\S)*)+/,\n          lookbehind: true\n        }\n      }),\n      variables: createSection('Variables'),\n      'test-cases': createSection('Test Cases', {\n        'test-name': testNameLike,\n        documentation: docTag,\n        property: testPropertyLike\n      }),\n      keywords: createSection('Keywords', {\n        'keyword-name': testNameLike,\n        documentation: docTag,\n        property: testPropertyLike\n      }),\n      tasks: createSection('Tasks', {\n        'task-name': testNameLike,\n        documentation: docTag,\n        property: testPropertyLike\n      }),\n      comment: comment\n    };\n    Prism.languages.robot = Prism.languages['robotframework'];\n  })(Prism);\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["documentation","punctuation","aliases","tasks","settings","displayName","__esModule","lookbehind","value","robot","variable","greedy","property","variables","keywords","pattern","inside","alias","comment","default"]],"~:compiled-at",1676841365458,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$robotframework.js\",\n\"lineCount\":5,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/refractor/lang/robotframework.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$robotframework\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = robotframework;\\n// @ts-nocheck\\nrobotframework.displayName = 'robotframework';\\nrobotframework.aliases = ['robot'];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction robotframework(Prism) {\\n  ;\\n\\n  (function (Prism) {\\n    var comment = {\\n      pattern: /(^[ \\\\t]*| {2}|\\\\t)#.*/m,\\n      lookbehind: true,\\n      greedy: true\\n    };\\n    var variable = {\\n      pattern: /((?:^|[^\\\\\\\\])(?:\\\\\\\\{2})*)[$@&%]\\\\{(?:[^{}\\\\r\\\\n]|\\\\{[^{}\\\\r\\\\n]*\\\\})*\\\\}/,\\n      lookbehind: true,\\n      inside: {\\n        punctuation: /^[$@&%]\\\\{|\\\\}$/\\n      }\\n    };\\n\\n    function createSection(name, inside) {\\n      var extendecInside = {};\\n      extendecInside['section-header'] = {\\n        pattern: /^ ?\\\\*{3}.+?\\\\*{3}/,\\n        alias: 'keyword'\\n      }; // copy inside tokens\\n\\n      for (var token in inside) {\\n        extendecInside[token] = inside[token];\\n      }\\n\\n      extendecInside['tag'] = {\\n        pattern: /([\\\\r\\\\n](?: {2}|\\\\t)[ \\\\t]*)\\\\[[-\\\\w]+\\\\]/,\\n        lookbehind: true,\\n        inside: {\\n          punctuation: /\\\\[|\\\\]/\\n        }\\n      };\\n      extendecInside['variable'] = variable;\\n      extendecInside['comment'] = comment;\\n      return {\\n        pattern: RegExp(/^ ?\\\\*{3}[ \\\\t]*<name>[ \\\\t]*\\\\*{3}(?:.|[\\\\r\\\\n](?!\\\\*{3}))*/.source.replace(/<name>/g, function () {\\n          return name;\\n        }), 'im'),\\n        alias: 'section',\\n        inside: extendecInside\\n      };\\n    }\\n\\n    var docTag = {\\n      pattern: /(\\\\[Documentation\\\\](?: {2}|\\\\t)[ \\\\t]*)(?![ \\\\t]|#)(?:.|(?:\\\\r\\\\n?|\\\\n)[ \\\\t]*\\\\.{3})+/,\\n      lookbehind: true,\\n      alias: 'string'\\n    };\\n    var testNameLike = {\\n      pattern: /([\\\\r\\\\n] ?)(?!#)(?:\\\\S(?:[ \\\\t]\\\\S)*)+/,\\n      lookbehind: true,\\n      alias: 'function',\\n      inside: {\\n        variable: variable\\n      }\\n    };\\n    var testPropertyLike = {\\n      pattern: /([\\\\r\\\\n](?: {2}|\\\\t)[ \\\\t]*)(?!\\\\[|\\\\.{3}|#)(?:\\\\S(?:[ \\\\t]\\\\S)*)+/,\\n      lookbehind: true,\\n      inside: {\\n        variable: variable\\n      }\\n    };\\n    Prism.languages['robotframework'] = {\\n      settings: createSection('Settings', {\\n        documentation: {\\n          pattern: /([\\\\r\\\\n] ?Documentation(?: {2}|\\\\t)[ \\\\t]*)(?![ \\\\t]|#)(?:.|(?:\\\\r\\\\n?|\\\\n)[ \\\\t]*\\\\.{3})+/,\\n          lookbehind: true,\\n          alias: 'string'\\n        },\\n        property: {\\n          pattern: /([\\\\r\\\\n] ?)(?!\\\\.{3}|#)(?:\\\\S(?:[ \\\\t]\\\\S)*)+/,\\n          lookbehind: true\\n        }\\n      }),\\n      variables: createSection('Variables'),\\n      'test-cases': createSection('Test Cases', {\\n        'test-name': testNameLike,\\n        documentation: docTag,\\n        property: testPropertyLike\\n      }),\\n      keywords: createSection('Keywords', {\\n        'keyword-name': testNameLike,\\n        documentation: docTag,\\n        property: testPropertyLike\\n      }),\\n      tasks: createSection('Tasks', {\\n        'task-name': testNameLike,\\n        documentation: docTag,\\n        property: testPropertyLike\\n      }),\\n      comment: comment\\n    };\\n    Prism.languages.robot = Prism.languages['robotframework'];\\n  })(Prism);\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"robotframework\",\"Prism\",\"createSection\",\"name\",\"inside\",\"extendecInside\",\"pattern\",\"alias\",\"token\",\"lookbehind\",\"punctuation\",\"variable\",\"comment\",\"RegExp\",\"source\",\"replace\",\"greedy\",\"docTag\",\"testNameLike\",\"testPropertyLike\",\"languages\",\"settings\",\"documentation\",\"property\",\"variables\",\"keywords\",\"tasks\",\"robot\",\"Object\",\"defineProperty\",\"value\",\"default\",\"displayName\",\"aliases\"]\n}\n"]