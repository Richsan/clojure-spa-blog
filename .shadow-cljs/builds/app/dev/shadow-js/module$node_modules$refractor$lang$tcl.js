["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/tcl.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$tcl=function(global,require,module,exports){function tcl(Prism){Prism.languages.tcl={comment:{pattern:/(^|[^\\\\])#.*/,lookbehind:!0},string:{pattern:/\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"/,greedy:!0},variable:[{pattern:/(\\$)(?:::)?(?:[a-zA-Z0-9]+::)*\\w+/,lookbehind:!0},{pattern:/(\\$)\\{[^}]+\\}/,lookbehind:!0},{pattern:/(^[\\t ]*set[ \\t]+)(?:::)?(?:[a-zA-Z0-9]+::)*\\w+/m,lookbehind:!0}],function:{pattern:/(^[\\t ]*proc[ \\t]+)\\S+/m,lookbehind:!0},builtin:[{pattern:/(^[\\t ]*)(?:break|class|continue|error|eval|exit|for|foreach|if|proc|return|switch|while)\\b/m,\nlookbehind:!0},/\\b(?:else|elseif)\\b/],scope:{pattern:/(^[\\t ]*)(?:global|upvar|variable)\\b/m,lookbehind:!0,alias:\"constant\"},keyword:{pattern:/(^[\\t ]*|\\[)(?:Safe_Base|Tcl|after|append|apply|array|auto_(?:execok|import|load|mkindex|qualify|reset)|automkindex_old|bgerror|binary|catch|cd|chan|clock|close|concat|dde|dict|encoding|eof|exec|expr|fblocked|fconfigure|fcopy|file(?:event|name)?|flush|gets|glob|history|http|incr|info|interp|join|lappend|lassign|lindex|linsert|list|llength|load|lrange|lrepeat|lreplace|lreverse|lsearch|lset|lsort|math(?:func|op)|memory|msgcat|namespace|open|package|parray|pid|pkg_mkIndex|platform|puts|pwd|re_syntax|read|refchan|regexp|registry|regsub|rename|scan|seek|set|socket|source|split|string|subst|tcl(?:_endOfWord|_findLibrary|startOf(?:Next|Previous)Word|test|vars|wordBreak(?:After|Before))|tell|time|tm|trace|unknown|unload|unset|update|uplevel|vwait)\\b/m,\nlookbehind:!0},operator:/!=?|\\*\\*?|==|&&?|\\|\\|?|<[=<]?|>[=>]?|[-+~\\/%?^]|\\b(?:eq|in|ne|ni)\\b/,punctuation:/[{}()\\[\\]]/}}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=tcl;tcl.displayName=\"tcl\";tcl.aliases=[]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$tcl\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = tcl;\n// @ts-nocheck\ntcl.displayName = 'tcl';\ntcl.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nfunction tcl(Prism) {\n  Prism.languages.tcl = {\n    comment: {\n      pattern: /(^|[^\\\\])#.*/,\n      lookbehind: true\n    },\n    string: {\n      pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"/,\n      greedy: true\n    },\n    variable: [{\n      pattern: /(\\$)(?:::)?(?:[a-zA-Z0-9]+::)*\\w+/,\n      lookbehind: true\n    }, {\n      pattern: /(\\$)\\{[^}]+\\}/,\n      lookbehind: true\n    }, {\n      pattern: /(^[\\t ]*set[ \\t]+)(?:::)?(?:[a-zA-Z0-9]+::)*\\w+/m,\n      lookbehind: true\n    }],\n    function: {\n      pattern: /(^[\\t ]*proc[ \\t]+)\\S+/m,\n      lookbehind: true\n    },\n    builtin: [{\n      pattern: /(^[\\t ]*)(?:break|class|continue|error|eval|exit|for|foreach|if|proc|return|switch|while)\\b/m,\n      lookbehind: true\n    }, /\\b(?:else|elseif)\\b/],\n    scope: {\n      pattern: /(^[\\t ]*)(?:global|upvar|variable)\\b/m,\n      lookbehind: true,\n      alias: 'constant'\n    },\n    keyword: {\n      pattern: /(^[\\t ]*|\\[)(?:Safe_Base|Tcl|after|append|apply|array|auto_(?:execok|import|load|mkindex|qualify|reset)|automkindex_old|bgerror|binary|catch|cd|chan|clock|close|concat|dde|dict|encoding|eof|exec|expr|fblocked|fconfigure|fcopy|file(?:event|name)?|flush|gets|glob|history|http|incr|info|interp|join|lappend|lassign|lindex|linsert|list|llength|load|lrange|lrepeat|lreplace|lreverse|lsearch|lset|lsort|math(?:func|op)|memory|msgcat|namespace|open|package|parray|pid|pkg_mkIndex|platform|puts|pwd|re_syntax|read|refchan|regexp|registry|regsub|rename|scan|seek|set|socket|source|split|string|subst|tcl(?:_endOfWord|_findLibrary|startOf(?:Next|Previous)Word|test|vars|wordBreak(?:After|Before))|tell|time|tm|trace|unknown|unload|unset|update|uplevel|vwait)\\b/m,\n      lookbehind: true\n    },\n    operator: /!=?|\\*\\*?|==|&&?|\\|\\|?|<[=<]?|>[=>]?|[-+~\\/%?^]|\\b(?:eq|in|ne|ni)\\b/,\n    punctuation: /[{}()\\[\\]]/\n  };\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["punctuation","string","aliases","operator","displayName","__esModule","tcl","lookbehind","value","variable","keyword","scope","greedy","function","pattern","alias","comment","builtin","default"]],"~:compiled-at",1676841365469,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$tcl.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,CAAA,sCAAA,CAA2D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAYnGC,QAASA,IAAG,CAACC,KAAD,CAAQ,CAClBA,KAAMC,CAAAA,SAAUF,CAAAA,GAAhB,CAAsB,CACpBG,QAAS,CACPC,QAAS,cADF,CAEPC,WAAY,CAAA,CAFL,CADW,CAKpBC,OAAQ,CACNF,QAAS,qCADH,CAENG,OAAQ,CAAA,CAFF,CALY,CASpBC,SAAU,CAAC,CACTJ,QAAS,mCADA,CAETC,WAAY,CAAA,CAFH,CAAD,CAGP,CACDD,QAAS,eADR,CAEDC,WAAY,CAAA,CAFX,CAHO,CAMP,CACDD,QAAS,kDADR,CAEDC,WAAY,CAAA,CAFX,CANO,CATU,CAmBpBI,SAAU,CACRL,QAAS,yBADD,CAERC,WAAY,CAAA,CAFJ,CAnBU,CAuBpBK,QAAS,CAAC,CACRN,QAAS,8FADD;AAERC,WAAY,CAAA,CAFJ,CAAD,CAGN,qBAHM,CAvBW,CA2BpBM,MAAO,CACLP,QAAS,uCADJ,CAELC,WAAY,CAAA,CAFP,CAGLO,MAAO,UAHF,CA3Ba,CAgCpBC,QAAS,CACPT,QAAS,kvBADF;AAEPC,WAAY,CAAA,CAFL,CAhCW,CAoCpBS,SAAU,qEApCU,CAqCpBC,YAAa,YArCO,CADJ,CATpBC,MAAOC,CAAAA,cAAP,CAAsBlB,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CmB,MAAO,CAAA,CADoC,CAA7C,CAGAnB,QAAQoB,CAAAA,OAAR,CAAkBnB,GAElBA,IAAIoB,CAAAA,WAAJ,CAAkB,KAClBpB,IAAIqB,CAAAA,OAAJ,CAAc,EATqF;\",\n\"sources\":[\"node_modules/refractor/lang/tcl.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$tcl\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = tcl;\\n// @ts-nocheck\\ntcl.displayName = 'tcl';\\ntcl.aliases = [];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction tcl(Prism) {\\n  Prism.languages.tcl = {\\n    comment: {\\n      pattern: /(^|[^\\\\\\\\])#.*/,\\n      lookbehind: true\\n    },\\n    string: {\\n      pattern: /\\\"(?:[^\\\"\\\\\\\\\\\\r\\\\n]|\\\\\\\\(?:\\\\r\\\\n|[\\\\s\\\\S]))*\\\"/,\\n      greedy: true\\n    },\\n    variable: [{\\n      pattern: /(\\\\$)(?:::)?(?:[a-zA-Z0-9]+::)*\\\\w+/,\\n      lookbehind: true\\n    }, {\\n      pattern: /(\\\\$)\\\\{[^}]+\\\\}/,\\n      lookbehind: true\\n    }, {\\n      pattern: /(^[\\\\t ]*set[ \\\\t]+)(?:::)?(?:[a-zA-Z0-9]+::)*\\\\w+/m,\\n      lookbehind: true\\n    }],\\n    function: {\\n      pattern: /(^[\\\\t ]*proc[ \\\\t]+)\\\\S+/m,\\n      lookbehind: true\\n    },\\n    builtin: [{\\n      pattern: /(^[\\\\t ]*)(?:break|class|continue|error|eval|exit|for|foreach|if|proc|return|switch|while)\\\\b/m,\\n      lookbehind: true\\n    }, /\\\\b(?:else|elseif)\\\\b/],\\n    scope: {\\n      pattern: /(^[\\\\t ]*)(?:global|upvar|variable)\\\\b/m,\\n      lookbehind: true,\\n      alias: 'constant'\\n    },\\n    keyword: {\\n      pattern: /(^[\\\\t ]*|\\\\[)(?:Safe_Base|Tcl|after|append|apply|array|auto_(?:execok|import|load|mkindex|qualify|reset)|automkindex_old|bgerror|binary|catch|cd|chan|clock|close|concat|dde|dict|encoding|eof|exec|expr|fblocked|fconfigure|fcopy|file(?:event|name)?|flush|gets|glob|history|http|incr|info|interp|join|lappend|lassign|lindex|linsert|list|llength|load|lrange|lrepeat|lreplace|lreverse|lsearch|lset|lsort|math(?:func|op)|memory|msgcat|namespace|open|package|parray|pid|pkg_mkIndex|platform|puts|pwd|re_syntax|read|refchan|regexp|registry|regsub|rename|scan|seek|set|socket|source|split|string|subst|tcl(?:_endOfWord|_findLibrary|startOf(?:Next|Previous)Word|test|vars|wordBreak(?:After|Before))|tell|time|tm|trace|unknown|unload|unset|update|uplevel|vwait)\\\\b/m,\\n      lookbehind: true\\n    },\\n    operator: /!=?|\\\\*\\\\*?|==|&&?|\\\\|\\\\|?|<[=<]?|>[=>]?|[-+~\\\\/%?^]|\\\\b(?:eq|in|ne|ni)\\\\b/,\\n    punctuation: /[{}()\\\\[\\\\]]/\\n  };\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"tcl\",\"Prism\",\"languages\",\"comment\",\"pattern\",\"lookbehind\",\"string\",\"greedy\",\"variable\",\"function\",\"builtin\",\"scope\",\"alias\",\"keyword\",\"operator\",\"punctuation\",\"Object\",\"defineProperty\",\"value\",\"default\",\"displayName\",\"aliases\"]\n}\n"]