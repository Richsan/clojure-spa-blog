["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/reason.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$reason=function(global,require,module,exports){function reason(Prism){Prism.register(_clike.default);Prism.languages.reason=Prism.languages.extend(\"clike\",{string:{pattern:/\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,greedy:!0},\"class-name\":/\\b[A-Z]\\w*/,keyword:/\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,\noperator:/\\.{3}|:[:=]|\\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:asr|land|lor|lsl|lsr|lxor|mod)\\b/});Prism.languages.insertBefore(\"reason\",\"class-name\",{char:{pattern:/'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/,greedy:!0},constructor:/\\b[A-Z]\\w*\\b(?!\\s*\\.)/,label:{pattern:/\\b[a-z]\\w*(?=::)/,alias:\"symbol\"}});delete Prism.languages.reason.function}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=reason;var _clike=function(obj){return obj&&obj.__esModule?\nobj:{default:obj}}(require(\"module$node_modules$refractor$lang$clike\"));reason.displayName=\"reason\";reason.aliases=[]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$reason\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = reason;\n\nvar _clike = _interopRequireDefault(require(\"./clike.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// @ts-nocheck\nreason.displayName = 'reason';\nreason.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nfunction reason(Prism) {\n  Prism.register(_clike.default);\n  Prism.languages.reason = Prism.languages.extend('clike', {\n    string: {\n      pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n      greedy: true\n    },\n    // 'class-name' must be matched *after* 'constructor' defined below\n    'class-name': /\\b[A-Z]\\w*/,\n    keyword: /\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,\n    operator: /\\.{3}|:[:=]|\\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:asr|land|lor|lsl|lsr|lxor|mod)\\b/\n  });\n  Prism.languages.insertBefore('reason', 'class-name', {\n    char: {\n      pattern: /'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/,\n      greedy: true\n    },\n    // Negative look-ahead prevents from matching things like String.capitalize\n    constructor: /\\b[A-Z]\\w*\\b(?!\\s*\\.)/,\n    label: {\n      pattern: /\\b[a-z]\\w*(?=::)/,\n      alias: 'symbol'\n    }\n  }); // We can't match functions property, so let's not even try.\n\n  delete Prism.languages.reason.function;\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$refractor$lang$clike"]],"~:properties",["^5",["string","aliases","operator","displayName","label","__esModule","value","char","keyword","greedy","pattern","reason","alias","default","constructor"]],"~:compiled-at",1676841365455,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$reason.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,CAAA,yCAAA,CAA8D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAiBtGC,QAASA,OAAM,CAACC,KAAD,CAAQ,CACrBA,KAAMC,CAAAA,QAAN,CAAeC,MAAOC,CAAAA,OAAtB,CACAH,MAAMI,CAAAA,SAAUL,CAAAA,MAAhB,CAAyBC,KAAMI,CAAAA,SAAUC,CAAAA,MAAhB,CAAuB,OAAvB,CAAgC,CACvDC,OAAQ,CACNC,QAAS,qCADH,CAENC,OAAQ,CAAA,CAFF,CAD+C,CAMvD,aAAc,YANyC,CAOvDC,QAAS,2RAP8C;AAQvDC,SAAU,qGAR6C,CAAhC,CAUzBV,MAAMI,CAAAA,SAAUO,CAAAA,YAAhB,CAA6B,QAA7B,CAAuC,YAAvC,CAAqD,CACnDC,KAAM,CACJL,QAAS,+DADL,CAEJC,OAAQ,CAAA,CAFJ,CAD6C,CAMnDK,YAAa,uBANsC,CAOnDC,MAAO,CACLP,QAAS,kBADJ,CAELQ,MAAO,QAFF,CAP4C,CAArD,CAaA,QAAOf,KAAMI,CAAAA,SAAUL,CAAAA,MAAOiB,CAAAA,QAzBT,CAdvBC,MAAOC,CAAAA,cAAP,CAAsBpB,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CqB,MAAO,CAAA,CADoC,CAA7C,CAGArB,QAAQK,CAAAA,OAAR,CAAkBJ,MAElB,KAAIG,OAEJkB,QAA+B,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAIC,CAAAA,UAAX;AAAwBD,GAAxB,CAA8B,CAAElB,QAASkB,GAAX,CAAvC,CAFxB,CAAuBzB,OAAA,CAAQ,0CAAR,CAAvB,CAKbG,OAAOwB,CAAAA,WAAP,CAAqB,QACrBxB,OAAOyB,CAAAA,OAAP,CAAiB,EAdqF;\",\n\"sources\":[\"node_modules/refractor/lang/reason.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$reason\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = reason;\\n\\nvar _clike = _interopRequireDefault(require(\\\"./clike.js\\\"));\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\n// @ts-nocheck\\nreason.displayName = 'reason';\\nreason.aliases = [];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction reason(Prism) {\\n  Prism.register(_clike.default);\\n  Prism.languages.reason = Prism.languages.extend('clike', {\\n    string: {\\n      pattern: /\\\"(?:\\\\\\\\(?:\\\\r\\\\n|[\\\\s\\\\S])|[^\\\\\\\\\\\\r\\\\n\\\"])*\\\"/,\\n      greedy: true\\n    },\\n    // 'class-name' must be matched *after* 'constructor' defined below\\n    'class-name': /\\\\b[A-Z]\\\\w*/,\\n    keyword: /\\\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\\\b/,\\n    operator: /\\\\.{3}|:[:=]|\\\\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\\\-*\\\\/]\\\\.?|\\\\b(?:asr|land|lor|lsl|lsr|lxor|mod)\\\\b/\\n  });\\n  Prism.languages.insertBefore('reason', 'class-name', {\\n    char: {\\n      pattern: /'(?:\\\\\\\\x[\\\\da-f]{2}|\\\\\\\\o[0-3][0-7][0-7]|\\\\\\\\\\\\d{3}|\\\\\\\\.|[^'\\\\\\\\\\\\r\\\\n])'/,\\n      greedy: true\\n    },\\n    // Negative look-ahead prevents from matching things like String.capitalize\\n    constructor: /\\\\b[A-Z]\\\\w*\\\\b(?!\\\\s*\\\\.)/,\\n    label: {\\n      pattern: /\\\\b[a-z]\\\\w*(?=::)/,\\n      alias: 'symbol'\\n    }\\n  }); // We can't match functions property, so let's not even try.\\n\\n  delete Prism.languages.reason.function;\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"reason\",\"Prism\",\"register\",\"_clike\",\"default\",\"languages\",\"extend\",\"string\",\"pattern\",\"greedy\",\"keyword\",\"operator\",\"insertBefore\",\"char\",\"constructor\",\"label\",\"alias\",\"function\",\"Object\",\"defineProperty\",\"value\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"displayName\",\"aliases\"]\n}\n"]