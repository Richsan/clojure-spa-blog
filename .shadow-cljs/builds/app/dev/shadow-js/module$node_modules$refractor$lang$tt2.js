["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/tt2.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$tt2=function(global,require,module,exports){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function tt2(Prism$jscomp$0){Prism$jscomp$0.register(_clike.default);Prism$jscomp$0.register(_markupTemplating.default);(function(Prism){Prism.languages.tt2=Prism.languages.extend(\"clike\",{comment:/#.*|\\[%#[\\s\\S]*?%\\]/,keyword:/\\b(?:BLOCK|CALL|CASE|CATCH|CLEAR|DEBUG|DEFAULT|ELSE|ELSIF|END|FILTER|FINAL|FOREACH|GET|IF|IN|INCLUDE|INSERT|LAST|MACRO|META|NEXT|PERL|PROCESS|RAWPERL|RETURN|SET|STOP|SWITCH|TAGS|THROW|TRY|UNLESS|USE|WHILE|WRAPPER)\\b/,\npunctuation:/[[\\]{},()]/});Prism.languages.insertBefore(\"tt2\",\"number\",{operator:/=[>=]?|!=?|<=?|>=?|&&|\\|\\|?|\\b(?:and|not|or)\\b/,variable:{pattern:/\\b[a-z]\\w*(?:\\s*\\.\\s*(?:\\d+|\\$?[a-z]\\w*))*\\b/i}});Prism.languages.insertBefore(\"tt2\",\"keyword\",{delimiter:{pattern:/^(?:\\[%|%%)-?|-?%\\]$/,alias:\"punctuation\"}});Prism.languages.insertBefore(\"tt2\",\"string\",{\"single-quoted-string\":{pattern:/'[^\\\\']*(?:\\\\[\\s\\S][^\\\\']*)*'/,greedy:!0,alias:\"string\"},\"double-quoted-string\":{pattern:/\"[^\\\\\"]*(?:\\\\[\\s\\S][^\\\\\"]*)*\"/,\ngreedy:!0,alias:\"string\",inside:{variable:{pattern:/\\$(?:[a-z]\\w*(?:\\.(?:\\d+|\\$?[a-z]\\w*))*)/i}}}});delete Prism.languages.tt2.string;Prism.hooks.add(\"before-tokenize\",function(env){Prism.languages[\"markup-templating\"].buildPlaceholders(env,\"tt2\",/\\[%[\\s\\S]+?%\\]/g)});Prism.hooks.add(\"after-tokenize\",function(env){Prism.languages[\"markup-templating\"].tokenizePlaceholders(env,\"tt2\")})})(Prism$jscomp$0)}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=tt2;var _clike=_interopRequireDefault(require(\"module$node_modules$refractor$lang$clike\")),\n_markupTemplating=_interopRequireDefault(require(\"module$node_modules$refractor$lang$markup_templating\"));tt2.displayName=\"tt2\";tt2.aliases=[]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$tt2\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = tt2;\n\nvar _clike = _interopRequireDefault(require(\"./clike.js\"));\n\nvar _markupTemplating = _interopRequireDefault(require(\"./markup-templating.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// @ts-nocheck\ntt2.displayName = 'tt2';\ntt2.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nfunction tt2(Prism) {\n  Prism.register(_clike.default);\n  Prism.register(_markupTemplating.default);\n\n  (function (Prism) {\n    Prism.languages.tt2 = Prism.languages.extend('clike', {\n      comment: /#.*|\\[%#[\\s\\S]*?%\\]/,\n      keyword: /\\b(?:BLOCK|CALL|CASE|CATCH|CLEAR|DEBUG|DEFAULT|ELSE|ELSIF|END|FILTER|FINAL|FOREACH|GET|IF|IN|INCLUDE|INSERT|LAST|MACRO|META|NEXT|PERL|PROCESS|RAWPERL|RETURN|SET|STOP|SWITCH|TAGS|THROW|TRY|UNLESS|USE|WHILE|WRAPPER)\\b/,\n      punctuation: /[[\\]{},()]/\n    });\n    Prism.languages.insertBefore('tt2', 'number', {\n      operator: /=[>=]?|!=?|<=?|>=?|&&|\\|\\|?|\\b(?:and|not|or)\\b/,\n      variable: {\n        pattern: /\\b[a-z]\\w*(?:\\s*\\.\\s*(?:\\d+|\\$?[a-z]\\w*))*\\b/i\n      }\n    });\n    Prism.languages.insertBefore('tt2', 'keyword', {\n      delimiter: {\n        pattern: /^(?:\\[%|%%)-?|-?%\\]$/,\n        alias: 'punctuation'\n      }\n    });\n    Prism.languages.insertBefore('tt2', 'string', {\n      'single-quoted-string': {\n        pattern: /'[^\\\\']*(?:\\\\[\\s\\S][^\\\\']*)*'/,\n        greedy: true,\n        alias: 'string'\n      },\n      'double-quoted-string': {\n        pattern: /\"[^\\\\\"]*(?:\\\\[\\s\\S][^\\\\\"]*)*\"/,\n        greedy: true,\n        alias: 'string',\n        inside: {\n          variable: {\n            pattern: /\\$(?:[a-z]\\w*(?:\\.(?:\\d+|\\$?[a-z]\\w*))*)/i\n          }\n        }\n      }\n    }); // The different types of TT2 strings \"replace\" the C-like standard string\n\n    delete Prism.languages.tt2.string;\n    Prism.hooks.add('before-tokenize', function (env) {\n      var tt2Pattern = /\\[%[\\s\\S]+?%\\]/g;\n      Prism.languages['markup-templating'].buildPlaceholders(env, 'tt2', tt2Pattern);\n    });\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'tt2');\n    });\n  })(Prism);\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$refractor$lang$clike","~$module$node_modules$refractor$lang$markup_templating"]],"~:properties",["^5",["tt2","punctuation","aliases","operator","displayName","__esModule","value","delimiter","variable","keyword","greedy","pattern","inside","alias","comment","default"]],"~:compiled-at",1676841365469,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$tt2.js\",\n\"lineCount\":4,\n\"mappings\":\"AAAAA,cAAA,CAAA,sCAAA,CAA2D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAYnGC,QAASA,uBAAsB,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAIC,CAAAA,UAAX,CAAwBD,GAAxB,CAA8B,CAAEE,QAASF,GAAX,CAAvC,CAOrCG,QAASA,IAAG,CAACC,cAAD,CAAQ,CAClBA,cAAMC,CAAAA,QAAN,CAAeC,MAAOJ,CAAAA,OAAtB,CACAE,eAAMC,CAAAA,QAAN,CAAeE,iBAAkBL,CAAAA,OAAjC,CAEC,UAAS,CAACE,KAAD,CAAQ,CAChBA,KAAMI,CAAAA,SAAUL,CAAAA,GAAhB,CAAsBC,KAAMI,CAAAA,SAAUC,CAAAA,MAAhB,CAAuB,OAAvB,CAAgC,CACpDC,QAAS,qBAD2C,CAEpDC,QAAS,yNAF2C;AAGpDC,YAAa,YAHuC,CAAhC,CAKtBR,MAAMI,CAAAA,SAAUK,CAAAA,YAAhB,CAA6B,KAA7B,CAAoC,QAApC,CAA8C,CAC5CC,SAAU,gDADkC,CAE5CC,SAAU,CACRC,QAAS,+CADD,CAFkC,CAA9C,CAMAZ,MAAMI,CAAAA,SAAUK,CAAAA,YAAhB,CAA6B,KAA7B,CAAoC,SAApC,CAA+C,CAC7CI,UAAW,CACTD,QAAS,sBADA,CAETE,MAAO,aAFE,CADkC,CAA/C,CAMAd,MAAMI,CAAAA,SAAUK,CAAAA,YAAhB,CAA6B,KAA7B,CAAoC,QAApC,CAA8C,CAC5C,uBAAwB,CACtBG,QAAS,+BADa,CAEtBG,OAAQ,CAAA,CAFc,CAGtBD,MAAO,QAHe,CADoB,CAM5C,uBAAwB,CACtBF,QAAS,+BADa;AAEtBG,OAAQ,CAAA,CAFc,CAGtBD,MAAO,QAHe,CAItBE,OAAQ,CACNL,SAAU,CACRC,QAAS,2CADD,CADJ,CAJc,CANoB,CAA9C,CAkBA,QAAOZ,KAAMI,CAAAA,SAAUL,CAAAA,GAAIkB,CAAAA,MAC3BjB,MAAMkB,CAAAA,KAAMC,CAAAA,GAAZ,CAAgB,iBAAhB,CAAmC,QAAS,CAACC,GAAD,CAAM,CAEhDpB,KAAMI,CAAAA,SAAN,CAAgB,mBAAhB,CAAqCiB,CAAAA,iBAArC,CAAuDD,GAAvD,CAA4D,KAA5D,CADiBE,iBACjB,CAFgD,CAAlD,CAIAtB,MAAMkB,CAAAA,KAAMC,CAAAA,GAAZ,CAAgB,gBAAhB,CAAkC,QAAS,CAACC,GAAD,CAAM,CAC/CpB,KAAMI,CAAAA,SAAN,CAAgB,mBAAhB,CAAqCmB,CAAAA,oBAArC,CAA0DH,GAA1D,CAA+D,KAA/D,CAD+C,CAAjD,CAzCgB,CAAjB,CAAD,CA4CGpB,cA5CH,CAJkB,CAhBpBwB,MAAOC,CAAAA,cAAP,CAAsB/B,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CgC,MAAO,CAAA,CADoC,CAA7C,CAGAhC,QAAQI,CAAAA,OAAR,CAAkBC,GAElB,KAAIG,OAASP,sBAAA,CAAuBH,OAAA,CAAQ,0CAAR,CAAvB,CAAb;AAEIW,kBAAoBR,sBAAA,CAAuBH,OAAA,CAAQ,sDAAR,CAAvB,CAKxBO,IAAI4B,CAAAA,WAAJ,CAAkB,KAClB5B,IAAI6B,CAAAA,OAAJ,CAAc,EAhBqF;\",\n\"sources\":[\"node_modules/refractor/lang/tt2.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$tt2\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = tt2;\\n\\nvar _clike = _interopRequireDefault(require(\\\"./clike.js\\\"));\\n\\nvar _markupTemplating = _interopRequireDefault(require(\\\"./markup-templating.js\\\"));\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\n// @ts-nocheck\\ntt2.displayName = 'tt2';\\ntt2.aliases = [];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction tt2(Prism) {\\n  Prism.register(_clike.default);\\n  Prism.register(_markupTemplating.default);\\n\\n  (function (Prism) {\\n    Prism.languages.tt2 = Prism.languages.extend('clike', {\\n      comment: /#.*|\\\\[%#[\\\\s\\\\S]*?%\\\\]/,\\n      keyword: /\\\\b(?:BLOCK|CALL|CASE|CATCH|CLEAR|DEBUG|DEFAULT|ELSE|ELSIF|END|FILTER|FINAL|FOREACH|GET|IF|IN|INCLUDE|INSERT|LAST|MACRO|META|NEXT|PERL|PROCESS|RAWPERL|RETURN|SET|STOP|SWITCH|TAGS|THROW|TRY|UNLESS|USE|WHILE|WRAPPER)\\\\b/,\\n      punctuation: /[[\\\\]{},()]/\\n    });\\n    Prism.languages.insertBefore('tt2', 'number', {\\n      operator: /=[>=]?|!=?|<=?|>=?|&&|\\\\|\\\\|?|\\\\b(?:and|not|or)\\\\b/,\\n      variable: {\\n        pattern: /\\\\b[a-z]\\\\w*(?:\\\\s*\\\\.\\\\s*(?:\\\\d+|\\\\$?[a-z]\\\\w*))*\\\\b/i\\n      }\\n    });\\n    Prism.languages.insertBefore('tt2', 'keyword', {\\n      delimiter: {\\n        pattern: /^(?:\\\\[%|%%)-?|-?%\\\\]$/,\\n        alias: 'punctuation'\\n      }\\n    });\\n    Prism.languages.insertBefore('tt2', 'string', {\\n      'single-quoted-string': {\\n        pattern: /'[^\\\\\\\\']*(?:\\\\\\\\[\\\\s\\\\S][^\\\\\\\\']*)*'/,\\n        greedy: true,\\n        alias: 'string'\\n      },\\n      'double-quoted-string': {\\n        pattern: /\\\"[^\\\\\\\\\\\"]*(?:\\\\\\\\[\\\\s\\\\S][^\\\\\\\\\\\"]*)*\\\"/,\\n        greedy: true,\\n        alias: 'string',\\n        inside: {\\n          variable: {\\n            pattern: /\\\\$(?:[a-z]\\\\w*(?:\\\\.(?:\\\\d+|\\\\$?[a-z]\\\\w*))*)/i\\n          }\\n        }\\n      }\\n    }); // The different types of TT2 strings \\\"replace\\\" the C-like standard string\\n\\n    delete Prism.languages.tt2.string;\\n    Prism.hooks.add('before-tokenize', function (env) {\\n      var tt2Pattern = /\\\\[%[\\\\s\\\\S]+?%\\\\]/g;\\n      Prism.languages['markup-templating'].buildPlaceholders(env, 'tt2', tt2Pattern);\\n    });\\n    Prism.hooks.add('after-tokenize', function (env) {\\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'tt2');\\n    });\\n  })(Prism);\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"default\",\"tt2\",\"Prism\",\"register\",\"_clike\",\"_markupTemplating\",\"languages\",\"extend\",\"comment\",\"keyword\",\"punctuation\",\"insertBefore\",\"operator\",\"variable\",\"pattern\",\"delimiter\",\"alias\",\"greedy\",\"inside\",\"string\",\"hooks\",\"add\",\"env\",\"buildPlaceholders\",\"tt2Pattern\",\"tokenizePlaceholders\",\"Object\",\"defineProperty\",\"value\",\"displayName\",\"aliases\"]\n}\n"]