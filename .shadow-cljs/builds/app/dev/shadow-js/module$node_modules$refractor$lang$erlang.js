["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/erlang.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$erlang=function(global,require,module,exports){function erlang(Prism){Prism.languages.erlang={comment:/%.+/,string:{pattern:/\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,greedy:!0},\"quoted-function\":{pattern:/'(?:\\\\.|[^\\\\'\\r\\n])+'(?=\\()/,alias:\"function\"},\"quoted-atom\":{pattern:/'(?:\\\\.|[^\\\\'\\r\\n])+'/,alias:\"atom\"},boolean:/\\b(?:false|true)\\b/,keyword:/\\b(?:after|begin|case|catch|end|fun|if|of|receive|try|when)\\b/,number:[/\\$\\\\?./,/\\b\\d+#[a-z0-9]+/i,/(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i],\nfunction:/\\b[a-z][\\w@]*(?=\\()/,variable:{pattern:/(^|[^@])(?:\\b|\\?)[A-Z_][\\w@]*/,lookbehind:!0},operator:[/[=\\/<>:]=|=[:\\/]=|\\+\\+?|--?|[=*\\/!]|\\b(?:and|andalso|band|bnot|bor|bsl|bsr|bxor|div|not|or|orelse|rem|xor)\\b/,{pattern:/(^|[^<])<(?!<)/,lookbehind:!0},{pattern:/(^|[^>])>(?!>)/,lookbehind:!0}],atom:/\\b[a-z][\\w@]*/,punctuation:/[()[\\]{}:;,.#|]|<<|>>/}}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=erlang;erlang.displayName=\"erlang\";erlang.aliases=[]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$erlang\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = erlang;\n// @ts-nocheck\nerlang.displayName = 'erlang';\nerlang.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nfunction erlang(Prism) {\n  Prism.languages.erlang = {\n    comment: /%.+/,\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n      greedy: true\n    },\n    'quoted-function': {\n      pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'(?=\\()/,\n      alias: 'function'\n    },\n    'quoted-atom': {\n      pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'/,\n      alias: 'atom'\n    },\n    boolean: /\\b(?:false|true)\\b/,\n    keyword: /\\b(?:after|begin|case|catch|end|fun|if|of|receive|try|when)\\b/,\n    number: [/\\$\\\\?./, /\\b\\d+#[a-z0-9]+/i, /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i],\n    function: /\\b[a-z][\\w@]*(?=\\()/,\n    variable: {\n      // Look-behind is used to prevent wrong highlighting of atoms containing \"@\"\n      pattern: /(^|[^@])(?:\\b|\\?)[A-Z_][\\w@]*/,\n      lookbehind: true\n    },\n    operator: [/[=\\/<>:]=|=[:\\/]=|\\+\\+?|--?|[=*\\/!]|\\b(?:and|andalso|band|bnot|bor|bsl|bsr|bxor|div|not|or|orelse|rem|xor)\\b/, {\n      // We don't want to match <<\n      pattern: /(^|[^<])<(?!<)/,\n      lookbehind: true\n    }, {\n      // We don't want to match >>\n      pattern: /(^|[^>])>(?!>)/,\n      lookbehind: true\n    }],\n    atom: /\\b[a-z][\\w@]*/,\n    punctuation: /[()[\\]{}:;,.#|]|<<|>>/\n  };\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["boolean","erlang","punctuation","string","aliases","operator","displayName","__esModule","lookbehind","value","atom","variable","keyword","number","greedy","function","pattern","alias","comment","default"]],"~:compiled-at",1676841365408,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$erlang.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,yCAAA,CAA8D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAYtGC,QAASA,OAAM,CAACC,KAAD,CAAQ,CACrBA,KAAMC,CAAAA,SAAUF,CAAAA,MAAhB,CAAyB,CACvBG,QAAS,KADc,CAEvBC,OAAQ,CACNC,QAAS,uBADH,CAENC,OAAQ,CAAA,CAFF,CAFe,CAMvB,kBAAmB,CACjBD,QAAS,6BADQ,CAEjBE,MAAO,UAFU,CANI,CAUvB,cAAe,CACbF,QAAS,uBADI,CAEbE,MAAO,MAFM,CAVQ,CAcvBC,QAAS,oBAdc,CAevBC,QAAS,+DAfc,CAgBvBC,OAAQ,CAAC,QAAD,CAAW,kBAAX,CAA+B,4CAA/B,CAhBe;AAiBvBC,SAAU,qBAjBa,CAkBvBC,SAAU,CAERP,QAAS,+BAFD,CAGRQ,WAAY,CAAA,CAHJ,CAlBa,CAuBvBC,SAAU,CAAC,8GAAD,CAAiH,CAEzHT,QAAS,gBAFgH,CAGzHQ,WAAY,CAAA,CAH6G,CAAjH,CAIP,CAEDR,QAAS,gBAFR,CAGDQ,WAAY,CAAA,CAHX,CAJO,CAvBa,CAgCvBE,KAAM,eAhCiB,CAiCvBC,YAAa,uBAjCU,CADJ,CATvBC,MAAOC,CAAAA,cAAP,CAAsBnB,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CoB,MAAO,CAAA,CADoC,CAA7C,CAGApB,QAAQqB,CAAAA,OAAR,CAAkBpB,MAElBA,OAAOqB,CAAAA,WAAP,CAAqB,QACrBrB,OAAOsB,CAAAA,OAAP,CAAiB,EATqF;\",\n\"sources\":[\"node_modules/refractor/lang/erlang.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$erlang\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = erlang;\\n// @ts-nocheck\\nerlang.displayName = 'erlang';\\nerlang.aliases = [];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction erlang(Prism) {\\n  Prism.languages.erlang = {\\n    comment: /%.+/,\\n    string: {\\n      pattern: /\\\"(?:\\\\\\\\.|[^\\\\\\\\\\\"\\\\r\\\\n])*\\\"/,\\n      greedy: true\\n    },\\n    'quoted-function': {\\n      pattern: /'(?:\\\\\\\\.|[^\\\\\\\\'\\\\r\\\\n])+'(?=\\\\()/,\\n      alias: 'function'\\n    },\\n    'quoted-atom': {\\n      pattern: /'(?:\\\\\\\\.|[^\\\\\\\\'\\\\r\\\\n])+'/,\\n      alias: 'atom'\\n    },\\n    boolean: /\\\\b(?:false|true)\\\\b/,\\n    keyword: /\\\\b(?:after|begin|case|catch|end|fun|if|of|receive|try|when)\\\\b/,\\n    number: [/\\\\$\\\\\\\\?./, /\\\\b\\\\d+#[a-z0-9]+/i, /(?:\\\\b\\\\d+(?:\\\\.\\\\d*)?|\\\\B\\\\.\\\\d+)(?:e[+-]?\\\\d+)?/i],\\n    function: /\\\\b[a-z][\\\\w@]*(?=\\\\()/,\\n    variable: {\\n      // Look-behind is used to prevent wrong highlighting of atoms containing \\\"@\\\"\\n      pattern: /(^|[^@])(?:\\\\b|\\\\?)[A-Z_][\\\\w@]*/,\\n      lookbehind: true\\n    },\\n    operator: [/[=\\\\/<>:]=|=[:\\\\/]=|\\\\+\\\\+?|--?|[=*\\\\/!]|\\\\b(?:and|andalso|band|bnot|bor|bsl|bsr|bxor|div|not|or|orelse|rem|xor)\\\\b/, {\\n      // We don't want to match <<\\n      pattern: /(^|[^<])<(?!<)/,\\n      lookbehind: true\\n    }, {\\n      // We don't want to match >>\\n      pattern: /(^|[^>])>(?!>)/,\\n      lookbehind: true\\n    }],\\n    atom: /\\\\b[a-z][\\\\w@]*/,\\n    punctuation: /[()[\\\\]{}:;,.#|]|<<|>>/\\n  };\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"erlang\",\"Prism\",\"languages\",\"comment\",\"string\",\"pattern\",\"greedy\",\"alias\",\"boolean\",\"keyword\",\"number\",\"function\",\"variable\",\"lookbehind\",\"operator\",\"atom\",\"punctuation\",\"Object\",\"defineProperty\",\"value\",\"default\",\"displayName\",\"aliases\"]\n}\n"]