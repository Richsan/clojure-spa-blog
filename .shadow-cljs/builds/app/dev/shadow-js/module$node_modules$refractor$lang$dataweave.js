["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/dataweave.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$dataweave=function(global,require,module,exports){function dataweave(Prism){Prism.languages.dataweave={url:/\\b[A-Za-z]+:\\/\\/[\\w/:.?=&-]+|\\burn:[\\w:.?=&-]+/,property:{pattern:/(?:\\b\\w+#)?(?:\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|\\b\\w+)(?=\\s*[:@])/,greedy:!0},string:{pattern:/([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,greedy:!0},\"mime-type\":/\\b(?:application|audio|image|multipart|text|video)\\/[\\w+-]+/,date:{pattern:/\\|[\\w:+-]+\\|/,greedy:!0},comment:[{pattern:/(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\nlookbehind:!0,greedy:!0},{pattern:/(^|[^\\\\:])\\/\\/.*/,lookbehind:!0,greedy:!0}],regex:{pattern:/\\/(?:[^\\\\\\/\\r\\n]|\\\\[^\\r\\n])+\\//,greedy:!0},keyword:/\\b(?:and|as|at|case|do|else|fun|if|input|is|match|not|ns|null|or|output|type|unless|update|using|var)\\b/,function:/\\b[A-Z_]\\w*(?=\\s*\\()/i,number:/-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,punctuation:/[{}[\\];(),.:@]/,operator:/<<|>>|->|[<>~=]=?|!=|--?-?|\\+\\+?|!|\\?/,boolean:/\\b(?:false|true)\\b/}}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=\ndataweave;dataweave.displayName=\"dataweave\";dataweave.aliases=[]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$dataweave\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = dataweave;\n// @ts-nocheck\ndataweave.displayName = 'dataweave';\ndataweave.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nfunction dataweave(Prism) {\n  ;\n\n  (function (Prism) {\n    Prism.languages.dataweave = {\n      url: /\\b[A-Za-z]+:\\/\\/[\\w/:.?=&-]+|\\burn:[\\w:.?=&-]+/,\n      property: {\n        pattern: /(?:\\b\\w+#)?(?:\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|\\b\\w+)(?=\\s*[:@])/,\n        greedy: true\n      },\n      string: {\n        pattern: /([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n        greedy: true\n      },\n      'mime-type': /\\b(?:application|audio|image|multipart|text|video)\\/[\\w+-]+/,\n      date: {\n        pattern: /\\|[\\w:+-]+\\|/,\n        greedy: true\n      },\n      comment: [{\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n        lookbehind: true,\n        greedy: true\n      }, {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }],\n      regex: {\n        pattern: /\\/(?:[^\\\\\\/\\r\\n]|\\\\[^\\r\\n])+\\//,\n        greedy: true\n      },\n      keyword: /\\b(?:and|as|at|case|do|else|fun|if|input|is|match|not|ns|null|or|output|type|unless|update|using|var)\\b/,\n      function: /\\b[A-Z_]\\w*(?=\\s*\\()/i,\n      number: /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n      punctuation: /[{}[\\];(),.:@]/,\n      operator: /<<|>>|->|[<>~=]=?|!=|--?-?|\\+\\+?|!|\\?/,\n      boolean: /\\b(?:false|true)\\b/\n    };\n  })(Prism);\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["boolean","dataweave","url","punctuation","string","aliases","operator","displayName","__esModule","regex","lookbehind","value","keyword","number","greedy","property","function","pattern","date","comment","default"]],"~:compiled-at",1676841365404,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$dataweave.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,CAAA,4CAAA,CAAiE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAYzGC,QAASA,UAAS,CAACC,KAAD,CAAQ,CAuCrBA,KAnCKC,CAAAA,SAAUF,CAAAA,SAAhB,CAA4B,CAC1BG,IAAK,gDADqB,CAE1BC,SAAU,CACRC,QAAS,uDADD,CAERC,OAAQ,CAAA,CAFA,CAFgB,CAM1BC,OAAQ,CACNF,QAAS,oCADH,CAENC,OAAQ,CAAA,CAFF,CANkB,CAU1B,YAAa,6DAVa,CAW1BE,KAAM,CACJH,QAAS,cADL,CAEJC,OAAQ,CAAA,CAFJ,CAXoB,CAe1BG,QAAS,CAAC,CACRJ,QAAS,iCADD;AAERK,WAAY,CAAA,CAFJ,CAGRJ,OAAQ,CAAA,CAHA,CAAD,CAIN,CACDD,QAAS,kBADR,CAEDK,WAAY,CAAA,CAFX,CAGDJ,OAAQ,CAAA,CAHP,CAJM,CAfiB,CAwB1BK,MAAO,CACLN,QAAS,gCADJ,CAELC,OAAQ,CAAA,CAFH,CAxBmB,CA4B1BM,QAAS,yGA5BiB,CA6B1BC,SAAU,uBA7BgB,CA8B1BC,OAAQ,oCA9BkB,CA+B1BC,YAAa,gBA/Ba,CAgC1BC,SAAU,uCAhCgB,CAiC1BC,QAAS,oBAjCiB,CAJN,CAT1BC,MAAOC,CAAAA,cAAP,CAAsBpB,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CqB,MAAO,CAAA,CADoC,CAA7C,CAGArB,QAAQsB,CAAAA,OAAR;AAAkBrB,SAElBA,UAAUsB,CAAAA,WAAV,CAAwB,WACxBtB,UAAUuB,CAAAA,OAAV,CAAoB,EATqF;\",\n\"sources\":[\"node_modules/refractor/lang/dataweave.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$dataweave\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = dataweave;\\n// @ts-nocheck\\ndataweave.displayName = 'dataweave';\\ndataweave.aliases = [];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction dataweave(Prism) {\\n  ;\\n\\n  (function (Prism) {\\n    Prism.languages.dataweave = {\\n      url: /\\\\b[A-Za-z]+:\\\\/\\\\/[\\\\w/:.?=&-]+|\\\\burn:[\\\\w:.?=&-]+/,\\n      property: {\\n        pattern: /(?:\\\\b\\\\w+#)?(?:\\\"(?:\\\\\\\\.|[^\\\\\\\\\\\"\\\\r\\\\n])*\\\"|\\\\b\\\\w+)(?=\\\\s*[:@])/,\\n        greedy: true\\n      },\\n      string: {\\n        pattern: /([\\\"'`])(?:\\\\\\\\[\\\\s\\\\S]|(?!\\\\1)[^\\\\\\\\])*\\\\1/,\\n        greedy: true\\n      },\\n      'mime-type': /\\\\b(?:application|audio|image|multipart|text|video)\\\\/[\\\\w+-]+/,\\n      date: {\\n        pattern: /\\\\|[\\\\w:+-]+\\\\|/,\\n        greedy: true\\n      },\\n      comment: [{\\n        pattern: /(^|[^\\\\\\\\])\\\\/\\\\*[\\\\s\\\\S]*?(?:\\\\*\\\\/|$)/,\\n        lookbehind: true,\\n        greedy: true\\n      }, {\\n        pattern: /(^|[^\\\\\\\\:])\\\\/\\\\/.*/,\\n        lookbehind: true,\\n        greedy: true\\n      }],\\n      regex: {\\n        pattern: /\\\\/(?:[^\\\\\\\\\\\\/\\\\r\\\\n]|\\\\\\\\[^\\\\r\\\\n])+\\\\//,\\n        greedy: true\\n      },\\n      keyword: /\\\\b(?:and|as|at|case|do|else|fun|if|input|is|match|not|ns|null|or|output|type|unless|update|using|var)\\\\b/,\\n      function: /\\\\b[A-Z_]\\\\w*(?=\\\\s*\\\\()/i,\\n      number: /-?\\\\b\\\\d+(?:\\\\.\\\\d+)?(?:e[+-]?\\\\d+)?\\\\b/i,\\n      punctuation: /[{}[\\\\];(),.:@]/,\\n      operator: /<<|>>|->|[<>~=]=?|!=|--?-?|\\\\+\\\\+?|!|\\\\?/,\\n      boolean: /\\\\b(?:false|true)\\\\b/\\n    };\\n  })(Prism);\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"dataweave\",\"Prism\",\"languages\",\"url\",\"property\",\"pattern\",\"greedy\",\"string\",\"date\",\"comment\",\"lookbehind\",\"regex\",\"keyword\",\"function\",\"number\",\"punctuation\",\"operator\",\"boolean\",\"Object\",\"defineProperty\",\"value\",\"default\",\"displayName\",\"aliases\"]\n}\n"]