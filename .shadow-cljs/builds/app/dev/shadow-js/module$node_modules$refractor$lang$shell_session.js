["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/shell-session.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$shell_session=function(global,require,module,exports){function shellSession(Prism$jscomp$0){Prism$jscomp$0.register(_bash.default);(function(Prism){var strings=[/\"(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|\\$(?!\\()|`[^`]+`|[^\"\\\\`$])*\"/.source,/'[^']*'/.source,/\\$'(?:[^'\\\\]|\\\\[\\s\\S])*'/.source,/<<-?\\s*([\"']?)(\\w+)\\1\\s[\\s\\S]*?[\\r\\n]\\2/.source].join(\"|\");Prism.languages[\"shell-session\"]={command:{pattern:RegExp(/^/.source+\"(?:\"+(/[^\\s@:$#%*!/\\\\]+@[^\\r\\n@:$#%*!/\\\\]+(?::[^\\0-\\x1F$#%*?\"<>:;|]+)?/.source+\n\"|\"+/[/~.][^\\0-\\x1F$#%*?\"<>@:;|]*/.source)+\")?\"+/[$#%](?=\\s)/.source+/(?:[^\\\\\\r\\n \\t'\"<$]|[ \\t](?:(?!#)|#.*$)|\\\\(?:[^\\r]|\\r\\n?)|\\$(?!')|<(?!<)|<<str>>)+/.source.replace(/<<str>>/g,function(){return strings}),\"m\"),greedy:!0,inside:{info:{pattern:/^[^#$%]+/,alias:\"punctuation\",inside:{user:/^[^\\s@:$#%*!/\\\\]+@[^\\r\\n@:$#%*!/\\\\]+/,punctuation:/:/,path:/[\\s\\S]+/}},bash:{pattern:/(^[$#%]\\s*)\\S[\\s\\S]*/,lookbehind:!0,alias:\"language-bash\",inside:Prism.languages.bash},\"shell-symbol\":{pattern:/^[$#%]/,alias:\"important\"}}},\noutput:/.(?:.*(?:[\\r\\n]|.$))*/};Prism.languages[\"sh-session\"]=Prism.languages.shellsession=Prism.languages[\"shell-session\"]})(Prism$jscomp$0)}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=shellSession;var _bash=function(obj){return obj&&obj.__esModule?obj:{default:obj}}(require(\"module$node_modules$refractor$lang$bash\"));shellSession.displayName=\"shell-session\";shellSession.aliases=[\"sh-session\",\"shellsession\"]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$shell_session\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = shellSession;\n\nvar _bash = _interopRequireDefault(require(\"./bash.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// @ts-nocheck\nshellSession.displayName = 'shell-session';\nshellSession.aliases = ['sh-session', 'shellsession'];\n/** @type {import('../core.js').Syntax} */\n\nfunction shellSession(Prism) {\n  Prism.register(_bash.default);\n\n  (function (Prism) {\n    // CAREFUL!\n    // The following patterns are concatenated, so the group referenced by a back reference is non-obvious!\n    var strings = [// normal string\n    /\"(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|\\$(?!\\()|`[^`]+`|[^\"\\\\`$])*\"/.source, /'[^']*'/.source, /\\$'(?:[^'\\\\]|\\\\[\\s\\S])*'/.source, // here doc\n    // 2 capturing groups\n    /<<-?\\s*([\"']?)(\\w+)\\1\\s[\\s\\S]*?[\\r\\n]\\2/.source].join('|');\n    Prism.languages['shell-session'] = {\n      command: {\n        pattern: RegExp( // user info\n        /^/.source + '(?:' + (/[^\\s@:$#%*!/\\\\]+@[^\\r\\n@:$#%*!/\\\\]+(?::[^\\0-\\x1F$#%*?\"<>:;|]+)?/.source + '|' + // <path>\n        // Since the path pattern is quite general, we will require it to start with a special character to\n        // prevent false positives.\n        /[/~.][^\\0-\\x1F$#%*?\"<>@:;|]*/.source) + ')?' + // shell symbol\n        /[$#%](?=\\s)/.source + // bash command\n        /(?:[^\\\\\\r\\n \\t'\"<$]|[ \\t](?:(?!#)|#.*$)|\\\\(?:[^\\r]|\\r\\n?)|\\$(?!')|<(?!<)|<<str>>)+/.source.replace(/<<str>>/g, function () {\n          return strings;\n        }), 'm'),\n        greedy: true,\n        inside: {\n          info: {\n            // foo@bar:~/files$ exit\n            // foo@bar$ exit\n            // ~/files$ exit\n            pattern: /^[^#$%]+/,\n            alias: 'punctuation',\n            inside: {\n              user: /^[^\\s@:$#%*!/\\\\]+@[^\\r\\n@:$#%*!/\\\\]+/,\n              punctuation: /:/,\n              path: /[\\s\\S]+/\n            }\n          },\n          bash: {\n            pattern: /(^[$#%]\\s*)\\S[\\s\\S]*/,\n            lookbehind: true,\n            alias: 'language-bash',\n            inside: Prism.languages.bash\n          },\n          'shell-symbol': {\n            pattern: /^[$#%]/,\n            alias: 'important'\n          }\n        }\n      },\n      output: /.(?:.*(?:[\\r\\n]|.$))*/\n    };\n    Prism.languages['sh-session'] = Prism.languages['shellsession'] = Prism.languages['shell-session'];\n  })(Prism);\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$refractor$lang$bash"]],"~:properties",["^5",["punctuation","output","aliases","command","bash","displayName","user","__esModule","info","path","lookbehind","value","greedy","pattern","inside","alias","default"]],"~:compiled-at",1676841365459,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$shell_session.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,CAAA,gDAAA,CAAqE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAiB7GC,QAASA,aAAY,CAACC,cAAD,CAAQ,CAC3BA,cAAMC,CAAAA,QAAN,CAAeC,KAAMC,CAAAA,OAArB,CAEC,UAAS,CAACH,KAAD,CAAQ,CAGhB,IAAII,QAAU,CACd,uDAAwDC,CAAAA,MAD1C,CACkD,SAAUA,CAAAA,MAD5D,CACoE,0BAA2BA,CAAAA,MAD/F,CAGd,yCAA0CA,CAAAA,MAH5B,CAGoCC,CAAAA,IAHpC,CAGyC,GAHzC,CAIdN,MAAMO,CAAAA,SAAN,CAAgB,eAAhB,CAAA,CAAmC,CACjCC,QAAS,CACPC,QAASC,MAAA,CACT,GAAIL,CAAAA,MADK,CACI,KADJ,EACa,iEAAkEA,CAAAA,MAD/E;AACwF,GADxF,CAIT,8BAA+BA,CAAAA,MAJtB,EAIgC,IAJhC,CAKT,aAAcA,CAAAA,MALL,CAMT,oFAAqFA,CAAAA,MAAOM,CAAAA,OAA5F,CAAoG,UAApG,CAAgH,QAAS,EAAG,CAC1H,MAAOP,QADmH,CAA5H,CANS,CAQL,GARK,CADF,CAUPQ,OAAQ,CAAA,CAVD,CAWPC,OAAQ,CACNC,KAAM,CAIJL,QAAS,UAJL,CAKJM,MAAO,aALH,CAMJF,OAAQ,CACNG,KAAM,sCADA,CAENC,YAAa,GAFP,CAGNC,KAAM,SAHA,CANJ,CADA,CAaNC,KAAM,CACJV,QAAS,sBADL,CAEJW,WAAY,CAAA,CAFR,CAGJL,MAAO,eAHH,CAIJF,OAAQb,KAAMO,CAAAA,SAAUY,CAAAA,IAJpB,CAbA,CAmBN,eAAgB,CACdV,QAAS,QADK,CAEdM,MAAO,WAFO,CAnBV,CAXD,CADwB;AAqCjCM,OAAQ,uBArCyB,CAuCnCrB,MAAMO,CAAAA,SAAN,CAAgB,YAAhB,CAAA,CAAgCP,KAAMO,CAAAA,SAAN,CAAA,YAAhC,CAAkEP,KAAMO,CAAAA,SAAN,CAAgB,eAAhB,CA9ClD,CAAjB,CAAD,CA+CGP,cA/CH,CAH2B,CAd7BsB,MAAOC,CAAAA,cAAP,CAAsBzB,OAAtB,CAA+B,YAA/B,CAA6C,CAC3C0B,MAAO,CAAA,CADoC,CAA7C,CAGA1B,QAAQK,CAAAA,OAAR,CAAkBJ,YAElB,KAAIG,MAEJuB,QAA+B,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAIC,CAAAA,UAAX,CAAwBD,GAAxB,CAA8B,CAAEvB,QAASuB,GAAX,CAAvC,CAFzB,CAAuB9B,OAAA,CAAQ,yCAAR,CAAvB,CAKZG,aAAa6B,CAAAA,WAAb,CAA2B,eAC3B7B,aAAa8B,CAAAA,OAAb,CAAuB,CAAC,YAAD,CAAe,cAAf,CAdsF;\",\n\"sources\":[\"node_modules/refractor/lang/shell-session.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$shell_session\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = shellSession;\\n\\nvar _bash = _interopRequireDefault(require(\\\"./bash.js\\\"));\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\n// @ts-nocheck\\nshellSession.displayName = 'shell-session';\\nshellSession.aliases = ['sh-session', 'shellsession'];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction shellSession(Prism) {\\n  Prism.register(_bash.default);\\n\\n  (function (Prism) {\\n    // CAREFUL!\\n    // The following patterns are concatenated, so the group referenced by a back reference is non-obvious!\\n    var strings = [// normal string\\n    /\\\"(?:\\\\\\\\[\\\\s\\\\S]|\\\\$\\\\([^)]+\\\\)|\\\\$(?!\\\\()|`[^`]+`|[^\\\"\\\\\\\\`$])*\\\"/.source, /'[^']*'/.source, /\\\\$'(?:[^'\\\\\\\\]|\\\\\\\\[\\\\s\\\\S])*'/.source, // here doc\\n    // 2 capturing groups\\n    /<<-?\\\\s*([\\\"']?)(\\\\w+)\\\\1\\\\s[\\\\s\\\\S]*?[\\\\r\\\\n]\\\\2/.source].join('|');\\n    Prism.languages['shell-session'] = {\\n      command: {\\n        pattern: RegExp( // user info\\n        /^/.source + '(?:' + (/[^\\\\s@:$#%*!/\\\\\\\\]+@[^\\\\r\\\\n@:$#%*!/\\\\\\\\]+(?::[^\\\\0-\\\\x1F$#%*?\\\"<>:;|]+)?/.source + '|' + // <path>\\n        // Since the path pattern is quite general, we will require it to start with a special character to\\n        // prevent false positives.\\n        /[/~.][^\\\\0-\\\\x1F$#%*?\\\"<>@:;|]*/.source) + ')?' + // shell symbol\\n        /[$#%](?=\\\\s)/.source + // bash command\\n        /(?:[^\\\\\\\\\\\\r\\\\n \\\\t'\\\"<$]|[ \\\\t](?:(?!#)|#.*$)|\\\\\\\\(?:[^\\\\r]|\\\\r\\\\n?)|\\\\$(?!')|<(?!<)|<<str>>)+/.source.replace(/<<str>>/g, function () {\\n          return strings;\\n        }), 'm'),\\n        greedy: true,\\n        inside: {\\n          info: {\\n            // foo@bar:~/files$ exit\\n            // foo@bar$ exit\\n            // ~/files$ exit\\n            pattern: /^[^#$%]+/,\\n            alias: 'punctuation',\\n            inside: {\\n              user: /^[^\\\\s@:$#%*!/\\\\\\\\]+@[^\\\\r\\\\n@:$#%*!/\\\\\\\\]+/,\\n              punctuation: /:/,\\n              path: /[\\\\s\\\\S]+/\\n            }\\n          },\\n          bash: {\\n            pattern: /(^[$#%]\\\\s*)\\\\S[\\\\s\\\\S]*/,\\n            lookbehind: true,\\n            alias: 'language-bash',\\n            inside: Prism.languages.bash\\n          },\\n          'shell-symbol': {\\n            pattern: /^[$#%]/,\\n            alias: 'important'\\n          }\\n        }\\n      },\\n      output: /.(?:.*(?:[\\\\r\\\\n]|.$))*/\\n    };\\n    Prism.languages['sh-session'] = Prism.languages['shellsession'] = Prism.languages['shell-session'];\\n  })(Prism);\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"shellSession\",\"Prism\",\"register\",\"_bash\",\"default\",\"strings\",\"source\",\"join\",\"languages\",\"command\",\"pattern\",\"RegExp\",\"replace\",\"greedy\",\"inside\",\"info\",\"alias\",\"user\",\"punctuation\",\"path\",\"bash\",\"lookbehind\",\"output\",\"Object\",\"defineProperty\",\"value\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"displayName\",\"aliases\"]\n}\n"]