["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/toml.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$toml=function(global,require,module,exports){function toml(Prism$jscomp$0){(function(Prism){function insertKey(pattern){return pattern.replace(/__/g,function(){return key})}var key=/(?:[\\w-]+|'[^'\\n\\r]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")/.source;Prism.languages.toml={comment:{pattern:/#.*/,greedy:!0},table:{pattern:RegExp(insertKey(/(^[\\t ]*\\[\\s*(?:\\[\\s*)?)__(?:\\s*\\.\\s*__)*(?=\\s*\\])/.source),\"m\"),lookbehind:!0,greedy:!0,alias:\"class-name\"},key:{pattern:RegExp(insertKey(/(^[\\t ]*|[{,]\\s*)__(?:\\s*\\.\\s*__)*(?=\\s*=)/.source),\n\"m\"),lookbehind:!0,greedy:!0,alias:\"property\"},string:{pattern:/\"\"\"(?:\\\\[\\s\\S]|[^\\\\])*?\"\"\"|'''[\\s\\S]*?'''|'[^'\\n\\r]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,greedy:!0},date:[{pattern:/\\b\\d{4}-\\d{2}-\\d{2}(?:[T\\s]\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|[+-]\\d{2}:\\d{2})?)?\\b/i,alias:\"number\"},{pattern:/\\b\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?\\b/,alias:\"number\"}],number:/(?:\\b0(?:x[\\da-zA-Z]+(?:_[\\da-zA-Z]+)*|o[0-7]+(?:_[0-7]+)*|b[10]+(?:_[10]+)*))\\b|[-+]?\\b\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?\\b|[-+]?\\b(?:inf|nan)\\b/,\nboolean:/\\b(?:false|true)\\b/,punctuation:/[.,=[\\]{}]/}})(Prism$jscomp$0)}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=toml;toml.displayName=\"toml\";toml.aliases=[]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$toml\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toml;\n// @ts-nocheck\ntoml.displayName = 'toml';\ntoml.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nfunction toml(Prism) {\n  ;\n\n  (function (Prism) {\n    var key = /(?:[\\w-]+|'[^'\\n\\r]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")/.source;\n    /**\n     * @param {string} pattern\n     */\n\n    function insertKey(pattern) {\n      return pattern.replace(/__/g, function () {\n        return key;\n      });\n    }\n\n    Prism.languages.toml = {\n      comment: {\n        pattern: /#.*/,\n        greedy: true\n      },\n      table: {\n        pattern: RegExp(insertKey(/(^[\\t ]*\\[\\s*(?:\\[\\s*)?)__(?:\\s*\\.\\s*__)*(?=\\s*\\])/.source), 'm'),\n        lookbehind: true,\n        greedy: true,\n        alias: 'class-name'\n      },\n      key: {\n        pattern: RegExp(insertKey(/(^[\\t ]*|[{,]\\s*)__(?:\\s*\\.\\s*__)*(?=\\s*=)/.source), 'm'),\n        lookbehind: true,\n        greedy: true,\n        alias: 'property'\n      },\n      string: {\n        pattern: /\"\"\"(?:\\\\[\\s\\S]|[^\\\\])*?\"\"\"|'''[\\s\\S]*?'''|'[^'\\n\\r]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n        greedy: true\n      },\n      date: [{\n        // Offset Date-Time, Local Date-Time, Local Date\n        pattern: /\\b\\d{4}-\\d{2}-\\d{2}(?:[T\\s]\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|[+-]\\d{2}:\\d{2})?)?\\b/i,\n        alias: 'number'\n      }, {\n        // Local Time\n        pattern: /\\b\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?\\b/,\n        alias: 'number'\n      }],\n      number: /(?:\\b0(?:x[\\da-zA-Z]+(?:_[\\da-zA-Z]+)*|o[0-7]+(?:_[0-7]+)*|b[10]+(?:_[10]+)*))\\b|[-+]?\\b\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?\\b|[-+]?\\b(?:inf|nan)\\b/,\n      boolean: /\\b(?:false|true)\\b/,\n      punctuation: /[.,=[\\]{}]/\n    };\n  })(Prism);\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["table","boolean","punctuation","string","aliases","toml","displayName","key","__esModule","lookbehind","value","number","greedy","pattern","date","alias","comment","default"]],"~:compiled-at",1676841365470,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$toml.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,CAAA,uCAAA,CAA4D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAYpGC,QAASA,KAAI,CAACC,cAAD,CAAQ,CAGlB,SAAS,CAACA,KAAD,CAAQ,CAMhBC,QAASA,UAAS,CAACC,OAAD,CAAU,CAC1B,MAAOA,QAAQC,CAAAA,OAAR,CAAgB,KAAhB,CAAuB,QAAS,EAAG,CACxC,MAAOC,IADiC,CAAnC,CADmB,CAL5B,IAAIA,IAAM,8CAA+CC,CAAAA,MAWzDL,MAAMM,CAAAA,SAAUP,CAAAA,IAAhB,CAAuB,CACrBQ,QAAS,CACPL,QAAS,KADF,CAEPM,OAAQ,CAAA,CAFD,CADY,CAKrBC,MAAO,CACLP,QAASQ,MAAA,CAAOT,SAAA,CAAU,oDAAqDI,CAAAA,MAA/D,CAAP,CAA+E,GAA/E,CADJ,CAELM,WAAY,CAAA,CAFP,CAGLH,OAAQ,CAAA,CAHH,CAILI,MAAO,YAJF,CALc,CAWrBR,IAAK,CACHF,QAASQ,MAAA,CAAOT,SAAA,CAAU,4CAA6CI,CAAAA,MAAvD,CAAP;AAAuE,GAAvE,CADN,CAEHM,WAAY,CAAA,CAFT,CAGHH,OAAQ,CAAA,CAHL,CAIHI,MAAO,UAJJ,CAXgB,CAiBrBC,OAAQ,CACNX,QAAS,6EADH,CAENM,OAAQ,CAAA,CAFF,CAjBa,CAqBrBM,KAAM,CAAC,CAELZ,QAAS,mFAFJ,CAGLU,MAAO,QAHF,CAAD,CAIH,CAEDV,QAAS,iCAFR,CAGDU,MAAO,QAHN,CAJG,CArBe,CA8BrBG,OAAQ,0KA9Ba;AA+BrBC,QAAS,oBA/BY,CAgCrBC,YAAa,YAhCQ,CAZP,CAAjB,CAAD,CA8CGjB,cA9CH,CAHmB,CATrBkB,MAAOC,CAAAA,cAAP,CAAsBrB,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CsB,MAAO,CAAA,CADoC,CAA7C,CAGAtB,QAAQuB,CAAAA,OAAR,CAAkBtB,IAElBA,KAAKuB,CAAAA,WAAL,CAAmB,MACnBvB,KAAKwB,CAAAA,OAAL,CAAe,EATqF;\",\n\"sources\":[\"node_modules/refractor/lang/toml.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$toml\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = toml;\\n// @ts-nocheck\\ntoml.displayName = 'toml';\\ntoml.aliases = [];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction toml(Prism) {\\n  ;\\n\\n  (function (Prism) {\\n    var key = /(?:[\\\\w-]+|'[^'\\\\n\\\\r]*'|\\\"(?:\\\\\\\\.|[^\\\\\\\\\\\"\\\\r\\\\n])*\\\")/.source;\\n    /**\\n     * @param {string} pattern\\n     */\\n\\n    function insertKey(pattern) {\\n      return pattern.replace(/__/g, function () {\\n        return key;\\n      });\\n    }\\n\\n    Prism.languages.toml = {\\n      comment: {\\n        pattern: /#.*/,\\n        greedy: true\\n      },\\n      table: {\\n        pattern: RegExp(insertKey(/(^[\\\\t ]*\\\\[\\\\s*(?:\\\\[\\\\s*)?)__(?:\\\\s*\\\\.\\\\s*__)*(?=\\\\s*\\\\])/.source), 'm'),\\n        lookbehind: true,\\n        greedy: true,\\n        alias: 'class-name'\\n      },\\n      key: {\\n        pattern: RegExp(insertKey(/(^[\\\\t ]*|[{,]\\\\s*)__(?:\\\\s*\\\\.\\\\s*__)*(?=\\\\s*=)/.source), 'm'),\\n        lookbehind: true,\\n        greedy: true,\\n        alias: 'property'\\n      },\\n      string: {\\n        pattern: /\\\"\\\"\\\"(?:\\\\\\\\[\\\\s\\\\S]|[^\\\\\\\\])*?\\\"\\\"\\\"|'''[\\\\s\\\\S]*?'''|'[^'\\\\n\\\\r]*'|\\\"(?:\\\\\\\\.|[^\\\\\\\\\\\"\\\\r\\\\n])*\\\"/,\\n        greedy: true\\n      },\\n      date: [{\\n        // Offset Date-Time, Local Date-Time, Local Date\\n        pattern: /\\\\b\\\\d{4}-\\\\d{2}-\\\\d{2}(?:[T\\\\s]\\\\d{2}:\\\\d{2}:\\\\d{2}(?:\\\\.\\\\d+)?(?:Z|[+-]\\\\d{2}:\\\\d{2})?)?\\\\b/i,\\n        alias: 'number'\\n      }, {\\n        // Local Time\\n        pattern: /\\\\b\\\\d{2}:\\\\d{2}:\\\\d{2}(?:\\\\.\\\\d+)?\\\\b/,\\n        alias: 'number'\\n      }],\\n      number: /(?:\\\\b0(?:x[\\\\da-zA-Z]+(?:_[\\\\da-zA-Z]+)*|o[0-7]+(?:_[0-7]+)*|b[10]+(?:_[10]+)*))\\\\b|[-+]?\\\\b\\\\d+(?:_\\\\d+)*(?:\\\\.\\\\d+(?:_\\\\d+)*)?(?:[eE][+-]?\\\\d+(?:_\\\\d+)*)?\\\\b|[-+]?\\\\b(?:inf|nan)\\\\b/,\\n      boolean: /\\\\b(?:false|true)\\\\b/,\\n      punctuation: /[.,=[\\\\]{}]/\\n    };\\n  })(Prism);\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"toml\",\"Prism\",\"insertKey\",\"pattern\",\"replace\",\"key\",\"source\",\"languages\",\"comment\",\"greedy\",\"table\",\"RegExp\",\"lookbehind\",\"alias\",\"string\",\"date\",\"number\",\"boolean\",\"punctuation\",\"Object\",\"defineProperty\",\"value\",\"default\",\"displayName\",\"aliases\"]\n}\n"]