["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/typoscript.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$typoscript=function(global,require,module,exports){function typoscript(Prism){var keywords=/\\b(?:ACT|ACTIFSUB|CARRAY|CASE|CLEARGIF|COA|COA_INT|CONSTANTS|CONTENT|CUR|EDITPANEL|EFFECT|EXT|FILE|FLUIDTEMPLATE|FORM|FRAME|FRAMESET|GIFBUILDER|GMENU|GMENU_FOLDOUT|GMENU_LAYERS|GP|HMENU|HRULER|HTML|IENV|IFSUB|IMAGE|IMGMENU|IMGMENUITEM|IMGTEXT|IMG_RESOURCE|INCLUDE_TYPOSCRIPT|JSMENU|JSMENUITEM|LLL|LOAD_REGISTER|NO|PAGE|RECORDS|RESTORE_REGISTER|TEMPLATE|TEXT|TMENU|TMENUITEM|TMENU_LAYERS|USER|USER_INT|_GIFBUILDER|global|globalString|globalVar)\\b/;\nPrism.languages.typoscript={comment:[{pattern:/(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,lookbehind:!0},{pattern:/(^|[^\\\\:= \\t]|(?:^|[^= \\t])[ \\t]+)\\/\\/.*/,lookbehind:!0,greedy:!0},{pattern:/(^|[^\"'])#.*/,lookbehind:!0,greedy:!0}],function:[{pattern:/<INCLUDE_TYPOSCRIPT:\\s*source\\s*=\\s*(?:\"[^\"\\r\\n]*\"|'[^'\\r\\n]*')\\s*>/,inside:{string:{pattern:/\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,inside:{keyword:keywords}},keyword:{pattern:/INCLUDE_TYPOSCRIPT/}}},{pattern:/@import\\s*(?:\"[^\"\\r\\n]*\"|'[^'\\r\\n]*')/,inside:{string:/\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/}}],\nstring:{pattern:/^([^=]*=[< ]?)(?:(?!\\]\\n).)*/,lookbehind:!0,inside:{function:/\\{\\$.*\\}/,keyword:keywords,number:/^\\d+$/,punctuation:/[,|:]/}},keyword:keywords,number:{pattern:/\\b\\d+\\s*[.{=]/,inside:{operator:/[.{=]/}},tag:{pattern:/\\.?[-\\w\\\\]+\\.?/,inside:{punctuation:/\\./}},punctuation:/[{}[\\];(),.:|]/,operator:/[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/};Prism.languages.tsconfig=Prism.languages.typoscript}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=typoscript;typoscript.displayName=\n\"typoscript\";typoscript.aliases=[\"tsconfig\"]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$typoscript\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = typoscript;\n// @ts-nocheck\ntyposcript.displayName = 'typoscript';\ntyposcript.aliases = ['tsconfig'];\n/** @type {import('../core.js').Syntax} */\n\nfunction typoscript(Prism) {\n  ;\n\n  (function (Prism) {\n    var keywords = /\\b(?:ACT|ACTIFSUB|CARRAY|CASE|CLEARGIF|COA|COA_INT|CONSTANTS|CONTENT|CUR|EDITPANEL|EFFECT|EXT|FILE|FLUIDTEMPLATE|FORM|FRAME|FRAMESET|GIFBUILDER|GMENU|GMENU_FOLDOUT|GMENU_LAYERS|GP|HMENU|HRULER|HTML|IENV|IFSUB|IMAGE|IMGMENU|IMGMENUITEM|IMGTEXT|IMG_RESOURCE|INCLUDE_TYPOSCRIPT|JSMENU|JSMENUITEM|LLL|LOAD_REGISTER|NO|PAGE|RECORDS|RESTORE_REGISTER|TEMPLATE|TEXT|TMENU|TMENUITEM|TMENU_LAYERS|USER|USER_INT|_GIFBUILDER|global|globalString|globalVar)\\b/;\n    Prism.languages.typoscript = {\n      comment: [{\n        // multiline comments /* */\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n        lookbehind: true\n      }, {\n        // double-slash comments - ignored when backslashes or colon is found in front\n        // also ignored whenever directly after an equal-sign, because it would probably be an url without protocol\n        pattern: /(^|[^\\\\:= \\t]|(?:^|[^= \\t])[ \\t]+)\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }, {\n        // hash comments - ignored when leading quote is found for hex colors in strings\n        pattern: /(^|[^\"'])#.*/,\n        lookbehind: true,\n        greedy: true\n      }],\n      function: [{\n        // old include style\n        pattern: /<INCLUDE_TYPOSCRIPT:\\s*source\\s*=\\s*(?:\"[^\"\\r\\n]*\"|'[^'\\r\\n]*')\\s*>/,\n        inside: {\n          string: {\n            pattern: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\n            inside: {\n              keyword: keywords\n            }\n          },\n          keyword: {\n            pattern: /INCLUDE_TYPOSCRIPT/\n          }\n        }\n      }, {\n        // new include style\n        pattern: /@import\\s*(?:\"[^\"\\r\\n]*\"|'[^'\\r\\n]*')/,\n        inside: {\n          string: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/\n        }\n      }],\n      string: {\n        pattern: /^([^=]*=[< ]?)(?:(?!\\]\\n).)*/,\n        lookbehind: true,\n        inside: {\n          function: /\\{\\$.*\\}/,\n          // constants include\n          keyword: keywords,\n          number: /^\\d+$/,\n          punctuation: /[,|:]/\n        }\n      },\n      keyword: keywords,\n      number: {\n        // special highlighting for indexes of arrays in tags\n        pattern: /\\b\\d+\\s*[.{=]/,\n        inside: {\n          operator: /[.{=]/\n        }\n      },\n      tag: {\n        pattern: /\\.?[-\\w\\\\]+\\.?/,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      punctuation: /[{}[\\];(),.:|]/,\n      operator: /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/\n    };\n    Prism.languages.tsconfig = Prism.languages.typoscript;\n  })(Prism);\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["punctuation","string","aliases","operator","displayName","__esModule","lookbehind","tsconfig","tag","value","keyword","number","greedy","function","pattern","inside","comment","default","typoscript"]],"~:compiled-at",1676841365470,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$typoscript.js\",\n\"lineCount\":4,\n\"mappings\":\"AAAAA,cAAA,CAAA,6CAAA,CAAkE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAY1GC,QAASA,WAAU,CAACC,KAAD,CAAQ,CAIvB,IAAIC,SAAW,+bAoEdD;KAnEKE,CAAAA,SAAUH,CAAAA,UAAhB,CAA6B,CAC3BI,QAAS,CAAC,CAERC,QAAS,iCAFD,CAGRC,WAAY,CAAA,CAHJ,CAAD,CAIN,CAGDD,QAAS,0CAHR,CAIDC,WAAY,CAAA,CAJX,CAKDC,OAAQ,CAAA,CALP,CAJM,CAUN,CAEDF,QAAS,cAFR,CAGDC,WAAY,CAAA,CAHX,CAIDC,OAAQ,CAAA,CAJP,CAVM,CADkB,CAiB3BC,SAAU,CAAC,CAETH,QAAS,qEAFA,CAGTI,OAAQ,CACNC,OAAQ,CACNL,QAAS,yBADH,CAENI,OAAQ,CACNE,QAAST,QADH,CAFF,CADF,CAONS,QAAS,CACPN,QAAS,oBADF,CAPH,CAHC,CAAD,CAcP,CAEDA,QAAS,uCAFR,CAGDI,OAAQ,CACNC,OAAQ,yBADF,CAHP,CAdO,CAjBiB;AAsC3BA,OAAQ,CACNL,QAAS,8BADH,CAENC,WAAY,CAAA,CAFN,CAGNG,OAAQ,CACND,SAAU,UADJ,CAGNG,QAAST,QAHH,CAINU,OAAQ,OAJF,CAKNC,YAAa,OALP,CAHF,CAtCmB,CAiD3BF,QAAST,QAjDkB,CAkD3BU,OAAQ,CAENP,QAAS,eAFH,CAGNI,OAAQ,CACNK,SAAU,OADJ,CAHF,CAlDmB,CAyD3BC,IAAK,CACHV,QAAS,gBADN,CAEHI,OAAQ,CACNI,YAAa,IADP,CAFL,CAzDsB,CA+D3BA,YAAa,gBA/Dc,CAgE3BC,SAAU,8CAhEiB,CAmE5Bb,MADKE,CAAAA,SAAUa,CAAAA,QAAhB,CACCf,KADgCE,CAAAA,SAAUH,CAAAA,UAvEpB,CAT3BiB,MAAOC,CAAAA,cAAP,CAAsBnB,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CoB,MAAO,CAAA,CADoC,CAA7C,CAGApB,QAAQqB,CAAAA,OAAR,CAAkBpB,UAElBA,WAAWqB,CAAAA,WAAX;AAAyB,YACzBrB,WAAWsB,CAAAA,OAAX,CAAqB,CAAC,UAAD,CATqF;\",\n\"sources\":[\"node_modules/refractor/lang/typoscript.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$typoscript\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = typoscript;\\n// @ts-nocheck\\ntyposcript.displayName = 'typoscript';\\ntyposcript.aliases = ['tsconfig'];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction typoscript(Prism) {\\n  ;\\n\\n  (function (Prism) {\\n    var keywords = /\\\\b(?:ACT|ACTIFSUB|CARRAY|CASE|CLEARGIF|COA|COA_INT|CONSTANTS|CONTENT|CUR|EDITPANEL|EFFECT|EXT|FILE|FLUIDTEMPLATE|FORM|FRAME|FRAMESET|GIFBUILDER|GMENU|GMENU_FOLDOUT|GMENU_LAYERS|GP|HMENU|HRULER|HTML|IENV|IFSUB|IMAGE|IMGMENU|IMGMENUITEM|IMGTEXT|IMG_RESOURCE|INCLUDE_TYPOSCRIPT|JSMENU|JSMENUITEM|LLL|LOAD_REGISTER|NO|PAGE|RECORDS|RESTORE_REGISTER|TEMPLATE|TEXT|TMENU|TMENUITEM|TMENU_LAYERS|USER|USER_INT|_GIFBUILDER|global|globalString|globalVar)\\\\b/;\\n    Prism.languages.typoscript = {\\n      comment: [{\\n        // multiline comments /* */\\n        pattern: /(^|[^\\\\\\\\])\\\\/\\\\*[\\\\s\\\\S]*?(?:\\\\*\\\\/|$)/,\\n        lookbehind: true\\n      }, {\\n        // double-slash comments - ignored when backslashes or colon is found in front\\n        // also ignored whenever directly after an equal-sign, because it would probably be an url without protocol\\n        pattern: /(^|[^\\\\\\\\:= \\\\t]|(?:^|[^= \\\\t])[ \\\\t]+)\\\\/\\\\/.*/,\\n        lookbehind: true,\\n        greedy: true\\n      }, {\\n        // hash comments - ignored when leading quote is found for hex colors in strings\\n        pattern: /(^|[^\\\"'])#.*/,\\n        lookbehind: true,\\n        greedy: true\\n      }],\\n      function: [{\\n        // old include style\\n        pattern: /<INCLUDE_TYPOSCRIPT:\\\\s*source\\\\s*=\\\\s*(?:\\\"[^\\\"\\\\r\\\\n]*\\\"|'[^'\\\\r\\\\n]*')\\\\s*>/,\\n        inside: {\\n          string: {\\n            pattern: /\\\"[^\\\"\\\\r\\\\n]*\\\"|'[^'\\\\r\\\\n]*'/,\\n            inside: {\\n              keyword: keywords\\n            }\\n          },\\n          keyword: {\\n            pattern: /INCLUDE_TYPOSCRIPT/\\n          }\\n        }\\n      }, {\\n        // new include style\\n        pattern: /@import\\\\s*(?:\\\"[^\\\"\\\\r\\\\n]*\\\"|'[^'\\\\r\\\\n]*')/,\\n        inside: {\\n          string: /\\\"[^\\\"\\\\r\\\\n]*\\\"|'[^'\\\\r\\\\n]*'/\\n        }\\n      }],\\n      string: {\\n        pattern: /^([^=]*=[< ]?)(?:(?!\\\\]\\\\n).)*/,\\n        lookbehind: true,\\n        inside: {\\n          function: /\\\\{\\\\$.*\\\\}/,\\n          // constants include\\n          keyword: keywords,\\n          number: /^\\\\d+$/,\\n          punctuation: /[,|:]/\\n        }\\n      },\\n      keyword: keywords,\\n      number: {\\n        // special highlighting for indexes of arrays in tags\\n        pattern: /\\\\b\\\\d+\\\\s*[.{=]/,\\n        inside: {\\n          operator: /[.{=]/\\n        }\\n      },\\n      tag: {\\n        pattern: /\\\\.?[-\\\\w\\\\\\\\]+\\\\.?/,\\n        inside: {\\n          punctuation: /\\\\./\\n        }\\n      },\\n      punctuation: /[{}[\\\\];(),.:|]/,\\n      operator: /[<>]=?|[!=]=?=?|--?|\\\\+\\\\+?|&&?|\\\\|\\\\|?|[?*/~^%]/\\n    };\\n    Prism.languages.tsconfig = Prism.languages.typoscript;\\n  })(Prism);\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"typoscript\",\"Prism\",\"keywords\",\"languages\",\"comment\",\"pattern\",\"lookbehind\",\"greedy\",\"function\",\"inside\",\"string\",\"keyword\",\"number\",\"punctuation\",\"operator\",\"tag\",\"tsconfig\",\"Object\",\"defineProperty\",\"value\",\"default\",\"displayName\",\"aliases\"]\n}\n"]