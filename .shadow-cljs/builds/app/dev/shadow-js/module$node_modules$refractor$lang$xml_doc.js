["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/xml-doc.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$xml_doc=function(global,require,module,exports){function xmlDoc(Prism$jscomp$0){Prism$jscomp$0.register(_markup.default);(function(Prism){function insertDocComment(lang,docComment){Prism.languages[lang]&&Prism.languages.insertBefore(lang,\"comment\",{\"doc-comment\":docComment})}var tag=Prism.languages.markup.tag,slashDocComment={pattern:/\\/\\/\\/.*/,greedy:!0,alias:\"comment\",inside:{tag}};tag={pattern:/'''.*/,greedy:!0,alias:\"comment\",inside:{tag}};insertDocComment(\"csharp\",\nslashDocComment);insertDocComment(\"fsharp\",slashDocComment);insertDocComment(\"vbnet\",tag)})(Prism$jscomp$0)}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=xmlDoc;var _markup=function(obj){return obj&&obj.__esModule?obj:{default:obj}}(require(\"module$node_modules$refractor$lang$markup\"));xmlDoc.displayName=\"xml-doc\";xmlDoc.aliases=[]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$xml_doc\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = xmlDoc;\n\nvar _markup = _interopRequireDefault(require(\"./markup.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// @ts-nocheck\nxmlDoc.displayName = 'xml-doc';\nxmlDoc.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nfunction xmlDoc(Prism) {\n  Prism.register(_markup.default);\n\n  (function (Prism) {\n    /**\n     * If the given language is present, it will insert the given doc comment grammar token into it.\n     *\n     * @param {string} lang\n     * @param {any} docComment\n     */\n    function insertDocComment(lang, docComment) {\n      if (Prism.languages[lang]) {\n        Prism.languages.insertBefore(lang, 'comment', {\n          'doc-comment': docComment\n        });\n      }\n    }\n\n    var tag = Prism.languages.markup.tag;\n    var slashDocComment = {\n      pattern: /\\/\\/\\/.*/,\n      greedy: true,\n      alias: 'comment',\n      inside: {\n        tag: tag\n      }\n    };\n    var tickDocComment = {\n      pattern: /'''.*/,\n      greedy: true,\n      alias: 'comment',\n      inside: {\n        tag: tag\n      }\n    };\n    insertDocComment('csharp', slashDocComment);\n    insertDocComment('fsharp', slashDocComment);\n    insertDocComment('vbnet', tickDocComment);\n  })(Prism);\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$refractor$lang$markup","~$shadow.js"]],"~:properties",["^5",["aliases","displayName","__esModule","tag","value","greedy","pattern","inside","alias","default"]],"~:compiled-at",1676841365476,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$xml_doc.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,0CAAA,CAA+D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAiBvGC,QAASA,OAAM,CAACC,cAAD,CAAQ,CACrBA,cAAMC,CAAAA,QAAN,CAAeC,OAAQC,CAAAA,OAAvB,CAEC,UAAS,CAACH,KAAD,CAAQ,CAOhBI,QAASA,iBAAgB,CAACC,IAAD,CAAOC,UAAP,CAAmB,CACtCN,KAAMO,CAAAA,SAAN,CAAgBF,IAAhB,CAAJ,EACEL,KAAMO,CAAAA,SAAUC,CAAAA,YAAhB,CAA6BH,IAA7B,CAAmC,SAAnC,CAA8C,CAC5C,cAAeC,UAD6B,CAA9C,CAFwC,CAQ5C,IAAIG,IAAMT,KAAMO,CAAAA,SAAUG,CAAAA,MAAOD,CAAAA,GAAjC,CACIE,gBAAkB,CACpBC,QAAS,UADW,CAEpBC,OAAQ,CAAA,CAFY,CAGpBC,MAAO,SAHa,CAIpBC,OAAQ,CACDN,GADC,CAJY,CAQlBO,IAAAA,CAAiB,CACnBJ,QAAS,OADU,CAEnBC,OAAQ,CAAA,CAFW,CAGnBC,MAAO,SAHY,CAInBC,OAAQ,CACDN,GADC,CAJW,CAQrBL,iBAAA,CAAiB,QAAjB;AAA2BO,eAA3B,CACAP,iBAAA,CAAiB,QAAjB,CAA2BO,eAA3B,CACAP,iBAAA,CAAiB,OAAjB,CAA0BY,GAA1B,CAlCgB,CAAjB,CAAD,CAmCGhB,cAnCH,CAHqB,CAdvBiB,MAAOC,CAAAA,cAAP,CAAsBpB,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CqB,MAAO,CAAA,CADoC,CAA7C,CAGArB,QAAQK,CAAAA,OAAR,CAAkBJ,MAElB,KAAIG,QAEJkB,QAA+B,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAIC,CAAAA,UAAX,CAAwBD,GAAxB,CAA8B,CAAElB,QAASkB,GAAX,CAAvC,CAFvB,CAAuBzB,OAAA,CAAQ,2CAAR,CAAvB,CAKdG,OAAOwB,CAAAA,WAAP,CAAqB,SACrBxB,OAAOyB,CAAAA,OAAP,CAAiB,EAdsF;\",\n\"sources\":[\"node_modules/refractor/lang/xml-doc.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$xml_doc\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = xmlDoc;\\n\\nvar _markup = _interopRequireDefault(require(\\\"./markup.js\\\"));\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\n// @ts-nocheck\\nxmlDoc.displayName = 'xml-doc';\\nxmlDoc.aliases = [];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction xmlDoc(Prism) {\\n  Prism.register(_markup.default);\\n\\n  (function (Prism) {\\n    /**\\n     * If the given language is present, it will insert the given doc comment grammar token into it.\\n     *\\n     * @param {string} lang\\n     * @param {any} docComment\\n     */\\n    function insertDocComment(lang, docComment) {\\n      if (Prism.languages[lang]) {\\n        Prism.languages.insertBefore(lang, 'comment', {\\n          'doc-comment': docComment\\n        });\\n      }\\n    }\\n\\n    var tag = Prism.languages.markup.tag;\\n    var slashDocComment = {\\n      pattern: /\\\\/\\\\/\\\\/.*/,\\n      greedy: true,\\n      alias: 'comment',\\n      inside: {\\n        tag: tag\\n      }\\n    };\\n    var tickDocComment = {\\n      pattern: /'''.*/,\\n      greedy: true,\\n      alias: 'comment',\\n      inside: {\\n        tag: tag\\n      }\\n    };\\n    insertDocComment('csharp', slashDocComment);\\n    insertDocComment('fsharp', slashDocComment);\\n    insertDocComment('vbnet', tickDocComment);\\n  })(Prism);\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"xmlDoc\",\"Prism\",\"register\",\"_markup\",\"default\",\"insertDocComment\",\"lang\",\"docComment\",\"languages\",\"insertBefore\",\"tag\",\"markup\",\"slashDocComment\",\"pattern\",\"greedy\",\"alias\",\"inside\",\"tickDocComment\",\"Object\",\"defineProperty\",\"value\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"displayName\",\"aliases\"]\n}\n"]