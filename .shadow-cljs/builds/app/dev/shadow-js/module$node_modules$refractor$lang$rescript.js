["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/rescript.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$rescript=function(global,require,module,exports){function rescript(Prism){Prism.languages.rescript={comment:{pattern:/\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,greedy:!0},char:{pattern:/'(?:[^\\r\\n\\\\]|\\\\(?:.|\\w+))'/,greedy:!0},string:{pattern:/\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,greedy:!0},\"class-name\":/\\b[A-Z]\\w*|@[a-z.]*|#[A-Za-z]\\w*|#\\d/,function:{pattern:/[a-zA-Z]\\w*(?=\\()|(\\.)[a-z]\\w*/,lookbehind:!0},number:/(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]{0,4}/i,\nboolean:/\\b(?:false|true)\\b/,\"attr-value\":/[A-Za-z]\\w*(?==)/,constant:{pattern:/(\\btype\\s+)[a-z]\\w*/,lookbehind:!0},tag:{pattern:/(<)[a-z]\\w*|(?:<\\/)[a-z]\\w*/,lookbehind:!0,inside:{operator:/<|>|\\//}},keyword:/\\b(?:and|as|assert|begin|bool|class|constraint|do|done|downto|else|end|exception|external|float|for|fun|function|if|in|include|inherit|initializer|int|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|string|switch|then|to|try|type|when|while|with)\\b/,operator:/\\.{3}|:[:=]?|\\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:asr|land|lor|lsl|lsr|lxor|mod)\\b/,\npunctuation:/[(){}[\\],;.]/};Prism.languages.insertBefore(\"rescript\",\"string\",{\"template-string\":{pattern:/`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,greedy:!0,inside:{\"template-punctuation\":{pattern:/^`|`$/,alias:\"string\"},interpolation:{pattern:/((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,lookbehind:!0,inside:{\"interpolation-punctuation\":{pattern:/^\\$\\{|\\}$/,alias:\"tag\"},rest:Prism.languages.rescript}},string:/[\\s\\S]+/}}});Prism.languages.res=\nPrism.languages.rescript}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=rescript;rescript.displayName=\"rescript\";rescript.aliases=[\"res\"]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$rescript\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = rescript;\n// @ts-nocheck\nrescript.displayName = 'rescript';\nrescript.aliases = ['res'];\n/** @type {import('../core.js').Syntax} */\n\nfunction rescript(Prism) {\n  Prism.languages.rescript = {\n    comment: {\n      pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n      greedy: true\n    },\n    char: {\n      pattern: /'(?:[^\\r\\n\\\\]|\\\\(?:.|\\w+))'/,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n      greedy: true\n    },\n    'class-name': /\\b[A-Z]\\w*|@[a-z.]*|#[A-Za-z]\\w*|#\\d/,\n    function: {\n      pattern: /[a-zA-Z]\\w*(?=\\()|(\\.)[a-z]\\w*/,\n      lookbehind: true\n    },\n    number: /(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]{0,4}/i,\n    boolean: /\\b(?:false|true)\\b/,\n    'attr-value': /[A-Za-z]\\w*(?==)/,\n    constant: {\n      pattern: /(\\btype\\s+)[a-z]\\w*/,\n      lookbehind: true\n    },\n    tag: {\n      pattern: /(<)[a-z]\\w*|(?:<\\/)[a-z]\\w*/,\n      lookbehind: true,\n      inside: {\n        operator: /<|>|\\//\n      }\n    },\n    keyword: /\\b(?:and|as|assert|begin|bool|class|constraint|do|done|downto|else|end|exception|external|float|for|fun|function|if|in|include|inherit|initializer|int|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|string|switch|then|to|try|type|when|while|with)\\b/,\n    operator: /\\.{3}|:[:=]?|\\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:asr|land|lor|lsl|lsr|lxor|mod)\\b/,\n    punctuation: /[(){}[\\],;.]/\n  };\n  Prism.languages.insertBefore('rescript', 'string', {\n    'template-string': {\n      pattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n      greedy: true,\n      inside: {\n        'template-punctuation': {\n          pattern: /^`|`$/,\n          alias: 'string'\n        },\n        interpolation: {\n          pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n          lookbehind: true,\n          inside: {\n            'interpolation-punctuation': {\n              pattern: /^\\$\\{|\\}$/,\n              alias: 'tag'\n            },\n            rest: Prism.languages.rescript\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  });\n  Prism.languages.res = Prism.languages.rescript;\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["boolean","res","punctuation","string","aliases","constant","operator","displayName","__esModule","rest","rescript","lookbehind","tag","value","char","keyword","number","greedy","function","pattern","inside","alias","comment","interpolation","default"]],"~:compiled-at",1676841365456,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$rescript.js\",\n\"lineCount\":4,\n\"mappings\":\"AAAAA,cAAA,CAAA,2CAAA,CAAgE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAYxGC,QAASA,SAAQ,CAACC,KAAD,CAAQ,CACvBA,KAAMC,CAAAA,SAAUF,CAAAA,QAAhB,CAA2B,CACzBG,QAAS,CACPC,QAAS,+BADF,CAEPC,OAAQ,CAAA,CAFD,CADgB,CAKzBC,KAAM,CACJF,QAAS,6BADL,CAEJC,OAAQ,CAAA,CAFJ,CALmB,CASzBE,OAAQ,CACNH,QAAS,qCADH,CAENC,OAAQ,CAAA,CAFF,CATiB,CAazB,aAAc,sCAbW,CAczBG,SAAU,CACRJ,QAAS,gCADD,CAERK,WAAY,CAAA,CAFJ,CAde,CAkBzBC,OAAQ,mHAlBiB;AAmBzBC,QAAS,oBAnBgB,CAoBzB,aAAc,kBApBW,CAqBzBC,SAAU,CACRR,QAAS,qBADD,CAERK,WAAY,CAAA,CAFJ,CArBe,CAyBzBI,IAAK,CACHT,QAAS,6BADN,CAEHK,WAAY,CAAA,CAFT,CAGHK,OAAQ,CACNC,SAAU,QADJ,CAHL,CAzBoB,CAgCzBC,QAAS,kRAhCgB,CAiCzBD,SAAU,sGAjCe;AAkCzBE,YAAa,cAlCY,CAoC3BhB,MAAMC,CAAAA,SAAUgB,CAAAA,YAAhB,CAA6B,UAA7B,CAAyC,QAAzC,CAAmD,CACjD,kBAAmB,CACjBd,QAAS,0EADQ,CAEjBC,OAAQ,CAAA,CAFS,CAGjBS,OAAQ,CACN,uBAAwB,CACtBV,QAAS,OADa,CAEtBe,MAAO,QAFe,CADlB,CAKNC,cAAe,CACbhB,QAAS,kEADI,CAEbK,WAAY,CAAA,CAFC,CAGbK,OAAQ,CACN,4BAA6B,CAC3BV,QAAS,WADkB,CAE3Be,MAAO,KAFoB,CADvB,CAKNE,KAAMpB,KAAMC,CAAAA,SAAUF,CAAAA,QALhB,CAHK,CALT,CAgBNO,OAAQ,SAhBF,CAHS,CAD8B,CAAnD,CAwBAN,MAAMC,CAAAA,SAAUoB,CAAAA,GAAhB;AAAsBrB,KAAMC,CAAAA,SAAUF,CAAAA,QA7Df,CATzBuB,MAAOC,CAAAA,cAAP,CAAsBzB,OAAtB,CAA+B,YAA/B,CAA6C,CAC3C0B,MAAO,CAAA,CADoC,CAA7C,CAGA1B,QAAQ2B,CAAAA,OAAR,CAAkB1B,QAElBA,SAAS2B,CAAAA,WAAT,CAAuB,UACvB3B,SAAS4B,CAAAA,OAAT,CAAmB,CAAC,KAAD,CATqF;\",\n\"sources\":[\"node_modules/refractor/lang/rescript.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$rescript\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = rescript;\\n// @ts-nocheck\\nrescript.displayName = 'rescript';\\nrescript.aliases = ['res'];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction rescript(Prism) {\\n  Prism.languages.rescript = {\\n    comment: {\\n      pattern: /\\\\/\\\\/.*|\\\\/\\\\*[\\\\s\\\\S]*?(?:\\\\*\\\\/|$)/,\\n      greedy: true\\n    },\\n    char: {\\n      pattern: /'(?:[^\\\\r\\\\n\\\\\\\\]|\\\\\\\\(?:.|\\\\w+))'/,\\n      greedy: true\\n    },\\n    string: {\\n      pattern: /\\\"(?:\\\\\\\\(?:\\\\r\\\\n|[\\\\s\\\\S])|[^\\\\\\\\\\\\r\\\\n\\\"])*\\\"/,\\n      greedy: true\\n    },\\n    'class-name': /\\\\b[A-Z]\\\\w*|@[a-z.]*|#[A-Za-z]\\\\w*|#\\\\d/,\\n    function: {\\n      pattern: /[a-zA-Z]\\\\w*(?=\\\\()|(\\\\.)[a-z]\\\\w*/,\\n      lookbehind: true\\n    },\\n    number: /(?:\\\\b0x(?:[\\\\da-f]+(?:\\\\.[\\\\da-f]*)?|\\\\.[\\\\da-f]+)(?:p[+-]?\\\\d+)?|(?:\\\\b\\\\d+(?:\\\\.\\\\d*)?|\\\\B\\\\.\\\\d+)(?:e[+-]?\\\\d+)?)[ful]{0,4}/i,\\n    boolean: /\\\\b(?:false|true)\\\\b/,\\n    'attr-value': /[A-Za-z]\\\\w*(?==)/,\\n    constant: {\\n      pattern: /(\\\\btype\\\\s+)[a-z]\\\\w*/,\\n      lookbehind: true\\n    },\\n    tag: {\\n      pattern: /(<)[a-z]\\\\w*|(?:<\\\\/)[a-z]\\\\w*/,\\n      lookbehind: true,\\n      inside: {\\n        operator: /<|>|\\\\//\\n      }\\n    },\\n    keyword: /\\\\b(?:and|as|assert|begin|bool|class|constraint|do|done|downto|else|end|exception|external|float|for|fun|function|if|in|include|inherit|initializer|int|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|string|switch|then|to|try|type|when|while|with)\\\\b/,\\n    operator: /\\\\.{3}|:[:=]?|\\\\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\\\-*\\\\/]\\\\.?|\\\\b(?:asr|land|lor|lsl|lsr|lxor|mod)\\\\b/,\\n    punctuation: /[(){}[\\\\],;.]/\\n  };\\n  Prism.languages.insertBefore('rescript', 'string', {\\n    'template-string': {\\n      pattern: /`(?:\\\\\\\\[\\\\s\\\\S]|\\\\$\\\\{(?:[^{}]|\\\\{(?:[^{}]|\\\\{[^}]*\\\\})*\\\\})+\\\\}|(?!\\\\$\\\\{)[^\\\\\\\\`])*`/,\\n      greedy: true,\\n      inside: {\\n        'template-punctuation': {\\n          pattern: /^`|`$/,\\n          alias: 'string'\\n        },\\n        interpolation: {\\n          pattern: /((?:^|[^\\\\\\\\])(?:\\\\\\\\{2})*)\\\\$\\\\{(?:[^{}]|\\\\{(?:[^{}]|\\\\{[^}]*\\\\})*\\\\})+\\\\}/,\\n          lookbehind: true,\\n          inside: {\\n            'interpolation-punctuation': {\\n              pattern: /^\\\\$\\\\{|\\\\}$/,\\n              alias: 'tag'\\n            },\\n            rest: Prism.languages.rescript\\n          }\\n        },\\n        string: /[\\\\s\\\\S]+/\\n      }\\n    }\\n  });\\n  Prism.languages.res = Prism.languages.rescript;\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"rescript\",\"Prism\",\"languages\",\"comment\",\"pattern\",\"greedy\",\"char\",\"string\",\"function\",\"lookbehind\",\"number\",\"boolean\",\"constant\",\"tag\",\"inside\",\"operator\",\"keyword\",\"punctuation\",\"insertBefore\",\"alias\",\"interpolation\",\"rest\",\"res\",\"Object\",\"defineProperty\",\"value\",\"default\",\"displayName\",\"aliases\"]\n}\n"]