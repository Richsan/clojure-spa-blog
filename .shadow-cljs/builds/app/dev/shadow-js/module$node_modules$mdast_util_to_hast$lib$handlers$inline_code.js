["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mdast-util-to-hast/lib/handlers/inline-code.js"],"~:js","shadow$provide.module$node_modules$mdast_util_to_hast$lib$handlers$inline_code=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.inlineCode=function(state,node){var text={type:\"text\",value:node.value.replace(/\\r?\\n|\\r/g,\" \")};state.patch(node,text);text={type:\"element\",tagName:\"code\",properties:{},children:[text]};state.patch(node,text);return state.applyData(node,text)}}","~:source","shadow$provide[\"module$node_modules$mdast_util_to_hast$lib$handlers$inline_code\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.inlineCode = inlineCode;\n\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nfunction inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {\n    type: 'text',\n    value: node.value.replace(/\\r?\\n|\\r/g, ' ')\n  };\n  state.patch(node, text);\n  /** @type {Element} */\n\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  };\n  state.patch(node, result);\n  return state.applyData(node, result);\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["properties","children","inlineCode","__esModule","value","type","tagName"]],"~:compiled-at",1676665867313,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mdast_util_to_hast$lib$handlers$inline_code.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAA,+DAAA,CAAoF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG5HC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,UAAR,CAmBAA,QAAmB,CAACC,KAAD,CAAQC,IAAR,CAAc,CAE/B,IAAMC,KAAO,CACXC,KAAM,MADK,CAEXL,MAAOG,IAAKH,CAAAA,KAAMM,CAAAA,OAAX,CAAmB,WAAnB,CAAgC,GAAhC,CAFI,CAIbJ,MAAMK,CAAAA,KAAN,CAAYJ,IAAZ,CAAkBC,IAAlB,CAGMI,KAAAA,CAAS,CACbH,KAAM,SADO,CAEbI,QAAS,MAFI,CAGbC,WAAY,EAHC,CAIbC,SAAU,CAACP,IAAD,CAJG,CAMfF,MAAMK,CAAAA,KAAN,CAAYJ,IAAZ,CAAkBK,IAAlB,CACA,OAAON,MAAMU,CAAAA,SAAN,CAAgBT,IAAhB,CAAsBK,IAAtB,CAhBwB,CAzB2F;\",\n\"sources\":[\"node_modules/mdast-util-to-hast/lib/handlers/inline-code.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$mdast_util_to_hast$lib$handlers$inline_code\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.inlineCode = inlineCode;\\n\\n/**\\n * @typedef {import('hast').Element} Element\\n * @typedef {import('hast').Text} Text\\n * @typedef {import('mdast').InlineCode} InlineCode\\n * @typedef {import('../state.js').State} State\\n */\\n\\n/**\\n * Turn an mdast `inlineCode` node into hast.\\n *\\n * @param {State} state\\n *   Info passed around.\\n * @param {InlineCode} node\\n *   mdast node.\\n * @returns {Element}\\n *   hast node.\\n */\\nfunction inlineCode(state, node) {\\n  /** @type {Text} */\\n  const text = {\\n    type: 'text',\\n    value: node.value.replace(/\\\\r?\\\\n|\\\\r/g, ' ')\\n  };\\n  state.patch(node, text);\\n  /** @type {Element} */\\n\\n  const result = {\\n    type: 'element',\\n    tagName: 'code',\\n    properties: {},\\n    children: [text]\\n  };\\n  state.patch(node, result);\\n  return state.applyData(node, result);\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"inlineCode\",\"state\",\"node\",\"text\",\"type\",\"replace\",\"patch\",\"result\",\"tagName\",\"properties\",\"children\",\"applyData\"]\n}\n"]