["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/asmatmel.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$asmatmel=function(global,require,module,exports){function asmatmel(Prism){Prism.languages.asmatmel={comment:{pattern:/;.*/,greedy:!0},string:{pattern:/([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,greedy:!0},constant:/\\b(?:PORT[A-Z]|DDR[A-Z]|(?:DD|P)[A-Z](?:\\d|[0-2]\\d|3[01]))\\b/,directive:{pattern:/\\.\\w+(?= )/,alias:\"property\"},\"r-register\":{pattern:/\\br(?:\\d|[12]\\d|3[01])\\b/,alias:\"variable\"},\"op-code\":{pattern:/\\b(?:ADC|ADD|ADIW|AND|ANDI|ASR|BCLR|BLD|BRBC|BRBS|BRCC|BRCS|BREAK|BREQ|BRGE|BRHC|BRHS|BRID|BRIE|BRLO|BRLT|BRMI|BRNE|BRPL|BRSH|BRTC|BRTS|BRVC|BRVS|BSET|BST|CALL|CBI|CBR|CLC|CLH|CLI|CLN|CLR|CLS|CLT|CLV|CLZ|COM|CP|CPC|CPI|CPSE|DEC|DES|EICALL|EIJMP|ELPM|EOR|FMUL|FMULS|FMULSU|ICALL|IJMP|IN|INC|JMP|LAC|LAS|LAT|LD|LD[A-Za-z0-9]|LPM|LSL|LSR|MOV|MOVW|MUL|MULS|MULSU|NEG|NOP|OR|ORI|OUT|POP|PUSH|RCALL|RET|RETI|RJMP|ROL|ROR|SBC|SBCI|SBI|SBIC|SBIS|SBIW|SBR|SBRC|SBRS|SEC|SEH|SEI|SEN|SER|SES|SET|SEV|SEZ|SLEEP|SPM|ST|ST[A-Z0-9]|SUB|SUBI|SWAP|TST|WDR|XCH|adc|add|adiw|and|andi|asr|bclr|bld|brbc|brbs|brcc|brcs|break|breq|brge|brhc|brhs|brid|brie|brlo|brlt|brmi|brne|brpl|brsh|brtc|brts|brvc|brvs|bset|bst|call|cbi|cbr|clc|clh|cli|cln|clr|cls|clt|clv|clz|com|cp|cpc|cpi|cpse|dec|des|eicall|eijmp|elpm|eor|fmul|fmuls|fmulsu|icall|ijmp|in|inc|jmp|lac|las|lat|ld|ld[a-z0-9]|lpm|lsl|lsr|mov|movw|mul|muls|mulsu|neg|nop|or|ori|out|pop|push|rcall|ret|reti|rjmp|rol|ror|sbc|sbci|sbi|sbic|sbis|sbiw|sbr|sbrc|sbrs|sec|seh|sei|sen|ser|ses|set|sev|sez|sleep|spm|st|st[a-zA-Z0-9]|sub|subi|swap|tst|wdr|xch)\\b/,\nalias:\"keyword\"},\"hex-number\":{pattern:/#?\\$[\\da-f]{2,4}\\b/i,alias:\"number\"},\"binary-number\":{pattern:/#?%[01]+\\b/,alias:\"number\"},\"decimal-number\":{pattern:/#?\\b\\d+\\b/,alias:\"number\"},register:{pattern:/\\b[acznvshtixy]\\b/i,alias:\"variable\"},operator:/>>=?|<<=?|&[&=]?|\\|[\\|=]?|[-+*/%^!=<>?]=?/,punctuation:/[(),:]/}}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=asmatmel;asmatmel.displayName=\"asmatmel\";asmatmel.aliases=[]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$asmatmel\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = asmatmel;\n// @ts-nocheck\nasmatmel.displayName = 'asmatmel';\nasmatmel.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nfunction asmatmel(Prism) {\n  Prism.languages.asmatmel = {\n    comment: {\n      pattern: /;.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    constant: /\\b(?:PORT[A-Z]|DDR[A-Z]|(?:DD|P)[A-Z](?:\\d|[0-2]\\d|3[01]))\\b/,\n    directive: {\n      pattern: /\\.\\w+(?= )/,\n      alias: 'property'\n    },\n    'r-register': {\n      pattern: /\\br(?:\\d|[12]\\d|3[01])\\b/,\n      alias: 'variable'\n    },\n    'op-code': {\n      pattern: /\\b(?:ADC|ADD|ADIW|AND|ANDI|ASR|BCLR|BLD|BRBC|BRBS|BRCC|BRCS|BREAK|BREQ|BRGE|BRHC|BRHS|BRID|BRIE|BRLO|BRLT|BRMI|BRNE|BRPL|BRSH|BRTC|BRTS|BRVC|BRVS|BSET|BST|CALL|CBI|CBR|CLC|CLH|CLI|CLN|CLR|CLS|CLT|CLV|CLZ|COM|CP|CPC|CPI|CPSE|DEC|DES|EICALL|EIJMP|ELPM|EOR|FMUL|FMULS|FMULSU|ICALL|IJMP|IN|INC|JMP|LAC|LAS|LAT|LD|LD[A-Za-z0-9]|LPM|LSL|LSR|MOV|MOVW|MUL|MULS|MULSU|NEG|NOP|OR|ORI|OUT|POP|PUSH|RCALL|RET|RETI|RJMP|ROL|ROR|SBC|SBCI|SBI|SBIC|SBIS|SBIW|SBR|SBRC|SBRS|SEC|SEH|SEI|SEN|SER|SES|SET|SEV|SEZ|SLEEP|SPM|ST|ST[A-Z0-9]|SUB|SUBI|SWAP|TST|WDR|XCH|adc|add|adiw|and|andi|asr|bclr|bld|brbc|brbs|brcc|brcs|break|breq|brge|brhc|brhs|brid|brie|brlo|brlt|brmi|brne|brpl|brsh|brtc|brts|brvc|brvs|bset|bst|call|cbi|cbr|clc|clh|cli|cln|clr|cls|clt|clv|clz|com|cp|cpc|cpi|cpse|dec|des|eicall|eijmp|elpm|eor|fmul|fmuls|fmulsu|icall|ijmp|in|inc|jmp|lac|las|lat|ld|ld[a-z0-9]|lpm|lsl|lsr|mov|movw|mul|muls|mulsu|neg|nop|or|ori|out|pop|push|rcall|ret|reti|rjmp|rol|ror|sbc|sbci|sbi|sbic|sbis|sbiw|sbr|sbrc|sbrs|sec|seh|sei|sen|ser|ses|set|sev|sez|sleep|spm|st|st[a-zA-Z0-9]|sub|subi|swap|tst|wdr|xch)\\b/,\n      alias: 'keyword'\n    },\n    'hex-number': {\n      pattern: /#?\\$[\\da-f]{2,4}\\b/i,\n      alias: 'number'\n    },\n    'binary-number': {\n      pattern: /#?%[01]+\\b/,\n      alias: 'number'\n    },\n    'decimal-number': {\n      pattern: /#?\\b\\d+\\b/,\n      alias: 'number'\n    },\n    register: {\n      pattern: /\\b[acznvshtixy]\\b/i,\n      alias: 'variable'\n    },\n    operator: />>=?|<<=?|&[&=]?|\\|[\\|=]?|[-+*/%^!=<>?]=?/,\n    punctuation: /[(),:]/\n  };\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["punctuation","string","aliases","constant","directive","operator","displayName","__esModule","value","greedy","register","pattern","alias","comment","default","asmatmel"]],"~:compiled-at",1676841365392,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$asmatmel.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,2CAAA,CAAgE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAYxGC,QAASA,SAAQ,CAACC,KAAD,CAAQ,CACvBA,KAAMC,CAAAA,SAAUF,CAAAA,QAAhB,CAA2B,CACzBG,QAAS,CACPC,QAAS,KADF,CAEPC,OAAQ,CAAA,CAFD,CADgB,CAKzBC,OAAQ,CACNF,QAAS,mCADH,CAENC,OAAQ,CAAA,CAFF,CALiB,CASzBE,SAAU,8DATe,CAUzBC,UAAW,CACTJ,QAAS,YADA,CAETK,MAAO,UAFE,CAVc,CAczB,aAAc,CACZL,QAAS,0BADG,CAEZK,MAAO,UAFK,CAdW,CAkBzB,UAAW,CACTL,QAAS,6jCADA;AAETK,MAAO,SAFE,CAlBc,CAsBzB,aAAc,CACZL,QAAS,qBADG,CAEZK,MAAO,QAFK,CAtBW,CA0BzB,gBAAiB,CACfL,QAAS,YADM,CAEfK,MAAO,QAFQ,CA1BQ,CA8BzB,iBAAkB,CAChBL,QAAS,WADO,CAEhBK,MAAO,QAFS,CA9BO,CAkCzBC,SAAU,CACRN,QAAS,oBADD,CAERK,MAAO,UAFC,CAlCe,CAsCzBE,SAAU,2CAtCe,CAuCzBC,YAAa,QAvCY,CADJ,CATzBC,MAAOC,CAAAA,cAAP,CAAsBf,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CgB,MAAO,CAAA,CADoC,CAA7C,CAGAhB,QAAQiB,CAAAA,OAAR,CAAkBhB,QAElBA,SAASiB,CAAAA,WAAT,CAAuB,UACvBjB,SAASkB,CAAAA,OAAT,CAAmB,EATqF;\",\n\"sources\":[\"node_modules/refractor/lang/asmatmel.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$asmatmel\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = asmatmel;\\n// @ts-nocheck\\nasmatmel.displayName = 'asmatmel';\\nasmatmel.aliases = [];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction asmatmel(Prism) {\\n  Prism.languages.asmatmel = {\\n    comment: {\\n      pattern: /;.*/,\\n      greedy: true\\n    },\\n    string: {\\n      pattern: /([\\\"'`])(?:\\\\\\\\.|(?!\\\\1)[^\\\\\\\\\\\\r\\\\n])*\\\\1/,\\n      greedy: true\\n    },\\n    constant: /\\\\b(?:PORT[A-Z]|DDR[A-Z]|(?:DD|P)[A-Z](?:\\\\d|[0-2]\\\\d|3[01]))\\\\b/,\\n    directive: {\\n      pattern: /\\\\.\\\\w+(?= )/,\\n      alias: 'property'\\n    },\\n    'r-register': {\\n      pattern: /\\\\br(?:\\\\d|[12]\\\\d|3[01])\\\\b/,\\n      alias: 'variable'\\n    },\\n    'op-code': {\\n      pattern: /\\\\b(?:ADC|ADD|ADIW|AND|ANDI|ASR|BCLR|BLD|BRBC|BRBS|BRCC|BRCS|BREAK|BREQ|BRGE|BRHC|BRHS|BRID|BRIE|BRLO|BRLT|BRMI|BRNE|BRPL|BRSH|BRTC|BRTS|BRVC|BRVS|BSET|BST|CALL|CBI|CBR|CLC|CLH|CLI|CLN|CLR|CLS|CLT|CLV|CLZ|COM|CP|CPC|CPI|CPSE|DEC|DES|EICALL|EIJMP|ELPM|EOR|FMUL|FMULS|FMULSU|ICALL|IJMP|IN|INC|JMP|LAC|LAS|LAT|LD|LD[A-Za-z0-9]|LPM|LSL|LSR|MOV|MOVW|MUL|MULS|MULSU|NEG|NOP|OR|ORI|OUT|POP|PUSH|RCALL|RET|RETI|RJMP|ROL|ROR|SBC|SBCI|SBI|SBIC|SBIS|SBIW|SBR|SBRC|SBRS|SEC|SEH|SEI|SEN|SER|SES|SET|SEV|SEZ|SLEEP|SPM|ST|ST[A-Z0-9]|SUB|SUBI|SWAP|TST|WDR|XCH|adc|add|adiw|and|andi|asr|bclr|bld|brbc|brbs|brcc|brcs|break|breq|brge|brhc|brhs|brid|brie|brlo|brlt|brmi|brne|brpl|brsh|brtc|brts|brvc|brvs|bset|bst|call|cbi|cbr|clc|clh|cli|cln|clr|cls|clt|clv|clz|com|cp|cpc|cpi|cpse|dec|des|eicall|eijmp|elpm|eor|fmul|fmuls|fmulsu|icall|ijmp|in|inc|jmp|lac|las|lat|ld|ld[a-z0-9]|lpm|lsl|lsr|mov|movw|mul|muls|mulsu|neg|nop|or|ori|out|pop|push|rcall|ret|reti|rjmp|rol|ror|sbc|sbci|sbi|sbic|sbis|sbiw|sbr|sbrc|sbrs|sec|seh|sei|sen|ser|ses|set|sev|sez|sleep|spm|st|st[a-zA-Z0-9]|sub|subi|swap|tst|wdr|xch)\\\\b/,\\n      alias: 'keyword'\\n    },\\n    'hex-number': {\\n      pattern: /#?\\\\$[\\\\da-f]{2,4}\\\\b/i,\\n      alias: 'number'\\n    },\\n    'binary-number': {\\n      pattern: /#?%[01]+\\\\b/,\\n      alias: 'number'\\n    },\\n    'decimal-number': {\\n      pattern: /#?\\\\b\\\\d+\\\\b/,\\n      alias: 'number'\\n    },\\n    register: {\\n      pattern: /\\\\b[acznvshtixy]\\\\b/i,\\n      alias: 'variable'\\n    },\\n    operator: />>=?|<<=?|&[&=]?|\\\\|[\\\\|=]?|[-+*/%^!=<>?]=?/,\\n    punctuation: /[(),:]/\\n  };\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"asmatmel\",\"Prism\",\"languages\",\"comment\",\"pattern\",\"greedy\",\"string\",\"constant\",\"directive\",\"alias\",\"register\",\"operator\",\"punctuation\",\"Object\",\"defineProperty\",\"value\",\"default\",\"displayName\",\"aliases\"]\n}\n"]