["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mdast-util-gfm-strikethrough/lib/index.js"],"~:js","shadow$provide.module$node_modules$mdast_util_gfm_strikethrough$lib$index=function(global,require,module,exports){function handleDelete(node,_,context,safeOptions){_=(0,_track.track)(safeOptions);safeOptions=context.enter(\"strikethrough\");let value=_.move(\"~~\");value+=(0,_containerPhrasing.containerPhrasing)(node,context,{..._.current(),before:value,after:\"~\"});value+=_.move(\"~~\");safeOptions();return value}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.gfmStrikethroughToMarkdown=\nexports.gfmStrikethroughFromMarkdown=void 0;var _containerPhrasing=require(\"module$node_modules$mdast_util_to_markdown$lib$util$container_phrasing\"),_track=require(\"module$node_modules$mdast_util_to_markdown$lib$util$track\");handleDelete.peek=function(){return\"~\"};exports.gfmStrikethroughFromMarkdown={canContainEols:[\"delete\"],enter:{strikethrough:function(token){this.enter({type:\"delete\",children:[]},token)}},exit:{strikethrough:function(token){this.exit(token)}}};exports.gfmStrikethroughToMarkdown=\n{unsafe:[{character:\"~\",inConstruct:\"phrasing\",notInConstruct:\"autolink destinationLiteral destinationRaw reference titleQuote titleApostrophe\".split(\" \")}],handlers:{delete:handleDelete}}}","~:source","shadow$provide[\"module$node_modules$mdast_util_gfm_strikethrough$lib$index\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.gfmStrikethroughToMarkdown = exports.gfmStrikethroughFromMarkdown = void 0;\n\nvar _containerPhrasing = require(\"mdast-util-to-markdown/lib/util/container-phrasing.js\");\n\nvar _track = require(\"mdast-util-to-markdown/lib/util/track.js\");\n\n/**\n * @typedef {import('mdast').Delete} Delete\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n// To do: next major: expose functions.\n// To do: next major: use `state`, state utilities.\n\n/**\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\n * contain strikethrough.\n * So they sort of cancel each other out.\n * Note: could use a better name.\n *\n * Note: keep in sync with: <https://github.com/syntax-tree/mdast-util-to-markdown/blob/8ce8dbf/lib/unsafe.js#L14>\n *\n * @type {Array<ConstructName>}\n */\nconst constructsWithoutStrikethrough = ['autolink', 'destinationLiteral', 'destinationRaw', 'reference', 'titleQuote', 'titleApostrophe'];\nhandleDelete.peek = peekDelete;\n/**\n * Extension for `mdast-util-from-markdown` to enable GFM strikethrough.\n *\n * @type {FromMarkdownExtension}\n */\n\nconst gfmStrikethroughFromMarkdown = {\n  canContainEols: ['delete'],\n  enter: {\n    strikethrough: enterStrikethrough\n  },\n  exit: {\n    strikethrough: exitStrikethrough\n  }\n};\n/**\n * Extension for `mdast-util-to-markdown` to enable GFM strikethrough.\n *\n * @type {ToMarkdownExtension}\n */\n\nexports.gfmStrikethroughFromMarkdown = gfmStrikethroughFromMarkdown;\nconst gfmStrikethroughToMarkdown = {\n  unsafe: [{\n    character: '~',\n    inConstruct: 'phrasing',\n    notInConstruct: constructsWithoutStrikethrough\n  }],\n  handlers: {\n    delete: handleDelete\n  }\n};\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\n\nexports.gfmStrikethroughToMarkdown = gfmStrikethroughToMarkdown;\n\nfunction enterStrikethrough(token) {\n  this.enter({\n    type: 'delete',\n    children: []\n  }, token);\n}\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\n\n\nfunction exitStrikethrough(token) {\n  this.exit(token);\n}\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\n\n\nfunction handleDelete(node, _, context, safeOptions) {\n  const tracker = (0, _track.track)(safeOptions);\n  const exit = context.enter('strikethrough');\n  let value = tracker.move('~~');\n  value += (0, _containerPhrasing.containerPhrasing)(node, context, { ...tracker.current(),\n    before: value,\n    after: '~'\n  });\n  value += tracker.move('~~');\n  exit();\n  return value;\n}\n/** @type {ToMarkdownHandle} */\n\n\nfunction peekDelete() {\n  return '~';\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$mdast_util_to_markdown$lib$util$track","~$module$node_modules$mdast_util_to_markdown$lib$util$container_phrasing","~$shadow.js"]],"~:properties",["^5",["canContainEols","peek","after","delete","handlers","strikethrough","children","__esModule","gfmStrikethroughFromMarkdown","unsafe","notInConstruct","value","character","inConstruct","type","gfmStrikethroughToMarkdown","exit","before","enter"]],"~:compiled-at",1676841365339,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mdast_util_gfm_strikethrough$lib$index.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,CAAA,0DAAA,CAA+E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAkGvHC,QAASA,aAAY,CAACC,IAAD,CAAOC,CAAP,CAAUC,OAAV,CAAmBC,WAAnB,CAAgC,CAC7CC,CAAAA,CAAU,GAAIC,MAAOC,CAAAA,KAAX,EAAkBH,WAAlB,CACVI,YAAAA,CAAOL,OAAQM,CAAAA,KAAR,CAAc,eAAd,CACb,KAAIC,MAAQL,CAAQM,CAAAA,IAAR,CAAa,IAAb,CACZD,MAAA,EAAS,GAAIE,kBAAmBC,CAAAA,iBAAvB,EAA0CZ,IAA1C,CAAgDE,OAAhD,CAAyD,CAAE,GAAGE,CAAQS,CAAAA,OAAR,EAAL,CAChEC,OAAQL,KADwD,CAEhEM,MAAO,GAFyD,CAAzD,CAITN,MAAA,EAASL,CAAQM,CAAAA,IAAR,CAAa,IAAb,CACTH,YAAA,EACA,OAAOE,MAV4C,CA/FrDO,MAAOC,CAAAA,cAAP,CAAsBnB,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CW,MAAO,CAAA,CADoC,CAA7C,CAGAX,QAAQoB,CAAAA,0BAAR;AAAqCpB,OAAQqB,CAAAA,4BAA7C,CAA4E,IAAK,EAEjF,KAAIR,mBAAqBf,OAAA,CAAQ,wEAAR,CAAzB,CAEIS,OAAST,OAAA,CAAQ,2DAAR,CA2BbG,aAAaqB,CAAAA,IAAb,CA4EAC,QAAmB,EAAG,CACpB,MAAO,GADa,CAtDtBvB,QAAQqB,CAAAA,4BAAR,CAfqCA,CACnCG,eAAgB,CAAC,QAAD,CADmBH,CAEnCX,MAAO,CACLe,cA8BJC,QAA2B,CAACC,KAAD,CAAQ,CACjC,IAAKjB,CAAAA,KAAL,CAAW,CACTkB,KAAM,QADG,CAETC,SAAU,EAFD,CAAX,CAGGF,KAHH,CADiC,CA/B1B,CAF4BN,CAKnCZ,KAAM,CACJgB,cAuCJK,QAA0B,CAACH,KAAD,CAAQ,CAChC,IAAKlB,CAAAA,IAAL,CAAUkB,KAAV,CADgC,CAxC1B,CAL6BN,CA+BrCrB,QAAQoB,CAAAA,0BAAR;AAfmCA,CACjCW,OAAQ,CAAC,CACPC,UAAW,GADJ,CAEPC,YAAa,UAFN,CAGPC,eA5BmCC,iFAAAA,CAAAA,KAAAA,CAAAA,GAAAA,CAyB5B,CAAD,CADyBf,CAMjCgB,SAAU,CACRC,OAAQpC,YADA,CANuBmB,CA5DoF;\",\n\"sources\":[\"node_modules/mdast-util-gfm-strikethrough/lib/index.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$mdast_util_gfm_strikethrough$lib$index\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.gfmStrikethroughToMarkdown = exports.gfmStrikethroughFromMarkdown = void 0;\\n\\nvar _containerPhrasing = require(\\\"mdast-util-to-markdown/lib/util/container-phrasing.js\\\");\\n\\nvar _track = require(\\\"mdast-util-to-markdown/lib/util/track.js\\\");\\n\\n/**\\n * @typedef {import('mdast').Delete} Delete\\n *\\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\\n *\\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\\n */\\n// To do: next major: expose functions.\\n// To do: next major: use `state`, state utilities.\\n\\n/**\\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\\n * contain strikethrough.\\n * So they sort of cancel each other out.\\n * Note: could use a better name.\\n *\\n * Note: keep in sync with: <https://github.com/syntax-tree/mdast-util-to-markdown/blob/8ce8dbf/lib/unsafe.js#L14>\\n *\\n * @type {Array<ConstructName>}\\n */\\nconst constructsWithoutStrikethrough = ['autolink', 'destinationLiteral', 'destinationRaw', 'reference', 'titleQuote', 'titleApostrophe'];\\nhandleDelete.peek = peekDelete;\\n/**\\n * Extension for `mdast-util-from-markdown` to enable GFM strikethrough.\\n *\\n * @type {FromMarkdownExtension}\\n */\\n\\nconst gfmStrikethroughFromMarkdown = {\\n  canContainEols: ['delete'],\\n  enter: {\\n    strikethrough: enterStrikethrough\\n  },\\n  exit: {\\n    strikethrough: exitStrikethrough\\n  }\\n};\\n/**\\n * Extension for `mdast-util-to-markdown` to enable GFM strikethrough.\\n *\\n * @type {ToMarkdownExtension}\\n */\\n\\nexports.gfmStrikethroughFromMarkdown = gfmStrikethroughFromMarkdown;\\nconst gfmStrikethroughToMarkdown = {\\n  unsafe: [{\\n    character: '~',\\n    inConstruct: 'phrasing',\\n    notInConstruct: constructsWithoutStrikethrough\\n  }],\\n  handlers: {\\n    delete: handleDelete\\n  }\\n};\\n/**\\n * @this {CompileContext}\\n * @type {FromMarkdownHandle}\\n */\\n\\nexports.gfmStrikethroughToMarkdown = gfmStrikethroughToMarkdown;\\n\\nfunction enterStrikethrough(token) {\\n  this.enter({\\n    type: 'delete',\\n    children: []\\n  }, token);\\n}\\n/**\\n * @this {CompileContext}\\n * @type {FromMarkdownHandle}\\n */\\n\\n\\nfunction exitStrikethrough(token) {\\n  this.exit(token);\\n}\\n/**\\n * @type {ToMarkdownHandle}\\n * @param {Delete} node\\n */\\n\\n\\nfunction handleDelete(node, _, context, safeOptions) {\\n  const tracker = (0, _track.track)(safeOptions);\\n  const exit = context.enter('strikethrough');\\n  let value = tracker.move('~~');\\n  value += (0, _containerPhrasing.containerPhrasing)(node, context, { ...tracker.current(),\\n    before: value,\\n    after: '~'\\n  });\\n  value += tracker.move('~~');\\n  exit();\\n  return value;\\n}\\n/** @type {ToMarkdownHandle} */\\n\\n\\nfunction peekDelete() {\\n  return '~';\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"handleDelete\",\"node\",\"_\",\"context\",\"safeOptions\",\"tracker\",\"_track\",\"track\",\"exit\",\"enter\",\"value\",\"move\",\"_containerPhrasing\",\"containerPhrasing\",\"current\",\"before\",\"after\",\"Object\",\"defineProperty\",\"gfmStrikethroughToMarkdown\",\"gfmStrikethroughFromMarkdown\",\"peek\",\"peekDelete\",\"canContainEols\",\"strikethrough\",\"enterStrikethrough\",\"token\",\"type\",\"children\",\"exitStrikethrough\",\"unsafe\",\"character\",\"inConstruct\",\"notInConstruct\",\"constructsWithoutStrikethrough\",\"handlers\",\"delete\"]\n}\n"]