["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/hast-util-to-html/lib/omission/omission.js"],"~:js","shadow$provide.module$node_modules$hast_util_to_html$lib$omission$omission=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.omission=function(handlers){return function(node,index,parent){return own.call(handlers,node.tagName)&&handlers[node.tagName](node,index,parent)}};const own={}.hasOwnProperty}","~:source","shadow$provide[\"module$node_modules$hast_util_to_html$lib$omission$omission\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.omission = omission;\n\n/**\n * @typedef {import('../types.js').OmitHandle} OmitHandle\n */\nconst own = {}.hasOwnProperty;\n/**\n * Factory to check if a given node can have a tag omitted.\n *\n * @param {Record<string, OmitHandle>} handlers\n *   Omission handlers, where each key is a tag name, and each value is the\n *   corresponding handler.\n * @returns {OmitHandle}\n *   Whether to omit a tag of an element.\n */\n\nfunction omission(handlers) {\n  return omit;\n  /**\n   * Check if a given node can have a tag omitted.\n   *\n   * @type {OmitHandle}\n   */\n\n  function omit(node, index, parent) {\n    return own.call(handlers, node.tagName) && handlers[node.tagName](node, index, parent);\n  }\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["__esModule","value","omission"]],"~:compiled-at",1676686799600,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$hast_util_to_html$lib$omission$omission.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAA,2DAAA,CAAgF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGxHC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,QAAR,CAgBAA,QAAiB,CAACC,QAAD,CAAW,CAC1B,MAOAC,SAAa,CAACC,IAAD,CAAOC,KAAP,CAAcC,MAAd,CAAsB,CACjC,MAAOC,IAAIC,CAAAA,IAAJ,CAASN,QAAT,CAAmBE,IAAKK,CAAAA,OAAxB,CAAP,EAA2CP,QAAA,CAASE,IAAKK,CAAAA,OAAd,CAAA,CAAuBL,IAAvB,CAA6BC,KAA7B,CAAoCC,MAApC,CADV,CART,CAX5B,OAAMC,IAAM,EAAGG,CAAAA,cAXyG;\",\n\"sources\":[\"node_modules/hast-util-to-html/lib/omission/omission.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$hast_util_to_html$lib$omission$omission\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.omission = omission;\\n\\n/**\\n * @typedef {import('../types.js').OmitHandle} OmitHandle\\n */\\nconst own = {}.hasOwnProperty;\\n/**\\n * Factory to check if a given node can have a tag omitted.\\n *\\n * @param {Record<string, OmitHandle>} handlers\\n *   Omission handlers, where each key is a tag name, and each value is the\\n *   corresponding handler.\\n * @returns {OmitHandle}\\n *   Whether to omit a tag of an element.\\n */\\n\\nfunction omission(handlers) {\\n  return omit;\\n  /**\\n   * Check if a given node can have a tag omitted.\\n   *\\n   * @type {OmitHandle}\\n   */\\n\\n  function omit(node, index, parent) {\\n    return own.call(handlers, node.tagName) && handlers[node.tagName](node, index, parent);\\n  }\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"omission\",\"handlers\",\"omit\",\"node\",\"index\",\"parent\",\"own\",\"call\",\"tagName\",\"hasOwnProperty\"]\n}\n"]