["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/highlight_DOT_js/lib/languages/kotlin.js"],"~:js","shadow$provide.module$node_modules$highlight_DOT_js$lib$languages$kotlin=function(global,require,module,exports){var NUMERIC={className:\"number\",variants:[{begin:\"(\\\\b([0-9](_*[0-9])*)((\\\\.([0-9](_*[0-9])*))|\\\\.)?|(\\\\.([0-9](_*[0-9])*)))[eE][+-]?([0-9](_*[0-9])*)[fFdD]?\\\\b\"},{begin:\"\\\\b([0-9](_*[0-9])*)((\\\\.([0-9](_*[0-9])*))[fFdD]?\\\\b|\\\\.([fFdD]\\\\b)?)\"},{begin:\"(\\\\.([0-9](_*[0-9])*))[fFdD]?\\\\b\"},{begin:\"\\\\b([0-9](_*[0-9])*)[fFdD]\\\\b\"},{begin:\"\\\\b0[xX](([0-9a-fA-F](_*[0-9a-fA-F])*)\\\\.?|([0-9a-fA-F](_*[0-9a-fA-F])*)?\\\\.([0-9a-fA-F](_*[0-9a-fA-F])*))[pP][+-]?([0-9](_*[0-9])*)[fFdD]?\\\\b\"},\n{begin:\"\\\\b(0|[1-9](_*[0-9])*)[lL]?\\\\b\"},{begin:\"\\\\b0[xX]([0-9a-fA-F](_*[0-9a-fA-F])*)[lL]?\\\\b\"},{begin:\"\\\\b0(_*[0-7])*[lL]?\\\\b\"},{begin:\"\\\\b0[bB][01](_*[01])*[lL]?\\\\b\"}],relevance:0};module.exports=function(hljs){const KEYWORDS={keyword:\"abstract as val var vararg get set class object open private protected public noinline crossinline dynamic final enum if else do while for when throw try catch finally import package is in fun override companion reified inline lateinit init interface annotation data sealed internal infix operator out by constructor super tailrec where const inner suspend typealias external expect actual\",\nbuilt_in:\"Byte Short Char Int Long Boolean Float Double Void Unit Nothing\",literal:\"true false null\"},LABEL={className:\"symbol\",begin:hljs.UNDERSCORE_IDENT_RE+\"@\"};var SUBST={className:\"subst\",begin:/\\$\\{/,end:/\\}/,contains:[hljs.C_NUMBER_MODE]},VARIABLE={className:\"variable\",begin:\"\\\\$\"+hljs.UNDERSCORE_IDENT_RE};VARIABLE={className:\"string\",variants:[{begin:'\"\"\"',end:'\"\"\"(?\\x3d[^\"])',contains:[VARIABLE,SUBST]},{begin:\"'\",end:\"'\",illegal:/\\n/,contains:[hljs.BACKSLASH_ESCAPE]},{begin:'\"',end:'\"',illegal:/\\n/,\ncontains:[hljs.BACKSLASH_ESCAPE,VARIABLE,SUBST]}]};SUBST.contains.push(VARIABLE);SUBST={className:\"meta\",begin:\"@(?:file|property|field|get|set|receiver|param|setparam|delegate)\\\\s*:(?:\\\\s*\"+hljs.UNDERSCORE_IDENT_RE+\")?\"};const ANNOTATION={className:\"meta\",begin:\"@\"+hljs.UNDERSCORE_IDENT_RE,contains:[{begin:/\\(/,end:/\\)/,contains:[hljs.inherit(VARIABLE,{className:\"string\"}),\"self\"]}]},KOTLIN_NESTED_COMMENT=hljs.COMMENT(\"/\\\\*\",\"\\\\*/\",{contains:[hljs.C_BLOCK_COMMENT_MODE]}),KOTLIN_PAREN_TYPE={variants:[{className:\"type\",\nbegin:hljs.UNDERSCORE_IDENT_RE},{begin:/\\(/,end:/\\)/,contains:[]}]};KOTLIN_PAREN_TYPE.variants[1].contains=[KOTLIN_PAREN_TYPE];KOTLIN_PAREN_TYPE.variants[1].contains=[KOTLIN_PAREN_TYPE];return{name:\"Kotlin\",aliases:[\"kt\",\"kts\"],keywords:KEYWORDS,contains:[hljs.COMMENT(\"/\\\\*\\\\*\",\"\\\\*/\",{relevance:0,contains:[{className:\"doctag\",begin:\"@[A-Za-z]+\"}]}),hljs.C_LINE_COMMENT_MODE,KOTLIN_NESTED_COMMENT,{className:\"keyword\",begin:/\\b(break|continue|return|this)\\b/,starts:{contains:[{className:\"symbol\",begin:/@\\w+/}]}},\nLABEL,SUBST,ANNOTATION,{className:\"function\",beginKeywords:\"fun\",end:\"[(]|$\",returnBegin:!0,excludeEnd:!0,keywords:KEYWORDS,relevance:5,contains:[{begin:hljs.UNDERSCORE_IDENT_RE+\"\\\\s*\\\\(\",returnBegin:!0,relevance:0,contains:[hljs.UNDERSCORE_TITLE_MODE]},{className:\"type\",begin:/</,end:/>/,keywords:\"reified\",relevance:0},{className:\"params\",begin:/\\(/,end:/\\)/,endsParent:!0,keywords:KEYWORDS,relevance:0,contains:[{begin:/:/,end:/[=,\\/]/,endsWithParent:!0,contains:[KOTLIN_PAREN_TYPE,hljs.C_LINE_COMMENT_MODE,\nKOTLIN_NESTED_COMMENT],relevance:0},hljs.C_LINE_COMMENT_MODE,KOTLIN_NESTED_COMMENT,SUBST,ANNOTATION,VARIABLE,hljs.C_NUMBER_MODE]},KOTLIN_NESTED_COMMENT]},{begin:[/class|interface|trait/,/\\s+/,hljs.UNDERSCORE_IDENT_RE],beginScope:{3:\"title.class\"},keywords:\"class interface trait\",end:/[:\\{(]|$/,excludeEnd:!0,illegal:\"extends implements\",contains:[{beginKeywords:\"public protected internal private constructor\"},hljs.UNDERSCORE_TITLE_MODE,{className:\"type\",begin:/</,end:/>/,excludeBegin:!0,excludeEnd:!0,\nrelevance:0},{className:\"type\",begin:/[,:]\\s*/,end:/[<\\(,){\\s]|$/,excludeBegin:!0,returnEnd:!0},SUBST,ANNOTATION]},VARIABLE,{className:\"meta\",begin:\"^#!/usr/bin/env\",end:\"$\",illegal:\"\\n\"},NUMERIC]}}}","~:source","shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$kotlin\"] = function(global,require,module,exports) {\n// https://docs.oracle.com/javase/specs/jls/se15/html/jls-3.html#jls-3.10\nvar decimalDigits = '[0-9](_*[0-9])*';\nvar frac = `\\\\.(${decimalDigits})`;\nvar hexDigits = '[0-9a-fA-F](_*[0-9a-fA-F])*';\nvar NUMERIC = {\n  className: 'number',\n  variants: [\n    // DecimalFloatingPointLiteral\n    // including ExponentPart\n    { begin: `(\\\\b(${decimalDigits})((${frac})|\\\\.)?|(${frac}))` +\n      `[eE][+-]?(${decimalDigits})[fFdD]?\\\\b` },\n    // excluding ExponentPart\n    { begin: `\\\\b(${decimalDigits})((${frac})[fFdD]?\\\\b|\\\\.([fFdD]\\\\b)?)` },\n    { begin: `(${frac})[fFdD]?\\\\b` },\n    { begin: `\\\\b(${decimalDigits})[fFdD]\\\\b` },\n\n    // HexadecimalFloatingPointLiteral\n    { begin: `\\\\b0[xX]((${hexDigits})\\\\.?|(${hexDigits})?\\\\.(${hexDigits}))` +\n      `[pP][+-]?(${decimalDigits})[fFdD]?\\\\b` },\n\n    // DecimalIntegerLiteral\n    { begin: '\\\\b(0|[1-9](_*[0-9])*)[lL]?\\\\b' },\n\n    // HexIntegerLiteral\n    { begin: `\\\\b0[xX](${hexDigits})[lL]?\\\\b` },\n\n    // OctalIntegerLiteral\n    { begin: '\\\\b0(_*[0-7])*[lL]?\\\\b' },\n\n    // BinaryIntegerLiteral\n    { begin: '\\\\b0[bB][01](_*[01])*[lL]?\\\\b' },\n  ],\n  relevance: 0\n};\n\n/*\n Language: Kotlin\n Description: Kotlin is an OSS statically typed programming language that targets the JVM, Android, JavaScript and Native.\n Author: Sergey Mashkov <cy6erGn0m@gmail.com>\n Website: https://kotlinlang.org\n Category: common\n */\n\nfunction kotlin(hljs) {\n  const KEYWORDS = {\n    keyword:\n      'abstract as val var vararg get set class object open private protected public noinline '\n      + 'crossinline dynamic final enum if else do while for when throw try catch finally '\n      + 'import package is in fun override companion reified inline lateinit init '\n      + 'interface annotation data sealed internal infix operator out by constructor super '\n      + 'tailrec where const inner suspend typealias external expect actual',\n    built_in:\n      'Byte Short Char Int Long Boolean Float Double Void Unit Nothing',\n    literal:\n      'true false null'\n  };\n  const KEYWORDS_WITH_LABEL = {\n    className: 'keyword',\n    begin: /\\b(break|continue|return|this)\\b/,\n    starts: { contains: [\n      {\n        className: 'symbol',\n        begin: /@\\w+/\n      }\n    ] }\n  };\n  const LABEL = {\n    className: 'symbol',\n    begin: hljs.UNDERSCORE_IDENT_RE + '@'\n  };\n\n  // for string templates\n  const SUBST = {\n    className: 'subst',\n    begin: /\\$\\{/,\n    end: /\\}/,\n    contains: [ hljs.C_NUMBER_MODE ]\n  };\n  const VARIABLE = {\n    className: 'variable',\n    begin: '\\\\$' + hljs.UNDERSCORE_IDENT_RE\n  };\n  const STRING = {\n    className: 'string',\n    variants: [\n      {\n        begin: '\"\"\"',\n        end: '\"\"\"(?=[^\"])',\n        contains: [\n          VARIABLE,\n          SUBST\n        ]\n      },\n      // Can't use built-in modes easily, as we want to use STRING in the meta\n      // context as 'meta-string' and there's no syntax to remove explicitly set\n      // classNames in built-in modes.\n      {\n        begin: '\\'',\n        end: '\\'',\n        illegal: /\\n/,\n        contains: [ hljs.BACKSLASH_ESCAPE ]\n      },\n      {\n        begin: '\"',\n        end: '\"',\n        illegal: /\\n/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          VARIABLE,\n          SUBST\n        ]\n      }\n    ]\n  };\n  SUBST.contains.push(STRING);\n\n  const ANNOTATION_USE_SITE = {\n    className: 'meta',\n    begin: '@(?:file|property|field|get|set|receiver|param|setparam|delegate)\\\\s*:(?:\\\\s*' + hljs.UNDERSCORE_IDENT_RE + ')?'\n  };\n  const ANNOTATION = {\n    className: 'meta',\n    begin: '@' + hljs.UNDERSCORE_IDENT_RE,\n    contains: [\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        contains: [\n          hljs.inherit(STRING, { className: 'string' }),\n          \"self\"\n        ]\n      }\n    ]\n  };\n\n  // https://kotlinlang.org/docs/reference/whatsnew11.html#underscores-in-numeric-literals\n  // According to the doc above, the number mode of kotlin is the same as java 8,\n  // so the code below is copied from java.js\n  const KOTLIN_NUMBER_MODE = NUMERIC;\n  const KOTLIN_NESTED_COMMENT = hljs.COMMENT(\n    '/\\\\*', '\\\\*/',\n    { contains: [ hljs.C_BLOCK_COMMENT_MODE ] }\n  );\n  const KOTLIN_PAREN_TYPE = { variants: [\n    {\n      className: 'type',\n      begin: hljs.UNDERSCORE_IDENT_RE\n    },\n    {\n      begin: /\\(/,\n      end: /\\)/,\n      contains: [] // defined later\n    }\n  ] };\n  const KOTLIN_PAREN_TYPE2 = KOTLIN_PAREN_TYPE;\n  KOTLIN_PAREN_TYPE2.variants[1].contains = [ KOTLIN_PAREN_TYPE ];\n  KOTLIN_PAREN_TYPE.variants[1].contains = [ KOTLIN_PAREN_TYPE2 ];\n\n  return {\n    name: 'Kotlin',\n    aliases: [\n      'kt',\n      'kts'\n    ],\n    keywords: KEYWORDS,\n    contains: [\n      hljs.COMMENT(\n        '/\\\\*\\\\*',\n        '\\\\*/',\n        {\n          relevance: 0,\n          contains: [\n            {\n              className: 'doctag',\n              begin: '@[A-Za-z]+'\n            }\n          ]\n        }\n      ),\n      hljs.C_LINE_COMMENT_MODE,\n      KOTLIN_NESTED_COMMENT,\n      KEYWORDS_WITH_LABEL,\n      LABEL,\n      ANNOTATION_USE_SITE,\n      ANNOTATION,\n      {\n        className: 'function',\n        beginKeywords: 'fun',\n        end: '[(]|$',\n        returnBegin: true,\n        excludeEnd: true,\n        keywords: KEYWORDS,\n        relevance: 5,\n        contains: [\n          {\n            begin: hljs.UNDERSCORE_IDENT_RE + '\\\\s*\\\\(',\n            returnBegin: true,\n            relevance: 0,\n            contains: [ hljs.UNDERSCORE_TITLE_MODE ]\n          },\n          {\n            className: 'type',\n            begin: /</,\n            end: />/,\n            keywords: 'reified',\n            relevance: 0\n          },\n          {\n            className: 'params',\n            begin: /\\(/,\n            end: /\\)/,\n            endsParent: true,\n            keywords: KEYWORDS,\n            relevance: 0,\n            contains: [\n              {\n                begin: /:/,\n                end: /[=,\\/]/,\n                endsWithParent: true,\n                contains: [\n                  KOTLIN_PAREN_TYPE,\n                  hljs.C_LINE_COMMENT_MODE,\n                  KOTLIN_NESTED_COMMENT\n                ],\n                relevance: 0\n              },\n              hljs.C_LINE_COMMENT_MODE,\n              KOTLIN_NESTED_COMMENT,\n              ANNOTATION_USE_SITE,\n              ANNOTATION,\n              STRING,\n              hljs.C_NUMBER_MODE\n            ]\n          },\n          KOTLIN_NESTED_COMMENT\n        ]\n      },\n      {\n        begin: [\n          /class|interface|trait/,\n          /\\s+/,\n          hljs.UNDERSCORE_IDENT_RE\n        ],\n        beginScope: {\n          3: \"title.class\"\n        },\n        keywords: 'class interface trait',\n        end: /[:\\{(]|$/,\n        excludeEnd: true,\n        illegal: 'extends implements',\n        contains: [\n          { beginKeywords: 'public protected internal private constructor' },\n          hljs.UNDERSCORE_TITLE_MODE,\n          {\n            className: 'type',\n            begin: /</,\n            end: />/,\n            excludeBegin: true,\n            excludeEnd: true,\n            relevance: 0\n          },\n          {\n            className: 'type',\n            begin: /[,:]\\s*/,\n            end: /[<\\(,){\\s]|$/,\n            excludeBegin: true,\n            returnEnd: true\n          },\n          ANNOTATION_USE_SITE,\n          ANNOTATION\n        ]\n      },\n      STRING,\n      {\n        className: 'meta',\n        begin: \"^#!/usr/bin/env\",\n        end: '$',\n        illegal: '\\n'\n      },\n      KOTLIN_NUMBER_MODE\n    ]\n  };\n}\n\nmodule.exports = kotlin;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["variants","excludeBegin","begin","aliases","returnEnd","className","contains","relevance","returnBegin","name","endsParent","built_in","keyword","keywords","beginKeywords","beginScope","starts","excludeEnd","illegal","endsWithParent","literal","end"]],"~:compiled-at",1676671710207,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$highlight_DOT_js$lib$languages$kotlin.js\",\n\"lineCount\":8,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/highlight_DOT_js/lib/languages/kotlin.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$highlight_DOT_js$lib$languages$kotlin\\\"] = function(global,require,module,exports) {\\n// https://docs.oracle.com/javase/specs/jls/se15/html/jls-3.html#jls-3.10\\nvar decimalDigits = '[0-9](_*[0-9])*';\\nvar frac = `\\\\\\\\.(${decimalDigits})`;\\nvar hexDigits = '[0-9a-fA-F](_*[0-9a-fA-F])*';\\nvar NUMERIC = {\\n  className: 'number',\\n  variants: [\\n    // DecimalFloatingPointLiteral\\n    // including ExponentPart\\n    { begin: `(\\\\\\\\b(${decimalDigits})((${frac})|\\\\\\\\.)?|(${frac}))` +\\n      `[eE][+-]?(${decimalDigits})[fFdD]?\\\\\\\\b` },\\n    // excluding ExponentPart\\n    { begin: `\\\\\\\\b(${decimalDigits})((${frac})[fFdD]?\\\\\\\\b|\\\\\\\\.([fFdD]\\\\\\\\b)?)` },\\n    { begin: `(${frac})[fFdD]?\\\\\\\\b` },\\n    { begin: `\\\\\\\\b(${decimalDigits})[fFdD]\\\\\\\\b` },\\n\\n    // HexadecimalFloatingPointLiteral\\n    { begin: `\\\\\\\\b0[xX]((${hexDigits})\\\\\\\\.?|(${hexDigits})?\\\\\\\\.(${hexDigits}))` +\\n      `[pP][+-]?(${decimalDigits})[fFdD]?\\\\\\\\b` },\\n\\n    // DecimalIntegerLiteral\\n    { begin: '\\\\\\\\b(0|[1-9](_*[0-9])*)[lL]?\\\\\\\\b' },\\n\\n    // HexIntegerLiteral\\n    { begin: `\\\\\\\\b0[xX](${hexDigits})[lL]?\\\\\\\\b` },\\n\\n    // OctalIntegerLiteral\\n    { begin: '\\\\\\\\b0(_*[0-7])*[lL]?\\\\\\\\b' },\\n\\n    // BinaryIntegerLiteral\\n    { begin: '\\\\\\\\b0[bB][01](_*[01])*[lL]?\\\\\\\\b' },\\n  ],\\n  relevance: 0\\n};\\n\\n/*\\n Language: Kotlin\\n Description: Kotlin is an OSS statically typed programming language that targets the JVM, Android, JavaScript and Native.\\n Author: Sergey Mashkov <cy6erGn0m@gmail.com>\\n Website: https://kotlinlang.org\\n Category: common\\n */\\n\\nfunction kotlin(hljs) {\\n  const KEYWORDS = {\\n    keyword:\\n      'abstract as val var vararg get set class object open private protected public noinline '\\n      + 'crossinline dynamic final enum if else do while for when throw try catch finally '\\n      + 'import package is in fun override companion reified inline lateinit init '\\n      + 'interface annotation data sealed internal infix operator out by constructor super '\\n      + 'tailrec where const inner suspend typealias external expect actual',\\n    built_in:\\n      'Byte Short Char Int Long Boolean Float Double Void Unit Nothing',\\n    literal:\\n      'true false null'\\n  };\\n  const KEYWORDS_WITH_LABEL = {\\n    className: 'keyword',\\n    begin: /\\\\b(break|continue|return|this)\\\\b/,\\n    starts: { contains: [\\n      {\\n        className: 'symbol',\\n        begin: /@\\\\w+/\\n      }\\n    ] }\\n  };\\n  const LABEL = {\\n    className: 'symbol',\\n    begin: hljs.UNDERSCORE_IDENT_RE + '@'\\n  };\\n\\n  // for string templates\\n  const SUBST = {\\n    className: 'subst',\\n    begin: /\\\\$\\\\{/,\\n    end: /\\\\}/,\\n    contains: [ hljs.C_NUMBER_MODE ]\\n  };\\n  const VARIABLE = {\\n    className: 'variable',\\n    begin: '\\\\\\\\$' + hljs.UNDERSCORE_IDENT_RE\\n  };\\n  const STRING = {\\n    className: 'string',\\n    variants: [\\n      {\\n        begin: '\\\"\\\"\\\"',\\n        end: '\\\"\\\"\\\"(?=[^\\\"])',\\n        contains: [\\n          VARIABLE,\\n          SUBST\\n        ]\\n      },\\n      // Can't use built-in modes easily, as we want to use STRING in the meta\\n      // context as 'meta-string' and there's no syntax to remove explicitly set\\n      // classNames in built-in modes.\\n      {\\n        begin: '\\\\'',\\n        end: '\\\\'',\\n        illegal: /\\\\n/,\\n        contains: [ hljs.BACKSLASH_ESCAPE ]\\n      },\\n      {\\n        begin: '\\\"',\\n        end: '\\\"',\\n        illegal: /\\\\n/,\\n        contains: [\\n          hljs.BACKSLASH_ESCAPE,\\n          VARIABLE,\\n          SUBST\\n        ]\\n      }\\n    ]\\n  };\\n  SUBST.contains.push(STRING);\\n\\n  const ANNOTATION_USE_SITE = {\\n    className: 'meta',\\n    begin: '@(?:file|property|field|get|set|receiver|param|setparam|delegate)\\\\\\\\s*:(?:\\\\\\\\s*' + hljs.UNDERSCORE_IDENT_RE + ')?'\\n  };\\n  const ANNOTATION = {\\n    className: 'meta',\\n    begin: '@' + hljs.UNDERSCORE_IDENT_RE,\\n    contains: [\\n      {\\n        begin: /\\\\(/,\\n        end: /\\\\)/,\\n        contains: [\\n          hljs.inherit(STRING, { className: 'string' }),\\n          \\\"self\\\"\\n        ]\\n      }\\n    ]\\n  };\\n\\n  // https://kotlinlang.org/docs/reference/whatsnew11.html#underscores-in-numeric-literals\\n  // According to the doc above, the number mode of kotlin is the same as java 8,\\n  // so the code below is copied from java.js\\n  const KOTLIN_NUMBER_MODE = NUMERIC;\\n  const KOTLIN_NESTED_COMMENT = hljs.COMMENT(\\n    '/\\\\\\\\*', '\\\\\\\\*/',\\n    { contains: [ hljs.C_BLOCK_COMMENT_MODE ] }\\n  );\\n  const KOTLIN_PAREN_TYPE = { variants: [\\n    {\\n      className: 'type',\\n      begin: hljs.UNDERSCORE_IDENT_RE\\n    },\\n    {\\n      begin: /\\\\(/,\\n      end: /\\\\)/,\\n      contains: [] // defined later\\n    }\\n  ] };\\n  const KOTLIN_PAREN_TYPE2 = KOTLIN_PAREN_TYPE;\\n  KOTLIN_PAREN_TYPE2.variants[1].contains = [ KOTLIN_PAREN_TYPE ];\\n  KOTLIN_PAREN_TYPE.variants[1].contains = [ KOTLIN_PAREN_TYPE2 ];\\n\\n  return {\\n    name: 'Kotlin',\\n    aliases: [\\n      'kt',\\n      'kts'\\n    ],\\n    keywords: KEYWORDS,\\n    contains: [\\n      hljs.COMMENT(\\n        '/\\\\\\\\*\\\\\\\\*',\\n        '\\\\\\\\*/',\\n        {\\n          relevance: 0,\\n          contains: [\\n            {\\n              className: 'doctag',\\n              begin: '@[A-Za-z]+'\\n            }\\n          ]\\n        }\\n      ),\\n      hljs.C_LINE_COMMENT_MODE,\\n      KOTLIN_NESTED_COMMENT,\\n      KEYWORDS_WITH_LABEL,\\n      LABEL,\\n      ANNOTATION_USE_SITE,\\n      ANNOTATION,\\n      {\\n        className: 'function',\\n        beginKeywords: 'fun',\\n        end: '[(]|$',\\n        returnBegin: true,\\n        excludeEnd: true,\\n        keywords: KEYWORDS,\\n        relevance: 5,\\n        contains: [\\n          {\\n            begin: hljs.UNDERSCORE_IDENT_RE + '\\\\\\\\s*\\\\\\\\(',\\n            returnBegin: true,\\n            relevance: 0,\\n            contains: [ hljs.UNDERSCORE_TITLE_MODE ]\\n          },\\n          {\\n            className: 'type',\\n            begin: /</,\\n            end: />/,\\n            keywords: 'reified',\\n            relevance: 0\\n          },\\n          {\\n            className: 'params',\\n            begin: /\\\\(/,\\n            end: /\\\\)/,\\n            endsParent: true,\\n            keywords: KEYWORDS,\\n            relevance: 0,\\n            contains: [\\n              {\\n                begin: /:/,\\n                end: /[=,\\\\/]/,\\n                endsWithParent: true,\\n                contains: [\\n                  KOTLIN_PAREN_TYPE,\\n                  hljs.C_LINE_COMMENT_MODE,\\n                  KOTLIN_NESTED_COMMENT\\n                ],\\n                relevance: 0\\n              },\\n              hljs.C_LINE_COMMENT_MODE,\\n              KOTLIN_NESTED_COMMENT,\\n              ANNOTATION_USE_SITE,\\n              ANNOTATION,\\n              STRING,\\n              hljs.C_NUMBER_MODE\\n            ]\\n          },\\n          KOTLIN_NESTED_COMMENT\\n        ]\\n      },\\n      {\\n        begin: [\\n          /class|interface|trait/,\\n          /\\\\s+/,\\n          hljs.UNDERSCORE_IDENT_RE\\n        ],\\n        beginScope: {\\n          3: \\\"title.class\\\"\\n        },\\n        keywords: 'class interface trait',\\n        end: /[:\\\\{(]|$/,\\n        excludeEnd: true,\\n        illegal: 'extends implements',\\n        contains: [\\n          { beginKeywords: 'public protected internal private constructor' },\\n          hljs.UNDERSCORE_TITLE_MODE,\\n          {\\n            className: 'type',\\n            begin: /</,\\n            end: />/,\\n            excludeBegin: true,\\n            excludeEnd: true,\\n            relevance: 0\\n          },\\n          {\\n            className: 'type',\\n            begin: /[,:]\\\\s*/,\\n            end: /[<\\\\(,){\\\\s]|$/,\\n            excludeBegin: true,\\n            returnEnd: true\\n          },\\n          ANNOTATION_USE_SITE,\\n          ANNOTATION\\n        ]\\n      },\\n      STRING,\\n      {\\n        className: 'meta',\\n        begin: \\\"^#!/usr/bin/env\\\",\\n        end: '$',\\n        illegal: '\\\\n'\\n      },\\n      KOTLIN_NUMBER_MODE\\n    ]\\n  };\\n}\\n\\nmodule.exports = kotlin;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"NUMERIC\",\"className\",\"variants\",\"begin\",\"relevance\",\"kotlin\",\"hljs\",\"KEYWORDS\",\"keyword\",\"built_in\",\"literal\",\"LABEL\",\"UNDERSCORE_IDENT_RE\",\"SUBST\",\"end\",\"contains\",\"C_NUMBER_MODE\",\"VARIABLE\",\"STRING\",\"illegal\",\"BACKSLASH_ESCAPE\",\"push\",\"ANNOTATION_USE_SITE\",\"ANNOTATION\",\"inherit\",\"KOTLIN_NESTED_COMMENT\",\"COMMENT\",\"C_BLOCK_COMMENT_MODE\",\"KOTLIN_PAREN_TYPE\",\"name\",\"aliases\",\"keywords\",\"C_LINE_COMMENT_MODE\",\"KEYWORDS_WITH_LABEL\",\"starts\",\"beginKeywords\",\"returnBegin\",\"excludeEnd\",\"UNDERSCORE_TITLE_MODE\",\"endsParent\",\"endsWithParent\",\"beginScope\",\"excludeBegin\",\"returnEnd\"]\n}\n"]