["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/parse5/lib/extensions/error-reporting/preprocessor-mixin.js"],"~:js","shadow$provide.module$node_modules$parse5$lib$extensions$error_reporting$preprocessor_mixin=function(global,require,module,exports){global=require(\"module$node_modules$parse5$lib$extensions$error_reporting$mixin_base\");const PositionTrackingPreprocessorMixin=require(\"module$node_modules$parse5$lib$extensions$position_tracking$preprocessor_mixin\"),Mixin=require(\"module$node_modules$parse5$lib$utils$mixin\");class ErrorReportingPreprocessorMixin extends global{constructor(preprocessor,opts){super(preprocessor,\nopts);this.posTracker=Mixin.install(preprocessor,PositionTrackingPreprocessorMixin);this.lastErrOffset=-1}_reportError(code){this.lastErrOffset!==this.posTracker.offset&&(this.lastErrOffset=this.posTracker.offset,super._reportError(code))}}module.exports=ErrorReportingPreprocessorMixin}","~:source","shadow$provide[\"module$node_modules$parse5$lib$extensions$error_reporting$preprocessor_mixin\"] = function(global,require,module,exports) {\n'use strict';\n\nconst ErrorReportingMixinBase = require('./mixin-base');\nconst PositionTrackingPreprocessorMixin = require('../position-tracking/preprocessor-mixin');\nconst Mixin = require('../../utils/mixin');\n\nclass ErrorReportingPreprocessorMixin extends ErrorReportingMixinBase {\n    constructor(preprocessor, opts) {\n        super(preprocessor, opts);\n\n        this.posTracker = Mixin.install(preprocessor, PositionTrackingPreprocessorMixin);\n        this.lastErrOffset = -1;\n    }\n\n    _reportError(code) {\n        //NOTE: avoid reporting error twice on advance/retreat\n        if (this.lastErrOffset !== this.posTracker.offset) {\n            this.lastErrOffset = this.posTracker.offset;\n            super._reportError(code);\n        }\n    }\n}\n\nmodule.exports = ErrorReportingPreprocessorMixin;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$parse5$lib$utils$mixin","~$shadow.js","~$module$node_modules$parse5$lib$extensions$error_reporting$mixin_base","~$module$node_modules$parse5$lib$extensions$position_tracking$preprocessor_mixin"]],"~:properties",["^5",["posTracker","lastErrOffset"]],"~:compiled-at",1676667638415,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$parse5$lib$extensions$error_reporting$preprocessor_mixin.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,4EAAA,CAAiG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGnIC,MAAAA,CAA0BH,OAAA,CAAQ,sEAAR,CAChC,OAAMI,kCAAoCJ,OAAA,CAAQ,gFAAR,CAA1C,CACMK,MAAQL,OAAA,CAAQ,4CAAR,CAEd,MAAMM,gCAAN,QAA8CH,OAA9C,CACII,WAAW,CAACC,YAAD,CAAeC,IAAf,CAAqB,CAC5B,KAAA,CAAMD,YAAN;AAAoBC,IAApB,CAEA,KAAKC,CAAAA,UAAL,CAAkBL,KAAMM,CAAAA,OAAN,CAAcH,YAAd,CAA4BJ,iCAA5B,CAClB,KAAKQ,CAAAA,aAAL,CAAqB,CAAC,CAJM,CAOhCC,YAAY,CAACC,IAAD,CAAO,CAEX,IAAKF,CAAAA,aAAT,GAA2B,IAAKF,CAAAA,UAAWK,CAAAA,MAA3C,GACI,IAAKH,CAAAA,aACL,CADqB,IAAKF,CAAAA,UAAWK,CAAAA,MACrC,CAAA,KAAMF,CAAAA,YAAN,CAAmBC,IAAnB,CAFJ,CAFe,CARvB,CAiBAb,MAAOC,CAAAA,OAAP,CAAiBI,+BAxBwH;\",\n\"sources\":[\"node_modules/parse5/lib/extensions/error-reporting/preprocessor-mixin.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$parse5$lib$extensions$error_reporting$preprocessor_mixin\\\"] = function(global,require,module,exports) {\\n'use strict';\\n\\nconst ErrorReportingMixinBase = require('./mixin-base');\\nconst PositionTrackingPreprocessorMixin = require('../position-tracking/preprocessor-mixin');\\nconst Mixin = require('../../utils/mixin');\\n\\nclass ErrorReportingPreprocessorMixin extends ErrorReportingMixinBase {\\n    constructor(preprocessor, opts) {\\n        super(preprocessor, opts);\\n\\n        this.posTracker = Mixin.install(preprocessor, PositionTrackingPreprocessorMixin);\\n        this.lastErrOffset = -1;\\n    }\\n\\n    _reportError(code) {\\n        //NOTE: avoid reporting error twice on advance/retreat\\n        if (this.lastErrOffset !== this.posTracker.offset) {\\n            this.lastErrOffset = this.posTracker.offset;\\n            super._reportError(code);\\n        }\\n    }\\n}\\n\\nmodule.exports = ErrorReportingPreprocessorMixin;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"ErrorReportingMixinBase\",\"PositionTrackingPreprocessorMixin\",\"Mixin\",\"ErrorReportingPreprocessorMixin\",\"constructor\",\"preprocessor\",\"opts\",\"posTracker\",\"install\",\"lastErrOffset\",\"_reportError\",\"code\",\"offset\"]\n}\n"]