["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/awk.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$awk=function(global,require,module,exports){function awk(Prism){Prism.languages.awk={hashbang:{pattern:/^#!.*/,greedy:!0,alias:\"comment\"},comment:{pattern:/#.*/,greedy:!0},string:{pattern:/(^|[^\\\\])\"(?:[^\\\\\"\\r\\n]|\\\\.)*\"/,lookbehind:!0,greedy:!0},regex:{pattern:/((?:^|[^\\w\\s)])\\s*)\\/(?:[^\\/\\\\\\r\\n]|\\\\.)*\\//,lookbehind:!0,greedy:!0},variable:/\\$\\w+/,keyword:/\\b(?:BEGIN|BEGINFILE|END|ENDFILE|break|case|continue|default|delete|do|else|exit|for|function|getline|if|in|next|nextfile|printf?|return|switch|while)\\b|@(?:include|load)\\b/,\nfunction:/\\b[a-z_]\\w*(?=\\s*\\()/i,number:/\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0x[a-fA-F0-9]+)\\b/,operator:/--|\\+\\+|!?~|>&|>>|<<|(?:\\*\\*|[<>!=+\\-*/%^])=?|&&|\\|[|&]|[?:]/,punctuation:/[()[\\]{},;]/};Prism.languages.gawk=Prism.languages.awk}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=awk;awk.displayName=\"awk\";awk.aliases=[\"gawk\"]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$awk\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = awk;\n// @ts-nocheck\nawk.displayName = 'awk';\nawk.aliases = ['gawk'];\n/** @type {import('../core.js').Syntax} */\n\nfunction awk(Prism) {\n  Prism.languages.awk = {\n    hashbang: {\n      pattern: /^#!.*/,\n      greedy: true,\n      alias: 'comment'\n    },\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /(^|[^\\\\])\"(?:[^\\\\\"\\r\\n]|\\\\.)*\"/,\n      lookbehind: true,\n      greedy: true\n    },\n    regex: {\n      pattern: /((?:^|[^\\w\\s)])\\s*)\\/(?:[^\\/\\\\\\r\\n]|\\\\.)*\\//,\n      lookbehind: true,\n      greedy: true\n    },\n    variable: /\\$\\w+/,\n    keyword: /\\b(?:BEGIN|BEGINFILE|END|ENDFILE|break|case|continue|default|delete|do|else|exit|for|function|getline|if|in|next|nextfile|printf?|return|switch|while)\\b|@(?:include|load)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    number: /\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0x[a-fA-F0-9]+)\\b/,\n    operator: /--|\\+\\+|!?~|>&|>>|<<|(?:\\*\\*|[<>!=+\\-*/%^])=?|&&|\\|[|&]|[?:]/,\n    punctuation: /[()[\\]{},;]/\n  };\n  Prism.languages.gawk = Prism.languages.awk;\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["punctuation","string","aliases","operator","displayName","__esModule","regex","lookbehind","value","variable","keyword","number","greedy","gawk","function","pattern","awk","alias","comment","default","hashbang"]],"~:compiled-at",1676841365394,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$awk.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,sCAAA,CAA2D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAYnGC,QAASA,IAAG,CAACC,KAAD,CAAQ,CAClBA,KAAMC,CAAAA,SAAUF,CAAAA,GAAhB,CAAsB,CACpBG,SAAU,CACRC,QAAS,OADD,CAERC,OAAQ,CAAA,CAFA,CAGRC,MAAO,SAHC,CADU,CAMpBC,QAAS,CACPH,QAAS,KADF,CAEPC,OAAQ,CAAA,CAFD,CANW,CAUpBG,OAAQ,CACNJ,QAAS,gCADH,CAENK,WAAY,CAAA,CAFN,CAGNJ,OAAQ,CAAA,CAHF,CAVY,CAepBK,MAAO,CACLN,QAAS,6CADJ,CAELK,WAAY,CAAA,CAFP,CAGLJ,OAAQ,CAAA,CAHH,CAfa,CAoBpBM,SAAU,OApBU,CAqBpBC,QAAS,8KArBW;AAsBpBC,SAAU,uBAtBU,CAuBpBC,OAAQ,oDAvBY,CAwBpBC,SAAU,8DAxBU,CAyBpBC,YAAa,aAzBO,CA2BtBf,MAAMC,CAAAA,SAAUe,CAAAA,IAAhB,CAAuBhB,KAAMC,CAAAA,SAAUF,CAAAA,GA5BrB,CATpBkB,MAAOC,CAAAA,cAAP,CAAsBpB,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CqB,MAAO,CAAA,CADoC,CAA7C,CAGArB,QAAQsB,CAAAA,OAAR,CAAkBrB,GAElBA,IAAIsB,CAAAA,WAAJ,CAAkB,KAClBtB,IAAIuB,CAAAA,OAAJ,CAAc,CAAC,MAAD,CATqF;\",\n\"sources\":[\"node_modules/refractor/lang/awk.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$awk\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = awk;\\n// @ts-nocheck\\nawk.displayName = 'awk';\\nawk.aliases = ['gawk'];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction awk(Prism) {\\n  Prism.languages.awk = {\\n    hashbang: {\\n      pattern: /^#!.*/,\\n      greedy: true,\\n      alias: 'comment'\\n    },\\n    comment: {\\n      pattern: /#.*/,\\n      greedy: true\\n    },\\n    string: {\\n      pattern: /(^|[^\\\\\\\\])\\\"(?:[^\\\\\\\\\\\"\\\\r\\\\n]|\\\\\\\\.)*\\\"/,\\n      lookbehind: true,\\n      greedy: true\\n    },\\n    regex: {\\n      pattern: /((?:^|[^\\\\w\\\\s)])\\\\s*)\\\\/(?:[^\\\\/\\\\\\\\\\\\r\\\\n]|\\\\\\\\.)*\\\\//,\\n      lookbehind: true,\\n      greedy: true\\n    },\\n    variable: /\\\\$\\\\w+/,\\n    keyword: /\\\\b(?:BEGIN|BEGINFILE|END|ENDFILE|break|case|continue|default|delete|do|else|exit|for|function|getline|if|in|next|nextfile|printf?|return|switch|while)\\\\b|@(?:include|load)\\\\b/,\\n    function: /\\\\b[a-z_]\\\\w*(?=\\\\s*\\\\()/i,\\n    number: /\\\\b(?:\\\\d+(?:\\\\.\\\\d+)?(?:e[+-]?\\\\d+)?|0x[a-fA-F0-9]+)\\\\b/,\\n    operator: /--|\\\\+\\\\+|!?~|>&|>>|<<|(?:\\\\*\\\\*|[<>!=+\\\\-*/%^])=?|&&|\\\\|[|&]|[?:]/,\\n    punctuation: /[()[\\\\]{},;]/\\n  };\\n  Prism.languages.gawk = Prism.languages.awk;\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"awk\",\"Prism\",\"languages\",\"hashbang\",\"pattern\",\"greedy\",\"alias\",\"comment\",\"string\",\"lookbehind\",\"regex\",\"variable\",\"keyword\",\"function\",\"number\",\"operator\",\"punctuation\",\"gawk\",\"Object\",\"defineProperty\",\"value\",\"default\",\"displayName\",\"aliases\"]\n}\n"]