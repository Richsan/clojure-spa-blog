["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/textile.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$textile=function(global,require,module,exports){function textile(Prism$jscomp$0){Prism$jscomp$0.register(_markup.default);(function(Prism){function withModifier(source,flags){return RegExp(source.replace(/<MOD>/g,function(){return\"(?:\"+modifierRegex+\")\"}).replace(/<PAR>/g,function(){return\"(?:\"+parenthesesRegex+\")\"}),flags||\"\")}var modifierRegex=/\\([^|()\\n]+\\)|\\[[^\\]\\n]+\\]|\\{[^}\\n]+\\}/.source,parenthesesRegex=/\\)|\\((?![^|()\\n]+\\))/.source,modifierTokens=\n{css:{pattern:/\\{[^{}]+\\}/,inside:{rest:Prism.languages.css}},\"class-id\":{pattern:/(\\()[^()]+(?=\\))/,lookbehind:!0,alias:\"attr-value\"},lang:{pattern:/(\\[)[^\\[\\]]+(?=\\])/,lookbehind:!0,alias:\"attr-value\"},punctuation:/[\\\\\\/]\\d+|\\S/},textile=Prism.languages.textile=Prism.languages.extend(\"markup\",{phrase:{pattern:/(^|\\r|\\n)\\S[\\s\\S]*?(?=$|\\r?\\n\\r?\\n|\\r\\r)/,lookbehind:!0,inside:{\"block-tag\":{pattern:withModifier(/^[a-z]\\w*(?:<MOD>|<PAR>|[<>=])*\\./.source),inside:{modifier:{pattern:withModifier(/(^[a-z]\\w*)(?:<MOD>|<PAR>|[<>=])+(?=\\.)/.source),\nlookbehind:!0,inside:modifierTokens},tag:/^[a-z]\\w*/,punctuation:/\\.$/}},list:{pattern:withModifier(/^[*#]+<MOD>*\\s+\\S.*/.source,\"m\"),inside:{modifier:{pattern:withModifier(/(^[*#]+)<MOD>+/.source),lookbehind:!0,inside:modifierTokens},punctuation:/^[*#]+/}},table:{pattern:withModifier(/^(?:(?:<MOD>|<PAR>|[<>=^~])+\\.\\s*)?(?:\\|(?:(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+\\.|(?!(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+\\.))[^|]*)+\\|/.source,\"m\"),inside:{modifier:{pattern:withModifier(/(^|\\|(?:\\r?\\n|\\r)?)(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+(?=\\.)/.source),\nlookbehind:!0,inside:modifierTokens},punctuation:/\\||^\\./}},inline:{pattern:withModifier(/(^|[^a-zA-Z\\d])(\\*\\*|__|\\?\\?|[*_%@+\\-^~])<MOD>*.+?\\2(?![a-zA-Z\\d])/.source),lookbehind:!0,inside:{bold:{pattern:withModifier(/(^(\\*\\*?)<MOD>*).+?(?=\\2)/.source),lookbehind:!0},italic:{pattern:withModifier(/(^(__?)<MOD>*).+?(?=\\2)/.source),lookbehind:!0},cite:{pattern:withModifier(/(^\\?\\?<MOD>*).+?(?=\\?\\?)/.source),lookbehind:!0,alias:\"string\"},code:{pattern:withModifier(/(^@<MOD>*).+?(?=@)/.source),lookbehind:!0,\nalias:\"keyword\"},inserted:{pattern:withModifier(/(^\\+<MOD>*).+?(?=\\+)/.source),lookbehind:!0},deleted:{pattern:withModifier(/(^-<MOD>*).+?(?=-)/.source),lookbehind:!0},span:{pattern:withModifier(/(^%<MOD>*).+?(?=%)/.source),lookbehind:!0},modifier:{pattern:withModifier(/(^\\*\\*|__|\\?\\?|[*_%@+\\-^~])<MOD>+/.source),lookbehind:!0,inside:modifierTokens},punctuation:/[*_%?@+\\-^~]+/}},\"link-ref\":{pattern:/^\\[[^\\]]+\\]\\S+$/m,inside:{string:{pattern:/(^\\[)[^\\]]+(?=\\])/,lookbehind:!0},url:{pattern:/(^\\])\\S+$/,\nlookbehind:!0},punctuation:/[\\[\\]]/}},link:{pattern:withModifier(/\"<MOD>*[^\"]+\":.+?(?=[^\\w/]?(?:\\s|$))/.source),inside:{text:{pattern:withModifier(/(^\"<MOD>*)[^\"]+(?=\")/.source),lookbehind:!0},modifier:{pattern:withModifier(/(^\")<MOD>+/.source),lookbehind:!0,inside:modifierTokens},url:{pattern:/(:).+/,lookbehind:!0},punctuation:/[\":]/}},image:{pattern:withModifier(/!(?:<MOD>|<PAR>|[<>=])*(?![<>=])[^!\\s()]+(?:\\([^)]+\\))?!(?::.+?(?=[^\\w/]?(?:\\s|$)))?/.source),inside:{source:{pattern:withModifier(/(^!(?:<MOD>|<PAR>|[<>=])*)(?![<>=])[^!\\s()]+(?:\\([^)]+\\))?(?=!)/.source),\nlookbehind:!0,alias:\"url\"},modifier:{pattern:withModifier(/(^!)(?:<MOD>|<PAR>|[<>=])+/.source),lookbehind:!0,inside:modifierTokens},url:{pattern:/(:).+/,lookbehind:!0},punctuation:/[!:]/}},footnote:{pattern:/\\b\\[\\d+\\]/,alias:\"comment\",inside:{punctuation:/\\[|\\]/}},acronym:{pattern:/\\b[A-Z\\d]+\\([^)]+\\)/,inside:{comment:{pattern:/(\\()[^()]+(?=\\))/,lookbehind:!0},punctuation:/[()]/}},mark:{pattern:/\\b\\((?:C|R|TM)\\)/,alias:\"comment\",inside:{punctuation:/[()]/}}}}});modifierTokens=textile.phrase.inside;\nPrism={inline:modifierTokens.inline,link:modifierTokens.link,image:modifierTokens.image,footnote:modifierTokens.footnote,acronym:modifierTokens.acronym,mark:modifierTokens.mark};textile.tag.pattern=/<\\/?(?!\\d)[a-z0-9]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i;textile=modifierTokens.inline.inside;textile.bold.inside=Prism;textile.italic.inside=Prism;textile.inserted.inside=Prism;textile.deleted.inside=Prism;textile.span.inside=Prism;modifierTokens=modifierTokens.table.inside;\nmodifierTokens.inline=Prism.inline;modifierTokens.link=Prism.link;modifierTokens.image=Prism.image;modifierTokens.footnote=Prism.footnote;modifierTokens.acronym=Prism.acronym;modifierTokens.mark=Prism.mark})(Prism$jscomp$0)}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=textile;var _markup=function(obj){return obj&&obj.__esModule?obj:{default:obj}}(require(\"module$node_modules$refractor$lang$markup\"));textile.displayName=\"textile\";textile.aliases=[]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$textile\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = textile;\n\nvar _markup = _interopRequireDefault(require(\"./markup.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// @ts-nocheck\ntextile.displayName = 'textile';\ntextile.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nfunction textile(Prism) {\n  Prism.register(_markup.default);\n\n  (function (Prism) {\n    // We don't allow for pipes inside parentheses\n    // to not break table pattern |(. foo |). bar |\n    var modifierRegex = /\\([^|()\\n]+\\)|\\[[^\\]\\n]+\\]|\\{[^}\\n]+\\}/.source; // Opening and closing parentheses which are not a modifier\n    // This pattern is necessary to prevent exponential backtracking\n\n    var parenthesesRegex = /\\)|\\((?![^|()\\n]+\\))/.source;\n    /**\n     * @param {string} source\n     * @param {string} [flags]\n     */\n\n    function withModifier(source, flags) {\n      return RegExp(source.replace(/<MOD>/g, function () {\n        return '(?:' + modifierRegex + ')';\n      }).replace(/<PAR>/g, function () {\n        return '(?:' + parenthesesRegex + ')';\n      }), flags || '');\n    }\n\n    var modifierTokens = {\n      css: {\n        pattern: /\\{[^{}]+\\}/,\n        inside: {\n          rest: Prism.languages.css\n        }\n      },\n      'class-id': {\n        pattern: /(\\()[^()]+(?=\\))/,\n        lookbehind: true,\n        alias: 'attr-value'\n      },\n      lang: {\n        pattern: /(\\[)[^\\[\\]]+(?=\\])/,\n        lookbehind: true,\n        alias: 'attr-value'\n      },\n      // Anything else is punctuation (the first pattern is for row/col spans inside tables)\n      punctuation: /[\\\\\\/]\\d+|\\S/\n    };\n    var textile = Prism.languages.textile = Prism.languages.extend('markup', {\n      phrase: {\n        pattern: /(^|\\r|\\n)\\S[\\s\\S]*?(?=$|\\r?\\n\\r?\\n|\\r\\r)/,\n        lookbehind: true,\n        inside: {\n          // h1. Header 1\n          'block-tag': {\n            pattern: withModifier(/^[a-z]\\w*(?:<MOD>|<PAR>|[<>=])*\\./.source),\n            inside: {\n              modifier: {\n                pattern: withModifier(/(^[a-z]\\w*)(?:<MOD>|<PAR>|[<>=])+(?=\\.)/.source),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              tag: /^[a-z]\\w*/,\n              punctuation: /\\.$/\n            }\n          },\n          // # List item\n          // * List item\n          list: {\n            pattern: withModifier(/^[*#]+<MOD>*\\s+\\S.*/.source, 'm'),\n            inside: {\n              modifier: {\n                pattern: withModifier(/(^[*#]+)<MOD>+/.source),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              punctuation: /^[*#]+/\n            }\n          },\n          // | cell | cell | cell |\n          table: {\n            // Modifiers can be applied to the row: {color:red}.|1|2|3|\n            // or the cell: |{color:red}.1|2|3|\n            pattern: withModifier(/^(?:(?:<MOD>|<PAR>|[<>=^~])+\\.\\s*)?(?:\\|(?:(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+\\.|(?!(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+\\.))[^|]*)+\\|/.source, 'm'),\n            inside: {\n              modifier: {\n                // Modifiers for rows after the first one are\n                // preceded by a pipe and a line feed\n                pattern: withModifier(/(^|\\|(?:\\r?\\n|\\r)?)(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+(?=\\.)/.source),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              punctuation: /\\||^\\./\n            }\n          },\n          inline: {\n            // eslint-disable-next-line regexp/no-super-linear-backtracking\n            pattern: withModifier(/(^|[^a-zA-Z\\d])(\\*\\*|__|\\?\\?|[*_%@+\\-^~])<MOD>*.+?\\2(?![a-zA-Z\\d])/.source),\n            lookbehind: true,\n            inside: {\n              // Note: superscripts and subscripts are not handled specifically\n              // *bold*, **bold**\n              bold: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^(\\*\\*?)<MOD>*).+?(?=\\2)/.source),\n                lookbehind: true\n              },\n              // _italic_, __italic__\n              italic: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^(__?)<MOD>*).+?(?=\\2)/.source),\n                lookbehind: true\n              },\n              // ??cite??\n              cite: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^\\?\\?<MOD>*).+?(?=\\?\\?)/.source),\n                lookbehind: true,\n                alias: 'string'\n              },\n              // @code@\n              code: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^@<MOD>*).+?(?=@)/.source),\n                lookbehind: true,\n                alias: 'keyword'\n              },\n              // +inserted+\n              inserted: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^\\+<MOD>*).+?(?=\\+)/.source),\n                lookbehind: true\n              },\n              // -deleted-\n              deleted: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^-<MOD>*).+?(?=-)/.source),\n                lookbehind: true\n              },\n              // %span%\n              span: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^%<MOD>*).+?(?=%)/.source),\n                lookbehind: true\n              },\n              modifier: {\n                pattern: withModifier(/(^\\*\\*|__|\\?\\?|[*_%@+\\-^~])<MOD>+/.source),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              punctuation: /[*_%?@+\\-^~]+/\n            }\n          },\n          // [alias]http://example.com\n          'link-ref': {\n            pattern: /^\\[[^\\]]+\\]\\S+$/m,\n            inside: {\n              string: {\n                pattern: /(^\\[)[^\\]]+(?=\\])/,\n                lookbehind: true\n              },\n              url: {\n                pattern: /(^\\])\\S+$/,\n                lookbehind: true\n              },\n              punctuation: /[\\[\\]]/\n            }\n          },\n          // \"text\":http://example.com\n          // \"text\":link-ref\n          link: {\n            // eslint-disable-next-line regexp/no-super-linear-backtracking\n            pattern: withModifier(/\"<MOD>*[^\"]+\":.+?(?=[^\\w/]?(?:\\s|$))/.source),\n            inside: {\n              text: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^\"<MOD>*)[^\"]+(?=\")/.source),\n                lookbehind: true\n              },\n              modifier: {\n                pattern: withModifier(/(^\")<MOD>+/.source),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              url: {\n                pattern: /(:).+/,\n                lookbehind: true\n              },\n              punctuation: /[\":]/\n            }\n          },\n          // !image.jpg!\n          // !image.jpg(Title)!:http://example.com\n          image: {\n            pattern: withModifier(/!(?:<MOD>|<PAR>|[<>=])*(?![<>=])[^!\\s()]+(?:\\([^)]+\\))?!(?::.+?(?=[^\\w/]?(?:\\s|$)))?/.source),\n            inside: {\n              source: {\n                pattern: withModifier(/(^!(?:<MOD>|<PAR>|[<>=])*)(?![<>=])[^!\\s()]+(?:\\([^)]+\\))?(?=!)/.source),\n                lookbehind: true,\n                alias: 'url'\n              },\n              modifier: {\n                pattern: withModifier(/(^!)(?:<MOD>|<PAR>|[<>=])+/.source),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              url: {\n                pattern: /(:).+/,\n                lookbehind: true\n              },\n              punctuation: /[!:]/\n            }\n          },\n          // Footnote[1]\n          footnote: {\n            pattern: /\\b\\[\\d+\\]/,\n            alias: 'comment',\n            inside: {\n              punctuation: /\\[|\\]/\n            }\n          },\n          // CSS(Cascading Style Sheet)\n          acronym: {\n            pattern: /\\b[A-Z\\d]+\\([^)]+\\)/,\n            inside: {\n              comment: {\n                pattern: /(\\()[^()]+(?=\\))/,\n                lookbehind: true\n              },\n              punctuation: /[()]/\n            }\n          },\n          // Prism(C)\n          mark: {\n            pattern: /\\b\\((?:C|R|TM)\\)/,\n            alias: 'comment',\n            inside: {\n              punctuation: /[()]/\n            }\n          }\n        }\n      }\n    });\n    var phraseInside = textile['phrase'].inside;\n    var nestedPatterns = {\n      inline: phraseInside['inline'],\n      link: phraseInside['link'],\n      image: phraseInside['image'],\n      footnote: phraseInside['footnote'],\n      acronym: phraseInside['acronym'],\n      mark: phraseInside['mark']\n    }; // Only allow alpha-numeric HTML tags, not XML tags\n\n    textile.tag.pattern = /<\\/?(?!\\d)[a-z0-9]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i; // Allow some nesting\n\n    var phraseInlineInside = phraseInside['inline'].inside;\n    phraseInlineInside['bold'].inside = nestedPatterns;\n    phraseInlineInside['italic'].inside = nestedPatterns;\n    phraseInlineInside['inserted'].inside = nestedPatterns;\n    phraseInlineInside['deleted'].inside = nestedPatterns;\n    phraseInlineInside['span'].inside = nestedPatterns; // Allow some styles inside table cells\n\n    var phraseTableInside = phraseInside['table'].inside;\n    phraseTableInside['inline'] = nestedPatterns['inline'];\n    phraseTableInside['link'] = nestedPatterns['link'];\n    phraseTableInside['image'] = nestedPatterns['image'];\n    phraseTableInside['footnote'] = nestedPatterns['footnote'];\n    phraseTableInside['acronym'] = nestedPatterns['acronym'];\n    phraseTableInside['mark'] = nestedPatterns['mark'];\n  })(Prism);\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$refractor$lang$markup","~$shadow.js"]],"~:properties",["^5",["table","footnote","lang","list","url","punctuation","inserted","string","aliases","phrase","image","displayName","inline","css","__esModule","textile","rest","acronym","lookbehind","cite","tag","value","span","text","modifier","link","source","pattern","deleted","italic","inside","alias","comment","mark","bold","default","code"]],"~:compiled-at",1676841365418,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$textile.js\",\n\"lineCount\":9,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/refractor/lang/textile.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$textile\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = textile;\\n\\nvar _markup = _interopRequireDefault(require(\\\"./markup.js\\\"));\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\n// @ts-nocheck\\ntextile.displayName = 'textile';\\ntextile.aliases = [];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction textile(Prism) {\\n  Prism.register(_markup.default);\\n\\n  (function (Prism) {\\n    // We don't allow for pipes inside parentheses\\n    // to not break table pattern |(. foo |). bar |\\n    var modifierRegex = /\\\\([^|()\\\\n]+\\\\)|\\\\[[^\\\\]\\\\n]+\\\\]|\\\\{[^}\\\\n]+\\\\}/.source; // Opening and closing parentheses which are not a modifier\\n    // This pattern is necessary to prevent exponential backtracking\\n\\n    var parenthesesRegex = /\\\\)|\\\\((?![^|()\\\\n]+\\\\))/.source;\\n    /**\\n     * @param {string} source\\n     * @param {string} [flags]\\n     */\\n\\n    function withModifier(source, flags) {\\n      return RegExp(source.replace(/<MOD>/g, function () {\\n        return '(?:' + modifierRegex + ')';\\n      }).replace(/<PAR>/g, function () {\\n        return '(?:' + parenthesesRegex + ')';\\n      }), flags || '');\\n    }\\n\\n    var modifierTokens = {\\n      css: {\\n        pattern: /\\\\{[^{}]+\\\\}/,\\n        inside: {\\n          rest: Prism.languages.css\\n        }\\n      },\\n      'class-id': {\\n        pattern: /(\\\\()[^()]+(?=\\\\))/,\\n        lookbehind: true,\\n        alias: 'attr-value'\\n      },\\n      lang: {\\n        pattern: /(\\\\[)[^\\\\[\\\\]]+(?=\\\\])/,\\n        lookbehind: true,\\n        alias: 'attr-value'\\n      },\\n      // Anything else is punctuation (the first pattern is for row/col spans inside tables)\\n      punctuation: /[\\\\\\\\\\\\/]\\\\d+|\\\\S/\\n    };\\n    var textile = Prism.languages.textile = Prism.languages.extend('markup', {\\n      phrase: {\\n        pattern: /(^|\\\\r|\\\\n)\\\\S[\\\\s\\\\S]*?(?=$|\\\\r?\\\\n\\\\r?\\\\n|\\\\r\\\\r)/,\\n        lookbehind: true,\\n        inside: {\\n          // h1. Header 1\\n          'block-tag': {\\n            pattern: withModifier(/^[a-z]\\\\w*(?:<MOD>|<PAR>|[<>=])*\\\\./.source),\\n            inside: {\\n              modifier: {\\n                pattern: withModifier(/(^[a-z]\\\\w*)(?:<MOD>|<PAR>|[<>=])+(?=\\\\.)/.source),\\n                lookbehind: true,\\n                inside: modifierTokens\\n              },\\n              tag: /^[a-z]\\\\w*/,\\n              punctuation: /\\\\.$/\\n            }\\n          },\\n          // # List item\\n          // * List item\\n          list: {\\n            pattern: withModifier(/^[*#]+<MOD>*\\\\s+\\\\S.*/.source, 'm'),\\n            inside: {\\n              modifier: {\\n                pattern: withModifier(/(^[*#]+)<MOD>+/.source),\\n                lookbehind: true,\\n                inside: modifierTokens\\n              },\\n              punctuation: /^[*#]+/\\n            }\\n          },\\n          // | cell | cell | cell |\\n          table: {\\n            // Modifiers can be applied to the row: {color:red}.|1|2|3|\\n            // or the cell: |{color:red}.1|2|3|\\n            pattern: withModifier(/^(?:(?:<MOD>|<PAR>|[<>=^~])+\\\\.\\\\s*)?(?:\\\\|(?:(?:<MOD>|<PAR>|[<>=^~_]|[\\\\\\\\/]\\\\d+)+\\\\.|(?!(?:<MOD>|<PAR>|[<>=^~_]|[\\\\\\\\/]\\\\d+)+\\\\.))[^|]*)+\\\\|/.source, 'm'),\\n            inside: {\\n              modifier: {\\n                // Modifiers for rows after the first one are\\n                // preceded by a pipe and a line feed\\n                pattern: withModifier(/(^|\\\\|(?:\\\\r?\\\\n|\\\\r)?)(?:<MOD>|<PAR>|[<>=^~_]|[\\\\\\\\/]\\\\d+)+(?=\\\\.)/.source),\\n                lookbehind: true,\\n                inside: modifierTokens\\n              },\\n              punctuation: /\\\\||^\\\\./\\n            }\\n          },\\n          inline: {\\n            // eslint-disable-next-line regexp/no-super-linear-backtracking\\n            pattern: withModifier(/(^|[^a-zA-Z\\\\d])(\\\\*\\\\*|__|\\\\?\\\\?|[*_%@+\\\\-^~])<MOD>*.+?\\\\2(?![a-zA-Z\\\\d])/.source),\\n            lookbehind: true,\\n            inside: {\\n              // Note: superscripts and subscripts are not handled specifically\\n              // *bold*, **bold**\\n              bold: {\\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\\n                pattern: withModifier(/(^(\\\\*\\\\*?)<MOD>*).+?(?=\\\\2)/.source),\\n                lookbehind: true\\n              },\\n              // _italic_, __italic__\\n              italic: {\\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\\n                pattern: withModifier(/(^(__?)<MOD>*).+?(?=\\\\2)/.source),\\n                lookbehind: true\\n              },\\n              // ??cite??\\n              cite: {\\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\\n                pattern: withModifier(/(^\\\\?\\\\?<MOD>*).+?(?=\\\\?\\\\?)/.source),\\n                lookbehind: true,\\n                alias: 'string'\\n              },\\n              // @code@\\n              code: {\\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\\n                pattern: withModifier(/(^@<MOD>*).+?(?=@)/.source),\\n                lookbehind: true,\\n                alias: 'keyword'\\n              },\\n              // +inserted+\\n              inserted: {\\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\\n                pattern: withModifier(/(^\\\\+<MOD>*).+?(?=\\\\+)/.source),\\n                lookbehind: true\\n              },\\n              // -deleted-\\n              deleted: {\\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\\n                pattern: withModifier(/(^-<MOD>*).+?(?=-)/.source),\\n                lookbehind: true\\n              },\\n              // %span%\\n              span: {\\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\\n                pattern: withModifier(/(^%<MOD>*).+?(?=%)/.source),\\n                lookbehind: true\\n              },\\n              modifier: {\\n                pattern: withModifier(/(^\\\\*\\\\*|__|\\\\?\\\\?|[*_%@+\\\\-^~])<MOD>+/.source),\\n                lookbehind: true,\\n                inside: modifierTokens\\n              },\\n              punctuation: /[*_%?@+\\\\-^~]+/\\n            }\\n          },\\n          // [alias]http://example.com\\n          'link-ref': {\\n            pattern: /^\\\\[[^\\\\]]+\\\\]\\\\S+$/m,\\n            inside: {\\n              string: {\\n                pattern: /(^\\\\[)[^\\\\]]+(?=\\\\])/,\\n                lookbehind: true\\n              },\\n              url: {\\n                pattern: /(^\\\\])\\\\S+$/,\\n                lookbehind: true\\n              },\\n              punctuation: /[\\\\[\\\\]]/\\n            }\\n          },\\n          // \\\"text\\\":http://example.com\\n          // \\\"text\\\":link-ref\\n          link: {\\n            // eslint-disable-next-line regexp/no-super-linear-backtracking\\n            pattern: withModifier(/\\\"<MOD>*[^\\\"]+\\\":.+?(?=[^\\\\w/]?(?:\\\\s|$))/.source),\\n            inside: {\\n              text: {\\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\\n                pattern: withModifier(/(^\\\"<MOD>*)[^\\\"]+(?=\\\")/.source),\\n                lookbehind: true\\n              },\\n              modifier: {\\n                pattern: withModifier(/(^\\\")<MOD>+/.source),\\n                lookbehind: true,\\n                inside: modifierTokens\\n              },\\n              url: {\\n                pattern: /(:).+/,\\n                lookbehind: true\\n              },\\n              punctuation: /[\\\":]/\\n            }\\n          },\\n          // !image.jpg!\\n          // !image.jpg(Title)!:http://example.com\\n          image: {\\n            pattern: withModifier(/!(?:<MOD>|<PAR>|[<>=])*(?![<>=])[^!\\\\s()]+(?:\\\\([^)]+\\\\))?!(?::.+?(?=[^\\\\w/]?(?:\\\\s|$)))?/.source),\\n            inside: {\\n              source: {\\n                pattern: withModifier(/(^!(?:<MOD>|<PAR>|[<>=])*)(?![<>=])[^!\\\\s()]+(?:\\\\([^)]+\\\\))?(?=!)/.source),\\n                lookbehind: true,\\n                alias: 'url'\\n              },\\n              modifier: {\\n                pattern: withModifier(/(^!)(?:<MOD>|<PAR>|[<>=])+/.source),\\n                lookbehind: true,\\n                inside: modifierTokens\\n              },\\n              url: {\\n                pattern: /(:).+/,\\n                lookbehind: true\\n              },\\n              punctuation: /[!:]/\\n            }\\n          },\\n          // Footnote[1]\\n          footnote: {\\n            pattern: /\\\\b\\\\[\\\\d+\\\\]/,\\n            alias: 'comment',\\n            inside: {\\n              punctuation: /\\\\[|\\\\]/\\n            }\\n          },\\n          // CSS(Cascading Style Sheet)\\n          acronym: {\\n            pattern: /\\\\b[A-Z\\\\d]+\\\\([^)]+\\\\)/,\\n            inside: {\\n              comment: {\\n                pattern: /(\\\\()[^()]+(?=\\\\))/,\\n                lookbehind: true\\n              },\\n              punctuation: /[()]/\\n            }\\n          },\\n          // Prism(C)\\n          mark: {\\n            pattern: /\\\\b\\\\((?:C|R|TM)\\\\)/,\\n            alias: 'comment',\\n            inside: {\\n              punctuation: /[()]/\\n            }\\n          }\\n        }\\n      }\\n    });\\n    var phraseInside = textile['phrase'].inside;\\n    var nestedPatterns = {\\n      inline: phraseInside['inline'],\\n      link: phraseInside['link'],\\n      image: phraseInside['image'],\\n      footnote: phraseInside['footnote'],\\n      acronym: phraseInside['acronym'],\\n      mark: phraseInside['mark']\\n    }; // Only allow alpha-numeric HTML tags, not XML tags\\n\\n    textile.tag.pattern = /<\\\\/?(?!\\\\d)[a-z0-9]+(?:\\\\s+[^\\\\s>\\\\/=]+(?:=(?:(\\\"|')(?:\\\\\\\\[\\\\s\\\\S]|(?!\\\\1)[^\\\\\\\\])*\\\\1|[^\\\\s'\\\">=]+))?)*\\\\s*\\\\/?>/i; // Allow some nesting\\n\\n    var phraseInlineInside = phraseInside['inline'].inside;\\n    phraseInlineInside['bold'].inside = nestedPatterns;\\n    phraseInlineInside['italic'].inside = nestedPatterns;\\n    phraseInlineInside['inserted'].inside = nestedPatterns;\\n    phraseInlineInside['deleted'].inside = nestedPatterns;\\n    phraseInlineInside['span'].inside = nestedPatterns; // Allow some styles inside table cells\\n\\n    var phraseTableInside = phraseInside['table'].inside;\\n    phraseTableInside['inline'] = nestedPatterns['inline'];\\n    phraseTableInside['link'] = nestedPatterns['link'];\\n    phraseTableInside['image'] = nestedPatterns['image'];\\n    phraseTableInside['footnote'] = nestedPatterns['footnote'];\\n    phraseTableInside['acronym'] = nestedPatterns['acronym'];\\n    phraseTableInside['mark'] = nestedPatterns['mark'];\\n  })(Prism);\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"textile\",\"Prism\",\"register\",\"_markup\",\"default\",\"withModifier\",\"source\",\"flags\",\"RegExp\",\"replace\",\"modifierRegex\",\"parenthesesRegex\",\"modifierTokens\",\"css\",\"pattern\",\"inside\",\"rest\",\"languages\",\"lookbehind\",\"alias\",\"lang\",\"punctuation\",\"extend\",\"phrase\",\"modifier\",\"tag\",\"list\",\"table\",\"inline\",\"bold\",\"italic\",\"cite\",\"code\",\"inserted\",\"deleted\",\"span\",\"string\",\"url\",\"link\",\"text\",\"image\",\"footnote\",\"acronym\",\"comment\",\"mark\",\"phraseInside\",\"nestedPatterns\",\"phraseInlineInside\",\"phraseTableInside\",\"Object\",\"defineProperty\",\"value\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"displayName\",\"aliases\"]\n}\n"]