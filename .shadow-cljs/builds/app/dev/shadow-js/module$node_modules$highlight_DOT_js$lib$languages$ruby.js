["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/highlight_DOT_js/lib/languages/ruby.js"],"~:js","shadow$provide.module$node_modules$highlight_DOT_js$lib$languages$ruby=function(global,require,module,exports){module.exports=function(hljs){var regex=hljs.regex,CLASS_NAME_RE=regex.either(/\\b([A-Z]+[a-z0-9]+)+/,/\\b([A-Z]+[a-z0-9]+)+[A-Z]+/),CLASS_NAME_WITH_NAMESPACE_RE=regex.concat(CLASS_NAME_RE,/(::\\w+)*/);const RUBY_KEYWORDS={\"variable.constant\":[\"__FILE__\",\"__LINE__\",\"__ENCODING__\"],\"variable.language\":[\"self\",\"super\"],keyword:\"alias and begin BEGIN break case class defined do else elsif end END ensure for if in module next not or redo require rescue retry return then undef unless until when while yield include extend prepend public private protected raise throw\".split(\" \"),\nbuilt_in:\"proc lambda attr_accessor attr_reader attr_writer define_method private_constant module_function\".split(\" \"),literal:[\"true\",\"false\",\"nil\"]};var YARDOCTAG={className:\"doctag\",begin:\"@[A-Za-z]+\"};const IRB_OBJECT={begin:\"#\\x3c\",end:\"\\x3e\"};YARDOCTAG=[hljs.COMMENT(\"#\",\"$\",{contains:[YARDOCTAG]}),hljs.COMMENT(\"^\\x3dbegin\",\"^\\x3dend\",{contains:[YARDOCTAG],relevance:10}),hljs.COMMENT(\"^__END__\",hljs.MATCH_NOTHING_RE)];const SUBST={className:\"subst\",begin:/#\\{/,end:/\\}/,keywords:RUBY_KEYWORDS},\nSTRING={className:\"string\",contains:[hljs.BACKSLASH_ESCAPE,SUBST],variants:[{begin:/'/,end:/'/},{begin:/\"/,end:/\"/},{begin:/`/,end:/`/},{begin:/%[qQwWx]?\\(/,end:/\\)/},{begin:/%[qQwWx]?\\[/,end:/\\]/},{begin:/%[qQwWx]?\\{/,end:/\\}/},{begin:/%[qQwWx]?</,end:/>/},{begin:/%[qQwWx]?\\//,end:/\\//},{begin:/%[qQwWx]?%/,end:/%/},{begin:/%[qQwWx]?-/,end:/-/},{begin:/%[qQwWx]?\\|/,end:/\\|/},{begin:/\\B\\?(\\\\\\d{1,3})/},{begin:/\\B\\?(\\\\x[A-Fa-f0-9]{1,2})/},{begin:/\\B\\?(\\\\u\\{?[A-Fa-f0-9]{1,6}\\}?)/},{begin:/\\B\\?(\\\\M-\\\\C-|\\\\M-\\\\c|\\\\c\\\\M-|\\\\M-|\\\\C-\\\\M-)[\\x20-\\x7e]/},\n{begin:/\\B\\?\\\\(c|C-)[\\x20-\\x7e]/},{begin:/\\B\\?\\\\?\\S/},{begin:regex.concat(/<<[-~]?'?/,regex.lookahead(/(\\w+)(?=\\W)[^\\n]*\\n(?:[^\\n]*\\n)*?\\s*\\1\\b/)),contains:[hljs.END_SAME_AS_BEGIN({begin:/(\\w+)/,end:/(\\w+)/,contains:[hljs.BACKSLASH_ESCAPE,SUBST]})]}]};regex={variants:[{match:/\\(\\)/},{className:\"params\",begin:/\\(/,end:/(?=\\))/,excludeBegin:!0,endsParent:!0,keywords:RUBY_KEYWORDS}]};CLASS_NAME_RE=[STRING,{variants:[{match:[/class\\s+/,CLASS_NAME_WITH_NAMESPACE_RE,/\\s+<\\s+/,CLASS_NAME_WITH_NAMESPACE_RE]},\n{match:[/\\b(class|module)\\s+/,CLASS_NAME_WITH_NAMESPACE_RE]}],scope:{2:\"title.class\",4:\"title.class.inherited\"},keywords:RUBY_KEYWORDS},{match:[/(include|extend)\\s+/,CLASS_NAME_WITH_NAMESPACE_RE],scope:{2:\"title.class\"},keywords:RUBY_KEYWORDS},{relevance:0,match:[CLASS_NAME_WITH_NAMESPACE_RE,/\\.new[. (]/],scope:{1:\"title.class\"}},{relevance:0,match:/\\b[A-Z][A-Z_0-9]+\\b/,className:\"variable.constant\"},{relevance:0,match:CLASS_NAME_RE,scope:\"title.class\"},{match:[/def/,/\\s+/,\"([a-zA-Z_]\\\\w*[!?\\x3d]?|[-+~]@|\\x3c\\x3c|\\x3e\\x3e|\\x3d~|\\x3d\\x3d\\x3d?|\\x3c\\x3d\\x3e|[\\x3c\\x3e]\\x3d?|\\\\*\\\\*|[-/+%^\\x26*~`|]|\\\\[\\\\]\\x3d?)\"],\nscope:{1:\"keyword\",3:\"title.function\"},contains:[regex]},{begin:hljs.IDENT_RE+\"::\"},{className:\"symbol\",begin:hljs.UNDERSCORE_IDENT_RE+\"(!|\\\\?)?:\",relevance:0},{className:\"symbol\",begin:\":(?!\\\\s)\",contains:[STRING,{begin:\"([a-zA-Z_]\\\\w*[!?\\x3d]?|[-+~]@|\\x3c\\x3c|\\x3e\\x3e|\\x3d~|\\x3d\\x3d\\x3d?|\\x3c\\x3d\\x3e|[\\x3c\\x3e]\\x3d?|\\\\*\\\\*|[-/+%^\\x26*~`|]|\\\\[\\\\]\\x3d?)\"}],relevance:0},{className:\"number\",relevance:0,variants:[{begin:\"\\\\b([1-9](_?[0-9])*|0)(\\\\.([0-9](_?[0-9])*))?([eE][+-]?([0-9](_?[0-9])*)|r)?i?\\\\b\"},\n{begin:\"\\\\b0[dD][0-9](_?[0-9])*r?i?\\\\b\"},{begin:\"\\\\b0[bB][0-1](_?[0-1])*r?i?\\\\b\"},{begin:\"\\\\b0[oO][0-7](_?[0-7])*r?i?\\\\b\"},{begin:\"\\\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*r?i?\\\\b\"},{begin:\"\\\\b0(_?[0-7])+r?i?\\\\b\"}]},{className:\"variable\",begin:\"(\\\\$\\\\W)|((\\\\$|@@?)(\\\\w+))(?\\x3d[^@$?])(?![A-Za-z])(?![@$?'])\"},{className:\"params\",begin:/\\|/,end:/\\|/,excludeBegin:!0,excludeEnd:!0,relevance:0,keywords:RUBY_KEYWORDS},{begin:\"(\"+hljs.RE_STARTERS_RE+\"|unless)\\\\s*\",keywords:\"unless\",contains:[{className:\"regexp\",\ncontains:[hljs.BACKSLASH_ESCAPE,SUBST],illegal:/\\n/,variants:[{begin:\"/\",end:\"/[a-z]*\"},{begin:/%r\\{/,end:/\\}[a-z]*/},{begin:\"%r\\\\(\",end:\"\\\\)[a-z]*\"},{begin:\"%r!\",end:\"![a-z]*\"},{begin:\"%r\\\\[\",end:\"\\\\][a-z]*\"}]}].concat(IRB_OBJECT,YARDOCTAG),relevance:0}].concat(IRB_OBJECT,YARDOCTAG);SUBST.contains=CLASS_NAME_RE;regex.contains=CLASS_NAME_RE;CLASS_NAME_WITH_NAMESPACE_RE=[{begin:/^\\s*=>/,starts:{end:\"$\",contains:CLASS_NAME_RE}},{className:\"meta.prompt\",begin:\"^([\\x3e?]\\x3e|[\\\\w#]+\\\\(\\\\w+\\\\):\\\\d+:\\\\d+[\\x3e*]|(\\\\w+-)?\\\\d+\\\\.\\\\d+\\\\.\\\\d+(p\\\\d+)?[^\\\\d][^\\x3e]+\\x3e)(?\\x3d[ ])\",\nstarts:{end:\"$\",keywords:RUBY_KEYWORDS,contains:CLASS_NAME_RE}}];YARDOCTAG.unshift(IRB_OBJECT);return{name:\"Ruby\",aliases:[\"rb\",\"gemspec\",\"podspec\",\"thor\",\"irb\"],keywords:RUBY_KEYWORDS,illegal:/\\/\\*/,contains:[hljs.SHEBANG({binary:\"ruby\"})].concat(CLASS_NAME_WITH_NAMESPACE_RE).concat(YARDOCTAG).concat(CLASS_NAME_RE)}}}","~:source","shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$ruby\"] = function(global,require,module,exports) {\n/*\nLanguage: Ruby\nDescription: Ruby is a dynamic, open source programming language with a focus on simplicity and productivity.\nWebsite: https://www.ruby-lang.org/\nAuthor: Anton Kovalyov <anton@kovalyov.net>\nContributors: Peter Leonov <gojpeg@yandex.ru>, Vasily Polovnyov <vast@whiteants.net>, Loren Segal <lsegal@soen.ca>, Pascal Hurni <phi@ruby-reactive.org>, Cedric Sohrauer <sohrauer@googlemail.com>\nCategory: common\n*/\n\nfunction ruby(hljs) {\n  const regex = hljs.regex;\n  const RUBY_METHOD_RE = '([a-zA-Z_]\\\\w*[!?=]?|[-+~]@|<<|>>|=~|===?|<=>|[<>]=?|\\\\*\\\\*|[-/+%^&*~`|]|\\\\[\\\\]=?)';\n  // TODO: move concepts like CAMEL_CASE into `modes.js`\n  const CLASS_NAME_RE = regex.either(\n    /\\b([A-Z]+[a-z0-9]+)+/,\n    // ends in caps\n    /\\b([A-Z]+[a-z0-9]+)+[A-Z]+/,\n  )\n  ;\n  const CLASS_NAME_WITH_NAMESPACE_RE = regex.concat(CLASS_NAME_RE, /(::\\w+)*/);\n  // very popular ruby built-ins that one might even assume\n  // are actual keywords (despite that not being the case)\n  const PSEUDO_KWS = [\n    \"include\",\n    \"extend\",\n    \"prepend\",\n    \"public\",\n    \"private\",\n    \"protected\",\n    \"raise\",\n    \"throw\"\n  ];\n  const RUBY_KEYWORDS = {\n    \"variable.constant\": [\n      \"__FILE__\",\n      \"__LINE__\",\n      \"__ENCODING__\"\n    ],\n    \"variable.language\": [\n      \"self\",\n      \"super\",\n    ],\n    keyword: [\n      \"alias\",\n      \"and\",\n      \"begin\",\n      \"BEGIN\",\n      \"break\",\n      \"case\",\n      \"class\",\n      \"defined\",\n      \"do\",\n      \"else\",\n      \"elsif\",\n      \"end\",\n      \"END\",\n      \"ensure\",\n      \"for\",\n      \"if\",\n      \"in\",\n      \"module\",\n      \"next\",\n      \"not\",\n      \"or\",\n      \"redo\",\n      \"require\",\n      \"rescue\",\n      \"retry\",\n      \"return\",\n      \"then\",\n      \"undef\",\n      \"unless\",\n      \"until\",\n      \"when\",\n      \"while\",\n      \"yield\",\n      ...PSEUDO_KWS\n    ],\n    built_in: [\n      \"proc\",\n      \"lambda\",\n      \"attr_accessor\",\n      \"attr_reader\",\n      \"attr_writer\",\n      \"define_method\",\n      \"private_constant\",\n      \"module_function\"\n    ],\n    literal: [\n      \"true\",\n      \"false\",\n      \"nil\"\n    ]\n  };\n  const YARDOCTAG = {\n    className: 'doctag',\n    begin: '@[A-Za-z]+'\n  };\n  const IRB_OBJECT = {\n    begin: '#<',\n    end: '>'\n  };\n  const COMMENT_MODES = [\n    hljs.COMMENT(\n      '#',\n      '$',\n      { contains: [ YARDOCTAG ] }\n    ),\n    hljs.COMMENT(\n      '^=begin',\n      '^=end',\n      {\n        contains: [ YARDOCTAG ],\n        relevance: 10\n      }\n    ),\n    hljs.COMMENT('^__END__', hljs.MATCH_NOTHING_RE)\n  ];\n  const SUBST = {\n    className: 'subst',\n    begin: /#\\{/,\n    end: /\\}/,\n    keywords: RUBY_KEYWORDS\n  };\n  const STRING = {\n    className: 'string',\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      SUBST\n    ],\n    variants: [\n      {\n        begin: /'/,\n        end: /'/\n      },\n      {\n        begin: /\"/,\n        end: /\"/\n      },\n      {\n        begin: /`/,\n        end: /`/\n      },\n      {\n        begin: /%[qQwWx]?\\(/,\n        end: /\\)/\n      },\n      {\n        begin: /%[qQwWx]?\\[/,\n        end: /\\]/\n      },\n      {\n        begin: /%[qQwWx]?\\{/,\n        end: /\\}/\n      },\n      {\n        begin: /%[qQwWx]?</,\n        end: />/\n      },\n      {\n        begin: /%[qQwWx]?\\//,\n        end: /\\//\n      },\n      {\n        begin: /%[qQwWx]?%/,\n        end: /%/\n      },\n      {\n        begin: /%[qQwWx]?-/,\n        end: /-/\n      },\n      {\n        begin: /%[qQwWx]?\\|/,\n        end: /\\|/\n      },\n      // in the following expressions, \\B in the beginning suppresses recognition of ?-sequences\n      // where ? is the last character of a preceding identifier, as in: `func?4`\n      { begin: /\\B\\?(\\\\\\d{1,3})/ },\n      { begin: /\\B\\?(\\\\x[A-Fa-f0-9]{1,2})/ },\n      { begin: /\\B\\?(\\\\u\\{?[A-Fa-f0-9]{1,6}\\}?)/ },\n      { begin: /\\B\\?(\\\\M-\\\\C-|\\\\M-\\\\c|\\\\c\\\\M-|\\\\M-|\\\\C-\\\\M-)[\\x20-\\x7e]/ },\n      { begin: /\\B\\?\\\\(c|C-)[\\x20-\\x7e]/ },\n      { begin: /\\B\\?\\\\?\\S/ },\n      // heredocs\n      {\n        // this guard makes sure that we have an entire heredoc and not a false\n        // positive (auto-detect, etc.)\n        begin: regex.concat(\n          /<<[-~]?'?/,\n          regex.lookahead(/(\\w+)(?=\\W)[^\\n]*\\n(?:[^\\n]*\\n)*?\\s*\\1\\b/)\n        ),\n        contains: [\n          hljs.END_SAME_AS_BEGIN({\n            begin: /(\\w+)/,\n            end: /(\\w+)/,\n            contains: [\n              hljs.BACKSLASH_ESCAPE,\n              SUBST\n            ]\n          })\n        ]\n      }\n    ]\n  };\n\n  // Ruby syntax is underdocumented, but this grammar seems to be accurate\n  // as of version 2.7.2 (confirmed with (irb and `Ripper.sexp(...)`)\n  // https://docs.ruby-lang.org/en/2.7.0/doc/syntax/literals_rdoc.html#label-Numbers\n  const decimal = '[1-9](_?[0-9])*|0';\n  const digits = '[0-9](_?[0-9])*';\n  const NUMBER = {\n    className: 'number',\n    relevance: 0,\n    variants: [\n      // decimal integer/float, optionally exponential or rational, optionally imaginary\n      { begin: `\\\\b(${decimal})(\\\\.(${digits}))?([eE][+-]?(${digits})|r)?i?\\\\b` },\n\n      // explicit decimal/binary/octal/hexadecimal integer,\n      // optionally rational and/or imaginary\n      { begin: \"\\\\b0[dD][0-9](_?[0-9])*r?i?\\\\b\" },\n      { begin: \"\\\\b0[bB][0-1](_?[0-1])*r?i?\\\\b\" },\n      { begin: \"\\\\b0[oO][0-7](_?[0-7])*r?i?\\\\b\" },\n      { begin: \"\\\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*r?i?\\\\b\" },\n\n      // 0-prefixed implicit octal integer, optionally rational and/or imaginary\n      { begin: \"\\\\b0(_?[0-7])+r?i?\\\\b\" }\n    ]\n  };\n\n  const PARAMS = {\n    variants: [\n      {\n        match: /\\(\\)/,\n      },\n      {\n        className: 'params',\n        begin: /\\(/,\n        end: /(?=\\))/,\n        excludeBegin: true,\n        endsParent: true,\n        keywords: RUBY_KEYWORDS,\n      }\n    ]\n  };\n\n  const INCLUDE_EXTEND = {\n    match: [\n      /(include|extend)\\s+/,\n      CLASS_NAME_WITH_NAMESPACE_RE\n    ],\n    scope: {\n      2: \"title.class\"\n    },\n    keywords: RUBY_KEYWORDS\n  };\n\n  const CLASS_DEFINITION = {\n    variants: [\n      {\n        match: [\n          /class\\s+/,\n          CLASS_NAME_WITH_NAMESPACE_RE,\n          /\\s+<\\s+/,\n          CLASS_NAME_WITH_NAMESPACE_RE\n        ]\n      },\n      {\n        match: [\n          /\\b(class|module)\\s+/,\n          CLASS_NAME_WITH_NAMESPACE_RE\n        ]\n      }\n    ],\n    scope: {\n      2: \"title.class\",\n      4: \"title.class.inherited\"\n    },\n    keywords: RUBY_KEYWORDS\n  };\n\n  const UPPER_CASE_CONSTANT = {\n    relevance: 0,\n    match: /\\b[A-Z][A-Z_0-9]+\\b/,\n    className: \"variable.constant\"\n  };\n\n  const METHOD_DEFINITION = {\n    match: [\n      /def/, /\\s+/,\n      RUBY_METHOD_RE\n    ],\n    scope: {\n      1: \"keyword\",\n      3: \"title.function\"\n    },\n    contains: [\n      PARAMS\n    ]\n  };\n\n  const OBJECT_CREATION = {\n    relevance: 0,\n    match: [\n      CLASS_NAME_WITH_NAMESPACE_RE,\n      /\\.new[. (]/\n    ],\n    scope: {\n      1: \"title.class\"\n    }\n  };\n\n  // CamelCase\n  const CLASS_REFERENCE = {\n    relevance: 0,\n    match: CLASS_NAME_RE,\n    scope: \"title.class\"\n  };\n\n  const RUBY_DEFAULT_CONTAINS = [\n    STRING,\n    CLASS_DEFINITION,\n    INCLUDE_EXTEND,\n    OBJECT_CREATION,\n    UPPER_CASE_CONSTANT,\n    CLASS_REFERENCE,\n    METHOD_DEFINITION,\n    {\n      // swallow namespace qualifiers before symbols\n      begin: hljs.IDENT_RE + '::' },\n    {\n      className: 'symbol',\n      begin: hljs.UNDERSCORE_IDENT_RE + '(!|\\\\?)?:',\n      relevance: 0\n    },\n    {\n      className: 'symbol',\n      begin: ':(?!\\\\s)',\n      contains: [\n        STRING,\n        { begin: RUBY_METHOD_RE }\n      ],\n      relevance: 0\n    },\n    NUMBER,\n    {\n      // negative-look forward attempts to prevent false matches like:\n      // @ident@ or $ident$ that might indicate this is not ruby at all\n      className: \"variable\",\n      begin: '(\\\\$\\\\W)|((\\\\$|@@?)(\\\\w+))(?=[^@$?])' + `(?![A-Za-z])(?![@$?'])`\n    },\n    {\n      className: 'params',\n      begin: /\\|/,\n      end: /\\|/,\n      excludeBegin: true,\n      excludeEnd: true,\n      relevance: 0, // this could be a lot of things (in other languages) other than params\n      keywords: RUBY_KEYWORDS\n    },\n    { // regexp container\n      begin: '(' + hljs.RE_STARTERS_RE + '|unless)\\\\s*',\n      keywords: 'unless',\n      contains: [\n        {\n          className: 'regexp',\n          contains: [\n            hljs.BACKSLASH_ESCAPE,\n            SUBST\n          ],\n          illegal: /\\n/,\n          variants: [\n            {\n              begin: '/',\n              end: '/[a-z]*'\n            },\n            {\n              begin: /%r\\{/,\n              end: /\\}[a-z]*/\n            },\n            {\n              begin: '%r\\\\(',\n              end: '\\\\)[a-z]*'\n            },\n            {\n              begin: '%r!',\n              end: '![a-z]*'\n            },\n            {\n              begin: '%r\\\\[',\n              end: '\\\\][a-z]*'\n            }\n          ]\n        }\n      ].concat(IRB_OBJECT, COMMENT_MODES),\n      relevance: 0\n    }\n  ].concat(IRB_OBJECT, COMMENT_MODES);\n\n  SUBST.contains = RUBY_DEFAULT_CONTAINS;\n  PARAMS.contains = RUBY_DEFAULT_CONTAINS;\n\n  // >>\n  // ?>\n  const SIMPLE_PROMPT = \"[>?]>\";\n  // irb(main):001:0>\n  const DEFAULT_PROMPT = \"[\\\\w#]+\\\\(\\\\w+\\\\):\\\\d+:\\\\d+[>*]\";\n  const RVM_PROMPT = \"(\\\\w+-)?\\\\d+\\\\.\\\\d+\\\\.\\\\d+(p\\\\d+)?[^\\\\d][^>]+>\";\n\n  const IRB_DEFAULT = [\n    {\n      begin: /^\\s*=>/,\n      starts: {\n        end: '$',\n        contains: RUBY_DEFAULT_CONTAINS\n      }\n    },\n    {\n      className: 'meta.prompt',\n      begin: '^(' + SIMPLE_PROMPT + \"|\" + DEFAULT_PROMPT + '|' + RVM_PROMPT + ')(?=[ ])',\n      starts: {\n        end: '$',\n        keywords: RUBY_KEYWORDS,\n        contains: RUBY_DEFAULT_CONTAINS\n      }\n    }\n  ];\n\n  COMMENT_MODES.unshift(IRB_OBJECT);\n\n  return {\n    name: 'Ruby',\n    aliases: [\n      'rb',\n      'gemspec',\n      'podspec',\n      'thor',\n      'irb'\n    ],\n    keywords: RUBY_KEYWORDS,\n    illegal: /\\/\\*/,\n    contains: [ hljs.SHEBANG({ binary: \"ruby\" }) ]\n      .concat(IRB_DEFAULT)\n      .concat(COMMENT_MODES)\n      .concat(RUBY_DEFAULT_CONTAINS)\n  };\n}\n\nmodule.exports = ruby;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["variants","excludeBegin","begin","aliases","className","contains","binary","relevance","name","endsParent","built_in","keyword","scope","keywords","match","starts","excludeEnd","illegal","literal","end"]],"~:compiled-at",1676671710227,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$highlight_DOT_js$lib$languages$ruby.js\",\n\"lineCount\":9,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/highlight_DOT_js/lib/languages/ruby.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$highlight_DOT_js$lib$languages$ruby\\\"] = function(global,require,module,exports) {\\n/*\\nLanguage: Ruby\\nDescription: Ruby is a dynamic, open source programming language with a focus on simplicity and productivity.\\nWebsite: https://www.ruby-lang.org/\\nAuthor: Anton Kovalyov <anton@kovalyov.net>\\nContributors: Peter Leonov <gojpeg@yandex.ru>, Vasily Polovnyov <vast@whiteants.net>, Loren Segal <lsegal@soen.ca>, Pascal Hurni <phi@ruby-reactive.org>, Cedric Sohrauer <sohrauer@googlemail.com>\\nCategory: common\\n*/\\n\\nfunction ruby(hljs) {\\n  const regex = hljs.regex;\\n  const RUBY_METHOD_RE = '([a-zA-Z_]\\\\\\\\w*[!?=]?|[-+~]@|<<|>>|=~|===?|<=>|[<>]=?|\\\\\\\\*\\\\\\\\*|[-/+%^&*~`|]|\\\\\\\\[\\\\\\\\]=?)';\\n  // TODO: move concepts like CAMEL_CASE into `modes.js`\\n  const CLASS_NAME_RE = regex.either(\\n    /\\\\b([A-Z]+[a-z0-9]+)+/,\\n    // ends in caps\\n    /\\\\b([A-Z]+[a-z0-9]+)+[A-Z]+/,\\n  )\\n  ;\\n  const CLASS_NAME_WITH_NAMESPACE_RE = regex.concat(CLASS_NAME_RE, /(::\\\\w+)*/);\\n  // very popular ruby built-ins that one might even assume\\n  // are actual keywords (despite that not being the case)\\n  const PSEUDO_KWS = [\\n    \\\"include\\\",\\n    \\\"extend\\\",\\n    \\\"prepend\\\",\\n    \\\"public\\\",\\n    \\\"private\\\",\\n    \\\"protected\\\",\\n    \\\"raise\\\",\\n    \\\"throw\\\"\\n  ];\\n  const RUBY_KEYWORDS = {\\n    \\\"variable.constant\\\": [\\n      \\\"__FILE__\\\",\\n      \\\"__LINE__\\\",\\n      \\\"__ENCODING__\\\"\\n    ],\\n    \\\"variable.language\\\": [\\n      \\\"self\\\",\\n      \\\"super\\\",\\n    ],\\n    keyword: [\\n      \\\"alias\\\",\\n      \\\"and\\\",\\n      \\\"begin\\\",\\n      \\\"BEGIN\\\",\\n      \\\"break\\\",\\n      \\\"case\\\",\\n      \\\"class\\\",\\n      \\\"defined\\\",\\n      \\\"do\\\",\\n      \\\"else\\\",\\n      \\\"elsif\\\",\\n      \\\"end\\\",\\n      \\\"END\\\",\\n      \\\"ensure\\\",\\n      \\\"for\\\",\\n      \\\"if\\\",\\n      \\\"in\\\",\\n      \\\"module\\\",\\n      \\\"next\\\",\\n      \\\"not\\\",\\n      \\\"or\\\",\\n      \\\"redo\\\",\\n      \\\"require\\\",\\n      \\\"rescue\\\",\\n      \\\"retry\\\",\\n      \\\"return\\\",\\n      \\\"then\\\",\\n      \\\"undef\\\",\\n      \\\"unless\\\",\\n      \\\"until\\\",\\n      \\\"when\\\",\\n      \\\"while\\\",\\n      \\\"yield\\\",\\n      ...PSEUDO_KWS\\n    ],\\n    built_in: [\\n      \\\"proc\\\",\\n      \\\"lambda\\\",\\n      \\\"attr_accessor\\\",\\n      \\\"attr_reader\\\",\\n      \\\"attr_writer\\\",\\n      \\\"define_method\\\",\\n      \\\"private_constant\\\",\\n      \\\"module_function\\\"\\n    ],\\n    literal: [\\n      \\\"true\\\",\\n      \\\"false\\\",\\n      \\\"nil\\\"\\n    ]\\n  };\\n  const YARDOCTAG = {\\n    className: 'doctag',\\n    begin: '@[A-Za-z]+'\\n  };\\n  const IRB_OBJECT = {\\n    begin: '#<',\\n    end: '>'\\n  };\\n  const COMMENT_MODES = [\\n    hljs.COMMENT(\\n      '#',\\n      '$',\\n      { contains: [ YARDOCTAG ] }\\n    ),\\n    hljs.COMMENT(\\n      '^=begin',\\n      '^=end',\\n      {\\n        contains: [ YARDOCTAG ],\\n        relevance: 10\\n      }\\n    ),\\n    hljs.COMMENT('^__END__', hljs.MATCH_NOTHING_RE)\\n  ];\\n  const SUBST = {\\n    className: 'subst',\\n    begin: /#\\\\{/,\\n    end: /\\\\}/,\\n    keywords: RUBY_KEYWORDS\\n  };\\n  const STRING = {\\n    className: 'string',\\n    contains: [\\n      hljs.BACKSLASH_ESCAPE,\\n      SUBST\\n    ],\\n    variants: [\\n      {\\n        begin: /'/,\\n        end: /'/\\n      },\\n      {\\n        begin: /\\\"/,\\n        end: /\\\"/\\n      },\\n      {\\n        begin: /`/,\\n        end: /`/\\n      },\\n      {\\n        begin: /%[qQwWx]?\\\\(/,\\n        end: /\\\\)/\\n      },\\n      {\\n        begin: /%[qQwWx]?\\\\[/,\\n        end: /\\\\]/\\n      },\\n      {\\n        begin: /%[qQwWx]?\\\\{/,\\n        end: /\\\\}/\\n      },\\n      {\\n        begin: /%[qQwWx]?</,\\n        end: />/\\n      },\\n      {\\n        begin: /%[qQwWx]?\\\\//,\\n        end: /\\\\//\\n      },\\n      {\\n        begin: /%[qQwWx]?%/,\\n        end: /%/\\n      },\\n      {\\n        begin: /%[qQwWx]?-/,\\n        end: /-/\\n      },\\n      {\\n        begin: /%[qQwWx]?\\\\|/,\\n        end: /\\\\|/\\n      },\\n      // in the following expressions, \\\\B in the beginning suppresses recognition of ?-sequences\\n      // where ? is the last character of a preceding identifier, as in: `func?4`\\n      { begin: /\\\\B\\\\?(\\\\\\\\\\\\d{1,3})/ },\\n      { begin: /\\\\B\\\\?(\\\\\\\\x[A-Fa-f0-9]{1,2})/ },\\n      { begin: /\\\\B\\\\?(\\\\\\\\u\\\\{?[A-Fa-f0-9]{1,6}\\\\}?)/ },\\n      { begin: /\\\\B\\\\?(\\\\\\\\M-\\\\\\\\C-|\\\\\\\\M-\\\\\\\\c|\\\\\\\\c\\\\\\\\M-|\\\\\\\\M-|\\\\\\\\C-\\\\\\\\M-)[\\\\x20-\\\\x7e]/ },\\n      { begin: /\\\\B\\\\?\\\\\\\\(c|C-)[\\\\x20-\\\\x7e]/ },\\n      { begin: /\\\\B\\\\?\\\\\\\\?\\\\S/ },\\n      // heredocs\\n      {\\n        // this guard makes sure that we have an entire heredoc and not a false\\n        // positive (auto-detect, etc.)\\n        begin: regex.concat(\\n          /<<[-~]?'?/,\\n          regex.lookahead(/(\\\\w+)(?=\\\\W)[^\\\\n]*\\\\n(?:[^\\\\n]*\\\\n)*?\\\\s*\\\\1\\\\b/)\\n        ),\\n        contains: [\\n          hljs.END_SAME_AS_BEGIN({\\n            begin: /(\\\\w+)/,\\n            end: /(\\\\w+)/,\\n            contains: [\\n              hljs.BACKSLASH_ESCAPE,\\n              SUBST\\n            ]\\n          })\\n        ]\\n      }\\n    ]\\n  };\\n\\n  // Ruby syntax is underdocumented, but this grammar seems to be accurate\\n  // as of version 2.7.2 (confirmed with (irb and `Ripper.sexp(...)`)\\n  // https://docs.ruby-lang.org/en/2.7.0/doc/syntax/literals_rdoc.html#label-Numbers\\n  const decimal = '[1-9](_?[0-9])*|0';\\n  const digits = '[0-9](_?[0-9])*';\\n  const NUMBER = {\\n    className: 'number',\\n    relevance: 0,\\n    variants: [\\n      // decimal integer/float, optionally exponential or rational, optionally imaginary\\n      { begin: `\\\\\\\\b(${decimal})(\\\\\\\\.(${digits}))?([eE][+-]?(${digits})|r)?i?\\\\\\\\b` },\\n\\n      // explicit decimal/binary/octal/hexadecimal integer,\\n      // optionally rational and/or imaginary\\n      { begin: \\\"\\\\\\\\b0[dD][0-9](_?[0-9])*r?i?\\\\\\\\b\\\" },\\n      { begin: \\\"\\\\\\\\b0[bB][0-1](_?[0-1])*r?i?\\\\\\\\b\\\" },\\n      { begin: \\\"\\\\\\\\b0[oO][0-7](_?[0-7])*r?i?\\\\\\\\b\\\" },\\n      { begin: \\\"\\\\\\\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*r?i?\\\\\\\\b\\\" },\\n\\n      // 0-prefixed implicit octal integer, optionally rational and/or imaginary\\n      { begin: \\\"\\\\\\\\b0(_?[0-7])+r?i?\\\\\\\\b\\\" }\\n    ]\\n  };\\n\\n  const PARAMS = {\\n    variants: [\\n      {\\n        match: /\\\\(\\\\)/,\\n      },\\n      {\\n        className: 'params',\\n        begin: /\\\\(/,\\n        end: /(?=\\\\))/,\\n        excludeBegin: true,\\n        endsParent: true,\\n        keywords: RUBY_KEYWORDS,\\n      }\\n    ]\\n  };\\n\\n  const INCLUDE_EXTEND = {\\n    match: [\\n      /(include|extend)\\\\s+/,\\n      CLASS_NAME_WITH_NAMESPACE_RE\\n    ],\\n    scope: {\\n      2: \\\"title.class\\\"\\n    },\\n    keywords: RUBY_KEYWORDS\\n  };\\n\\n  const CLASS_DEFINITION = {\\n    variants: [\\n      {\\n        match: [\\n          /class\\\\s+/,\\n          CLASS_NAME_WITH_NAMESPACE_RE,\\n          /\\\\s+<\\\\s+/,\\n          CLASS_NAME_WITH_NAMESPACE_RE\\n        ]\\n      },\\n      {\\n        match: [\\n          /\\\\b(class|module)\\\\s+/,\\n          CLASS_NAME_WITH_NAMESPACE_RE\\n        ]\\n      }\\n    ],\\n    scope: {\\n      2: \\\"title.class\\\",\\n      4: \\\"title.class.inherited\\\"\\n    },\\n    keywords: RUBY_KEYWORDS\\n  };\\n\\n  const UPPER_CASE_CONSTANT = {\\n    relevance: 0,\\n    match: /\\\\b[A-Z][A-Z_0-9]+\\\\b/,\\n    className: \\\"variable.constant\\\"\\n  };\\n\\n  const METHOD_DEFINITION = {\\n    match: [\\n      /def/, /\\\\s+/,\\n      RUBY_METHOD_RE\\n    ],\\n    scope: {\\n      1: \\\"keyword\\\",\\n      3: \\\"title.function\\\"\\n    },\\n    contains: [\\n      PARAMS\\n    ]\\n  };\\n\\n  const OBJECT_CREATION = {\\n    relevance: 0,\\n    match: [\\n      CLASS_NAME_WITH_NAMESPACE_RE,\\n      /\\\\.new[. (]/\\n    ],\\n    scope: {\\n      1: \\\"title.class\\\"\\n    }\\n  };\\n\\n  // CamelCase\\n  const CLASS_REFERENCE = {\\n    relevance: 0,\\n    match: CLASS_NAME_RE,\\n    scope: \\\"title.class\\\"\\n  };\\n\\n  const RUBY_DEFAULT_CONTAINS = [\\n    STRING,\\n    CLASS_DEFINITION,\\n    INCLUDE_EXTEND,\\n    OBJECT_CREATION,\\n    UPPER_CASE_CONSTANT,\\n    CLASS_REFERENCE,\\n    METHOD_DEFINITION,\\n    {\\n      // swallow namespace qualifiers before symbols\\n      begin: hljs.IDENT_RE + '::' },\\n    {\\n      className: 'symbol',\\n      begin: hljs.UNDERSCORE_IDENT_RE + '(!|\\\\\\\\?)?:',\\n      relevance: 0\\n    },\\n    {\\n      className: 'symbol',\\n      begin: ':(?!\\\\\\\\s)',\\n      contains: [\\n        STRING,\\n        { begin: RUBY_METHOD_RE }\\n      ],\\n      relevance: 0\\n    },\\n    NUMBER,\\n    {\\n      // negative-look forward attempts to prevent false matches like:\\n      // @ident@ or $ident$ that might indicate this is not ruby at all\\n      className: \\\"variable\\\",\\n      begin: '(\\\\\\\\$\\\\\\\\W)|((\\\\\\\\$|@@?)(\\\\\\\\w+))(?=[^@$?])' + `(?![A-Za-z])(?![@$?'])`\\n    },\\n    {\\n      className: 'params',\\n      begin: /\\\\|/,\\n      end: /\\\\|/,\\n      excludeBegin: true,\\n      excludeEnd: true,\\n      relevance: 0, // this could be a lot of things (in other languages) other than params\\n      keywords: RUBY_KEYWORDS\\n    },\\n    { // regexp container\\n      begin: '(' + hljs.RE_STARTERS_RE + '|unless)\\\\\\\\s*',\\n      keywords: 'unless',\\n      contains: [\\n        {\\n          className: 'regexp',\\n          contains: [\\n            hljs.BACKSLASH_ESCAPE,\\n            SUBST\\n          ],\\n          illegal: /\\\\n/,\\n          variants: [\\n            {\\n              begin: '/',\\n              end: '/[a-z]*'\\n            },\\n            {\\n              begin: /%r\\\\{/,\\n              end: /\\\\}[a-z]*/\\n            },\\n            {\\n              begin: '%r\\\\\\\\(',\\n              end: '\\\\\\\\)[a-z]*'\\n            },\\n            {\\n              begin: '%r!',\\n              end: '![a-z]*'\\n            },\\n            {\\n              begin: '%r\\\\\\\\[',\\n              end: '\\\\\\\\][a-z]*'\\n            }\\n          ]\\n        }\\n      ].concat(IRB_OBJECT, COMMENT_MODES),\\n      relevance: 0\\n    }\\n  ].concat(IRB_OBJECT, COMMENT_MODES);\\n\\n  SUBST.contains = RUBY_DEFAULT_CONTAINS;\\n  PARAMS.contains = RUBY_DEFAULT_CONTAINS;\\n\\n  // >>\\n  // ?>\\n  const SIMPLE_PROMPT = \\\"[>?]>\\\";\\n  // irb(main):001:0>\\n  const DEFAULT_PROMPT = \\\"[\\\\\\\\w#]+\\\\\\\\(\\\\\\\\w+\\\\\\\\):\\\\\\\\d+:\\\\\\\\d+[>*]\\\";\\n  const RVM_PROMPT = \\\"(\\\\\\\\w+-)?\\\\\\\\d+\\\\\\\\.\\\\\\\\d+\\\\\\\\.\\\\\\\\d+(p\\\\\\\\d+)?[^\\\\\\\\d][^>]+>\\\";\\n\\n  const IRB_DEFAULT = [\\n    {\\n      begin: /^\\\\s*=>/,\\n      starts: {\\n        end: '$',\\n        contains: RUBY_DEFAULT_CONTAINS\\n      }\\n    },\\n    {\\n      className: 'meta.prompt',\\n      begin: '^(' + SIMPLE_PROMPT + \\\"|\\\" + DEFAULT_PROMPT + '|' + RVM_PROMPT + ')(?=[ ])',\\n      starts: {\\n        end: '$',\\n        keywords: RUBY_KEYWORDS,\\n        contains: RUBY_DEFAULT_CONTAINS\\n      }\\n    }\\n  ];\\n\\n  COMMENT_MODES.unshift(IRB_OBJECT);\\n\\n  return {\\n    name: 'Ruby',\\n    aliases: [\\n      'rb',\\n      'gemspec',\\n      'podspec',\\n      'thor',\\n      'irb'\\n    ],\\n    keywords: RUBY_KEYWORDS,\\n    illegal: /\\\\/\\\\*/,\\n    contains: [ hljs.SHEBANG({ binary: \\\"ruby\\\" }) ]\\n      .concat(IRB_DEFAULT)\\n      .concat(COMMENT_MODES)\\n      .concat(RUBY_DEFAULT_CONTAINS)\\n  };\\n}\\n\\nmodule.exports = ruby;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"ruby\",\"hljs\",\"regex\",\"CLASS_NAME_RE\",\"either\",\"CLASS_NAME_WITH_NAMESPACE_RE\",\"concat\",\"RUBY_KEYWORDS\",\"keyword\",\"built_in\",\"literal\",\"YARDOCTAG\",\"className\",\"begin\",\"IRB_OBJECT\",\"end\",\"COMMENT_MODES\",\"COMMENT\",\"contains\",\"relevance\",\"MATCH_NOTHING_RE\",\"SUBST\",\"keywords\",\"STRING\",\"BACKSLASH_ESCAPE\",\"variants\",\"lookahead\",\"END_SAME_AS_BEGIN\",\"PARAMS\",\"match\",\"excludeBegin\",\"endsParent\",\"RUBY_DEFAULT_CONTAINS\",\"CLASS_DEFINITION\",\"scope\",\"INCLUDE_EXTEND\",\"OBJECT_CREATION\",\"UPPER_CASE_CONSTANT\",\"CLASS_REFERENCE\",\"METHOD_DEFINITION\",\"RUBY_METHOD_RE\",\"IDENT_RE\",\"UNDERSCORE_IDENT_RE\",\"NUMBER\",\"excludeEnd\",\"RE_STARTERS_RE\",\"illegal\",\"IRB_DEFAULT\",\"starts\",\"unshift\",\"name\",\"aliases\",\"SHEBANG\",\"binary\"]\n}\n"]