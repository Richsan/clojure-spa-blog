["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/keyman.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$keyman=function(global,require,module,exports){function keyman(Prism){Prism.languages.keyman={comment:{pattern:/\\bc .*/i,greedy:!0},string:{pattern:/\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,greedy:!0},\"virtual-key\":{pattern:/\\[\\s*(?:(?:ALT|CAPS|CTRL|LALT|LCTRL|NCAPS|RALT|RCTRL|SHIFT)\\s+)*(?:[TKU]_[\\w?]+|[A-E]\\d\\d?|\"[^\"\\r\\n]*\"|'[^'\\r\\n]*')\\s*\\]/i,greedy:!0,alias:\"function\"},\"header-keyword\":{pattern:/&\\w+/,alias:\"bold\"},\"header-statement\":{pattern:/\\b(?:bitmap|bitmaps|caps always off|caps on only|copyright|hotkey|language|layout|message|name|shift frees caps|version)\\b/i,\nalias:\"bold\"},\"rule-keyword\":{pattern:/\\b(?:any|baselayout|beep|call|context|deadkey|dk|if|index|layer|notany|nul|outs|platform|reset|return|save|set|store|use)\\b/i,alias:\"keyword\"},\"structural-keyword\":{pattern:/\\b(?:ansi|begin|group|match|newcontext|nomatch|postkeystroke|readonly|unicode|using keys)\\b/i,alias:\"keyword\"},\"compile-target\":{pattern:/\\$(?:keyman|keymanonly|keymanweb|kmfl|weaver):/i,alias:\"property\"},number:/\\b(?:U\\+[\\dA-F]+|d\\d+|x[\\da-f]+|\\d+)\\b/i,operator:/[+>\\\\$]|\\.\\./,punctuation:/[()=,]/}}\nObject.defineProperty(exports,\"__esModule\",{value:!0});exports.default=keyman;keyman.displayName=\"keyman\";keyman.aliases=[]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$keyman\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = keyman;\n// @ts-nocheck\nkeyman.displayName = 'keyman';\nkeyman.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nfunction keyman(Prism) {\n  Prism.languages.keyman = {\n    comment: {\n      pattern: /\\bc .*/i,\n      greedy: true\n    },\n    string: {\n      pattern: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\n      greedy: true\n    },\n    'virtual-key': {\n      pattern: /\\[\\s*(?:(?:ALT|CAPS|CTRL|LALT|LCTRL|NCAPS|RALT|RCTRL|SHIFT)\\s+)*(?:[TKU]_[\\w?]+|[A-E]\\d\\d?|\"[^\"\\r\\n]*\"|'[^'\\r\\n]*')\\s*\\]/i,\n      greedy: true,\n      alias: 'function' // alias for styles\n\n    },\n    // https://help.keyman.com/developer/language/guide/headers\n    'header-keyword': {\n      pattern: /&\\w+/,\n      alias: 'bold' // alias for styles\n\n    },\n    'header-statement': {\n      pattern: /\\b(?:bitmap|bitmaps|caps always off|caps on only|copyright|hotkey|language|layout|message|name|shift frees caps|version)\\b/i,\n      alias: 'bold' // alias for styles\n\n    },\n    'rule-keyword': {\n      pattern: /\\b(?:any|baselayout|beep|call|context|deadkey|dk|if|index|layer|notany|nul|outs|platform|reset|return|save|set|store|use)\\b/i,\n      alias: 'keyword'\n    },\n    'structural-keyword': {\n      pattern: /\\b(?:ansi|begin|group|match|newcontext|nomatch|postkeystroke|readonly|unicode|using keys)\\b/i,\n      alias: 'keyword'\n    },\n    'compile-target': {\n      pattern: /\\$(?:keyman|keymanonly|keymanweb|kmfl|weaver):/i,\n      alias: 'property'\n    },\n    // U+####, x###, d### characters and numbers\n    number: /\\b(?:U\\+[\\dA-F]+|d\\d+|x[\\da-f]+|\\d+)\\b/i,\n    operator: /[+>\\\\$]|\\.\\./,\n    punctuation: /[()=,]/\n  };\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["punctuation","string","aliases","operator","displayName","__esModule","value","number","greedy","pattern","keyman","alias","comment","default"]],"~:compiled-at",1676841365430,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$keyman.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,CAAA,yCAAA,CAA8D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAYtGC,QAASA,OAAM,CAACC,KAAD,CAAQ,CACrBA,KAAMC,CAAAA,SAAUF,CAAAA,MAAhB,CAAyB,CACvBG,QAAS,CACPC,QAAS,SADF,CAEPC,OAAQ,CAAA,CAFD,CADc,CAKvBC,OAAQ,CACNF,QAAS,yBADH,CAENC,OAAQ,CAAA,CAFF,CALe,CASvB,cAAe,CACbD,QAAS,2HADI,CAEbC,OAAQ,CAAA,CAFK,CAGbE,MAAO,UAHM,CATQ,CAgBvB,iBAAkB,CAChBH,QAAS,MADO,CAEhBG,MAAO,MAFS,CAhBK,CAqBvB,mBAAoB,CAClBH,QAAS,6HADS;AAElBG,MAAO,MAFW,CArBG,CA0BvB,eAAgB,CACdH,QAAS,8HADK,CAEdG,MAAO,SAFO,CA1BO,CA8BvB,qBAAsB,CACpBH,QAAS,8FADW,CAEpBG,MAAO,SAFa,CA9BC,CAkCvB,iBAAkB,CAChBH,QAAS,iDADO,CAEhBG,MAAO,UAFS,CAlCK,CAuCvBC,OAAQ,yCAvCe,CAwCvBC,SAAU,cAxCa,CAyCvBC,YAAa,QAzCU,CADJ;AATvBC,MAAOC,CAAAA,cAAP,CAAsBb,OAAtB,CAA+B,YAA/B,CAA6C,CAC3Cc,MAAO,CAAA,CADoC,CAA7C,CAGAd,QAAQe,CAAAA,OAAR,CAAkBd,MAElBA,OAAOe,CAAAA,WAAP,CAAqB,QACrBf,OAAOgB,CAAAA,OAAP,CAAiB,EATqF;\",\n\"sources\":[\"node_modules/refractor/lang/keyman.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$keyman\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = keyman;\\n// @ts-nocheck\\nkeyman.displayName = 'keyman';\\nkeyman.aliases = [];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction keyman(Prism) {\\n  Prism.languages.keyman = {\\n    comment: {\\n      pattern: /\\\\bc .*/i,\\n      greedy: true\\n    },\\n    string: {\\n      pattern: /\\\"[^\\\"\\\\r\\\\n]*\\\"|'[^'\\\\r\\\\n]*'/,\\n      greedy: true\\n    },\\n    'virtual-key': {\\n      pattern: /\\\\[\\\\s*(?:(?:ALT|CAPS|CTRL|LALT|LCTRL|NCAPS|RALT|RCTRL|SHIFT)\\\\s+)*(?:[TKU]_[\\\\w?]+|[A-E]\\\\d\\\\d?|\\\"[^\\\"\\\\r\\\\n]*\\\"|'[^'\\\\r\\\\n]*')\\\\s*\\\\]/i,\\n      greedy: true,\\n      alias: 'function' // alias for styles\\n\\n    },\\n    // https://help.keyman.com/developer/language/guide/headers\\n    'header-keyword': {\\n      pattern: /&\\\\w+/,\\n      alias: 'bold' // alias for styles\\n\\n    },\\n    'header-statement': {\\n      pattern: /\\\\b(?:bitmap|bitmaps|caps always off|caps on only|copyright|hotkey|language|layout|message|name|shift frees caps|version)\\\\b/i,\\n      alias: 'bold' // alias for styles\\n\\n    },\\n    'rule-keyword': {\\n      pattern: /\\\\b(?:any|baselayout|beep|call|context|deadkey|dk|if|index|layer|notany|nul|outs|platform|reset|return|save|set|store|use)\\\\b/i,\\n      alias: 'keyword'\\n    },\\n    'structural-keyword': {\\n      pattern: /\\\\b(?:ansi|begin|group|match|newcontext|nomatch|postkeystroke|readonly|unicode|using keys)\\\\b/i,\\n      alias: 'keyword'\\n    },\\n    'compile-target': {\\n      pattern: /\\\\$(?:keyman|keymanonly|keymanweb|kmfl|weaver):/i,\\n      alias: 'property'\\n    },\\n    // U+####, x###, d### characters and numbers\\n    number: /\\\\b(?:U\\\\+[\\\\dA-F]+|d\\\\d+|x[\\\\da-f]+|\\\\d+)\\\\b/i,\\n    operator: /[+>\\\\\\\\$]|\\\\.\\\\./,\\n    punctuation: /[()=,]/\\n  };\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"keyman\",\"Prism\",\"languages\",\"comment\",\"pattern\",\"greedy\",\"string\",\"alias\",\"number\",\"operator\",\"punctuation\",\"Object\",\"defineProperty\",\"value\",\"default\",\"displayName\",\"aliases\"]\n}\n"]