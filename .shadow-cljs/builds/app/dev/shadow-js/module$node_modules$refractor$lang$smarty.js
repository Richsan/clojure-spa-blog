["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/refractor/lang/smarty.js"],"~:js","shadow$provide.module$node_modules$refractor$lang$smarty=function(global,require,module,exports){function smarty(Prism$jscomp$0){Prism$jscomp$0.register(_markupTemplating.default);(function(Prism){Prism.languages.smarty={comment:{pattern:/^\\{\\*[\\s\\S]*?\\*\\}/,greedy:!0},\"embedded-php\":{pattern:/^\\{php\\}[\\s\\S]*?\\{\\/php\\}/,greedy:!0,inside:{smarty:{pattern:/^\\{php\\}|\\{\\/php\\}$/,inside:null},php:{pattern:/[\\s\\S]+/,alias:\"language-php\",inside:Prism.languages.php}}},string:[{pattern:/\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\ngreedy:!0,inside:{interpolation:{pattern:/\\{[^{}]*\\}|`[^`]*`/,inside:{\"interpolation-punctuation\":{pattern:/^[{`]|[`}]$/,alias:\"punctuation\"},expression:{pattern:/[\\s\\S]+/,inside:null}}},variable:/\\$\\w+/}},{pattern:/'(?:\\\\.|[^'\\\\\\r\\n])*'/,greedy:!0}],keyword:{pattern:/(^\\{\\/?)[a-z_]\\w*\\b(?!\\()/i,lookbehind:!0,greedy:!0},delimiter:{pattern:/^\\{\\/?|\\}$/,greedy:!0,alias:\"punctuation\"},number:/\\b0x[\\dA-Fa-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,variable:[/\\$(?!\\d)\\w+/,/#(?!\\d)\\w+#/,{pattern:/(\\.|->|\\w\\s*=)(?!\\d)\\w+\\b(?!\\()/,\nlookbehind:!0},{pattern:/(\\[)(?!\\d)\\w+(?=\\])/,lookbehind:!0}],function:{pattern:/(\\|\\s*)@?[a-z_]\\w*|\\b[a-z_]\\w*(?=\\()/i,lookbehind:!0},\"attr-name\":/\\b[a-z_]\\w*(?=\\s*=)/i,boolean:/\\b(?:false|no|off|on|true|yes)\\b/,punctuation:/[\\[\\](){}.,:`]|->/,operator:[/[+\\-*\\/%]|==?=?|[!<>]=?|&&|\\|\\|?/,/\\bis\\s+(?:not\\s+)?(?:div|even|odd)(?:\\s+by)?\\b/,/\\b(?:and|eq|gt?e|gt|lt?e|lt|mod|neq?|not|or)\\b/]};Prism.languages.smarty[\"embedded-php\"].inside.smarty.inside=Prism.languages.smarty;Prism.languages.smarty.string[0].inside.interpolation.inside.expression.inside=\nPrism.languages.smarty;var string=/\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|'(?:\\\\.|[^'\\\\\\r\\n])*'/,smartyPattern=RegExp(/\\{\\*[\\s\\S]*?\\*\\}/.source+\"|\"+/\\{php\\}[\\s\\S]*?\\{\\/php\\}/.source+\"|\"+/\\{(?:[^{}\"']|<str>|\\{(?:[^{}\"']|<str>|\\{(?:[^{}\"']|<str>)*\\})*\\})*\\}/.source.replace(/<str>/g,function(){return string.source}),\"g\");Prism.hooks.add(\"before-tokenize\",function(env){var smartyLiteralMode=!1;Prism.languages[\"markup-templating\"].buildPlaceholders(env,\"smarty\",smartyPattern,function(match){\"{/literal}\"===match&&(smartyLiteralMode=\n!1);return smartyLiteralMode?!1:(\"{literal}\"===match&&(smartyLiteralMode=!0),!0)})});Prism.hooks.add(\"after-tokenize\",function(env){Prism.languages[\"markup-templating\"].tokenizePlaceholders(env,\"smarty\")})})(Prism$jscomp$0)}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=smarty;var _markupTemplating=function(obj){return obj&&obj.__esModule?obj:{default:obj}}(require(\"module$node_modules$refractor$lang$markup_templating\"));smarty.displayName=\"smarty\";smarty.aliases=[]}","~:source","shadow$provide[\"module$node_modules$refractor$lang$smarty\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = smarty;\n\nvar _markupTemplating = _interopRequireDefault(require(\"./markup-templating.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// @ts-nocheck\nsmarty.displayName = 'smarty';\nsmarty.aliases = [];\n/** @type {import('../core.js').Syntax} */\n\nfunction smarty(Prism) {\n  Prism.register(_markupTemplating.default);\n\n  (function (Prism) {\n    Prism.languages.smarty = {\n      comment: {\n        pattern: /^\\{\\*[\\s\\S]*?\\*\\}/,\n        greedy: true\n      },\n      'embedded-php': {\n        pattern: /^\\{php\\}[\\s\\S]*?\\{\\/php\\}/,\n        greedy: true,\n        inside: {\n          smarty: {\n            pattern: /^\\{php\\}|\\{\\/php\\}$/,\n            inside: null // see below\n\n          },\n          php: {\n            pattern: /[\\s\\S]+/,\n            alias: 'language-php',\n            inside: Prism.languages.php\n          }\n        }\n      },\n      string: [{\n        pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern: /\\{[^{}]*\\}|`[^`]*`/,\n            inside: {\n              'interpolation-punctuation': {\n                pattern: /^[{`]|[`}]$/,\n                alias: 'punctuation'\n              },\n              expression: {\n                pattern: /[\\s\\S]+/,\n                inside: null // see below\n\n              }\n            }\n          },\n          variable: /\\$\\w+/\n        }\n      }, {\n        pattern: /'(?:\\\\.|[^'\\\\\\r\\n])*'/,\n        greedy: true\n      }],\n      keyword: {\n        pattern: /(^\\{\\/?)[a-z_]\\w*\\b(?!\\()/i,\n        lookbehind: true,\n        greedy: true\n      },\n      delimiter: {\n        pattern: /^\\{\\/?|\\}$/,\n        greedy: true,\n        alias: 'punctuation'\n      },\n      number: /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n      variable: [/\\$(?!\\d)\\w+/, /#(?!\\d)\\w+#/, {\n        pattern: /(\\.|->|\\w\\s*=)(?!\\d)\\w+\\b(?!\\()/,\n        lookbehind: true\n      }, {\n        pattern: /(\\[)(?!\\d)\\w+(?=\\])/,\n        lookbehind: true\n      }],\n      function: {\n        pattern: /(\\|\\s*)@?[a-z_]\\w*|\\b[a-z_]\\w*(?=\\()/i,\n        lookbehind: true\n      },\n      'attr-name': /\\b[a-z_]\\w*(?=\\s*=)/i,\n      boolean: /\\b(?:false|no|off|on|true|yes)\\b/,\n      punctuation: /[\\[\\](){}.,:`]|->/,\n      operator: [/[+\\-*\\/%]|==?=?|[!<>]=?|&&|\\|\\|?/, /\\bis\\s+(?:not\\s+)?(?:div|even|odd)(?:\\s+by)?\\b/, /\\b(?:and|eq|gt?e|gt|lt?e|lt|mod|neq?|not|or)\\b/]\n    };\n    Prism.languages.smarty['embedded-php'].inside.smarty.inside = Prism.languages.smarty;\n    Prism.languages.smarty.string[0].inside.interpolation.inside.expression.inside = Prism.languages.smarty;\n    var string = /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|'(?:\\\\.|[^'\\\\\\r\\n])*'/;\n    var smartyPattern = RegExp( // comments\n    /\\{\\*[\\s\\S]*?\\*\\}/.source + '|' + // php tags\n    /\\{php\\}[\\s\\S]*?\\{\\/php\\}/.source + '|' + // smarty blocks\n    /\\{(?:[^{}\"']|<str>|\\{(?:[^{}\"']|<str>|\\{(?:[^{}\"']|<str>)*\\})*\\})*\\}/.source.replace(/<str>/g, function () {\n      return string.source;\n    }), 'g'); // Tokenize all inline Smarty expressions\n\n    Prism.hooks.add('before-tokenize', function (env) {\n      var smartyLiteralStart = '{literal}';\n      var smartyLiteralEnd = '{/literal}';\n      var smartyLiteralMode = false;\n      Prism.languages['markup-templating'].buildPlaceholders(env, 'smarty', smartyPattern, function (match) {\n        // Smarty tags inside {literal} block are ignored\n        if (match === smartyLiteralEnd) {\n          smartyLiteralMode = false;\n        }\n\n        if (!smartyLiteralMode) {\n          if (match === smartyLiteralStart) {\n            smartyLiteralMode = true;\n          }\n\n          return true;\n        }\n\n        return false;\n      });\n    }); // Re-insert the tokens after tokenizing\n\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'smarty');\n    });\n  })(Prism);\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$refractor$lang$markup_templating"]],"~:properties",["^5",["boolean","punctuation","string","aliases","operator","displayName","smarty","__esModule","expression","lookbehind","value","php","delimiter","variable","keyword","number","greedy","function","pattern","inside","alias","comment","interpolation","default"]],"~:compiled-at",1676841365460,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$refractor$lang$smarty.js\",\n\"lineCount\":5,\n\"mappings\":\"AAAAA,cAAA,CAAA,yCAAA,CAA8D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAiBtGC,QAASA,OAAM,CAACC,cAAD,CAAQ,CACrBA,cAAMC,CAAAA,QAAN,CAAeC,iBAAkBC,CAAAA,OAAjC,CAEC,UAAS,CAACH,KAAD,CAAQ,CAChBA,KAAMI,CAAAA,SAAUL,CAAAA,MAAhB,CAAyB,CACvBM,QAAS,CACPC,QAAS,mBADF,CAEPC,OAAQ,CAAA,CAFD,CADc,CAKvB,eAAgB,CACdD,QAAS,2BADK,CAEdC,OAAQ,CAAA,CAFM,CAGdC,OAAQ,CACNT,OAAQ,CACNO,QAAS,qBADH,CAENE,OAAQ,IAFF,CADF,CAMNC,IAAK,CACHH,QAAS,SADN,CAEHI,MAAO,cAFJ,CAGHF,OAAQR,KAAMI,CAAAA,SAAUK,CAAAA,GAHrB,CANC,CAHM,CALO,CAqBvBE,OAAQ,CAAC,CACPL,QAAS,uBADF;AAEPC,OAAQ,CAAA,CAFD,CAGPC,OAAQ,CACNI,cAAe,CACbN,QAAS,oBADI,CAEbE,OAAQ,CACN,4BAA6B,CAC3BF,QAAS,aADkB,CAE3BI,MAAO,aAFoB,CADvB,CAKNG,WAAY,CACVP,QAAS,SADC,CAEVE,OAAQ,IAFE,CALN,CAFK,CADT,CAeNM,SAAU,OAfJ,CAHD,CAAD,CAoBL,CACDR,QAAS,uBADR,CAEDC,OAAQ,CAAA,CAFP,CApBK,CArBe,CA6CvBQ,QAAS,CACPT,QAAS,4BADF,CAEPU,WAAY,CAAA,CAFL,CAGPT,OAAQ,CAAA,CAHD,CA7Cc,CAkDvBU,UAAW,CACTX,QAAS,YADA,CAETC,OAAQ,CAAA,CAFC,CAGTG,MAAO,aAHE,CAlDY,CAuDvBQ,OAAQ,8DAvDe,CAwDvBJ,SAAU,CAAC,aAAD,CAAgB,aAAhB,CAA+B,CACvCR,QAAS,iCAD8B;AAEvCU,WAAY,CAAA,CAF2B,CAA/B,CAGP,CACDV,QAAS,qBADR,CAEDU,WAAY,CAAA,CAFX,CAHO,CAxDa,CA+DvBG,SAAU,CACRb,QAAS,uCADD,CAERU,WAAY,CAAA,CAFJ,CA/Da,CAmEvB,YAAa,sBAnEU,CAoEvBI,QAAS,kCApEc,CAqEvBC,YAAa,mBArEU,CAsEvBC,SAAU,CAAC,kCAAD,CAAqC,gDAArC,CAAuF,gDAAvF,CAtEa,CAwEzBtB,MAAMI,CAAAA,SAAUL,CAAAA,MAAhB,CAAuB,cAAvB,CAAuCS,CAAAA,MAAOT,CAAAA,MAAOS,CAAAA,MAArD,CAA8DR,KAAMI,CAAAA,SAAUL,CAAAA,MAC9EC,MAAMI,CAAAA,SAAUL,CAAAA,MAAOY,CAAAA,MAAvB,CAA8B,CAA9B,CAAiCH,CAAAA,MAAOI,CAAAA,aAAcJ,CAAAA,MAAOK,CAAAA,UAAWL,CAAAA,MAAxE;AAAiFR,KAAMI,CAAAA,SAAUL,CAAAA,MACjG,KAAIY,OAAS,6CAAb,CACIY,cAAgBC,MAAA,CACpB,kBAAmBC,CAAAA,MADC,CACQ,GADR,CAEpB,0BAA2BA,CAAAA,MAFP,CAEgB,GAFhB,CAGpB,sEAAuEA,CAAAA,MAAOC,CAAAA,OAA9E,CAAsF,QAAtF,CAAgG,QAAS,EAAG,CAC1G,MAAOf,OAAOc,CAAAA,MAD4F,CAA5G,CAHoB,CAKhB,GALgB,CAOpBzB,MAAM2B,CAAAA,KAAMC,CAAAA,GAAZ,CAAgB,iBAAhB,CAAmC,QAAS,CAACC,GAAD,CAAM,CAGhD,IAAIC,kBAAoB,CAAA,CACxB9B,MAAMI,CAAAA,SAAN,CAAgB,mBAAhB,CAAqC2B,CAAAA,iBAArC,CAAuDF,GAAvD,CAA4D,QAA5D,CAAsEN,aAAtE,CAAqF,QAAS,CAACS,KAAD,CAAQ,CAF/EC,YAIrB,GAAID,KAAJ,GACEF,iBADF;AACsB,CAAA,CADtB,CAIA,OAAKA,kBAAL,CAQO,CAAA,CARP,EATuBI,WAcd,GAJHF,KAIG,GAHLF,iBAGK,CAHe,CAAA,CAGf,EAAA,CAAA,CALT,CANoG,CAAtG,CAJgD,CAAlD,CAsBA9B,MAAM2B,CAAAA,KAAMC,CAAAA,GAAZ,CAAgB,gBAAhB,CAAkC,QAAS,CAACC,GAAD,CAAM,CAC/C7B,KAAMI,CAAAA,SAAN,CAAgB,mBAAhB,CAAqC+B,CAAAA,oBAArC,CAA0DN,GAA1D,CAA+D,QAA/D,CAD+C,CAAjD,CAzGgB,CAAjB,CAAD,CA4GG7B,cA5GH,CAHqB,CAdvBoC,MAAOC,CAAAA,cAAP,CAAsBvC,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CwC,MAAO,CAAA,CADoC,CAA7C,CAGAxC,QAAQK,CAAAA,OAAR,CAAkBJ,MAElB,KAAIG,kBAEJqC,QAA+B,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAIC,CAAAA,UAAX,CAAwBD,GAAxB,CAA8B,CAAErC,QAASqC,GAAX,CAAvC,CAFb,CAAuB5C,OAAA,CAAQ,sDAAR,CAAvB,CAKxBG,OAAO2C,CAAAA,WAAP,CAAqB,QACrB3C,OAAO4C,CAAAA,OAAP,CAAiB,EAdqF;\",\n\"sources\":[\"node_modules/refractor/lang/smarty.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$refractor$lang$smarty\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = smarty;\\n\\nvar _markupTemplating = _interopRequireDefault(require(\\\"./markup-templating.js\\\"));\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\n// @ts-nocheck\\nsmarty.displayName = 'smarty';\\nsmarty.aliases = [];\\n/** @type {import('../core.js').Syntax} */\\n\\nfunction smarty(Prism) {\\n  Prism.register(_markupTemplating.default);\\n\\n  (function (Prism) {\\n    Prism.languages.smarty = {\\n      comment: {\\n        pattern: /^\\\\{\\\\*[\\\\s\\\\S]*?\\\\*\\\\}/,\\n        greedy: true\\n      },\\n      'embedded-php': {\\n        pattern: /^\\\\{php\\\\}[\\\\s\\\\S]*?\\\\{\\\\/php\\\\}/,\\n        greedy: true,\\n        inside: {\\n          smarty: {\\n            pattern: /^\\\\{php\\\\}|\\\\{\\\\/php\\\\}$/,\\n            inside: null // see below\\n\\n          },\\n          php: {\\n            pattern: /[\\\\s\\\\S]+/,\\n            alias: 'language-php',\\n            inside: Prism.languages.php\\n          }\\n        }\\n      },\\n      string: [{\\n        pattern: /\\\"(?:\\\\\\\\.|[^\\\"\\\\\\\\\\\\r\\\\n])*\\\"/,\\n        greedy: true,\\n        inside: {\\n          interpolation: {\\n            pattern: /\\\\{[^{}]*\\\\}|`[^`]*`/,\\n            inside: {\\n              'interpolation-punctuation': {\\n                pattern: /^[{`]|[`}]$/,\\n                alias: 'punctuation'\\n              },\\n              expression: {\\n                pattern: /[\\\\s\\\\S]+/,\\n                inside: null // see below\\n\\n              }\\n            }\\n          },\\n          variable: /\\\\$\\\\w+/\\n        }\\n      }, {\\n        pattern: /'(?:\\\\\\\\.|[^'\\\\\\\\\\\\r\\\\n])*'/,\\n        greedy: true\\n      }],\\n      keyword: {\\n        pattern: /(^\\\\{\\\\/?)[a-z_]\\\\w*\\\\b(?!\\\\()/i,\\n        lookbehind: true,\\n        greedy: true\\n      },\\n      delimiter: {\\n        pattern: /^\\\\{\\\\/?|\\\\}$/,\\n        greedy: true,\\n        alias: 'punctuation'\\n      },\\n      number: /\\\\b0x[\\\\dA-Fa-f]+|(?:\\\\b\\\\d+(?:\\\\.\\\\d*)?|\\\\B\\\\.\\\\d+)(?:[Ee][-+]?\\\\d+)?/,\\n      variable: [/\\\\$(?!\\\\d)\\\\w+/, /#(?!\\\\d)\\\\w+#/, {\\n        pattern: /(\\\\.|->|\\\\w\\\\s*=)(?!\\\\d)\\\\w+\\\\b(?!\\\\()/,\\n        lookbehind: true\\n      }, {\\n        pattern: /(\\\\[)(?!\\\\d)\\\\w+(?=\\\\])/,\\n        lookbehind: true\\n      }],\\n      function: {\\n        pattern: /(\\\\|\\\\s*)@?[a-z_]\\\\w*|\\\\b[a-z_]\\\\w*(?=\\\\()/i,\\n        lookbehind: true\\n      },\\n      'attr-name': /\\\\b[a-z_]\\\\w*(?=\\\\s*=)/i,\\n      boolean: /\\\\b(?:false|no|off|on|true|yes)\\\\b/,\\n      punctuation: /[\\\\[\\\\](){}.,:`]|->/,\\n      operator: [/[+\\\\-*\\\\/%]|==?=?|[!<>]=?|&&|\\\\|\\\\|?/, /\\\\bis\\\\s+(?:not\\\\s+)?(?:div|even|odd)(?:\\\\s+by)?\\\\b/, /\\\\b(?:and|eq|gt?e|gt|lt?e|lt|mod|neq?|not|or)\\\\b/]\\n    };\\n    Prism.languages.smarty['embedded-php'].inside.smarty.inside = Prism.languages.smarty;\\n    Prism.languages.smarty.string[0].inside.interpolation.inside.expression.inside = Prism.languages.smarty;\\n    var string = /\\\"(?:\\\\\\\\.|[^\\\"\\\\\\\\\\\\r\\\\n])*\\\"|'(?:\\\\\\\\.|[^'\\\\\\\\\\\\r\\\\n])*'/;\\n    var smartyPattern = RegExp( // comments\\n    /\\\\{\\\\*[\\\\s\\\\S]*?\\\\*\\\\}/.source + '|' + // php tags\\n    /\\\\{php\\\\}[\\\\s\\\\S]*?\\\\{\\\\/php\\\\}/.source + '|' + // smarty blocks\\n    /\\\\{(?:[^{}\\\"']|<str>|\\\\{(?:[^{}\\\"']|<str>|\\\\{(?:[^{}\\\"']|<str>)*\\\\})*\\\\})*\\\\}/.source.replace(/<str>/g, function () {\\n      return string.source;\\n    }), 'g'); // Tokenize all inline Smarty expressions\\n\\n    Prism.hooks.add('before-tokenize', function (env) {\\n      var smartyLiteralStart = '{literal}';\\n      var smartyLiteralEnd = '{/literal}';\\n      var smartyLiteralMode = false;\\n      Prism.languages['markup-templating'].buildPlaceholders(env, 'smarty', smartyPattern, function (match) {\\n        // Smarty tags inside {literal} block are ignored\\n        if (match === smartyLiteralEnd) {\\n          smartyLiteralMode = false;\\n        }\\n\\n        if (!smartyLiteralMode) {\\n          if (match === smartyLiteralStart) {\\n            smartyLiteralMode = true;\\n          }\\n\\n          return true;\\n        }\\n\\n        return false;\\n      });\\n    }); // Re-insert the tokens after tokenizing\\n\\n    Prism.hooks.add('after-tokenize', function (env) {\\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'smarty');\\n    });\\n  })(Prism);\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"smarty\",\"Prism\",\"register\",\"_markupTemplating\",\"default\",\"languages\",\"comment\",\"pattern\",\"greedy\",\"inside\",\"php\",\"alias\",\"string\",\"interpolation\",\"expression\",\"variable\",\"keyword\",\"lookbehind\",\"delimiter\",\"number\",\"function\",\"boolean\",\"punctuation\",\"operator\",\"smartyPattern\",\"RegExp\",\"source\",\"replace\",\"hooks\",\"add\",\"env\",\"smartyLiteralMode\",\"buildPlaceholders\",\"match\",\"smartyLiteralEnd\",\"smartyLiteralStart\",\"tokenizePlaceholders\",\"Object\",\"defineProperty\",\"value\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"displayName\",\"aliases\"]\n}\n"]